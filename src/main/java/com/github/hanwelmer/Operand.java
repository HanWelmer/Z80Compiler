/*
Copyright Â© 2023 Han Welmer.

This file is part of Z80Compiler.

Z80Compiler is free software: you can redistribute it and/or modify it under 
the terms of the GNU General Public License as published by the Free Software 
Foundation, either version 3 of the License, or (at your option) any later 
version.

Z80Compiler is distributed in the hope that it will be useful, but WITHOUT 
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with 
Z80Compiler. If not, see <https://www.gnu.org/licenses/>.
*/

package com.github.hanwelmer;

/**
 * This class defines the type and value for an operand in an instruction to be executed by the M machine as generated by the P language.
 * Used in the code generation phase of the compiler.
 */
public class Operand {
  public OperandType opType;
  public Datatype datatype;
  public Integer intValue;
  public String strValue;
  public boolean isFinal = false;
  /*
   * opType    | datatype    | intValue | strValue   |
   *-----------+-------------+----------+------------+
   * unknown   |     X       |    X     |     X      |
   * stack     | byt,integer |    X     |     X      |
   * constant  | byt,integer | value    |     X      |
   * constant  | string      |    X     | string     |
   * var       | byt,integer | address  |     X      |
   * final var | byt,integer |    X     | identifier |
   * label     | byt,integer | address  |     X      |
   * acc       | byt,integer |    X     |     X      |
  */
  
  public Operand(OperandType opType) {
    this.opType = opType;
  }

  public Operand(OperandType opType, Datatype datatype) {
    this.opType = opType;
    this.datatype = datatype;
  }

  public Operand(OperandType opType, Datatype datatype, Integer value) {
    this.opType = opType;
    this.datatype = datatype;
    this.intValue = value;
  }

  public Operand(OperandType opType, Datatype datatype, String value) {
    this.opType = opType;
    this.datatype = datatype;
    this.strValue = value;
  }
  
  public String toString() {
    String result = "operand(" + opType;
    if (datatype != null) {
      result += ", type=" + datatype;
    }
    if (intValue != null) {
      result += ", intValue=" + intValue;
    }
    if (strValue != null) {
      if (datatype == Datatype.string) {
        result += ", strValue=\"" + strValue + "\"";
      } else {
        result += ", strValue=" + strValue;
      }
    }
    result += ", final=" + isFinal;
    result += ")";
    return result;
  }
}
