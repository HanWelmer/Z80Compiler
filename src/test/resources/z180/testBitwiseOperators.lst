2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testBitwiseOperators.j(0) /* Program to test bitwise operators and, or and xor. */
2009             L3:
2009                     ;;testBitwiseOperators.j(1) class TestBitwiseOperators {
2009             L4:
2009                     ;class TestBitwiseOperators []
2009             L5:
2009                     ;;testBitwiseOperators.j(2)   private static byte b1 = 0x1C;
2009             L6:
2009 3E 1C               LD    A,28
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testBitwiseOperators.j(3)   private static byte b2 = 0x07;
200E             L9:
200E 3E 07               LD    A,7
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testBitwiseOperators.j(4)   private static word w1 = 0x032C;
2013             L12:
2013 21 2C 03            LD    HL,812
2016             L13:
2016 22 02 50            LD    (05002H),HL
2019             L14:
2019                     ;;testBitwiseOperators.j(5)   private static word w2 = 0x1234;
2019             L15:
2019 21 34 12            LD    HL,4660
201C             L16:
201C 22 04 50            LD    (05004H),HL
201F             L17:
201F C3 22 20            JP    L24
2022             L18:
2022                     ;;testBitwiseOperators.j(6)   private static final byte fb1 = 0x1C;
2022             L19:
2022                     ;;testBitwiseOperators.j(7)   private static final byte fb2 = 0x07;
2022             L20:
2022                     ;;testBitwiseOperators.j(8)   private static final word fw1 = 0x032C;
2022             L21:
2022                     ;;testBitwiseOperators.j(9)   private static final word fw2 = 0x1234;
2022             L22:
2022                     ;;testBitwiseOperators.j(10) 
2022             L23:
2022                     ;;testBitwiseOperators.j(11)   public static void main() {
2022             L24:
2022                     ;method TestBitwiseOperators.main [public, static] void ()
2022             L25:
2022 DD E5               PUSH  IX
2024             L26:
2024 DD 21 00 00         LD    IX,0x0000
2028 DD 39               ADD   IX,SP
202A             L27:
202A             L28:
202A                     ;;testBitwiseOperators.j(12)     println(0);
202A             L29:
202A 3E 00               LD    A,0
202C             L30:
202C CD 9B 3C            CALL  writeLineA
202F             L31:
202F                     ;;testBitwiseOperators.j(13)     
202F             L32:
202F                     ;;testBitwiseOperators.j(14)     // Possible operand types: constant, acc, var, final var, stack8, stack16.
202F             L33:
202F                     ;;testBitwiseOperators.j(15)     // Possible data types: byte, word.
202F             L34:
202F                     ;;testBitwiseOperators.j(16)   
202F             L35:
202F                     ;;testBitwiseOperators.j(17)     //constant/constant
202F             L36:
202F                     ;;testBitwiseOperators.j(18)     //*****************
202F             L37:
202F                     ;;testBitwiseOperators.j(19)     //constant byte/constant byte
202F             L38:
202F                     ;;testBitwiseOperators.j(20)     if (0x07 & 0x1C == 0x04) println (1); else println (999); //0000.0111 & 0001.1100 = 0000.0100
202F             L39:
202F 3E 07               LD    A,7
2031             L40:
2031 E6 1C               AND   A,28
2033             L41:
2033 D6 04               SUB   A,4
2035             L42:
2035 C2 40 20            JP    NZ,L46
2038             L43:
2038 3E 01               LD    A,1
203A             L44:
203A CD 9B 3C            CALL  writeLineA
203D             L45:
203D C3 46 20            JP    L49
2040             L46:
2040 21 E7 03            LD    HL,999
2043             L47:
2043 CD 73 3C            CALL  writeLineHL
2046             L48:
2046                     ;;testBitwiseOperators.j(21)     if (0x07 | 0x1C == 0x1F) println (2); else println (999); //0000.0111 | 0001.1100 = 0001.1111
2046             L49:
2046 3E 07               LD    A,7
2048             L50:
2048 F6 1C               OR    A,28
204A             L51:
204A D6 1F               SUB   A,31
204C             L52:
204C C2 57 20            JP    NZ,L56
204F             L53:
204F 3E 02               LD    A,2
2051             L54:
2051 CD 9B 3C            CALL  writeLineA
2054             L55:
2054 C3 5D 20            JP    L59
2057             L56:
2057 21 E7 03            LD    HL,999
205A             L57:
205A CD 73 3C            CALL  writeLineHL
205D             L58:
205D                     ;;testBitwiseOperators.j(22)     if (0x07 ^ 0x1C == 0x1B) println (3); else println (999); //0000.0111 ^ 0001.1100 = 0001.1011
205D             L59:
205D 3E 07               LD    A,7
205F             L60:
205F EE 1C               XOR   A,28
2061             L61:
2061 D6 1B               SUB   A,27
2063             L62:
2063 C2 6E 20            JP    NZ,L66
2066             L63:
2066 3E 03               LD    A,3
2068             L64:
2068 CD 9B 3C            CALL  writeLineA
206B             L65:
206B C3 74 20            JP    L70
206E             L66:
206E 21 E7 03            LD    HL,999
2071             L67:
2071 CD 73 3C            CALL  writeLineHL
2074             L68:
2074                     ;;testBitwiseOperators.j(23)     //constant word/constant word
2074             L69:
2074                     ;;testBitwiseOperators.j(24)     if (0x1234 & 0x032C == 0x0224) println (4); else println (999);
2074             L70:
2074 21 34 12            LD    HL,4660
2077             L71:
2077 11 2C 03            LD    DE,812
207A F5                  PUSH  AF
207B 7C                  LD    A,H
207C A2                  AND   A,D
207D 67                  LD    H,A
207E 7D                  LD    A,L
207F A3                  AND   A,E
2080 6F                  LD    L,A
2081 F1                  POP   AF
2082             L72:
2082 11 24 02            LD    DE,548
2085 B7                  OR    A
2086 ED 52               SBC   HL,DE
2088             L73:
2088 C2 93 20            JP    NZ,L77
208B             L74:
208B 3E 04               LD    A,4
208D             L75:
208D CD 9B 3C            CALL  writeLineA
2090             L76:
2090 C3 99 20            JP    L81
2093             L77:
2093 21 E7 03            LD    HL,999
2096             L78:
2096 CD 73 3C            CALL  writeLineHL
2099             L79:
2099                     ;;testBitwiseOperators.j(25)     //0001.0010.0011.0100 & 0000.0011.0010.1100 = 0000.0010.0010.0100
2099             L80:
2099                     ;;testBitwiseOperators.j(26)     if (0x1234 | 0x032C == 0x133C) println (5); else println (999);
2099             L81:
2099 21 34 12            LD    HL,4660
209C             L82:
209C 11 2C 03            LD    DE,812
209F 47                  LD    B,A
20A0 7C                  LD    A,H
20A1 B2                  OR    A,D
20A2 67                  LD    H,A
20A3 7D                  LD    A,L
20A4 B3                  OR    A,E
20A5 6F                  LD    L,A
20A6 78                  LD    A,B
20A7             L83:
20A7 11 3C 13            LD    DE,4924
20AA B7                  OR    A
20AB ED 52               SBC   HL,DE
20AD             L84:
20AD C2 B8 20            JP    NZ,L88
20B0             L85:
20B0 3E 05               LD    A,5
20B2             L86:
20B2 CD 9B 3C            CALL  writeLineA
20B5             L87:
20B5 C3 BE 20            JP    L92
20B8             L88:
20B8 21 E7 03            LD    HL,999
20BB             L89:
20BB CD 73 3C            CALL  writeLineHL
20BE             L90:
20BE                     ;;testBitwiseOperators.j(27)     //0001.0010.0011.0100 | 0000.0011.0010.1100 = 0001.0011.0011.1100
20BE             L91:
20BE                     ;;testBitwiseOperators.j(28)     if (0x1234 ^ 0x032C == 0x1118) println (6); else println (999);
20BE             L92:
20BE 21 34 12            LD    HL,4660
20C1             L93:
20C1 11 2C 03            LD    DE,812
20C4 F5                  PUSH  AF
20C5 7C                  LD    A,H
20C6 AA                  XOR   A,D
20C7 67                  LD    H,A
20C8 7D                  LD    A,L
20C9 AB                  XOR   A,E
20CA 6F                  LD    L,A
20CB F1                  POP   AF
20CC             L94:
20CC 11 18 11            LD    DE,4376
20CF B7                  OR    A
20D0 ED 52               SBC   HL,DE
20D2             L95:
20D2 C2 DD 20            JP    NZ,L99
20D5             L96:
20D5 3E 06               LD    A,6
20D7             L97:
20D7 CD 9B 3C            CALL  writeLineA
20DA             L98:
20DA C3 E3 20            JP    L104
20DD             L99:
20DD 21 E7 03            LD    HL,999
20E0             L100:
20E0 CD 73 3C            CALL  writeLineHL
20E3             L101:
20E3                     ;;testBitwiseOperators.j(29)     //0001.0010.0011.0100 ^ 0000.0011.0010.1100 = 0001.0001.0001.1000
20E3             L102:
20E3                     ;;testBitwiseOperators.j(30)     //constant byte/constant word
20E3             L103:
20E3                     ;;testBitwiseOperators.j(31)     if (0x1C & 0x1234 == 0x0014) println (7); else println (999); //0001.1100 & 0001.0010.0011.0100 = 0000.0000.0001.0100
20E3             L104:
20E3 3E 1C               LD    A,28
20E5             L105:
20E5 6F                  LD    L,A
20E6 26 00               LD    H,0
20E8             L106:
20E8 11 34 12            LD    DE,4660
20EB F5                  PUSH  AF
20EC 7C                  LD    A,H
20ED A2                  AND   A,D
20EE 67                  LD    H,A
20EF 7D                  LD    A,L
20F0 A3                  AND   A,E
20F1 6F                  LD    L,A
20F2 F1                  POP   AF
20F3             L107:
20F3 3E 14               LD    A,20
20F5             L108:
20F5 5F                  LD    E,A
20F6 16 00               LD    D,0
20F8 EB                  EX    DE,HL
20F9 B7                  OR    A
20FA ED 52               SBC   HL,DE
20FC             L109:
20FC C2 07 21            JP    NZ,L113
20FF             L110:
20FF 3E 07               LD    A,7
2101             L111:
2101 CD 9B 3C            CALL  writeLineA
2104             L112:
2104 C3 0D 21            JP    L116
2107             L113:
2107 21 E7 03            LD    HL,999
210A             L114:
210A CD 73 3C            CALL  writeLineHL
210D             L115:
210D                     ;;testBitwiseOperators.j(32)     if (0x1C | 0x1234 == 0x123C) println (8); else println (999); //0001.1100 | 0001.0010.0011.0100 = 0001.0010.0011.1100
210D             L116:
210D 3E 1C               LD    A,28
210F             L117:
210F 6F                  LD    L,A
2110 26 00               LD    H,0
2112             L118:
2112 11 34 12            LD    DE,4660
2115 47                  LD    B,A
2116 7C                  LD    A,H
2117 B2                  OR    A,D
2118 67                  LD    H,A
2119 7D                  LD    A,L
211A B3                  OR    A,E
211B 6F                  LD    L,A
211C 78                  LD    A,B
211D             L119:
211D 11 3C 12            LD    DE,4668
2120 B7                  OR    A
2121 ED 52               SBC   HL,DE
2123             L120:
2123 C2 2E 21            JP    NZ,L124
2126             L121:
2126 3E 08               LD    A,8
2128             L122:
2128 CD 9B 3C            CALL  writeLineA
212B             L123:
212B C3 34 21            JP    L127
212E             L124:
212E 21 E7 03            LD    HL,999
2131             L125:
2131 CD 73 3C            CALL  writeLineHL
2134             L126:
2134                     ;;testBitwiseOperators.j(33)     if (0x1C ^ 0x1234 == 0x1228) println (9); else println (999); //0001.1100 ^ 0001.0010.0011.0100 = 0001.0010.0010.1000
2134             L127:
2134 3E 1C               LD    A,28
2136             L128:
2136 6F                  LD    L,A
2137 26 00               LD    H,0
2139             L129:
2139 11 34 12            LD    DE,4660
213C F5                  PUSH  AF
213D 7C                  LD    A,H
213E AA                  XOR   A,D
213F 67                  LD    H,A
2140 7D                  LD    A,L
2141 AB                  XOR   A,E
2142 6F                  LD    L,A
2143 F1                  POP   AF
2144             L130:
2144 11 28 12            LD    DE,4648
2147 B7                  OR    A
2148 ED 52               SBC   HL,DE
214A             L131:
214A C2 55 21            JP    NZ,L135
214D             L132:
214D 3E 09               LD    A,9
214F             L133:
214F CD 9B 3C            CALL  writeLineA
2152             L134:
2152 C3 5B 21            JP    L139
2155             L135:
2155 21 E7 03            LD    HL,999
2158             L136:
2158 CD 73 3C            CALL  writeLineHL
215B             L137:
215B                     ;;testBitwiseOperators.j(34)     //constant word/constant byte
215B             L138:
215B                     ;;testBitwiseOperators.j(35)     if (0x1234 & 0x1C == 0x0014) println (10); else println (999); //0001.0010.0011.0100 & 0001.1100 = 0000.0000.0001.0100
215B             L139:
215B 21 34 12            LD    HL,4660
215E             L140:
215E 5F                  LD    E,A
215F 3E 1C               LD    A,28
2161 A5                  AND   A,L
2162 6F                  LD    L,A
2163 7B                  LD    A,E
2164 26 00               LD    H,0
2166             L141:
2166 3E 14               LD    A,20
2168             L142:
2168 5F                  LD    E,A
2169 16 00               LD    D,0
216B EB                  EX    DE,HL
216C B7                  OR    A
216D ED 52               SBC   HL,DE
216F             L143:
216F C2 7A 21            JP    NZ,L147
2172             L144:
2172 3E 0A               LD    A,10
2174             L145:
2174 CD 9B 3C            CALL  writeLineA
2177             L146:
2177 C3 80 21            JP    L150
217A             L147:
217A 21 E7 03            LD    HL,999
217D             L148:
217D CD 73 3C            CALL  writeLineHL
2180             L149:
2180                     ;;testBitwiseOperators.j(36)     if (0x1234 | 0x1C == 0x123C) println (11); else println (999); //0001.0010.0011.0100 | 0001.1100 = 0001.0010.0011.1100
2180             L150:
2180 21 34 12            LD    HL,4660
2183             L151:
2183 11 1C 00            LD    DE,28
2186 47                  LD    B,A
2187 7C                  LD    A,H
2188 B2                  OR    A,D
2189 67                  LD    H,A
218A 7D                  LD    A,L
218B B3                  OR    A,E
218C 6F                  LD    L,A
218D 78                  LD    A,B
218E             L152:
218E 11 3C 12            LD    DE,4668
2191 B7                  OR    A
2192 ED 52               SBC   HL,DE
2194             L153:
2194 C2 9F 21            JP    NZ,L157
2197             L154:
2197 3E 0B               LD    A,11
2199             L155:
2199 CD 9B 3C            CALL  writeLineA
219C             L156:
219C C3 A5 21            JP    L160
219F             L157:
219F 21 E7 03            LD    HL,999
21A2             L158:
21A2 CD 73 3C            CALL  writeLineHL
21A5             L159:
21A5                     ;;testBitwiseOperators.j(37)     if (0x1234 ^ 0x1C == 0x1228) println (12); else println (999); //0001.0010.0011.0100 ^ 0001.1100 = 0001.0010.0010.1000
21A5             L160:
21A5 21 34 12            LD    HL,4660
21A8             L161:
21A8 11 1C 00            LD    DE,28
21AB F5                  PUSH  AF
21AC 7C                  LD    A,H
21AD AA                  XOR   A,D
21AE 67                  LD    H,A
21AF 7D                  LD    A,L
21B0 AB                  XOR   A,E
21B1 6F                  LD    L,A
21B2 F1                  POP   AF
21B3             L162:
21B3 11 28 12            LD    DE,4648
21B6 B7                  OR    A
21B7 ED 52               SBC   HL,DE
21B9             L163:
21B9 C2 C4 21            JP    NZ,L167
21BC             L164:
21BC 3E 0C               LD    A,12
21BE             L165:
21BE CD 9B 3C            CALL  writeLineA
21C1             L166:
21C1 C3 CA 21            JP    L174
21C4             L167:
21C4 21 E7 03            LD    HL,999
21C7             L168:
21C7 CD 73 3C            CALL  writeLineHL
21CA             L169:
21CA                     ;;testBitwiseOperators.j(38)   
21CA             L170:
21CA                     ;;testBitwiseOperators.j(39)     //constant/acc
21CA             L171:
21CA                     ;;testBitwiseOperators.j(40)     //************
21CA             L172:
21CA                     ;;testBitwiseOperators.j(41)     //constant byte/acc byte
21CA             L173:
21CA                     ;;testBitwiseOperators.j(42)     if (0x07 & (0x10 + 0x0C) == 0x04) println (13); else println (999);
21CA             L174:
21CA 3E 07               LD    A,7
21CC             L175:
21CC F5                  PUSH  AF
21CD 3E 10               LD    A,16
21CF             L176:
21CF C6 0C               ADD   A,12
21D1             L177:
21D1 C1                  POP   BC
21D2 A0                  AND   A,B
21D3             L178:
21D3 D6 04               SUB   A,4
21D5             L179:
21D5 C2 E0 21            JP    NZ,L183
21D8             L180:
21D8 3E 0D               LD    A,13
21DA             L181:
21DA CD 9B 3C            CALL  writeLineA
21DD             L182:
21DD C3 E6 21            JP    L186
21E0             L183:
21E0 21 E7 03            LD    HL,999
21E3             L184:
21E3 CD 73 3C            CALL  writeLineHL
21E6             L185:
21E6                     ;;testBitwiseOperators.j(43)     if (0x07 | (0x10 + 0x0C) == 0x1F) println (14); else println (999);
21E6             L186:
21E6 3E 07               LD    A,7
21E8             L187:
21E8 F5                  PUSH  AF
21E9 3E 10               LD    A,16
21EB             L188:
21EB C6 0C               ADD   A,12
21ED             L189:
21ED C1                  POP   BC
21EE B0                  OR    A,B
21EF             L190:
21EF D6 1F               SUB   A,31
21F1             L191:
21F1 C2 FC 21            JP    NZ,L195
21F4             L192:
21F4 3E 0E               LD    A,14
21F6             L193:
21F6 CD 9B 3C            CALL  writeLineA
21F9             L194:
21F9 C3 02 22            JP    L198
21FC             L195:
21FC 21 E7 03            LD    HL,999
21FF             L196:
21FF CD 73 3C            CALL  writeLineHL
2202             L197:
2202                     ;;testBitwiseOperators.j(44)     if (0x07 ^ (0x10 + 0x0C) == 0x1B) println (15); else println (999);
2202             L198:
2202 3E 07               LD    A,7
2204             L199:
2204 F5                  PUSH  AF
2205 3E 10               LD    A,16
2207             L200:
2207 C6 0C               ADD   A,12
2209             L201:
2209 C1                  POP   BC
220A A8                  XOR   A,B
220B             L202:
220B D6 1B               SUB   A,27
220D             L203:
220D C2 18 22            JP    NZ,L207
2210             L204:
2210 3E 0F               LD    A,15
2212             L205:
2212 CD 9B 3C            CALL  writeLineA
2215             L206:
2215 C3 1E 22            JP    L211
2218             L207:
2218 21 E7 03            LD    HL,999
221B             L208:
221B CD 73 3C            CALL  writeLineHL
221E             L209:
221E                     ;;testBitwiseOperators.j(45)     //constant word/acc word
221E             L210:
221E                     ;;testBitwiseOperators.j(46)     if (0x1234 & 0x0100 + 0x022C == 0x0224) println (16); else println (999);
221E             L211:
221E 21 34 12            LD    HL,4660
2221             L212:
2221 E5                  PUSH  HL
2222 21 00 01            LD    HL,256
2225             L213:
2225 11 2C 02            LD    DE,556
2228 19                  ADD   HL,DE
2229             L214:
2229 D1                  POP   DE
222A F5                  PUSH  AF
222B 7C                  LD    A,H
222C A2                  AND   A,D
222D 67                  LD    H,A
222E 7D                  LD    A,L
222F A3                  AND   A,E
2230 6F                  LD    L,A
2231 F1                  POP   AF
2232             L215:
2232 11 24 02            LD    DE,548
2235 B7                  OR    A
2236 ED 52               SBC   HL,DE
2238             L216:
2238 C2 43 22            JP    NZ,L220
223B             L217:
223B 3E 10               LD    A,16
223D             L218:
223D CD 9B 3C            CALL  writeLineA
2240             L219:
2240 C3 49 22            JP    L223
2243             L220:
2243 21 E7 03            LD    HL,999
2246             L221:
2246 CD 73 3C            CALL  writeLineHL
2249             L222:
2249                     ;;testBitwiseOperators.j(47)     if (0x1234 | 0x0100 + 0x022C == 0x133C) println (17); else println (999);
2249             L223:
2249 21 34 12            LD    HL,4660
224C             L224:
224C E5                  PUSH  HL
224D 21 00 01            LD    HL,256
2250             L225:
2250 11 2C 02            LD    DE,556
2253 19                  ADD   HL,DE
2254             L226:
2254 D1                  POP   DE
2255 47                  LD    B,A
2256 7C                  LD    A,H
2257 B2                  OR    A,D
2258 67                  LD    H,A
2259 7D                  LD    A,L
225A B3                  OR    A,E
225B 6F                  LD    L,A
225C 78                  LD    A,B
225D             L227:
225D 11 3C 13            LD    DE,4924
2260 B7                  OR    A
2261 ED 52               SBC   HL,DE
2263             L228:
2263 C2 6E 22            JP    NZ,L232
2266             L229:
2266 3E 11               LD    A,17
2268             L230:
2268 CD 9B 3C            CALL  writeLineA
226B             L231:
226B C3 74 22            JP    L235
226E             L232:
226E 21 E7 03            LD    HL,999
2271             L233:
2271 CD 73 3C            CALL  writeLineHL
2274             L234:
2274                     ;;testBitwiseOperators.j(48)     if (0x1234 ^ 0x0100 + 0x022C == 0x1118) println (18); else println (999);
2274             L235:
2274 21 34 12            LD    HL,4660
2277             L236:
2277 E5                  PUSH  HL
2278 21 00 01            LD    HL,256
227B             L237:
227B 11 2C 02            LD    DE,556
227E 19                  ADD   HL,DE
227F             L238:
227F D1                  POP   DE
2280 F5                  PUSH  AF
2281 7C                  LD    A,H
2282 AA                  XOR   A,D
2283 67                  LD    H,A
2284 7D                  LD    A,L
2285 AB                  XOR   A,E
2286 6F                  LD    L,A
2287 F1                  POP   AF
2288             L239:
2288 11 18 11            LD    DE,4376
228B B7                  OR    A
228C ED 52               SBC   HL,DE
228E             L240:
228E C2 99 22            JP    NZ,L244
2291             L241:
2291 3E 12               LD    A,18
2293             L242:
2293 CD 9B 3C            CALL  writeLineA
2296             L243:
2296 C3 9F 22            JP    L248
2299             L244:
2299 21 E7 03            LD    HL,999
229C             L245:
229C CD 73 3C            CALL  writeLineHL
229F             L246:
229F                     ;;testBitwiseOperators.j(49)     //constant byte/acc word
229F             L247:
229F                     ;;testBitwiseOperators.j(50)     if (0x1C & 0x1000 + 0x0234 == 0x0014) println (19); else println (999);
229F             L248:
229F 3E 1C               LD    A,28
22A1             L249:
22A1 21 00 10            LD    HL,4096
22A4             L250:
22A4 11 34 02            LD    DE,564
22A7 19                  ADD   HL,DE
22A8             L251:
22A8 5F                  LD    E,A
22A9 A5                  AND   A,L
22AA 6F                  LD    L,A
22AB 7B                  LD    A,E
22AC 26 00               LD    H,0
22AE             L252:
22AE 3E 14               LD    A,20
22B0             L253:
22B0 5F                  LD    E,A
22B1 16 00               LD    D,0
22B3 EB                  EX    DE,HL
22B4 B7                  OR    A
22B5 ED 52               SBC   HL,DE
22B7             L254:
22B7 C2 C2 22            JP    NZ,L258
22BA             L255:
22BA 3E 13               LD    A,19
22BC             L256:
22BC CD 9B 3C            CALL  writeLineA
22BF             L257:
22BF C3 C8 22            JP    L261
22C2             L258:
22C2 21 E7 03            LD    HL,999
22C5             L259:
22C5 CD 73 3C            CALL  writeLineHL
22C8             L260:
22C8                     ;;testBitwiseOperators.j(51)     if (0x1C | 0x1000 + 0x0234 == 0x123C) println (20); else println (999);
22C8             L261:
22C8 3E 1C               LD    A,28
22CA             L262:
22CA 21 00 10            LD    HL,4096
22CD             L263:
22CD 11 34 02            LD    DE,564
22D0 19                  ADD   HL,DE
22D1             L264:
22D1 B5                  OR    A,L
22D2 6F                  LD    L,A
22D3             L265:
22D3 11 3C 12            LD    DE,4668
22D6 B7                  OR    A
22D7 ED 52               SBC   HL,DE
22D9             L266:
22D9 C2 E4 22            JP    NZ,L270
22DC             L267:
22DC 3E 14               LD    A,20
22DE             L268:
22DE CD 9B 3C            CALL  writeLineA
22E1             L269:
22E1 C3 EA 22            JP    L273
22E4             L270:
22E4 21 E7 03            LD    HL,999
22E7             L271:
22E7 CD 73 3C            CALL  writeLineHL
22EA             L272:
22EA                     ;;testBitwiseOperators.j(52)     if (0x1C ^ 0x1000 + 0x0234 == 0x1228) println (21); else println (999);
22EA             L273:
22EA 3E 1C               LD    A,28
22EC             L274:
22EC 21 00 10            LD    HL,4096
22EF             L275:
22EF 11 34 02            LD    DE,564
22F2 19                  ADD   HL,DE
22F3             L276:
22F3 AD                  XOR   A,L
22F4 6F                  LD    L,A
22F5             L277:
22F5 11 28 12            LD    DE,4648
22F8 B7                  OR    A
22F9 ED 52               SBC   HL,DE
22FB             L278:
22FB C2 06 23            JP    NZ,L282
22FE             L279:
22FE 3E 15               LD    A,21
2300             L280:
2300 CD 9B 3C            CALL  writeLineA
2303             L281:
2303 C3 0C 23            JP    L286
2306             L282:
2306 21 E7 03            LD    HL,999
2309             L283:
2309 CD 73 3C            CALL  writeLineHL
230C             L284:
230C                     ;;testBitwiseOperators.j(53)     //constant word/acc byte
230C             L285:
230C                     ;;testBitwiseOperators.j(54)     if (0x1234 & 0x10 + 0x0C == 0x0014) println (22); else println (999);
230C             L286:
230C 21 34 12            LD    HL,4660
230F             L287:
230F 3E 10               LD    A,16
2311             L288:
2311 C6 0C               ADD   A,12
2313             L289:
2313 5F                  LD    E,A
2314 A5                  AND   A,L
2315 6F                  LD    L,A
2316 7B                  LD    A,E
2317 26 00               LD    H,0
2319             L290:
2319 3E 14               LD    A,20
231B             L291:
231B 5F                  LD    E,A
231C 16 00               LD    D,0
231E EB                  EX    DE,HL
231F B7                  OR    A
2320 ED 52               SBC   HL,DE
2322             L292:
2322 C2 2D 23            JP    NZ,L296
2325             L293:
2325 3E 16               LD    A,22
2327             L294:
2327 CD 9B 3C            CALL  writeLineA
232A             L295:
232A C3 33 23            JP    L299
232D             L296:
232D 21 E7 03            LD    HL,999
2330             L297:
2330 CD 73 3C            CALL  writeLineHL
2333             L298:
2333                     ;;testBitwiseOperators.j(55)     if (0x1234 | 0x10 + 0x0C == 0x123C) println (23); else println (999);
2333             L299:
2333 21 34 12            LD    HL,4660
2336             L300:
2336 3E 10               LD    A,16
2338             L301:
2338 C6 0C               ADD   A,12
233A             L302:
233A B5                  OR    A,L
233B 6F                  LD    L,A
233C             L303:
233C 11 3C 12            LD    DE,4668
233F B7                  OR    A
2340 ED 52               SBC   HL,DE
2342             L304:
2342 C2 4D 23            JP    NZ,L308
2345             L305:
2345 3E 17               LD    A,23
2347             L306:
2347 CD 9B 3C            CALL  writeLineA
234A             L307:
234A C3 53 23            JP    L311
234D             L308:
234D 21 E7 03            LD    HL,999
2350             L309:
2350 CD 73 3C            CALL  writeLineHL
2353             L310:
2353                     ;;testBitwiseOperators.j(56)     if (0x1234 ^ 0x10 + 0x0C == 0x1228) println (24); else println (999);
2353             L311:
2353 21 34 12            LD    HL,4660
2356             L312:
2356 3E 10               LD    A,16
2358             L313:
2358 C6 0C               ADD   A,12
235A             L314:
235A AD                  XOR   A,L
235B 6F                  LD    L,A
235C             L315:
235C 11 28 12            LD    DE,4648
235F B7                  OR    A
2360 ED 52               SBC   HL,DE
2362             L316:
2362 C2 6D 23            JP    NZ,L320
2365             L317:
2365 3E 18               LD    A,24
2367             L318:
2367 CD 9B 3C            CALL  writeLineA
236A             L319:
236A C3 73 23            JP    L327
236D             L320:
236D 21 E7 03            LD    HL,999
2370             L321:
2370 CD 73 3C            CALL  writeLineHL
2373             L322:
2373                     ;;testBitwiseOperators.j(57)   
2373             L323:
2373                     ;;testBitwiseOperators.j(58)     //constant/var
2373             L324:
2373                     ;;testBitwiseOperators.j(59)     //*****************
2373             L325:
2373                     ;;testBitwiseOperators.j(60)     //constant byte/var byte
2373             L326:
2373                     ;;testBitwiseOperators.j(61)     if (0x07 & b1 == 0x04) println (25); else println (999);
2373             L327:
2373 3E 07               LD    A,7
2375             L328:
2375 47                  LD    B,A
2376 3A 00 50            LD    A,(05000H)
2379 A0                  AND   A,B
237A             L329:
237A D6 04               SUB   A,4
237C             L330:
237C C2 87 23            JP    NZ,L334
237F             L331:
237F 3E 19               LD    A,25
2381             L332:
2381 CD 9B 3C            CALL  writeLineA
2384             L333:
2384 C3 8D 23            JP    L337
2387             L334:
2387 21 E7 03            LD    HL,999
238A             L335:
238A CD 73 3C            CALL  writeLineHL
238D             L336:
238D                     ;;testBitwiseOperators.j(62)     if (0x07 | b1 == 0x1F) println (26); else println (999);
238D             L337:
238D 3E 07               LD    A,7
238F             L338:
238F 47                  LD    B,A
2390 3A 00 50            LD    A,(05000H)
2393 B0                  OR    A,B
2394             L339:
2394 D6 1F               SUB   A,31
2396             L340:
2396 C2 A1 23            JP    NZ,L344
2399             L341:
2399 3E 1A               LD    A,26
239B             L342:
239B CD 9B 3C            CALL  writeLineA
239E             L343:
239E C3 A7 23            JP    L347
23A1             L344:
23A1 21 E7 03            LD    HL,999
23A4             L345:
23A4 CD 73 3C            CALL  writeLineHL
23A7             L346:
23A7                     ;;testBitwiseOperators.j(63)     if (0x07 ^ b1 == 0x1B) println (27); else println (999);
23A7             L347:
23A7 3E 07               LD    A,7
23A9             L348:
23A9 47                  LD    B,A
23AA 3A 00 50            LD    A,(05000H)
23AD A8                  XOR   A,B
23AE             L349:
23AE D6 1B               SUB   A,27
23B0             L350:
23B0 C2 BB 23            JP    NZ,L354
23B3             L351:
23B3 3E 1B               LD    A,27
23B5             L352:
23B5 CD 9B 3C            CALL  writeLineA
23B8             L353:
23B8 C3 C1 23            JP    L358
23BB             L354:
23BB 21 E7 03            LD    HL,999
23BE             L355:
23BE CD 73 3C            CALL  writeLineHL
23C1             L356:
23C1                     ;;testBitwiseOperators.j(64)     //constant word/var word
23C1             L357:
23C1                     ;;testBitwiseOperators.j(65)     if (0x1234 & w1 == 0x0224) println (28); else println (999);
23C1             L358:
23C1 21 34 12            LD    HL,4660
23C4             L359:
23C4 ED 5B 02 50         LD    DE,(05002H)
23C8 F5                  PUSH  AF
23C9 7C                  LD    A,H
23CA A2                  AND   A,D
23CB 67                  LD    H,A
23CC 7D                  LD    A,L
23CD A3                  AND   A,E
23CE 6F                  LD    L,A
23CF F1                  POP   AF
23D0             L360:
23D0 11 24 02            LD    DE,548
23D3 B7                  OR    A
23D4 ED 52               SBC   HL,DE
23D6             L361:
23D6 C2 E1 23            JP    NZ,L365
23D9             L362:
23D9 3E 1C               LD    A,28
23DB             L363:
23DB CD 9B 3C            CALL  writeLineA
23DE             L364:
23DE C3 E7 23            JP    L368
23E1             L365:
23E1 21 E7 03            LD    HL,999
23E4             L366:
23E4 CD 73 3C            CALL  writeLineHL
23E7             L367:
23E7                     ;;testBitwiseOperators.j(66)     if (0x1234 | w1 == 0x133C) println (29); else println (999);
23E7             L368:
23E7 21 34 12            LD    HL,4660
23EA             L369:
23EA ED 5B 02 50         LD    DE,(05002H)
23EE 47                  LD    B,A
23EF 7C                  LD    A,H
23F0 B2                  OR    A,D
23F1 67                  LD    H,A
23F2 7D                  LD    A,L
23F3 B3                  OR    A,E
23F4 6F                  LD    L,A
23F5 78                  LD    A,B
23F6             L370:
23F6 11 3C 13            LD    DE,4924
23F9 B7                  OR    A
23FA ED 52               SBC   HL,DE
23FC             L371:
23FC C2 07 24            JP    NZ,L375
23FF             L372:
23FF 3E 1D               LD    A,29
2401             L373:
2401 CD 9B 3C            CALL  writeLineA
2404             L374:
2404 C3 0D 24            JP    L378
2407             L375:
2407 21 E7 03            LD    HL,999
240A             L376:
240A CD 73 3C            CALL  writeLineHL
240D             L377:
240D                     ;;testBitwiseOperators.j(67)     if (0x1234 ^ w1 == 0x1118) println (30); else println (999);
240D             L378:
240D 21 34 12            LD    HL,4660
2410             L379:
2410 ED 5B 02 50         LD    DE,(05002H)
2414 F5                  PUSH  AF
2415 7C                  LD    A,H
2416 AA                  XOR   A,D
2417 67                  LD    H,A
2418 7D                  LD    A,L
2419 AB                  XOR   A,E
241A 6F                  LD    L,A
241B F1                  POP   AF
241C             L380:
241C 11 18 11            LD    DE,4376
241F B7                  OR    A
2420 ED 52               SBC   HL,DE
2422             L381:
2422 C2 2D 24            JP    NZ,L385
2425             L382:
2425 3E 1E               LD    A,30
2427             L383:
2427 CD 9B 3C            CALL  writeLineA
242A             L384:
242A C3 33 24            JP    L389
242D             L385:
242D 21 E7 03            LD    HL,999
2430             L386:
2430 CD 73 3C            CALL  writeLineHL
2433             L387:
2433                     ;;testBitwiseOperators.j(68)     //constant byte/var word
2433             L388:
2433                     ;;testBitwiseOperators.j(69)     if (0x1C & w2 == 0x0014) println (31); else println (999);
2433             L389:
2433 3E 1C               LD    A,28
2435             L390:
2435 6F                  LD    L,A
2436 26 00               LD    H,0
2438             L391:
2438 ED 5B 04 50         LD    DE,(05004H)
243C F5                  PUSH  AF
243D 7C                  LD    A,H
243E A2                  AND   A,D
243F 67                  LD    H,A
2440 7D                  LD    A,L
2441 A3                  AND   A,E
2442 6F                  LD    L,A
2443 F1                  POP   AF
2444             L392:
2444 3E 14               LD    A,20
2446             L393:
2446 5F                  LD    E,A
2447 16 00               LD    D,0
2449 EB                  EX    DE,HL
244A B7                  OR    A
244B ED 52               SBC   HL,DE
244D             L394:
244D C2 58 24            JP    NZ,L398
2450             L395:
2450 3E 1F               LD    A,31
2452             L396:
2452 CD 9B 3C            CALL  writeLineA
2455             L397:
2455 C3 5E 24            JP    L401
2458             L398:
2458 21 E7 03            LD    HL,999
245B             L399:
245B CD 73 3C            CALL  writeLineHL
245E             L400:
245E                     ;;testBitwiseOperators.j(70)     if (0x1C | w2 == 0x123C) println (32); else println (999);
245E             L401:
245E 3E 1C               LD    A,28
2460             L402:
2460 6F                  LD    L,A
2461 26 00               LD    H,0
2463             L403:
2463 ED 5B 04 50         LD    DE,(05004H)
2467 47                  LD    B,A
2468 7C                  LD    A,H
2469 B2                  OR    A,D
246A 67                  LD    H,A
246B 7D                  LD    A,L
246C B3                  OR    A,E
246D 6F                  LD    L,A
246E 78                  LD    A,B
246F             L404:
246F 11 3C 12            LD    DE,4668
2472 B7                  OR    A
2473 ED 52               SBC   HL,DE
2475             L405:
2475 C2 80 24            JP    NZ,L409
2478             L406:
2478 3E 20               LD    A,32
247A             L407:
247A CD 9B 3C            CALL  writeLineA
247D             L408:
247D C3 86 24            JP    L412
2480             L409:
2480 21 E7 03            LD    HL,999
2483             L410:
2483 CD 73 3C            CALL  writeLineHL
2486             L411:
2486                     ;;testBitwiseOperators.j(71)     if (0x1C ^ w2 == 0x1228) println (33); else println (999);
2486             L412:
2486 3E 1C               LD    A,28
2488             L413:
2488 6F                  LD    L,A
2489 26 00               LD    H,0
248B             L414:
248B ED 5B 04 50         LD    DE,(05004H)
248F F5                  PUSH  AF
2490 7C                  LD    A,H
2491 AA                  XOR   A,D
2492 67                  LD    H,A
2493 7D                  LD    A,L
2494 AB                  XOR   A,E
2495 6F                  LD    L,A
2496 F1                  POP   AF
2497             L415:
2497 11 28 12            LD    DE,4648
249A B7                  OR    A
249B ED 52               SBC   HL,DE
249D             L416:
249D C2 A8 24            JP    NZ,L420
24A0             L417:
24A0 3E 21               LD    A,33
24A2             L418:
24A2 CD 9B 3C            CALL  writeLineA
24A5             L419:
24A5 C3 AE 24            JP    L424
24A8             L420:
24A8 21 E7 03            LD    HL,999
24AB             L421:
24AB CD 73 3C            CALL  writeLineHL
24AE             L422:
24AE                     ;;testBitwiseOperators.j(72)     //constant word/var byte
24AE             L423:
24AE                     ;;testBitwiseOperators.j(73)     if (0x1234 & b1 == 0x0014) println (34); else println (999);
24AE             L424:
24AE 21 34 12            LD    HL,4660
24B1             L425:
24B1 5F                  LD    E,A
24B2 3A 00 50            LD    A,(05000H)
24B5 A5                  AND   A,L
24B6 6F                  LD    L,A
24B7 7B                  LD    A,E
24B8 26 00               LD    H,0
24BA             L426:
24BA 3E 14               LD    A,20
24BC             L427:
24BC 5F                  LD    E,A
24BD 16 00               LD    D,0
24BF EB                  EX    DE,HL
24C0 B7                  OR    A
24C1 ED 52               SBC   HL,DE
24C3             L428:
24C3 C2 CE 24            JP    NZ,L432
24C6             L429:
24C6 3E 22               LD    A,34
24C8             L430:
24C8 CD 9B 3C            CALL  writeLineA
24CB             L431:
24CB C3 D4 24            JP    L435
24CE             L432:
24CE 21 E7 03            LD    HL,999
24D1             L433:
24D1 CD 73 3C            CALL  writeLineHL
24D4             L434:
24D4                     ;;testBitwiseOperators.j(74)     if (0x1234 | b1 == 0x123C) println (35); else println (999);
24D4             L435:
24D4 21 34 12            LD    HL,4660
24D7             L436:
24D7 47                  LD    B,A
24D8 3A 00 50            LD    A,(05000H)
24DB B5                  OR    A,L
24DC 6F                  LD    L,A
24DD 78                  LD    A,B
24DE             L437:
24DE 11 3C 12            LD    DE,4668
24E1 B7                  OR    A
24E2 ED 52               SBC   HL,DE
24E4             L438:
24E4 C2 EF 24            JP    NZ,L442
24E7             L439:
24E7 3E 23               LD    A,35
24E9             L440:
24E9 CD 9B 3C            CALL  writeLineA
24EC             L441:
24EC C3 F5 24            JP    L445
24EF             L442:
24EF 21 E7 03            LD    HL,999
24F2             L443:
24F2 CD 73 3C            CALL  writeLineHL
24F5             L444:
24F5                     ;;testBitwiseOperators.j(75)     if (0x1234 ^ b1 == 0x1228) println (36); else println (999);
24F5             L445:
24F5 21 34 12            LD    HL,4660
24F8             L446:
24F8 47                  LD    B,A
24F9 3A 00 50            LD    A,(05000H)
24FC AD                  XOR   A,L
24FD 6F                  LD    L,A
24FE 78                  LD    A,B
24FF             L447:
24FF 11 28 12            LD    DE,4648
2502 B7                  OR    A
2503 ED 52               SBC   HL,DE
2505             L448:
2505 C2 10 25            JP    NZ,L452
2508             L449:
2508 3E 24               LD    A,36
250A             L450:
250A CD 9B 3C            CALL  writeLineA
250D             L451:
250D C3 16 25            JP    L459
2510             L452:
2510 21 E7 03            LD    HL,999
2513             L453:
2513 CD 73 3C            CALL  writeLineHL
2516             L454:
2516                     ;;testBitwiseOperators.j(76)   
2516             L455:
2516                     ;;testBitwiseOperators.j(77)     //constant/final var
2516             L456:
2516                     ;;testBitwiseOperators.j(78)     //*****************
2516             L457:
2516                     ;;testBitwiseOperators.j(79)     //constant byte/final var byte
2516             L458:
2516                     ;;testBitwiseOperators.j(80)     if (0x07 & fb1 == 0x04) println (37); else println (999);
2516             L459:
2516 3E 07               LD    A,7
2518             L460:
2518 E6 1C               AND   A,28
251A             L461:
251A D6 04               SUB   A,4
251C             L462:
251C C2 27 25            JP    NZ,L466
251F             L463:
251F 3E 25               LD    A,37
2521             L464:
2521 CD 9B 3C            CALL  writeLineA
2524             L465:
2524 C3 2D 25            JP    L469
2527             L466:
2527 21 E7 03            LD    HL,999
252A             L467:
252A CD 73 3C            CALL  writeLineHL
252D             L468:
252D                     ;;testBitwiseOperators.j(81)     if (0x07 | fb1 == 0x1F) println (38); else println (999);
252D             L469:
252D 3E 07               LD    A,7
252F             L470:
252F F6 1C               OR    A,28
2531             L471:
2531 D6 1F               SUB   A,31
2533             L472:
2533 C2 3E 25            JP    NZ,L476
2536             L473:
2536 3E 26               LD    A,38
2538             L474:
2538 CD 9B 3C            CALL  writeLineA
253B             L475:
253B C3 44 25            JP    L479
253E             L476:
253E 21 E7 03            LD    HL,999
2541             L477:
2541 CD 73 3C            CALL  writeLineHL
2544             L478:
2544                     ;;testBitwiseOperators.j(82)     if (0x07 ^ fb1 == 0x1B) println (39); else println (999);
2544             L479:
2544 3E 07               LD    A,7
2546             L480:
2546 EE 1C               XOR   A,28
2548             L481:
2548 D6 1B               SUB   A,27
254A             L482:
254A C2 55 25            JP    NZ,L486
254D             L483:
254D 3E 27               LD    A,39
254F             L484:
254F CD 9B 3C            CALL  writeLineA
2552             L485:
2552 C3 5B 25            JP    L490
2555             L486:
2555 21 E7 03            LD    HL,999
2558             L487:
2558 CD 73 3C            CALL  writeLineHL
255B             L488:
255B                     ;;testBitwiseOperators.j(83)     //constant word/final var word
255B             L489:
255B                     ;;testBitwiseOperators.j(84)     if (0x1234 & fw1 == 0x0224) println (40); else println (999);
255B             L490:
255B 21 34 12            LD    HL,4660
255E             L491:
255E 11 2C 03            LD    DE,812
2561 F5                  PUSH  AF
2562 7C                  LD    A,H
2563 A2                  AND   A,D
2564 67                  LD    H,A
2565 7D                  LD    A,L
2566 A3                  AND   A,E
2567 6F                  LD    L,A
2568 F1                  POP   AF
2569             L492:
2569 11 24 02            LD    DE,548
256C B7                  OR    A
256D ED 52               SBC   HL,DE
256F             L493:
256F C2 7A 25            JP    NZ,L497
2572             L494:
2572 3E 28               LD    A,40
2574             L495:
2574 CD 9B 3C            CALL  writeLineA
2577             L496:
2577 C3 80 25            JP    L500
257A             L497:
257A 21 E7 03            LD    HL,999
257D             L498:
257D CD 73 3C            CALL  writeLineHL
2580             L499:
2580                     ;;testBitwiseOperators.j(85)     if (0x1234 | fw1 == 0x133C) println (41); else println (999);
2580             L500:
2580 21 34 12            LD    HL,4660
2583             L501:
2583 11 2C 03            LD    DE,812
2586 47                  LD    B,A
2587 7C                  LD    A,H
2588 B2                  OR    A,D
2589 67                  LD    H,A
258A 7D                  LD    A,L
258B B3                  OR    A,E
258C 6F                  LD    L,A
258D 78                  LD    A,B
258E             L502:
258E 11 3C 13            LD    DE,4924
2591 B7                  OR    A
2592 ED 52               SBC   HL,DE
2594             L503:
2594 C2 9F 25            JP    NZ,L507
2597             L504:
2597 3E 29               LD    A,41
2599             L505:
2599 CD 9B 3C            CALL  writeLineA
259C             L506:
259C C3 A5 25            JP    L510
259F             L507:
259F 21 E7 03            LD    HL,999
25A2             L508:
25A2 CD 73 3C            CALL  writeLineHL
25A5             L509:
25A5                     ;;testBitwiseOperators.j(86)     if (0x1234 ^ fw1 == 0x1118) println (42); else println (999);
25A5             L510:
25A5 21 34 12            LD    HL,4660
25A8             L511:
25A8 11 2C 03            LD    DE,812
25AB F5                  PUSH  AF
25AC 7C                  LD    A,H
25AD AA                  XOR   A,D
25AE 67                  LD    H,A
25AF 7D                  LD    A,L
25B0 AB                  XOR   A,E
25B1 6F                  LD    L,A
25B2 F1                  POP   AF
25B3             L512:
25B3 11 18 11            LD    DE,4376
25B6 B7                  OR    A
25B7 ED 52               SBC   HL,DE
25B9             L513:
25B9 C2 C4 25            JP    NZ,L517
25BC             L514:
25BC 3E 2A               LD    A,42
25BE             L515:
25BE CD 9B 3C            CALL  writeLineA
25C1             L516:
25C1 C3 CA 25            JP    L521
25C4             L517:
25C4 21 E7 03            LD    HL,999
25C7             L518:
25C7 CD 73 3C            CALL  writeLineHL
25CA             L519:
25CA                     ;;testBitwiseOperators.j(87)     //constant byte/final var word
25CA             L520:
25CA                     ;;testBitwiseOperators.j(88)     if (0x1C & fw2 == 0x0014) println (43); else println (999);
25CA             L521:
25CA 3E 1C               LD    A,28
25CC             L522:
25CC 6F                  LD    L,A
25CD 26 00               LD    H,0
25CF             L523:
25CF 11 34 12            LD    DE,4660
25D2 F5                  PUSH  AF
25D3 7C                  LD    A,H
25D4 A2                  AND   A,D
25D5 67                  LD    H,A
25D6 7D                  LD    A,L
25D7 A3                  AND   A,E
25D8 6F                  LD    L,A
25D9 F1                  POP   AF
25DA             L524:
25DA 3E 14               LD    A,20
25DC             L525:
25DC 5F                  LD    E,A
25DD 16 00               LD    D,0
25DF EB                  EX    DE,HL
25E0 B7                  OR    A
25E1 ED 52               SBC   HL,DE
25E3             L526:
25E3 C2 EE 25            JP    NZ,L530
25E6             L527:
25E6 3E 2B               LD    A,43
25E8             L528:
25E8 CD 9B 3C            CALL  writeLineA
25EB             L529:
25EB C3 F4 25            JP    L533
25EE             L530:
25EE 21 E7 03            LD    HL,999
25F1             L531:
25F1 CD 73 3C            CALL  writeLineHL
25F4             L532:
25F4                     ;;testBitwiseOperators.j(89)     if (0x1C | fw2 == 0x123C) println (44); else println (999);
25F4             L533:
25F4 3E 1C               LD    A,28
25F6             L534:
25F6 6F                  LD    L,A
25F7 26 00               LD    H,0
25F9             L535:
25F9 11 34 12            LD    DE,4660
25FC 47                  LD    B,A
25FD 7C                  LD    A,H
25FE B2                  OR    A,D
25FF 67                  LD    H,A
2600 7D                  LD    A,L
2601 B3                  OR    A,E
2602 6F                  LD    L,A
2603 78                  LD    A,B
2604             L536:
2604 11 3C 12            LD    DE,4668
2607 B7                  OR    A
2608 ED 52               SBC   HL,DE
260A             L537:
260A C2 15 26            JP    NZ,L541
260D             L538:
260D 3E 2C               LD    A,44
260F             L539:
260F CD 9B 3C            CALL  writeLineA
2612             L540:
2612 C3 1B 26            JP    L544
2615             L541:
2615 21 E7 03            LD    HL,999
2618             L542:
2618 CD 73 3C            CALL  writeLineHL
261B             L543:
261B                     ;;testBitwiseOperators.j(90)     if (0x1C ^ fw2 == 0x1228) println (45); else println (999);
261B             L544:
261B 3E 1C               LD    A,28
261D             L545:
261D 6F                  LD    L,A
261E 26 00               LD    H,0
2620             L546:
2620 11 34 12            LD    DE,4660
2623 F5                  PUSH  AF
2624 7C                  LD    A,H
2625 AA                  XOR   A,D
2626 67                  LD    H,A
2627 7D                  LD    A,L
2628 AB                  XOR   A,E
2629 6F                  LD    L,A
262A F1                  POP   AF
262B             L547:
262B 11 28 12            LD    DE,4648
262E B7                  OR    A
262F ED 52               SBC   HL,DE
2631             L548:
2631 C2 3C 26            JP    NZ,L552
2634             L549:
2634 3E 2D               LD    A,45
2636             L550:
2636 CD 9B 3C            CALL  writeLineA
2639             L551:
2639 C3 42 26            JP    L556
263C             L552:
263C 21 E7 03            LD    HL,999
263F             L553:
263F CD 73 3C            CALL  writeLineHL
2642             L554:
2642                     ;;testBitwiseOperators.j(91)     //constant word/final var byte
2642             L555:
2642                     ;;testBitwiseOperators.j(92)     if (0x1234 & fb1 == 0x0014) println (46); else println (999);
2642             L556:
2642 21 34 12            LD    HL,4660
2645             L557:
2645 5F                  LD    E,A
2646 3E 1C               LD    A,28
2648 A5                  AND   A,L
2649 6F                  LD    L,A
264A 7B                  LD    A,E
264B 26 00               LD    H,0
264D             L558:
264D 3E 14               LD    A,20
264F             L559:
264F 5F                  LD    E,A
2650 16 00               LD    D,0
2652 EB                  EX    DE,HL
2653 B7                  OR    A
2654 ED 52               SBC   HL,DE
2656             L560:
2656 C2 61 26            JP    NZ,L564
2659             L561:
2659 3E 2E               LD    A,46
265B             L562:
265B CD 9B 3C            CALL  writeLineA
265E             L563:
265E C3 67 26            JP    L567
2661             L564:
2661 21 E7 03            LD    HL,999
2664             L565:
2664 CD 73 3C            CALL  writeLineHL
2667             L566:
2667                     ;;testBitwiseOperators.j(93)     if (0x1234 | fb1 == 0x123C) println (47); else println (999);
2667             L567:
2667 21 34 12            LD    HL,4660
266A             L568:
266A 11 1C 00            LD    DE,28
266D 47                  LD    B,A
266E 7C                  LD    A,H
266F B2                  OR    A,D
2670 67                  LD    H,A
2671 7D                  LD    A,L
2672 B3                  OR    A,E
2673 6F                  LD    L,A
2674 78                  LD    A,B
2675             L569:
2675 11 3C 12            LD    DE,4668
2678 B7                  OR    A
2679 ED 52               SBC   HL,DE
267B             L570:
267B C2 86 26            JP    NZ,L574
267E             L571:
267E 3E 2F               LD    A,47
2680             L572:
2680 CD 9B 3C            CALL  writeLineA
2683             L573:
2683 C3 8C 26            JP    L577
2686             L574:
2686 21 E7 03            LD    HL,999
2689             L575:
2689 CD 73 3C            CALL  writeLineHL
268C             L576:
268C                     ;;testBitwiseOperators.j(94)     if (0x1234 ^ fb1 == 0x1228) println (48); else println (999);
268C             L577:
268C 21 34 12            LD    HL,4660
268F             L578:
268F 11 1C 00            LD    DE,28
2692 F5                  PUSH  AF
2693 7C                  LD    A,H
2694 AA                  XOR   A,D
2695 67                  LD    H,A
2696 7D                  LD    A,L
2697 AB                  XOR   A,E
2698 6F                  LD    L,A
2699 F1                  POP   AF
269A             L579:
269A 11 28 12            LD    DE,4648
269D B7                  OR    A
269E ED 52               SBC   HL,DE
26A0             L580:
26A0 C2 AB 26            JP    NZ,L584
26A3             L581:
26A3 3E 30               LD    A,48
26A5             L582:
26A5 CD 9B 3C            CALL  writeLineA
26A8             L583:
26A8 C3 B1 26            JP    L591
26AB             L584:
26AB 21 E7 03            LD    HL,999
26AE             L585:
26AE CD 73 3C            CALL  writeLineHL
26B1             L586:
26B1                     ;;testBitwiseOperators.j(95)   
26B1             L587:
26B1                     ;;testBitwiseOperators.j(96)     //acc/constant
26B1             L588:
26B1                     ;;testBitwiseOperators.j(97)     //************
26B1             L589:
26B1                     ;;testBitwiseOperators.j(98)     //acc byte/constant byte
26B1             L590:
26B1                     ;;testBitwiseOperators.j(99)     if ((0x04 + 0x03) & 0x1C == 0x04) println (49); else println (999);
26B1             L591:
26B1 3E 04               LD    A,4
26B3             L592:
26B3 C6 03               ADD   A,3
26B5             L593:
26B5 E6 1C               AND   A,28
26B7             L594:
26B7 D6 04               SUB   A,4
26B9             L595:
26B9 C2 C4 26            JP    NZ,L599
26BC             L596:
26BC 3E 31               LD    A,49
26BE             L597:
26BE CD 9B 3C            CALL  writeLineA
26C1             L598:
26C1 C3 CA 26            JP    L602
26C4             L599:
26C4 21 E7 03            LD    HL,999
26C7             L600:
26C7 CD 73 3C            CALL  writeLineHL
26CA             L601:
26CA                     ;;testBitwiseOperators.j(100)     if ((0x04 + 0x03) | 0x1C == 0x1F) println (50); else println (999);
26CA             L602:
26CA 3E 04               LD    A,4
26CC             L603:
26CC C6 03               ADD   A,3
26CE             L604:
26CE F6 1C               OR    A,28
26D0             L605:
26D0 D6 1F               SUB   A,31
26D2             L606:
26D2 C2 DD 26            JP    NZ,L610
26D5             L607:
26D5 3E 32               LD    A,50
26D7             L608:
26D7 CD 9B 3C            CALL  writeLineA
26DA             L609:
26DA C3 E3 26            JP    L613
26DD             L610:
26DD 21 E7 03            LD    HL,999
26E0             L611:
26E0 CD 73 3C            CALL  writeLineHL
26E3             L612:
26E3                     ;;testBitwiseOperators.j(101)     if ((0x04 + 0x03) ^ 0x1C == 0x1B) println (51); else println (999);
26E3             L613:
26E3 3E 04               LD    A,4
26E5             L614:
26E5 C6 03               ADD   A,3
26E7             L615:
26E7 EE 1C               XOR   A,28
26E9             L616:
26E9 D6 1B               SUB   A,27
26EB             L617:
26EB C2 F6 26            JP    NZ,L621
26EE             L618:
26EE 3E 33               LD    A,51
26F0             L619:
26F0 CD 9B 3C            CALL  writeLineA
26F3             L620:
26F3 C3 FC 26            JP    L625
26F6             L621:
26F6 21 E7 03            LD    HL,999
26F9             L622:
26F9 CD 73 3C            CALL  writeLineHL
26FC             L623:
26FC                     ;;testBitwiseOperators.j(102)     //acc word/constant word
26FC             L624:
26FC                     ;;testBitwiseOperators.j(103)     if (0x1000 + 0x0234 & 0x032C == 0x0224) println (52); else println (999);
26FC             L625:
26FC 21 00 10            LD    HL,4096
26FF             L626:
26FF 11 34 02            LD    DE,564
2702 19                  ADD   HL,DE
2703             L627:
2703 11 2C 03            LD    DE,812
2706 F5                  PUSH  AF
2707 7C                  LD    A,H
2708 A2                  AND   A,D
2709 67                  LD    H,A
270A 7D                  LD    A,L
270B A3                  AND   A,E
270C 6F                  LD    L,A
270D F1                  POP   AF
270E             L628:
270E 11 24 02            LD    DE,548
2711 B7                  OR    A
2712 ED 52               SBC   HL,DE
2714             L629:
2714 C2 1F 27            JP    NZ,L633
2717             L630:
2717 3E 34               LD    A,52
2719             L631:
2719 CD 9B 3C            CALL  writeLineA
271C             L632:
271C C3 25 27            JP    L636
271F             L633:
271F 21 E7 03            LD    HL,999
2722             L634:
2722 CD 73 3C            CALL  writeLineHL
2725             L635:
2725                     ;;testBitwiseOperators.j(104)     if (0x1000 + 0x0234 | 0x032C == 0x133C) println (53); else println (999);
2725             L636:
2725 21 00 10            LD    HL,4096
2728             L637:
2728 11 34 02            LD    DE,564
272B 19                  ADD   HL,DE
272C             L638:
272C 11 2C 03            LD    DE,812
272F 47                  LD    B,A
2730 7C                  LD    A,H
2731 B2                  OR    A,D
2732 67                  LD    H,A
2733 7D                  LD    A,L
2734 B3                  OR    A,E
2735 6F                  LD    L,A
2736 78                  LD    A,B
2737             L639:
2737 11 3C 13            LD    DE,4924
273A B7                  OR    A
273B ED 52               SBC   HL,DE
273D             L640:
273D C2 48 27            JP    NZ,L644
2740             L641:
2740 3E 35               LD    A,53
2742             L642:
2742 CD 9B 3C            CALL  writeLineA
2745             L643:
2745 C3 4E 27            JP    L647
2748             L644:
2748 21 E7 03            LD    HL,999
274B             L645:
274B CD 73 3C            CALL  writeLineHL
274E             L646:
274E                     ;;testBitwiseOperators.j(105)     if (0x1000 + 0x0234 ^ 0x032C == 0x1118) println (54); else println (999);
274E             L647:
274E 21 00 10            LD    HL,4096
2751             L648:
2751 11 34 02            LD    DE,564
2754 19                  ADD   HL,DE
2755             L649:
2755 11 2C 03            LD    DE,812
2758 F5                  PUSH  AF
2759 7C                  LD    A,H
275A AA                  XOR   A,D
275B 67                  LD    H,A
275C 7D                  LD    A,L
275D AB                  XOR   A,E
275E 6F                  LD    L,A
275F F1                  POP   AF
2760             L650:
2760 11 18 11            LD    DE,4376
2763 B7                  OR    A
2764 ED 52               SBC   HL,DE
2766             L651:
2766 C2 71 27            JP    NZ,L655
2769             L652:
2769 3E 36               LD    A,54
276B             L653:
276B CD 9B 3C            CALL  writeLineA
276E             L654:
276E C3 77 27            JP    L659
2771             L655:
2771 21 E7 03            LD    HL,999
2774             L656:
2774 CD 73 3C            CALL  writeLineHL
2777             L657:
2777                     ;;testBitwiseOperators.j(106)     //acc byte/constant word
2777             L658:
2777                     ;;testBitwiseOperators.j(107)     if (0x10 + 0x0C & 0x1234 == 0x0014) println (55); else println (999);
2777             L659:
2777 3E 10               LD    A,16
2779             L660:
2779 C6 0C               ADD   A,12
277B             L661:
277B 6F                  LD    L,A
277C 26 00               LD    H,0
277E             L662:
277E 11 34 12            LD    DE,4660
2781 F5                  PUSH  AF
2782 7C                  LD    A,H
2783 A2                  AND   A,D
2784 67                  LD    H,A
2785 7D                  LD    A,L
2786 A3                  AND   A,E
2787 6F                  LD    L,A
2788 F1                  POP   AF
2789             L663:
2789 3E 14               LD    A,20
278B             L664:
278B 5F                  LD    E,A
278C 16 00               LD    D,0
278E EB                  EX    DE,HL
278F B7                  OR    A
2790 ED 52               SBC   HL,DE
2792             L665:
2792 C2 9D 27            JP    NZ,L669
2795             L666:
2795 3E 37               LD    A,55
2797             L667:
2797 CD 9B 3C            CALL  writeLineA
279A             L668:
279A C3 A3 27            JP    L672
279D             L669:
279D 21 E7 03            LD    HL,999
27A0             L670:
27A0 CD 73 3C            CALL  writeLineHL
27A3             L671:
27A3                     ;;testBitwiseOperators.j(108)     if (0x10 + 0x0C | 0x1234 == 0x123C) println (56); else println (999);
27A3             L672:
27A3 3E 10               LD    A,16
27A5             L673:
27A5 C6 0C               ADD   A,12
27A7             L674:
27A7 6F                  LD    L,A
27A8 26 00               LD    H,0
27AA             L675:
27AA 11 34 12            LD    DE,4660
27AD 47                  LD    B,A
27AE 7C                  LD    A,H
27AF B2                  OR    A,D
27B0 67                  LD    H,A
27B1 7D                  LD    A,L
27B2 B3                  OR    A,E
27B3 6F                  LD    L,A
27B4 78                  LD    A,B
27B5             L676:
27B5 11 3C 12            LD    DE,4668
27B8 B7                  OR    A
27B9 ED 52               SBC   HL,DE
27BB             L677:
27BB C2 C6 27            JP    NZ,L681
27BE             L678:
27BE 3E 38               LD    A,56
27C0             L679:
27C0 CD 9B 3C            CALL  writeLineA
27C3             L680:
27C3 C3 CC 27            JP    L684
27C6             L681:
27C6 21 E7 03            LD    HL,999
27C9             L682:
27C9 CD 73 3C            CALL  writeLineHL
27CC             L683:
27CC                     ;;testBitwiseOperators.j(109)     if (0x10 + 0x0C ^ 0x1234 == 0x1228) println (57); else println (999);
27CC             L684:
27CC 3E 10               LD    A,16
27CE             L685:
27CE C6 0C               ADD   A,12
27D0             L686:
27D0 6F                  LD    L,A
27D1 26 00               LD    H,0
27D3             L687:
27D3 11 34 12            LD    DE,4660
27D6 F5                  PUSH  AF
27D7 7C                  LD    A,H
27D8 AA                  XOR   A,D
27D9 67                  LD    H,A
27DA 7D                  LD    A,L
27DB AB                  XOR   A,E
27DC 6F                  LD    L,A
27DD F1                  POP   AF
27DE             L688:
27DE 11 28 12            LD    DE,4648
27E1 B7                  OR    A
27E2 ED 52               SBC   HL,DE
27E4             L689:
27E4 C2 EF 27            JP    NZ,L693
27E7             L690:
27E7 3E 39               LD    A,57
27E9             L691:
27E9 CD 9B 3C            CALL  writeLineA
27EC             L692:
27EC C3 F5 27            JP    L697
27EF             L693:
27EF 21 E7 03            LD    HL,999
27F2             L694:
27F2 CD 73 3C            CALL  writeLineHL
27F5             L695:
27F5                     ;;testBitwiseOperators.j(110)     //acc word/constant byte
27F5             L696:
27F5                     ;;testBitwiseOperators.j(111)     if (0x1000 + 0x0234 & 0x1C == 0x0014) println (58); else println (999);
27F5             L697:
27F5 21 00 10            LD    HL,4096
27F8             L698:
27F8 11 34 02            LD    DE,564
27FB 19                  ADD   HL,DE
27FC             L699:
27FC 5F                  LD    E,A
27FD 3E 1C               LD    A,28
27FF A5                  AND   A,L
2800 6F                  LD    L,A
2801 7B                  LD    A,E
2802 26 00               LD    H,0
2804             L700:
2804 3E 14               LD    A,20
2806             L701:
2806 5F                  LD    E,A
2807 16 00               LD    D,0
2809 EB                  EX    DE,HL
280A B7                  OR    A
280B ED 52               SBC   HL,DE
280D             L702:
280D C2 18 28            JP    NZ,L706
2810             L703:
2810 3E 3A               LD    A,58
2812             L704:
2812 CD 9B 3C            CALL  writeLineA
2815             L705:
2815 C3 1E 28            JP    L709
2818             L706:
2818 21 E7 03            LD    HL,999
281B             L707:
281B CD 73 3C            CALL  writeLineHL
281E             L708:
281E                     ;;testBitwiseOperators.j(112)     if (0x1000 + 0x0234 | 0x1C == 0x123C) println (59); else println (999);
281E             L709:
281E 21 00 10            LD    HL,4096
2821             L710:
2821 11 34 02            LD    DE,564
2824 19                  ADD   HL,DE
2825             L711:
2825 11 1C 00            LD    DE,28
2828 47                  LD    B,A
2829 7C                  LD    A,H
282A B2                  OR    A,D
282B 67                  LD    H,A
282C 7D                  LD    A,L
282D B3                  OR    A,E
282E 6F                  LD    L,A
282F 78                  LD    A,B
2830             L712:
2830 11 3C 12            LD    DE,4668
2833 B7                  OR    A
2834 ED 52               SBC   HL,DE
2836             L713:
2836 C2 41 28            JP    NZ,L717
2839             L714:
2839 3E 3B               LD    A,59
283B             L715:
283B CD 9B 3C            CALL  writeLineA
283E             L716:
283E C3 47 28            JP    L720
2841             L717:
2841 21 E7 03            LD    HL,999
2844             L718:
2844 CD 73 3C            CALL  writeLineHL
2847             L719:
2847                     ;;testBitwiseOperators.j(113)     if (0x1000 + 0x0234 ^ 0x1C == 0x1228) println (60); else println (999);
2847             L720:
2847 21 00 10            LD    HL,4096
284A             L721:
284A 11 34 02            LD    DE,564
284D 19                  ADD   HL,DE
284E             L722:
284E 11 1C 00            LD    DE,28
2851 F5                  PUSH  AF
2852 7C                  LD    A,H
2853 AA                  XOR   A,D
2854 67                  LD    H,A
2855 7D                  LD    A,L
2856 AB                  XOR   A,E
2857 6F                  LD    L,A
2858 F1                  POP   AF
2859             L723:
2859 11 28 12            LD    DE,4648
285C B7                  OR    A
285D ED 52               SBC   HL,DE
285F             L724:
285F C2 6A 28            JP    NZ,L728
2862             L725:
2862 3E 3C               LD    A,60
2864             L726:
2864 CD 9B 3C            CALL  writeLineA
2867             L727:
2867 C3 70 28            JP    L735
286A             L728:
286A 21 E7 03            LD    HL,999
286D             L729:
286D CD 73 3C            CALL  writeLineHL
2870             L730:
2870                     ;;testBitwiseOperators.j(114)   
2870             L731:
2870                     ;;testBitwiseOperators.j(115)     //acc/acc
2870             L732:
2870                     ;;testBitwiseOperators.j(116)     //*******
2870             L733:
2870                     ;;testBitwiseOperators.j(117)     //acc byte/acc byte
2870             L734:
2870                     ;;testBitwiseOperators.j(118)     if (0x04 + 0x03 & 0x10 + 0x0C == 0x04) println (61); else println (999);
2870             L735:
2870 3E 04               LD    A,4
2872             L736:
2872 C6 03               ADD   A,3
2874             L737:
2874 F5                  PUSH  AF
2875 3E 10               LD    A,16
2877             L738:
2877 C6 0C               ADD   A,12
2879             L739:
2879 C1                  POP   BC
287A A0                  AND   A,B
287B             L740:
287B D6 04               SUB   A,4
287D             L741:
287D C2 88 28            JP    NZ,L745
2880             L742:
2880 3E 3D               LD    A,61
2882             L743:
2882 CD 9B 3C            CALL  writeLineA
2885             L744:
2885 C3 8E 28            JP    L748
2888             L745:
2888 21 E7 03            LD    HL,999
288B             L746:
288B CD 73 3C            CALL  writeLineHL
288E             L747:
288E                     ;;testBitwiseOperators.j(119)     if (0x04 + 0x03 | 0x10 + 0x0C == 0x1F) println (62); else println (999);
288E             L748:
288E 3E 04               LD    A,4
2890             L749:
2890 C6 03               ADD   A,3
2892             L750:
2892 F5                  PUSH  AF
2893 3E 10               LD    A,16
2895             L751:
2895 C6 0C               ADD   A,12
2897             L752:
2897 C1                  POP   BC
2898 B0                  OR    A,B
2899             L753:
2899 D6 1F               SUB   A,31
289B             L754:
289B C2 A6 28            JP    NZ,L758
289E             L755:
289E 3E 3E               LD    A,62
28A0             L756:
28A0 CD 9B 3C            CALL  writeLineA
28A3             L757:
28A3 C3 AC 28            JP    L761
28A6             L758:
28A6 21 E7 03            LD    HL,999
28A9             L759:
28A9 CD 73 3C            CALL  writeLineHL
28AC             L760:
28AC                     ;;testBitwiseOperators.j(120)     if (0x04 + 0x03 ^ 0x10 + 0x0C == 0x1B) println (63); else println (999);
28AC             L761:
28AC 3E 04               LD    A,4
28AE             L762:
28AE C6 03               ADD   A,3
28B0             L763:
28B0 F5                  PUSH  AF
28B1 3E 10               LD    A,16
28B3             L764:
28B3 C6 0C               ADD   A,12
28B5             L765:
28B5 C1                  POP   BC
28B6 A8                  XOR   A,B
28B7             L766:
28B7 D6 1B               SUB   A,27
28B9             L767:
28B9 C2 C4 28            JP    NZ,L771
28BC             L768:
28BC 3E 3F               LD    A,63
28BE             L769:
28BE CD 9B 3C            CALL  writeLineA
28C1             L770:
28C1 C3 CA 28            JP    L775
28C4             L771:
28C4 21 E7 03            LD    HL,999
28C7             L772:
28C7 CD 73 3C            CALL  writeLineHL
28CA             L773:
28CA                     ;;testBitwiseOperators.j(121)     //acc word/acc word
28CA             L774:
28CA                     ;;testBitwiseOperators.j(122)     if (0x1000 + 0x0234 & 0x0100 + 0x022C == 0x0224) println (64); else println (999);
28CA             L775:
28CA 21 00 10            LD    HL,4096
28CD             L776:
28CD 11 34 02            LD    DE,564
28D0 19                  ADD   HL,DE
28D1             L777:
28D1 E5                  PUSH  HL
28D2 21 00 01            LD    HL,256
28D5             L778:
28D5 11 2C 02            LD    DE,556
28D8 19                  ADD   HL,DE
28D9             L779:
28D9 D1                  POP   DE
28DA F5                  PUSH  AF
28DB 7C                  LD    A,H
28DC A2                  AND   A,D
28DD 67                  LD    H,A
28DE 7D                  LD    A,L
28DF A3                  AND   A,E
28E0 6F                  LD    L,A
28E1 F1                  POP   AF
28E2             L780:
28E2 11 24 02            LD    DE,548
28E5 B7                  OR    A
28E6 ED 52               SBC   HL,DE
28E8             L781:
28E8 C2 F3 28            JP    NZ,L785
28EB             L782:
28EB 3E 40               LD    A,64
28ED             L783:
28ED CD 9B 3C            CALL  writeLineA
28F0             L784:
28F0 C3 F9 28            JP    L788
28F3             L785:
28F3 21 E7 03            LD    HL,999
28F6             L786:
28F6 CD 73 3C            CALL  writeLineHL
28F9             L787:
28F9                     ;;testBitwiseOperators.j(123)     if (0x1000 + 0x0234 | 0x0100 + 0x022C == 0x133C) println (65); else println (999);
28F9             L788:
28F9 21 00 10            LD    HL,4096
28FC             L789:
28FC 11 34 02            LD    DE,564
28FF 19                  ADD   HL,DE
2900             L790:
2900 E5                  PUSH  HL
2901 21 00 01            LD    HL,256
2904             L791:
2904 11 2C 02            LD    DE,556
2907 19                  ADD   HL,DE
2908             L792:
2908 D1                  POP   DE
2909 47                  LD    B,A
290A 7C                  LD    A,H
290B B2                  OR    A,D
290C 67                  LD    H,A
290D 7D                  LD    A,L
290E B3                  OR    A,E
290F 6F                  LD    L,A
2910 78                  LD    A,B
2911             L793:
2911 11 3C 13            LD    DE,4924
2914 B7                  OR    A
2915 ED 52               SBC   HL,DE
2917             L794:
2917 C2 22 29            JP    NZ,L798
291A             L795:
291A 3E 41               LD    A,65
291C             L796:
291C CD 9B 3C            CALL  writeLineA
291F             L797:
291F C3 28 29            JP    L801
2922             L798:
2922 21 E7 03            LD    HL,999
2925             L799:
2925 CD 73 3C            CALL  writeLineHL
2928             L800:
2928                     ;;testBitwiseOperators.j(124)     if (0x1000 + 0x0234 ^ 0x0100 + 0x022C == 0x1118) println (66); else println (999);
2928             L801:
2928 21 00 10            LD    HL,4096
292B             L802:
292B 11 34 02            LD    DE,564
292E 19                  ADD   HL,DE
292F             L803:
292F E5                  PUSH  HL
2930 21 00 01            LD    HL,256
2933             L804:
2933 11 2C 02            LD    DE,556
2936 19                  ADD   HL,DE
2937             L805:
2937 D1                  POP   DE
2938 F5                  PUSH  AF
2939 7C                  LD    A,H
293A AA                  XOR   A,D
293B 67                  LD    H,A
293C 7D                  LD    A,L
293D AB                  XOR   A,E
293E 6F                  LD    L,A
293F F1                  POP   AF
2940             L806:
2940 11 18 11            LD    DE,4376
2943 B7                  OR    A
2944 ED 52               SBC   HL,DE
2946             L807:
2946 C2 51 29            JP    NZ,L811
2949             L808:
2949 3E 42               LD    A,66
294B             L809:
294B CD 9B 3C            CALL  writeLineA
294E             L810:
294E C3 57 29            JP    L815
2951             L811:
2951 21 E7 03            LD    HL,999
2954             L812:
2954 CD 73 3C            CALL  writeLineHL
2957             L813:
2957                     ;;testBitwiseOperators.j(125)     //acc byte/acc word
2957             L814:
2957                     ;;testBitwiseOperators.j(126)     if (0x10 + 0x0C & 0x1000 + 0x0234 == 0x0014) println (67); else println (999);
2957             L815:
2957 3E 10               LD    A,16
2959             L816:
2959 C6 0C               ADD   A,12
295B             L817:
295B 21 00 10            LD    HL,4096
295E             L818:
295E 11 34 02            LD    DE,564
2961 19                  ADD   HL,DE
2962             L819:
2962 5F                  LD    E,A
2963 A5                  AND   A,L
2964 6F                  LD    L,A
2965 7B                  LD    A,E
2966 26 00               LD    H,0
2968             L820:
2968 3E 14               LD    A,20
296A             L821:
296A 5F                  LD    E,A
296B 16 00               LD    D,0
296D EB                  EX    DE,HL
296E B7                  OR    A
296F ED 52               SBC   HL,DE
2971             L822:
2971 C2 7C 29            JP    NZ,L826
2974             L823:
2974 3E 43               LD    A,67
2976             L824:
2976 CD 9B 3C            CALL  writeLineA
2979             L825:
2979 C3 82 29            JP    L829
297C             L826:
297C 21 E7 03            LD    HL,999
297F             L827:
297F CD 73 3C            CALL  writeLineHL
2982             L828:
2982                     ;;testBitwiseOperators.j(127)     if (0x10 + 0x0C | 0x1000 + 0x0234 == 0x123C) println (68); else println (999);
2982             L829:
2982 3E 10               LD    A,16
2984             L830:
2984 C6 0C               ADD   A,12
2986             L831:
2986 21 00 10            LD    HL,4096
2989             L832:
2989 11 34 02            LD    DE,564
298C 19                  ADD   HL,DE
298D             L833:
298D B5                  OR    A,L
298E 6F                  LD    L,A
298F             L834:
298F 11 3C 12            LD    DE,4668
2992 B7                  OR    A
2993 ED 52               SBC   HL,DE
2995             L835:
2995 C2 A0 29            JP    NZ,L839
2998             L836:
2998 3E 44               LD    A,68
299A             L837:
299A CD 9B 3C            CALL  writeLineA
299D             L838:
299D C3 A6 29            JP    L842
29A0             L839:
29A0 21 E7 03            LD    HL,999
29A3             L840:
29A3 CD 73 3C            CALL  writeLineHL
29A6             L841:
29A6                     ;;testBitwiseOperators.j(128)     if (0x10 + 0x0C ^ 0x1000 + 0x0234 == 0x1228) println (69); else println (999);
29A6             L842:
29A6 3E 10               LD    A,16
29A8             L843:
29A8 C6 0C               ADD   A,12
29AA             L844:
29AA 21 00 10            LD    HL,4096
29AD             L845:
29AD 11 34 02            LD    DE,564
29B0 19                  ADD   HL,DE
29B1             L846:
29B1 AD                  XOR   A,L
29B2 6F                  LD    L,A
29B3             L847:
29B3 11 28 12            LD    DE,4648
29B6 B7                  OR    A
29B7 ED 52               SBC   HL,DE
29B9             L848:
29B9 C2 C4 29            JP    NZ,L852
29BC             L849:
29BC 3E 45               LD    A,69
29BE             L850:
29BE CD 9B 3C            CALL  writeLineA
29C1             L851:
29C1 C3 CA 29            JP    L856
29C4             L852:
29C4 21 E7 03            LD    HL,999
29C7             L853:
29C7 CD 73 3C            CALL  writeLineHL
29CA             L854:
29CA                     ;;testBitwiseOperators.j(129)     //acc word/acc byte
29CA             L855:
29CA                     ;;testBitwiseOperators.j(130)     if (0x1000 + 0x0234 & 0x10 + 0x0C == 0x0014) println (70); else println (999);
29CA             L856:
29CA 21 00 10            LD    HL,4096
29CD             L857:
29CD 11 34 02            LD    DE,564
29D0 19                  ADD   HL,DE
29D1             L858:
29D1 3E 10               LD    A,16
29D3             L859:
29D3 C6 0C               ADD   A,12
29D5             L860:
29D5 5F                  LD    E,A
29D6 A5                  AND   A,L
29D7 6F                  LD    L,A
29D8 7B                  LD    A,E
29D9 26 00               LD    H,0
29DB             L861:
29DB 3E 14               LD    A,20
29DD             L862:
29DD 5F                  LD    E,A
29DE 16 00               LD    D,0
29E0 EB                  EX    DE,HL
29E1 B7                  OR    A
29E2 ED 52               SBC   HL,DE
29E4             L863:
29E4 C2 EF 29            JP    NZ,L867
29E7             L864:
29E7 3E 46               LD    A,70
29E9             L865:
29E9 CD 9B 3C            CALL  writeLineA
29EC             L866:
29EC C3 F5 29            JP    L870
29EF             L867:
29EF 21 E7 03            LD    HL,999
29F2             L868:
29F2 CD 73 3C            CALL  writeLineHL
29F5             L869:
29F5                     ;;testBitwiseOperators.j(131)     if (0x1000 + 0x0234 | 0x10 + 0x0C == 0x123C) println (71); else println (999);
29F5             L870:
29F5 21 00 10            LD    HL,4096
29F8             L871:
29F8 11 34 02            LD    DE,564
29FB 19                  ADD   HL,DE
29FC             L872:
29FC 3E 10               LD    A,16
29FE             L873:
29FE C6 0C               ADD   A,12
2A00             L874:
2A00 B5                  OR    A,L
2A01 6F                  LD    L,A
2A02             L875:
2A02 11 3C 12            LD    DE,4668
2A05 B7                  OR    A
2A06 ED 52               SBC   HL,DE
2A08             L876:
2A08 C2 13 2A            JP    NZ,L880
2A0B             L877:
2A0B 3E 47               LD    A,71
2A0D             L878:
2A0D CD 9B 3C            CALL  writeLineA
2A10             L879:
2A10 C3 19 2A            JP    L883
2A13             L880:
2A13 21 E7 03            LD    HL,999
2A16             L881:
2A16 CD 73 3C            CALL  writeLineHL
2A19             L882:
2A19                     ;;testBitwiseOperators.j(132)     if (0x1000 + 0x0234 ^ 0x10 + 0x0C == 0x1228) println (72); else println (999);
2A19             L883:
2A19 21 00 10            LD    HL,4096
2A1C             L884:
2A1C 11 34 02            LD    DE,564
2A1F 19                  ADD   HL,DE
2A20             L885:
2A20 3E 10               LD    A,16
2A22             L886:
2A22 C6 0C               ADD   A,12
2A24             L887:
2A24 AD                  XOR   A,L
2A25 6F                  LD    L,A
2A26             L888:
2A26 11 28 12            LD    DE,4648
2A29 B7                  OR    A
2A2A ED 52               SBC   HL,DE
2A2C             L889:
2A2C C2 37 2A            JP    NZ,L893
2A2F             L890:
2A2F 3E 48               LD    A,72
2A31             L891:
2A31 CD 9B 3C            CALL  writeLineA
2A34             L892:
2A34 C3 3D 2A            JP    L900
2A37             L893:
2A37 21 E7 03            LD    HL,999
2A3A             L894:
2A3A CD 73 3C            CALL  writeLineHL
2A3D             L895:
2A3D                     ;;testBitwiseOperators.j(133)   
2A3D             L896:
2A3D                     ;;testBitwiseOperators.j(134)     //acc/var
2A3D             L897:
2A3D                     ;;testBitwiseOperators.j(135)     //*******
2A3D             L898:
2A3D                     ;;testBitwiseOperators.j(136)     //acc byte/var byte
2A3D             L899:
2A3D                     ;;testBitwiseOperators.j(137)     if (0x04 + 0x03 & b1 == 0x04) println (73); else println (999);
2A3D             L900:
2A3D 3E 04               LD    A,4
2A3F             L901:
2A3F C6 03               ADD   A,3
2A41             L902:
2A41 47                  LD    B,A
2A42 3A 00 50            LD    A,(05000H)
2A45 A0                  AND   A,B
2A46             L903:
2A46 D6 04               SUB   A,4
2A48             L904:
2A48 C2 53 2A            JP    NZ,L908
2A4B             L905:
2A4B 3E 49               LD    A,73
2A4D             L906:
2A4D CD 9B 3C            CALL  writeLineA
2A50             L907:
2A50 C3 59 2A            JP    L911
2A53             L908:
2A53 21 E7 03            LD    HL,999
2A56             L909:
2A56 CD 73 3C            CALL  writeLineHL
2A59             L910:
2A59                     ;;testBitwiseOperators.j(138)     if (0x04 + 0x03 | b1 == 0x1F) println (74); else println (999);
2A59             L911:
2A59 3E 04               LD    A,4
2A5B             L912:
2A5B C6 03               ADD   A,3
2A5D             L913:
2A5D 47                  LD    B,A
2A5E 3A 00 50            LD    A,(05000H)
2A61 B0                  OR    A,B
2A62             L914:
2A62 D6 1F               SUB   A,31
2A64             L915:
2A64 C2 6F 2A            JP    NZ,L919
2A67             L916:
2A67 3E 4A               LD    A,74
2A69             L917:
2A69 CD 9B 3C            CALL  writeLineA
2A6C             L918:
2A6C C3 75 2A            JP    L922
2A6F             L919:
2A6F 21 E7 03            LD    HL,999
2A72             L920:
2A72 CD 73 3C            CALL  writeLineHL
2A75             L921:
2A75                     ;;testBitwiseOperators.j(139)     if (0x04 + 0x03 ^ b1 == 0x1B) println (75); else println (999);
2A75             L922:
2A75 3E 04               LD    A,4
2A77             L923:
2A77 C6 03               ADD   A,3
2A79             L924:
2A79 47                  LD    B,A
2A7A 3A 00 50            LD    A,(05000H)
2A7D A8                  XOR   A,B
2A7E             L925:
2A7E D6 1B               SUB   A,27
2A80             L926:
2A80 C2 8B 2A            JP    NZ,L930
2A83             L927:
2A83 3E 4B               LD    A,75
2A85             L928:
2A85 CD 9B 3C            CALL  writeLineA
2A88             L929:
2A88 C3 91 2A            JP    L934
2A8B             L930:
2A8B 21 E7 03            LD    HL,999
2A8E             L931:
2A8E CD 73 3C            CALL  writeLineHL
2A91             L932:
2A91                     ;;testBitwiseOperators.j(140)     //acc word/var word
2A91             L933:
2A91                     ;;testBitwiseOperators.j(141)     if (0x1000 + 0x0234 & w1 == 0x0224) println (76); else println (999);
2A91             L934:
2A91 21 00 10            LD    HL,4096
2A94             L935:
2A94 11 34 02            LD    DE,564
2A97 19                  ADD   HL,DE
2A98             L936:
2A98 ED 5B 02 50         LD    DE,(05002H)
2A9C F5                  PUSH  AF
2A9D 7C                  LD    A,H
2A9E A2                  AND   A,D
2A9F 67                  LD    H,A
2AA0 7D                  LD    A,L
2AA1 A3                  AND   A,E
2AA2 6F                  LD    L,A
2AA3 F1                  POP   AF
2AA4             L937:
2AA4 11 24 02            LD    DE,548
2AA7 B7                  OR    A
2AA8 ED 52               SBC   HL,DE
2AAA             L938:
2AAA C2 B5 2A            JP    NZ,L942
2AAD             L939:
2AAD 3E 4C               LD    A,76
2AAF             L940:
2AAF CD 9B 3C            CALL  writeLineA
2AB2             L941:
2AB2 C3 BB 2A            JP    L945
2AB5             L942:
2AB5 21 E7 03            LD    HL,999
2AB8             L943:
2AB8 CD 73 3C            CALL  writeLineHL
2ABB             L944:
2ABB                     ;;testBitwiseOperators.j(142)     if (0x1000 + 0x0234 | w1 == 0x133C) println (77); else println (999);
2ABB             L945:
2ABB 21 00 10            LD    HL,4096
2ABE             L946:
2ABE 11 34 02            LD    DE,564
2AC1 19                  ADD   HL,DE
2AC2             L947:
2AC2 ED 5B 02 50         LD    DE,(05002H)
2AC6 47                  LD    B,A
2AC7 7C                  LD    A,H
2AC8 B2                  OR    A,D
2AC9 67                  LD    H,A
2ACA 7D                  LD    A,L
2ACB B3                  OR    A,E
2ACC 6F                  LD    L,A
2ACD 78                  LD    A,B
2ACE             L948:
2ACE 11 3C 13            LD    DE,4924
2AD1 B7                  OR    A
2AD2 ED 52               SBC   HL,DE
2AD4             L949:
2AD4 C2 DF 2A            JP    NZ,L953
2AD7             L950:
2AD7 3E 4D               LD    A,77
2AD9             L951:
2AD9 CD 9B 3C            CALL  writeLineA
2ADC             L952:
2ADC C3 E5 2A            JP    L956
2ADF             L953:
2ADF 21 E7 03            LD    HL,999
2AE2             L954:
2AE2 CD 73 3C            CALL  writeLineHL
2AE5             L955:
2AE5                     ;;testBitwiseOperators.j(143)     if (0x1000 + 0x0234 ^ w1 == 0x1118) println (78); else println (999);
2AE5             L956:
2AE5 21 00 10            LD    HL,4096
2AE8             L957:
2AE8 11 34 02            LD    DE,564
2AEB 19                  ADD   HL,DE
2AEC             L958:
2AEC ED 5B 02 50         LD    DE,(05002H)
2AF0 F5                  PUSH  AF
2AF1 7C                  LD    A,H
2AF2 AA                  XOR   A,D
2AF3 67                  LD    H,A
2AF4 7D                  LD    A,L
2AF5 AB                  XOR   A,E
2AF6 6F                  LD    L,A
2AF7 F1                  POP   AF
2AF8             L959:
2AF8 11 18 11            LD    DE,4376
2AFB B7                  OR    A
2AFC ED 52               SBC   HL,DE
2AFE             L960:
2AFE C2 09 2B            JP    NZ,L964
2B01             L961:
2B01 3E 4E               LD    A,78
2B03             L962:
2B03 CD 9B 3C            CALL  writeLineA
2B06             L963:
2B06 C3 0F 2B            JP    L968
2B09             L964:
2B09 21 E7 03            LD    HL,999
2B0C             L965:
2B0C CD 73 3C            CALL  writeLineHL
2B0F             L966:
2B0F                     ;;testBitwiseOperators.j(144)     //acc byte/var word
2B0F             L967:
2B0F                     ;;testBitwiseOperators.j(145)     if (0x10 + 0x0C & w2 == 0x0014) println (79); else println (999);
2B0F             L968:
2B0F 3E 10               LD    A,16
2B11             L969:
2B11 C6 0C               ADD   A,12
2B13             L970:
2B13 6F                  LD    L,A
2B14 26 00               LD    H,0
2B16             L971:
2B16 ED 5B 04 50         LD    DE,(05004H)
2B1A F5                  PUSH  AF
2B1B 7C                  LD    A,H
2B1C A2                  AND   A,D
2B1D 67                  LD    H,A
2B1E 7D                  LD    A,L
2B1F A3                  AND   A,E
2B20 6F                  LD    L,A
2B21 F1                  POP   AF
2B22             L972:
2B22 3E 14               LD    A,20
2B24             L973:
2B24 5F                  LD    E,A
2B25 16 00               LD    D,0
2B27 EB                  EX    DE,HL
2B28 B7                  OR    A
2B29 ED 52               SBC   HL,DE
2B2B             L974:
2B2B C2 36 2B            JP    NZ,L978
2B2E             L975:
2B2E 3E 4F               LD    A,79
2B30             L976:
2B30 CD 9B 3C            CALL  writeLineA
2B33             L977:
2B33 C3 3C 2B            JP    L981
2B36             L978:
2B36 21 E7 03            LD    HL,999
2B39             L979:
2B39 CD 73 3C            CALL  writeLineHL
2B3C             L980:
2B3C                     ;;testBitwiseOperators.j(146)     if (0x10 + 0x0C | w2 == 0x123C) println (80); else println (999);
2B3C             L981:
2B3C 3E 10               LD    A,16
2B3E             L982:
2B3E C6 0C               ADD   A,12
2B40             L983:
2B40 6F                  LD    L,A
2B41 26 00               LD    H,0
2B43             L984:
2B43 ED 5B 04 50         LD    DE,(05004H)
2B47 47                  LD    B,A
2B48 7C                  LD    A,H
2B49 B2                  OR    A,D
2B4A 67                  LD    H,A
2B4B 7D                  LD    A,L
2B4C B3                  OR    A,E
2B4D 6F                  LD    L,A
2B4E 78                  LD    A,B
2B4F             L985:
2B4F 11 3C 12            LD    DE,4668
2B52 B7                  OR    A
2B53 ED 52               SBC   HL,DE
2B55             L986:
2B55 C2 60 2B            JP    NZ,L990
2B58             L987:
2B58 3E 50               LD    A,80
2B5A             L988:
2B5A CD 9B 3C            CALL  writeLineA
2B5D             L989:
2B5D C3 66 2B            JP    L993
2B60             L990:
2B60 21 E7 03            LD    HL,999
2B63             L991:
2B63 CD 73 3C            CALL  writeLineHL
2B66             L992:
2B66                     ;;testBitwiseOperators.j(147)     if (0x10 + 0x0C ^ w2 == 0x1228) println (81); else println (999);
2B66             L993:
2B66 3E 10               LD    A,16
2B68             L994:
2B68 C6 0C               ADD   A,12
2B6A             L995:
2B6A 6F                  LD    L,A
2B6B 26 00               LD    H,0
2B6D             L996:
2B6D ED 5B 04 50         LD    DE,(05004H)
2B71 F5                  PUSH  AF
2B72 7C                  LD    A,H
2B73 AA                  XOR   A,D
2B74 67                  LD    H,A
2B75 7D                  LD    A,L
2B76 AB                  XOR   A,E
2B77 6F                  LD    L,A
2B78 F1                  POP   AF
2B79             L997:
2B79 11 28 12            LD    DE,4648
2B7C B7                  OR    A
2B7D ED 52               SBC   HL,DE
2B7F             L998:
2B7F C2 8A 2B            JP    NZ,L1002
2B82             L999:
2B82 3E 51               LD    A,81
2B84             L1000:
2B84 CD 9B 3C            CALL  writeLineA
2B87             L1001:
2B87 C3 90 2B            JP    L1006
2B8A             L1002:
2B8A 21 E7 03            LD    HL,999
2B8D             L1003:
2B8D CD 73 3C            CALL  writeLineHL
2B90             L1004:
2B90                     ;;testBitwiseOperators.j(148)     //acc word/var byte
2B90             L1005:
2B90                     ;;testBitwiseOperators.j(149)     if (0x1000 + 0x0234 & b1 == 0x0014) println (82); else println (999);
2B90             L1006:
2B90 21 00 10            LD    HL,4096
2B93             L1007:
2B93 11 34 02            LD    DE,564
2B96 19                  ADD   HL,DE
2B97             L1008:
2B97 5F                  LD    E,A
2B98 3A 00 50            LD    A,(05000H)
2B9B A5                  AND   A,L
2B9C 6F                  LD    L,A
2B9D 7B                  LD    A,E
2B9E 26 00               LD    H,0
2BA0             L1009:
2BA0 3E 14               LD    A,20
2BA2             L1010:
2BA2 5F                  LD    E,A
2BA3 16 00               LD    D,0
2BA5 EB                  EX    DE,HL
2BA6 B7                  OR    A
2BA7 ED 52               SBC   HL,DE
2BA9             L1011:
2BA9 C2 B4 2B            JP    NZ,L1015
2BAC             L1012:
2BAC 3E 52               LD    A,82
2BAE             L1013:
2BAE CD 9B 3C            CALL  writeLineA
2BB1             L1014:
2BB1 C3 BA 2B            JP    L1018
2BB4             L1015:
2BB4 21 E7 03            LD    HL,999
2BB7             L1016:
2BB7 CD 73 3C            CALL  writeLineHL
2BBA             L1017:
2BBA                     ;;testBitwiseOperators.j(150)     if (0x1000 + 0x0234 | b1 == 0x123C) println (83); else println (999);
2BBA             L1018:
2BBA 21 00 10            LD    HL,4096
2BBD             L1019:
2BBD 11 34 02            LD    DE,564
2BC0 19                  ADD   HL,DE
2BC1             L1020:
2BC1 47                  LD    B,A
2BC2 3A 00 50            LD    A,(05000H)
2BC5 B5                  OR    A,L
2BC6 6F                  LD    L,A
2BC7 78                  LD    A,B
2BC8             L1021:
2BC8 11 3C 12            LD    DE,4668
2BCB B7                  OR    A
2BCC ED 52               SBC   HL,DE
2BCE             L1022:
2BCE C2 D9 2B            JP    NZ,L1026
2BD1             L1023:
2BD1 3E 53               LD    A,83
2BD3             L1024:
2BD3 CD 9B 3C            CALL  writeLineA
2BD6             L1025:
2BD6 C3 DF 2B            JP    L1029
2BD9             L1026:
2BD9 21 E7 03            LD    HL,999
2BDC             L1027:
2BDC CD 73 3C            CALL  writeLineHL
2BDF             L1028:
2BDF                     ;;testBitwiseOperators.j(151)     if (0x1000 + 0x0234 ^ b1 == 0x1228) println (84); else println (999);
2BDF             L1029:
2BDF 21 00 10            LD    HL,4096
2BE2             L1030:
2BE2 11 34 02            LD    DE,564
2BE5 19                  ADD   HL,DE
2BE6             L1031:
2BE6 47                  LD    B,A
2BE7 3A 00 50            LD    A,(05000H)
2BEA AD                  XOR   A,L
2BEB 6F                  LD    L,A
2BEC 78                  LD    A,B
2BED             L1032:
2BED 11 28 12            LD    DE,4648
2BF0 B7                  OR    A
2BF1 ED 52               SBC   HL,DE
2BF3             L1033:
2BF3 C2 FE 2B            JP    NZ,L1037
2BF6             L1034:
2BF6 3E 54               LD    A,84
2BF8             L1035:
2BF8 CD 9B 3C            CALL  writeLineA
2BFB             L1036:
2BFB C3 04 2C            JP    L1044
2BFE             L1037:
2BFE 21 E7 03            LD    HL,999
2C01             L1038:
2C01 CD 73 3C            CALL  writeLineHL
2C04             L1039:
2C04                     ;;testBitwiseOperators.j(152)   
2C04             L1040:
2C04                     ;;testBitwiseOperators.j(153)     //acc/final var
2C04             L1041:
2C04                     ;;testBitwiseOperators.j(154)     //*************
2C04             L1042:
2C04                     ;;testBitwiseOperators.j(155)     //acc byte/final var byte
2C04             L1043:
2C04                     ;;testBitwiseOperators.j(156)     if (0x04 + 0x03 & fb1 == 0x04) println (85); else println (999);
2C04             L1044:
2C04 3E 04               LD    A,4
2C06             L1045:
2C06 C6 03               ADD   A,3
2C08             L1046:
2C08 E6 1C               AND   A,28
2C0A             L1047:
2C0A D6 04               SUB   A,4
2C0C             L1048:
2C0C C2 17 2C            JP    NZ,L1052
2C0F             L1049:
2C0F 3E 55               LD    A,85
2C11             L1050:
2C11 CD 9B 3C            CALL  writeLineA
2C14             L1051:
2C14 C3 1D 2C            JP    L1055
2C17             L1052:
2C17 21 E7 03            LD    HL,999
2C1A             L1053:
2C1A CD 73 3C            CALL  writeLineHL
2C1D             L1054:
2C1D                     ;;testBitwiseOperators.j(157)     if (0x04 + 0x03 | fb1 == 0x1F) println (86); else println (999);
2C1D             L1055:
2C1D 3E 04               LD    A,4
2C1F             L1056:
2C1F C6 03               ADD   A,3
2C21             L1057:
2C21 F6 1C               OR    A,28
2C23             L1058:
2C23 D6 1F               SUB   A,31
2C25             L1059:
2C25 C2 30 2C            JP    NZ,L1063
2C28             L1060:
2C28 3E 56               LD    A,86
2C2A             L1061:
2C2A CD 9B 3C            CALL  writeLineA
2C2D             L1062:
2C2D C3 36 2C            JP    L1066
2C30             L1063:
2C30 21 E7 03            LD    HL,999
2C33             L1064:
2C33 CD 73 3C            CALL  writeLineHL
2C36             L1065:
2C36                     ;;testBitwiseOperators.j(158)     if (0x04 + 0x03 ^ fb1 == 0x1B) println (87); else println (999);
2C36             L1066:
2C36 3E 04               LD    A,4
2C38             L1067:
2C38 C6 03               ADD   A,3
2C3A             L1068:
2C3A EE 1C               XOR   A,28
2C3C             L1069:
2C3C D6 1B               SUB   A,27
2C3E             L1070:
2C3E C2 49 2C            JP    NZ,L1074
2C41             L1071:
2C41 3E 57               LD    A,87
2C43             L1072:
2C43 CD 9B 3C            CALL  writeLineA
2C46             L1073:
2C46 C3 4F 2C            JP    L1078
2C49             L1074:
2C49 21 E7 03            LD    HL,999
2C4C             L1075:
2C4C CD 73 3C            CALL  writeLineHL
2C4F             L1076:
2C4F                     ;;testBitwiseOperators.j(159)     //acc word/final var word
2C4F             L1077:
2C4F                     ;;testBitwiseOperators.j(160)     if (0x1000 + 0x0234 & fw1 == 0x0224) println (88); else println (999);
2C4F             L1078:
2C4F 21 00 10            LD    HL,4096
2C52             L1079:
2C52 11 34 02            LD    DE,564
2C55 19                  ADD   HL,DE
2C56             L1080:
2C56 11 2C 03            LD    DE,812
2C59 F5                  PUSH  AF
2C5A 7C                  LD    A,H
2C5B A2                  AND   A,D
2C5C 67                  LD    H,A
2C5D 7D                  LD    A,L
2C5E A3                  AND   A,E
2C5F 6F                  LD    L,A
2C60 F1                  POP   AF
2C61             L1081:
2C61 11 24 02            LD    DE,548
2C64 B7                  OR    A
2C65 ED 52               SBC   HL,DE
2C67             L1082:
2C67 C2 72 2C            JP    NZ,L1086
2C6A             L1083:
2C6A 3E 58               LD    A,88
2C6C             L1084:
2C6C CD 9B 3C            CALL  writeLineA
2C6F             L1085:
2C6F C3 78 2C            JP    L1089
2C72             L1086:
2C72 21 E7 03            LD    HL,999
2C75             L1087:
2C75 CD 73 3C            CALL  writeLineHL
2C78             L1088:
2C78                     ;;testBitwiseOperators.j(161)     if (0x1000 + 0x0234 | fw1 == 0x133C) println (89); else println (999);
2C78             L1089:
2C78 21 00 10            LD    HL,4096
2C7B             L1090:
2C7B 11 34 02            LD    DE,564
2C7E 19                  ADD   HL,DE
2C7F             L1091:
2C7F 11 2C 03            LD    DE,812
2C82 47                  LD    B,A
2C83 7C                  LD    A,H
2C84 B2                  OR    A,D
2C85 67                  LD    H,A
2C86 7D                  LD    A,L
2C87 B3                  OR    A,E
2C88 6F                  LD    L,A
2C89 78                  LD    A,B
2C8A             L1092:
2C8A 11 3C 13            LD    DE,4924
2C8D B7                  OR    A
2C8E ED 52               SBC   HL,DE
2C90             L1093:
2C90 C2 9B 2C            JP    NZ,L1097
2C93             L1094:
2C93 3E 59               LD    A,89
2C95             L1095:
2C95 CD 9B 3C            CALL  writeLineA
2C98             L1096:
2C98 C3 A1 2C            JP    L1100
2C9B             L1097:
2C9B 21 E7 03            LD    HL,999
2C9E             L1098:
2C9E CD 73 3C            CALL  writeLineHL
2CA1             L1099:
2CA1                     ;;testBitwiseOperators.j(162)     if (0x1000 + 0x0234 ^ fw1 == 0x1118) println (90); else println (999);
2CA1             L1100:
2CA1 21 00 10            LD    HL,4096
2CA4             L1101:
2CA4 11 34 02            LD    DE,564
2CA7 19                  ADD   HL,DE
2CA8             L1102:
2CA8 11 2C 03            LD    DE,812
2CAB F5                  PUSH  AF
2CAC 7C                  LD    A,H
2CAD AA                  XOR   A,D
2CAE 67                  LD    H,A
2CAF 7D                  LD    A,L
2CB0 AB                  XOR   A,E
2CB1 6F                  LD    L,A
2CB2 F1                  POP   AF
2CB3             L1103:
2CB3 11 18 11            LD    DE,4376
2CB6 B7                  OR    A
2CB7 ED 52               SBC   HL,DE
2CB9             L1104:
2CB9 C2 C4 2C            JP    NZ,L1108
2CBC             L1105:
2CBC 3E 5A               LD    A,90
2CBE             L1106:
2CBE CD 9B 3C            CALL  writeLineA
2CC1             L1107:
2CC1 C3 CA 2C            JP    L1112
2CC4             L1108:
2CC4 21 E7 03            LD    HL,999
2CC7             L1109:
2CC7 CD 73 3C            CALL  writeLineHL
2CCA             L1110:
2CCA                     ;;testBitwiseOperators.j(163)     //acc byte/final var word
2CCA             L1111:
2CCA                     ;;testBitwiseOperators.j(164)     if (0x10 + 0x0C & fw2 == 0x0014) println (91); else println (999);
2CCA             L1112:
2CCA 3E 10               LD    A,16
2CCC             L1113:
2CCC C6 0C               ADD   A,12
2CCE             L1114:
2CCE 6F                  LD    L,A
2CCF 26 00               LD    H,0
2CD1             L1115:
2CD1 11 34 12            LD    DE,4660
2CD4 F5                  PUSH  AF
2CD5 7C                  LD    A,H
2CD6 A2                  AND   A,D
2CD7 67                  LD    H,A
2CD8 7D                  LD    A,L
2CD9 A3                  AND   A,E
2CDA 6F                  LD    L,A
2CDB F1                  POP   AF
2CDC             L1116:
2CDC 3E 14               LD    A,20
2CDE             L1117:
2CDE 5F                  LD    E,A
2CDF 16 00               LD    D,0
2CE1 EB                  EX    DE,HL
2CE2 B7                  OR    A
2CE3 ED 52               SBC   HL,DE
2CE5             L1118:
2CE5 C2 F0 2C            JP    NZ,L1122
2CE8             L1119:
2CE8 3E 5B               LD    A,91
2CEA             L1120:
2CEA CD 9B 3C            CALL  writeLineA
2CED             L1121:
2CED C3 F6 2C            JP    L1125
2CF0             L1122:
2CF0 21 E7 03            LD    HL,999
2CF3             L1123:
2CF3 CD 73 3C            CALL  writeLineHL
2CF6             L1124:
2CF6                     ;;testBitwiseOperators.j(165)     if (0x10 + 0x0C | fw2 == 0x123C) println (92); else println (999);
2CF6             L1125:
2CF6 3E 10               LD    A,16
2CF8             L1126:
2CF8 C6 0C               ADD   A,12
2CFA             L1127:
2CFA 6F                  LD    L,A
2CFB 26 00               LD    H,0
2CFD             L1128:
2CFD 11 34 12            LD    DE,4660
2D00 47                  LD    B,A
2D01 7C                  LD    A,H
2D02 B2                  OR    A,D
2D03 67                  LD    H,A
2D04 7D                  LD    A,L
2D05 B3                  OR    A,E
2D06 6F                  LD    L,A
2D07 78                  LD    A,B
2D08             L1129:
2D08 11 3C 12            LD    DE,4668
2D0B B7                  OR    A
2D0C ED 52               SBC   HL,DE
2D0E             L1130:
2D0E C2 19 2D            JP    NZ,L1134
2D11             L1131:
2D11 3E 5C               LD    A,92
2D13             L1132:
2D13 CD 9B 3C            CALL  writeLineA
2D16             L1133:
2D16 C3 1F 2D            JP    L1137
2D19             L1134:
2D19 21 E7 03            LD    HL,999
2D1C             L1135:
2D1C CD 73 3C            CALL  writeLineHL
2D1F             L1136:
2D1F                     ;;testBitwiseOperators.j(166)     if (0x10 + 0x0C ^ fw2 == 0x1228) println (93); else println (999);
2D1F             L1137:
2D1F 3E 10               LD    A,16
2D21             L1138:
2D21 C6 0C               ADD   A,12
2D23             L1139:
2D23 6F                  LD    L,A
2D24 26 00               LD    H,0
2D26             L1140:
2D26 11 34 12            LD    DE,4660
2D29 F5                  PUSH  AF
2D2A 7C                  LD    A,H
2D2B AA                  XOR   A,D
2D2C 67                  LD    H,A
2D2D 7D                  LD    A,L
2D2E AB                  XOR   A,E
2D2F 6F                  LD    L,A
2D30 F1                  POP   AF
2D31             L1141:
2D31 11 28 12            LD    DE,4648
2D34 B7                  OR    A
2D35 ED 52               SBC   HL,DE
2D37             L1142:
2D37 C2 42 2D            JP    NZ,L1146
2D3A             L1143:
2D3A 3E 5D               LD    A,93
2D3C             L1144:
2D3C CD 9B 3C            CALL  writeLineA
2D3F             L1145:
2D3F C3 48 2D            JP    L1150
2D42             L1146:
2D42 21 E7 03            LD    HL,999
2D45             L1147:
2D45 CD 73 3C            CALL  writeLineHL
2D48             L1148:
2D48                     ;;testBitwiseOperators.j(167)     //acc word/final var byte
2D48             L1149:
2D48                     ;;testBitwiseOperators.j(168)     if (0x1000 + 0x0234 & fb1 == 0x0014) println (94); else println (999);
2D48             L1150:
2D48 21 00 10            LD    HL,4096
2D4B             L1151:
2D4B 11 34 02            LD    DE,564
2D4E 19                  ADD   HL,DE
2D4F             L1152:
2D4F 5F                  LD    E,A
2D50 3E 1C               LD    A,28
2D52 A5                  AND   A,L
2D53 6F                  LD    L,A
2D54 7B                  LD    A,E
2D55 26 00               LD    H,0
2D57             L1153:
2D57 3E 14               LD    A,20
2D59             L1154:
2D59 5F                  LD    E,A
2D5A 16 00               LD    D,0
2D5C EB                  EX    DE,HL
2D5D B7                  OR    A
2D5E ED 52               SBC   HL,DE
2D60             L1155:
2D60 C2 6B 2D            JP    NZ,L1159
2D63             L1156:
2D63 3E 5E               LD    A,94
2D65             L1157:
2D65 CD 9B 3C            CALL  writeLineA
2D68             L1158:
2D68 C3 71 2D            JP    L1162
2D6B             L1159:
2D6B 21 E7 03            LD    HL,999
2D6E             L1160:
2D6E CD 73 3C            CALL  writeLineHL
2D71             L1161:
2D71                     ;;testBitwiseOperators.j(169)     if (0x1000 + 0x0234 | fb1 == 0x123C) println (95); else println (999);
2D71             L1162:
2D71 21 00 10            LD    HL,4096
2D74             L1163:
2D74 11 34 02            LD    DE,564
2D77 19                  ADD   HL,DE
2D78             L1164:
2D78 11 1C 00            LD    DE,28
2D7B 47                  LD    B,A
2D7C 7C                  LD    A,H
2D7D B2                  OR    A,D
2D7E 67                  LD    H,A
2D7F 7D                  LD    A,L
2D80 B3                  OR    A,E
2D81 6F                  LD    L,A
2D82 78                  LD    A,B
2D83             L1165:
2D83 11 3C 12            LD    DE,4668
2D86 B7                  OR    A
2D87 ED 52               SBC   HL,DE
2D89             L1166:
2D89 C2 94 2D            JP    NZ,L1170
2D8C             L1167:
2D8C 3E 5F               LD    A,95
2D8E             L1168:
2D8E CD 9B 3C            CALL  writeLineA
2D91             L1169:
2D91 C3 9A 2D            JP    L1173
2D94             L1170:
2D94 21 E7 03            LD    HL,999
2D97             L1171:
2D97 CD 73 3C            CALL  writeLineHL
2D9A             L1172:
2D9A                     ;;testBitwiseOperators.j(170)     if (0x1000 + 0x0234 ^ fb1 == 0x1228) println (96); else println (999);
2D9A             L1173:
2D9A 21 00 10            LD    HL,4096
2D9D             L1174:
2D9D 11 34 02            LD    DE,564
2DA0 19                  ADD   HL,DE
2DA1             L1175:
2DA1 11 1C 00            LD    DE,28
2DA4 F5                  PUSH  AF
2DA5 7C                  LD    A,H
2DA6 AA                  XOR   A,D
2DA7 67                  LD    H,A
2DA8 7D                  LD    A,L
2DA9 AB                  XOR   A,E
2DAA 6F                  LD    L,A
2DAB F1                  POP   AF
2DAC             L1176:
2DAC 11 28 12            LD    DE,4648
2DAF B7                  OR    A
2DB0 ED 52               SBC   HL,DE
2DB2             L1177:
2DB2 C2 BD 2D            JP    NZ,L1181
2DB5             L1178:
2DB5 3E 60               LD    A,96
2DB7             L1179:
2DB7 CD 9B 3C            CALL  writeLineA
2DBA             L1180:
2DBA C3 C3 2D            JP    L1188
2DBD             L1181:
2DBD 21 E7 03            LD    HL,999
2DC0             L1182:
2DC0 CD 73 3C            CALL  writeLineHL
2DC3             L1183:
2DC3                     ;;testBitwiseOperators.j(171)   
2DC3             L1184:
2DC3                     ;;testBitwiseOperators.j(172)     //var/constant
2DC3             L1185:
2DC3                     ;;testBitwiseOperators.j(173)     //************
2DC3             L1186:
2DC3                     ;;testBitwiseOperators.j(174)     //var byte/constant byte
2DC3             L1187:
2DC3                     ;;testBitwiseOperators.j(175)     if (b2 & 0x1C == 0x04) println (97); else println (999);
2DC3             L1188:
2DC3 3A 01 50            LD    A,(05001H)
2DC6             L1189:
2DC6 E6 1C               AND   A,28
2DC8             L1190:
2DC8 D6 04               SUB   A,4
2DCA             L1191:
2DCA C2 D5 2D            JP    NZ,L1195
2DCD             L1192:
2DCD 3E 61               LD    A,97
2DCF             L1193:
2DCF CD 9B 3C            CALL  writeLineA
2DD2             L1194:
2DD2 C3 DB 2D            JP    L1198
2DD5             L1195:
2DD5 21 E7 03            LD    HL,999
2DD8             L1196:
2DD8 CD 73 3C            CALL  writeLineHL
2DDB             L1197:
2DDB                     ;;testBitwiseOperators.j(176)     if (b2 | 0x1C == 0x1F) println (98); else println (999);
2DDB             L1198:
2DDB 3A 01 50            LD    A,(05001H)
2DDE             L1199:
2DDE F6 1C               OR    A,28
2DE0             L1200:
2DE0 D6 1F               SUB   A,31
2DE2             L1201:
2DE2 C2 ED 2D            JP    NZ,L1205
2DE5             L1202:
2DE5 3E 62               LD    A,98
2DE7             L1203:
2DE7 CD 9B 3C            CALL  writeLineA
2DEA             L1204:
2DEA C3 F3 2D            JP    L1208
2DED             L1205:
2DED 21 E7 03            LD    HL,999
2DF0             L1206:
2DF0 CD 73 3C            CALL  writeLineHL
2DF3             L1207:
2DF3                     ;;testBitwiseOperators.j(177)     if (b2 ^ 0x1C == 0x1B) println (99); else println (999);
2DF3             L1208:
2DF3 3A 01 50            LD    A,(05001H)
2DF6             L1209:
2DF6 EE 1C               XOR   A,28
2DF8             L1210:
2DF8 D6 1B               SUB   A,27
2DFA             L1211:
2DFA C2 05 2E            JP    NZ,L1215
2DFD             L1212:
2DFD 3E 63               LD    A,99
2DFF             L1213:
2DFF CD 9B 3C            CALL  writeLineA
2E02             L1214:
2E02 C3 0B 2E            JP    L1219
2E05             L1215:
2E05 21 E7 03            LD    HL,999
2E08             L1216:
2E08 CD 73 3C            CALL  writeLineHL
2E0B             L1217:
2E0B                     ;;testBitwiseOperators.j(178)     //var word/constant word
2E0B             L1218:
2E0B                     ;;testBitwiseOperators.j(179)     if (w2 & 0x032C == 0x0224) println (100); else println (999);
2E0B             L1219:
2E0B 2A 04 50            LD    HL,(05004H)
2E0E             L1220:
2E0E 11 2C 03            LD    DE,812
2E11 F5                  PUSH  AF
2E12 7C                  LD    A,H
2E13 A2                  AND   A,D
2E14 67                  LD    H,A
2E15 7D                  LD    A,L
2E16 A3                  AND   A,E
2E17 6F                  LD    L,A
2E18 F1                  POP   AF
2E19             L1221:
2E19 11 24 02            LD    DE,548
2E1C B7                  OR    A
2E1D ED 52               SBC   HL,DE
2E1F             L1222:
2E1F C2 2A 2E            JP    NZ,L1226
2E22             L1223:
2E22 3E 64               LD    A,100
2E24             L1224:
2E24 CD 9B 3C            CALL  writeLineA
2E27             L1225:
2E27 C3 30 2E            JP    L1229
2E2A             L1226:
2E2A 21 E7 03            LD    HL,999
2E2D             L1227:
2E2D CD 73 3C            CALL  writeLineHL
2E30             L1228:
2E30                     ;;testBitwiseOperators.j(180)     if (w2 | 0x032C == 0x133C) println (101); else println (999);
2E30             L1229:
2E30 2A 04 50            LD    HL,(05004H)
2E33             L1230:
2E33 11 2C 03            LD    DE,812
2E36 47                  LD    B,A
2E37 7C                  LD    A,H
2E38 B2                  OR    A,D
2E39 67                  LD    H,A
2E3A 7D                  LD    A,L
2E3B B3                  OR    A,E
2E3C 6F                  LD    L,A
2E3D 78                  LD    A,B
2E3E             L1231:
2E3E 11 3C 13            LD    DE,4924
2E41 B7                  OR    A
2E42 ED 52               SBC   HL,DE
2E44             L1232:
2E44 C2 4F 2E            JP    NZ,L1236
2E47             L1233:
2E47 3E 65               LD    A,101
2E49             L1234:
2E49 CD 9B 3C            CALL  writeLineA
2E4C             L1235:
2E4C C3 55 2E            JP    L1239
2E4F             L1236:
2E4F 21 E7 03            LD    HL,999
2E52             L1237:
2E52 CD 73 3C            CALL  writeLineHL
2E55             L1238:
2E55                     ;;testBitwiseOperators.j(181)     if (w2 ^ 0x032C == 0x1118) println (102); else println (999);
2E55             L1239:
2E55 2A 04 50            LD    HL,(05004H)
2E58             L1240:
2E58 11 2C 03            LD    DE,812
2E5B F5                  PUSH  AF
2E5C 7C                  LD    A,H
2E5D AA                  XOR   A,D
2E5E 67                  LD    H,A
2E5F 7D                  LD    A,L
2E60 AB                  XOR   A,E
2E61 6F                  LD    L,A
2E62 F1                  POP   AF
2E63             L1241:
2E63 11 18 11            LD    DE,4376
2E66 B7                  OR    A
2E67 ED 52               SBC   HL,DE
2E69             L1242:
2E69 C2 74 2E            JP    NZ,L1246
2E6C             L1243:
2E6C 3E 66               LD    A,102
2E6E             L1244:
2E6E CD 9B 3C            CALL  writeLineA
2E71             L1245:
2E71 C3 7A 2E            JP    L1250
2E74             L1246:
2E74 21 E7 03            LD    HL,999
2E77             L1247:
2E77 CD 73 3C            CALL  writeLineHL
2E7A             L1248:
2E7A                     ;;testBitwiseOperators.j(182)     //var byte/constant word
2E7A             L1249:
2E7A                     ;;testBitwiseOperators.j(183)     if (b1 & 0x1234 == 0x0014) println (103); else println (999);
2E7A             L1250:
2E7A 3A 00 50            LD    A,(05000H)
2E7D             L1251:
2E7D 6F                  LD    L,A
2E7E 26 00               LD    H,0
2E80             L1252:
2E80 11 34 12            LD    DE,4660
2E83 F5                  PUSH  AF
2E84 7C                  LD    A,H
2E85 A2                  AND   A,D
2E86 67                  LD    H,A
2E87 7D                  LD    A,L
2E88 A3                  AND   A,E
2E89 6F                  LD    L,A
2E8A F1                  POP   AF
2E8B             L1253:
2E8B 3E 14               LD    A,20
2E8D             L1254:
2E8D 5F                  LD    E,A
2E8E 16 00               LD    D,0
2E90 EB                  EX    DE,HL
2E91 B7                  OR    A
2E92 ED 52               SBC   HL,DE
2E94             L1255:
2E94 C2 9F 2E            JP    NZ,L1259
2E97             L1256:
2E97 3E 67               LD    A,103
2E99             L1257:
2E99 CD 9B 3C            CALL  writeLineA
2E9C             L1258:
2E9C C3 A5 2E            JP    L1262
2E9F             L1259:
2E9F 21 E7 03            LD    HL,999
2EA2             L1260:
2EA2 CD 73 3C            CALL  writeLineHL
2EA5             L1261:
2EA5                     ;;testBitwiseOperators.j(184)     if (b1 | 0x1234 == 0x123C) println (104); else println (999);
2EA5             L1262:
2EA5 3A 00 50            LD    A,(05000H)
2EA8             L1263:
2EA8 6F                  LD    L,A
2EA9 26 00               LD    H,0
2EAB             L1264:
2EAB 11 34 12            LD    DE,4660
2EAE 47                  LD    B,A
2EAF 7C                  LD    A,H
2EB0 B2                  OR    A,D
2EB1 67                  LD    H,A
2EB2 7D                  LD    A,L
2EB3 B3                  OR    A,E
2EB4 6F                  LD    L,A
2EB5 78                  LD    A,B
2EB6             L1265:
2EB6 11 3C 12            LD    DE,4668
2EB9 B7                  OR    A
2EBA ED 52               SBC   HL,DE
2EBC             L1266:
2EBC C2 C7 2E            JP    NZ,L1270
2EBF             L1267:
2EBF 3E 68               LD    A,104
2EC1             L1268:
2EC1 CD 9B 3C            CALL  writeLineA
2EC4             L1269:
2EC4 C3 CD 2E            JP    L1273
2EC7             L1270:
2EC7 21 E7 03            LD    HL,999
2ECA             L1271:
2ECA CD 73 3C            CALL  writeLineHL
2ECD             L1272:
2ECD                     ;;testBitwiseOperators.j(185)     if (b1 ^ 0x1234 == 0x1228) println (105); else println (999);
2ECD             L1273:
2ECD 3A 00 50            LD    A,(05000H)
2ED0             L1274:
2ED0 6F                  LD    L,A
2ED1 26 00               LD    H,0
2ED3             L1275:
2ED3 11 34 12            LD    DE,4660
2ED6 F5                  PUSH  AF
2ED7 7C                  LD    A,H
2ED8 AA                  XOR   A,D
2ED9 67                  LD    H,A
2EDA 7D                  LD    A,L
2EDB AB                  XOR   A,E
2EDC 6F                  LD    L,A
2EDD F1                  POP   AF
2EDE             L1276:
2EDE 11 28 12            LD    DE,4648
2EE1 B7                  OR    A
2EE2 ED 52               SBC   HL,DE
2EE4             L1277:
2EE4 C2 EF 2E            JP    NZ,L1281
2EE7             L1278:
2EE7 3E 69               LD    A,105
2EE9             L1279:
2EE9 CD 9B 3C            CALL  writeLineA
2EEC             L1280:
2EEC C3 F5 2E            JP    L1285
2EEF             L1281:
2EEF 21 E7 03            LD    HL,999
2EF2             L1282:
2EF2 CD 73 3C            CALL  writeLineHL
2EF5             L1283:
2EF5                     ;;testBitwiseOperators.j(186)     //var word/constant byte
2EF5             L1284:
2EF5                     ;;testBitwiseOperators.j(187)     if (w2 & 0x1C == 0x0014) println (106); else println (999);
2EF5             L1285:
2EF5 2A 04 50            LD    HL,(05004H)
2EF8             L1286:
2EF8 5F                  LD    E,A
2EF9 3E 1C               LD    A,28
2EFB A5                  AND   A,L
2EFC 6F                  LD    L,A
2EFD 7B                  LD    A,E
2EFE 26 00               LD    H,0
2F00             L1287:
2F00 3E 14               LD    A,20
2F02             L1288:
2F02 5F                  LD    E,A
2F03 16 00               LD    D,0
2F05 EB                  EX    DE,HL
2F06 B7                  OR    A
2F07 ED 52               SBC   HL,DE
2F09             L1289:
2F09 C2 14 2F            JP    NZ,L1293
2F0C             L1290:
2F0C 3E 6A               LD    A,106
2F0E             L1291:
2F0E CD 9B 3C            CALL  writeLineA
2F11             L1292:
2F11 C3 1A 2F            JP    L1296
2F14             L1293:
2F14 21 E7 03            LD    HL,999
2F17             L1294:
2F17 CD 73 3C            CALL  writeLineHL
2F1A             L1295:
2F1A                     ;;testBitwiseOperators.j(188)     if (w2 | 0x1C == 0x123C) println (107); else println (999);
2F1A             L1296:
2F1A 2A 04 50            LD    HL,(05004H)
2F1D             L1297:
2F1D 11 1C 00            LD    DE,28
2F20 47                  LD    B,A
2F21 7C                  LD    A,H
2F22 B2                  OR    A,D
2F23 67                  LD    H,A
2F24 7D                  LD    A,L
2F25 B3                  OR    A,E
2F26 6F                  LD    L,A
2F27 78                  LD    A,B
2F28             L1298:
2F28 11 3C 12            LD    DE,4668
2F2B B7                  OR    A
2F2C ED 52               SBC   HL,DE
2F2E             L1299:
2F2E C2 39 2F            JP    NZ,L1303
2F31             L1300:
2F31 3E 6B               LD    A,107
2F33             L1301:
2F33 CD 9B 3C            CALL  writeLineA
2F36             L1302:
2F36 C3 3F 2F            JP    L1306
2F39             L1303:
2F39 21 E7 03            LD    HL,999
2F3C             L1304:
2F3C CD 73 3C            CALL  writeLineHL
2F3F             L1305:
2F3F                     ;;testBitwiseOperators.j(189)     if (w2 ^ 0x1C == 0x1228) println (108); else println (999);
2F3F             L1306:
2F3F 2A 04 50            LD    HL,(05004H)
2F42             L1307:
2F42 11 1C 00            LD    DE,28
2F45 F5                  PUSH  AF
2F46 7C                  LD    A,H
2F47 AA                  XOR   A,D
2F48 67                  LD    H,A
2F49 7D                  LD    A,L
2F4A AB                  XOR   A,E
2F4B 6F                  LD    L,A
2F4C F1                  POP   AF
2F4D             L1308:
2F4D 11 28 12            LD    DE,4648
2F50 B7                  OR    A
2F51 ED 52               SBC   HL,DE
2F53             L1309:
2F53 C2 5E 2F            JP    NZ,L1313
2F56             L1310:
2F56 3E 6C               LD    A,108
2F58             L1311:
2F58 CD 9B 3C            CALL  writeLineA
2F5B             L1312:
2F5B C3 64 2F            JP    L1320
2F5E             L1313:
2F5E 21 E7 03            LD    HL,999
2F61             L1314:
2F61 CD 73 3C            CALL  writeLineHL
2F64             L1315:
2F64                     ;;testBitwiseOperators.j(190)   
2F64             L1316:
2F64                     ;;testBitwiseOperators.j(191)     //var/acc
2F64             L1317:
2F64                     ;;testBitwiseOperators.j(192)     //*******
2F64             L1318:
2F64                     ;;testBitwiseOperators.j(193)     //var byte/acc byte
2F64             L1319:
2F64                     ;;testBitwiseOperators.j(194)     if (b2 & (0x10 + 0x0C) == 0x04) println (109); else println (999);
2F64             L1320:
2F64 3A 01 50            LD    A,(05001H)
2F67             L1321:
2F67 F5                  PUSH  AF
2F68 3E 10               LD    A,16
2F6A             L1322:
2F6A C6 0C               ADD   A,12
2F6C             L1323:
2F6C C1                  POP   BC
2F6D A0                  AND   A,B
2F6E             L1324:
2F6E D6 04               SUB   A,4
2F70             L1325:
2F70 C2 7B 2F            JP    NZ,L1329
2F73             L1326:
2F73 3E 6D               LD    A,109
2F75             L1327:
2F75 CD 9B 3C            CALL  writeLineA
2F78             L1328:
2F78 C3 81 2F            JP    L1332
2F7B             L1329:
2F7B 21 E7 03            LD    HL,999
2F7E             L1330:
2F7E CD 73 3C            CALL  writeLineHL
2F81             L1331:
2F81                     ;;testBitwiseOperators.j(195)     if (b2 | (0x10 + 0x0C) == 0x1F) println (110); else println (999);
2F81             L1332:
2F81 3A 01 50            LD    A,(05001H)
2F84             L1333:
2F84 F5                  PUSH  AF
2F85 3E 10               LD    A,16
2F87             L1334:
2F87 C6 0C               ADD   A,12
2F89             L1335:
2F89 C1                  POP   BC
2F8A B0                  OR    A,B
2F8B             L1336:
2F8B D6 1F               SUB   A,31
2F8D             L1337:
2F8D C2 98 2F            JP    NZ,L1341
2F90             L1338:
2F90 3E 6E               LD    A,110
2F92             L1339:
2F92 CD 9B 3C            CALL  writeLineA
2F95             L1340:
2F95 C3 9E 2F            JP    L1344
2F98             L1341:
2F98 21 E7 03            LD    HL,999
2F9B             L1342:
2F9B CD 73 3C            CALL  writeLineHL
2F9E             L1343:
2F9E                     ;;testBitwiseOperators.j(196)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (111); else println (999);
2F9E             L1344:
2F9E 3A 01 50            LD    A,(05001H)
2FA1             L1345:
2FA1 F5                  PUSH  AF
2FA2 3E 10               LD    A,16
2FA4             L1346:
2FA4 C6 0C               ADD   A,12
2FA6             L1347:
2FA6 C1                  POP   BC
2FA7 A8                  XOR   A,B
2FA8             L1348:
2FA8 D6 1B               SUB   A,27
2FAA             L1349:
2FAA C2 B5 2F            JP    NZ,L1353
2FAD             L1350:
2FAD 3E 6F               LD    A,111
2FAF             L1351:
2FAF CD 9B 3C            CALL  writeLineA
2FB2             L1352:
2FB2 C3 BB 2F            JP    L1357
2FB5             L1353:
2FB5 21 E7 03            LD    HL,999
2FB8             L1354:
2FB8 CD 73 3C            CALL  writeLineHL
2FBB             L1355:
2FBB                     ;;testBitwiseOperators.j(197)     //var word/acc word
2FBB             L1356:
2FBB                     ;;testBitwiseOperators.j(198)     if (w2 & 0x0100 + 0x022C == 0x0224) println (112); else println (999);
2FBB             L1357:
2FBB 2A 04 50            LD    HL,(05004H)
2FBE             L1358:
2FBE E5                  PUSH  HL
2FBF 21 00 01            LD    HL,256
2FC2             L1359:
2FC2 11 2C 02            LD    DE,556
2FC5 19                  ADD   HL,DE
2FC6             L1360:
2FC6 D1                  POP   DE
2FC7 F5                  PUSH  AF
2FC8 7C                  LD    A,H
2FC9 A2                  AND   A,D
2FCA 67                  LD    H,A
2FCB 7D                  LD    A,L
2FCC A3                  AND   A,E
2FCD 6F                  LD    L,A
2FCE F1                  POP   AF
2FCF             L1361:
2FCF 11 24 02            LD    DE,548
2FD2 B7                  OR    A
2FD3 ED 52               SBC   HL,DE
2FD5             L1362:
2FD5 C2 E0 2F            JP    NZ,L1366
2FD8             L1363:
2FD8 3E 70               LD    A,112
2FDA             L1364:
2FDA CD 9B 3C            CALL  writeLineA
2FDD             L1365:
2FDD C3 E6 2F            JP    L1369
2FE0             L1366:
2FE0 21 E7 03            LD    HL,999
2FE3             L1367:
2FE3 CD 73 3C            CALL  writeLineHL
2FE6             L1368:
2FE6                     ;;testBitwiseOperators.j(199)     if (w2 | 0x0100 + 0x022C == 0x133C) println (113); else println (999);
2FE6             L1369:
2FE6 2A 04 50            LD    HL,(05004H)
2FE9             L1370:
2FE9 E5                  PUSH  HL
2FEA 21 00 01            LD    HL,256
2FED             L1371:
2FED 11 2C 02            LD    DE,556
2FF0 19                  ADD   HL,DE
2FF1             L1372:
2FF1 D1                  POP   DE
2FF2 47                  LD    B,A
2FF3 7C                  LD    A,H
2FF4 B2                  OR    A,D
2FF5 67                  LD    H,A
2FF6 7D                  LD    A,L
2FF7 B3                  OR    A,E
2FF8 6F                  LD    L,A
2FF9 78                  LD    A,B
2FFA             L1373:
2FFA 11 3C 13            LD    DE,4924
2FFD B7                  OR    A
2FFE ED 52               SBC   HL,DE
3000             L1374:
3000 C2 0B 30            JP    NZ,L1378
3003             L1375:
3003 3E 71               LD    A,113
3005             L1376:
3005 CD 9B 3C            CALL  writeLineA
3008             L1377:
3008 C3 11 30            JP    L1381
300B             L1378:
300B 21 E7 03            LD    HL,999
300E             L1379:
300E CD 73 3C            CALL  writeLineHL
3011             L1380:
3011                     ;;testBitwiseOperators.j(200)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (114); else println (999);
3011             L1381:
3011 2A 04 50            LD    HL,(05004H)
3014             L1382:
3014 E5                  PUSH  HL
3015 21 00 01            LD    HL,256
3018             L1383:
3018 11 2C 02            LD    DE,556
301B 19                  ADD   HL,DE
301C             L1384:
301C D1                  POP   DE
301D F5                  PUSH  AF
301E 7C                  LD    A,H
301F AA                  XOR   A,D
3020 67                  LD    H,A
3021 7D                  LD    A,L
3022 AB                  XOR   A,E
3023 6F                  LD    L,A
3024 F1                  POP   AF
3025             L1385:
3025 11 18 11            LD    DE,4376
3028 B7                  OR    A
3029 ED 52               SBC   HL,DE
302B             L1386:
302B C2 36 30            JP    NZ,L1390
302E             L1387:
302E 3E 72               LD    A,114
3030             L1388:
3030 CD 9B 3C            CALL  writeLineA
3033             L1389:
3033 C3 3C 30            JP    L1394
3036             L1390:
3036 21 E7 03            LD    HL,999
3039             L1391:
3039 CD 73 3C            CALL  writeLineHL
303C             L1392:
303C                     ;;testBitwiseOperators.j(201)     //var byte/acc word
303C             L1393:
303C                     ;;testBitwiseOperators.j(202)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (115); else println (999);
303C             L1394:
303C 3A 00 50            LD    A,(05000H)
303F             L1395:
303F 21 00 10            LD    HL,4096
3042             L1396:
3042 11 34 02            LD    DE,564
3045 19                  ADD   HL,DE
3046             L1397:
3046 5F                  LD    E,A
3047 A5                  AND   A,L
3048 6F                  LD    L,A
3049 7B                  LD    A,E
304A 26 00               LD    H,0
304C             L1398:
304C 3E 14               LD    A,20
304E             L1399:
304E 5F                  LD    E,A
304F 16 00               LD    D,0
3051 EB                  EX    DE,HL
3052 B7                  OR    A
3053 ED 52               SBC   HL,DE
3055             L1400:
3055 C2 60 30            JP    NZ,L1404
3058             L1401:
3058 3E 73               LD    A,115
305A             L1402:
305A CD 9B 3C            CALL  writeLineA
305D             L1403:
305D C3 66 30            JP    L1407
3060             L1404:
3060 21 E7 03            LD    HL,999
3063             L1405:
3063 CD 73 3C            CALL  writeLineHL
3066             L1406:
3066                     ;;testBitwiseOperators.j(203)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (116); else println (999);
3066             L1407:
3066 3A 00 50            LD    A,(05000H)
3069             L1408:
3069 21 00 10            LD    HL,4096
306C             L1409:
306C 11 34 02            LD    DE,564
306F 19                  ADD   HL,DE
3070             L1410:
3070 B5                  OR    A,L
3071 6F                  LD    L,A
3072             L1411:
3072 11 3C 12            LD    DE,4668
3075 B7                  OR    A
3076 ED 52               SBC   HL,DE
3078             L1412:
3078 C2 83 30            JP    NZ,L1416
307B             L1413:
307B 3E 74               LD    A,116
307D             L1414:
307D CD 9B 3C            CALL  writeLineA
3080             L1415:
3080 C3 89 30            JP    L1419
3083             L1416:
3083 21 E7 03            LD    HL,999
3086             L1417:
3086 CD 73 3C            CALL  writeLineHL
3089             L1418:
3089                     ;;testBitwiseOperators.j(204)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (117); else println (999);
3089             L1419:
3089 3A 00 50            LD    A,(05000H)
308C             L1420:
308C 21 00 10            LD    HL,4096
308F             L1421:
308F 11 34 02            LD    DE,564
3092 19                  ADD   HL,DE
3093             L1422:
3093 AD                  XOR   A,L
3094 6F                  LD    L,A
3095             L1423:
3095 11 28 12            LD    DE,4648
3098 B7                  OR    A
3099 ED 52               SBC   HL,DE
309B             L1424:
309B C2 A6 30            JP    NZ,L1428
309E             L1425:
309E 3E 75               LD    A,117
30A0             L1426:
30A0 CD 9B 3C            CALL  writeLineA
30A3             L1427:
30A3 C3 AC 30            JP    L1432
30A6             L1428:
30A6 21 E7 03            LD    HL,999
30A9             L1429:
30A9 CD 73 3C            CALL  writeLineHL
30AC             L1430:
30AC                     ;;testBitwiseOperators.j(205)     //var word/acc byte
30AC             L1431:
30AC                     ;;testBitwiseOperators.j(206)     if (w2 & 0x10 + 0x0C == 0x0014) println (118); else println (999);
30AC             L1432:
30AC 2A 04 50            LD    HL,(05004H)
30AF             L1433:
30AF 3E 10               LD    A,16
30B1             L1434:
30B1 C6 0C               ADD   A,12
30B3             L1435:
30B3 5F                  LD    E,A
30B4 A5                  AND   A,L
30B5 6F                  LD    L,A
30B6 7B                  LD    A,E
30B7 26 00               LD    H,0
30B9             L1436:
30B9 3E 14               LD    A,20
30BB             L1437:
30BB 5F                  LD    E,A
30BC 16 00               LD    D,0
30BE EB                  EX    DE,HL
30BF B7                  OR    A
30C0 ED 52               SBC   HL,DE
30C2             L1438:
30C2 C2 CD 30            JP    NZ,L1442
30C5             L1439:
30C5 3E 76               LD    A,118
30C7             L1440:
30C7 CD 9B 3C            CALL  writeLineA
30CA             L1441:
30CA C3 D3 30            JP    L1445
30CD             L1442:
30CD 21 E7 03            LD    HL,999
30D0             L1443:
30D0 CD 73 3C            CALL  writeLineHL
30D3             L1444:
30D3                     ;;testBitwiseOperators.j(207)     if (w2 | 0x10 + 0x0C == 0x123C) println (119); else println (999);
30D3             L1445:
30D3 2A 04 50            LD    HL,(05004H)
30D6             L1446:
30D6 3E 10               LD    A,16
30D8             L1447:
30D8 C6 0C               ADD   A,12
30DA             L1448:
30DA B5                  OR    A,L
30DB 6F                  LD    L,A
30DC             L1449:
30DC 11 3C 12            LD    DE,4668
30DF B7                  OR    A
30E0 ED 52               SBC   HL,DE
30E2             L1450:
30E2 C2 ED 30            JP    NZ,L1454
30E5             L1451:
30E5 3E 77               LD    A,119
30E7             L1452:
30E7 CD 9B 3C            CALL  writeLineA
30EA             L1453:
30EA C3 F3 30            JP    L1457
30ED             L1454:
30ED 21 E7 03            LD    HL,999
30F0             L1455:
30F0 CD 73 3C            CALL  writeLineHL
30F3             L1456:
30F3                     ;;testBitwiseOperators.j(208)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (120); else println (999);
30F3             L1457:
30F3 2A 04 50            LD    HL,(05004H)
30F6             L1458:
30F6 3E 10               LD    A,16
30F8             L1459:
30F8 C6 0C               ADD   A,12
30FA             L1460:
30FA AD                  XOR   A,L
30FB 6F                  LD    L,A
30FC             L1461:
30FC 11 28 12            LD    DE,4648
30FF B7                  OR    A
3100 ED 52               SBC   HL,DE
3102             L1462:
3102 C2 0D 31            JP    NZ,L1466
3105             L1463:
3105 3E 78               LD    A,120
3107             L1464:
3107 CD 9B 3C            CALL  writeLineA
310A             L1465:
310A C3 13 31            JP    L1473
310D             L1466:
310D 21 E7 03            LD    HL,999
3110             L1467:
3110 CD 73 3C            CALL  writeLineHL
3113             L1468:
3113                     ;;testBitwiseOperators.j(209)   
3113             L1469:
3113                     ;;testBitwiseOperators.j(210)     //var/var
3113             L1470:
3113                     ;;testBitwiseOperators.j(211)     //*******
3113             L1471:
3113                     ;;testBitwiseOperators.j(212)     //var byte/var byte
3113             L1472:
3113                     ;;testBitwiseOperators.j(213)     if (b2 & b1 == 0x04) println (121); else println (999);
3113             L1473:
3113 3A 01 50            LD    A,(05001H)
3116             L1474:
3116 47                  LD    B,A
3117 3A 00 50            LD    A,(05000H)
311A A0                  AND   A,B
311B             L1475:
311B D6 04               SUB   A,4
311D             L1476:
311D C2 28 31            JP    NZ,L1480
3120             L1477:
3120 3E 79               LD    A,121
3122             L1478:
3122 CD 9B 3C            CALL  writeLineA
3125             L1479:
3125 C3 2E 31            JP    L1483
3128             L1480:
3128 21 E7 03            LD    HL,999
312B             L1481:
312B CD 73 3C            CALL  writeLineHL
312E             L1482:
312E                     ;;testBitwiseOperators.j(214)     if (b2 | b1 == 0x1F) println (122); else println (999);
312E             L1483:
312E 3A 01 50            LD    A,(05001H)
3131             L1484:
3131 47                  LD    B,A
3132 3A 00 50            LD    A,(05000H)
3135 B0                  OR    A,B
3136             L1485:
3136 D6 1F               SUB   A,31
3138             L1486:
3138 C2 43 31            JP    NZ,L1490
313B             L1487:
313B 3E 7A               LD    A,122
313D             L1488:
313D CD 9B 3C            CALL  writeLineA
3140             L1489:
3140 C3 49 31            JP    L1493
3143             L1490:
3143 21 E7 03            LD    HL,999
3146             L1491:
3146 CD 73 3C            CALL  writeLineHL
3149             L1492:
3149                     ;;testBitwiseOperators.j(215)     if (b2 ^ b1 == 0x1B) println (123); else println (999);
3149             L1493:
3149 3A 01 50            LD    A,(05001H)
314C             L1494:
314C 47                  LD    B,A
314D 3A 00 50            LD    A,(05000H)
3150 A8                  XOR   A,B
3151             L1495:
3151 D6 1B               SUB   A,27
3153             L1496:
3153 C2 5E 31            JP    NZ,L1500
3156             L1497:
3156 3E 7B               LD    A,123
3158             L1498:
3158 CD 9B 3C            CALL  writeLineA
315B             L1499:
315B C3 64 31            JP    L1504
315E             L1500:
315E 21 E7 03            LD    HL,999
3161             L1501:
3161 CD 73 3C            CALL  writeLineHL
3164             L1502:
3164                     ;;testBitwiseOperators.j(216)     //var word/var word
3164             L1503:
3164                     ;;testBitwiseOperators.j(217)     if (w2 & w1 == 0x0224) println (124); else println (999);
3164             L1504:
3164 2A 04 50            LD    HL,(05004H)
3167             L1505:
3167 ED 5B 02 50         LD    DE,(05002H)
316B F5                  PUSH  AF
316C 7C                  LD    A,H
316D A2                  AND   A,D
316E 67                  LD    H,A
316F 7D                  LD    A,L
3170 A3                  AND   A,E
3171 6F                  LD    L,A
3172 F1                  POP   AF
3173             L1506:
3173 11 24 02            LD    DE,548
3176 B7                  OR    A
3177 ED 52               SBC   HL,DE
3179             L1507:
3179 C2 84 31            JP    NZ,L1511
317C             L1508:
317C 3E 7C               LD    A,124
317E             L1509:
317E CD 9B 3C            CALL  writeLineA
3181             L1510:
3181 C3 8A 31            JP    L1514
3184             L1511:
3184 21 E7 03            LD    HL,999
3187             L1512:
3187 CD 73 3C            CALL  writeLineHL
318A             L1513:
318A                     ;;testBitwiseOperators.j(218)     if (w2 | w1 == 0x133C) println (125); else println (999);
318A             L1514:
318A 2A 04 50            LD    HL,(05004H)
318D             L1515:
318D ED 5B 02 50         LD    DE,(05002H)
3191 47                  LD    B,A
3192 7C                  LD    A,H
3193 B2                  OR    A,D
3194 67                  LD    H,A
3195 7D                  LD    A,L
3196 B3                  OR    A,E
3197 6F                  LD    L,A
3198 78                  LD    A,B
3199             L1516:
3199 11 3C 13            LD    DE,4924
319C B7                  OR    A
319D ED 52               SBC   HL,DE
319F             L1517:
319F C2 AA 31            JP    NZ,L1521
31A2             L1518:
31A2 3E 7D               LD    A,125
31A4             L1519:
31A4 CD 9B 3C            CALL  writeLineA
31A7             L1520:
31A7 C3 B0 31            JP    L1524
31AA             L1521:
31AA 21 E7 03            LD    HL,999
31AD             L1522:
31AD CD 73 3C            CALL  writeLineHL
31B0             L1523:
31B0                     ;;testBitwiseOperators.j(219)     if (w2 ^ w1 == 0x1118) println (126); else println (999);
31B0             L1524:
31B0 2A 04 50            LD    HL,(05004H)
31B3             L1525:
31B3 ED 5B 02 50         LD    DE,(05002H)
31B7 F5                  PUSH  AF
31B8 7C                  LD    A,H
31B9 AA                  XOR   A,D
31BA 67                  LD    H,A
31BB 7D                  LD    A,L
31BC AB                  XOR   A,E
31BD 6F                  LD    L,A
31BE F1                  POP   AF
31BF             L1526:
31BF 11 18 11            LD    DE,4376
31C2 B7                  OR    A
31C3 ED 52               SBC   HL,DE
31C5             L1527:
31C5 C2 D0 31            JP    NZ,L1531
31C8             L1528:
31C8 3E 7E               LD    A,126
31CA             L1529:
31CA CD 9B 3C            CALL  writeLineA
31CD             L1530:
31CD C3 D6 31            JP    L1535
31D0             L1531:
31D0 21 E7 03            LD    HL,999
31D3             L1532:
31D3 CD 73 3C            CALL  writeLineHL
31D6             L1533:
31D6                     ;;testBitwiseOperators.j(220)     //var byte/var word
31D6             L1534:
31D6                     ;;testBitwiseOperators.j(221)     if (b1 & w2 == 0x0014) println (127); else println (999);
31D6             L1535:
31D6 3A 00 50            LD    A,(05000H)
31D9             L1536:
31D9 6F                  LD    L,A
31DA 26 00               LD    H,0
31DC             L1537:
31DC ED 5B 04 50         LD    DE,(05004H)
31E0 F5                  PUSH  AF
31E1 7C                  LD    A,H
31E2 A2                  AND   A,D
31E3 67                  LD    H,A
31E4 7D                  LD    A,L
31E5 A3                  AND   A,E
31E6 6F                  LD    L,A
31E7 F1                  POP   AF
31E8             L1538:
31E8 3E 14               LD    A,20
31EA             L1539:
31EA 5F                  LD    E,A
31EB 16 00               LD    D,0
31ED EB                  EX    DE,HL
31EE B7                  OR    A
31EF ED 52               SBC   HL,DE
31F1             L1540:
31F1 C2 FC 31            JP    NZ,L1544
31F4             L1541:
31F4 3E 7F               LD    A,127
31F6             L1542:
31F6 CD 9B 3C            CALL  writeLineA
31F9             L1543:
31F9 C3 02 32            JP    L1547
31FC             L1544:
31FC 21 E7 03            LD    HL,999
31FF             L1545:
31FF CD 73 3C            CALL  writeLineHL
3202             L1546:
3202                     ;;testBitwiseOperators.j(222)     if (b1 | w2 == 0x123C) println (128); else println (999);
3202             L1547:
3202 3A 00 50            LD    A,(05000H)
3205             L1548:
3205 6F                  LD    L,A
3206 26 00               LD    H,0
3208             L1549:
3208 ED 5B 04 50         LD    DE,(05004H)
320C 47                  LD    B,A
320D 7C                  LD    A,H
320E B2                  OR    A,D
320F 67                  LD    H,A
3210 7D                  LD    A,L
3211 B3                  OR    A,E
3212 6F                  LD    L,A
3213 78                  LD    A,B
3214             L1550:
3214 11 3C 12            LD    DE,4668
3217 B7                  OR    A
3218 ED 52               SBC   HL,DE
321A             L1551:
321A C2 25 32            JP    NZ,L1555
321D             L1552:
321D 3E 80               LD    A,128
321F             L1553:
321F CD 9B 3C            CALL  writeLineA
3222             L1554:
3222 C3 2B 32            JP    L1558
3225             L1555:
3225 21 E7 03            LD    HL,999
3228             L1556:
3228 CD 73 3C            CALL  writeLineHL
322B             L1557:
322B                     ;;testBitwiseOperators.j(223)     if (b1 ^ w2 == 0x1228) println (129); else println (999);
322B             L1558:
322B 3A 00 50            LD    A,(05000H)
322E             L1559:
322E 6F                  LD    L,A
322F 26 00               LD    H,0
3231             L1560:
3231 ED 5B 04 50         LD    DE,(05004H)
3235 F5                  PUSH  AF
3236 7C                  LD    A,H
3237 AA                  XOR   A,D
3238 67                  LD    H,A
3239 7D                  LD    A,L
323A AB                  XOR   A,E
323B 6F                  LD    L,A
323C F1                  POP   AF
323D             L1561:
323D 11 28 12            LD    DE,4648
3240 B7                  OR    A
3241 ED 52               SBC   HL,DE
3243             L1562:
3243 C2 4E 32            JP    NZ,L1566
3246             L1563:
3246 3E 81               LD    A,129
3248             L1564:
3248 CD 9B 3C            CALL  writeLineA
324B             L1565:
324B C3 54 32            JP    L1570
324E             L1566:
324E 21 E7 03            LD    HL,999
3251             L1567:
3251 CD 73 3C            CALL  writeLineHL
3254             L1568:
3254                     ;;testBitwiseOperators.j(224)     //var word/var byte
3254             L1569:
3254                     ;;testBitwiseOperators.j(225)     if (w2 & b1 == 0x0014) println (130); else println (999);
3254             L1570:
3254 2A 04 50            LD    HL,(05004H)
3257             L1571:
3257 5F                  LD    E,A
3258 3A 00 50            LD    A,(05000H)
325B A5                  AND   A,L
325C 6F                  LD    L,A
325D 7B                  LD    A,E
325E 26 00               LD    H,0
3260             L1572:
3260 3E 14               LD    A,20
3262             L1573:
3262 5F                  LD    E,A
3263 16 00               LD    D,0
3265 EB                  EX    DE,HL
3266 B7                  OR    A
3267 ED 52               SBC   HL,DE
3269             L1574:
3269 C2 74 32            JP    NZ,L1578
326C             L1575:
326C 3E 82               LD    A,130
326E             L1576:
326E CD 9B 3C            CALL  writeLineA
3271             L1577:
3271 C3 7A 32            JP    L1581
3274             L1578:
3274 21 E7 03            LD    HL,999
3277             L1579:
3277 CD 73 3C            CALL  writeLineHL
327A             L1580:
327A                     ;;testBitwiseOperators.j(226)     if (w2 | b1 == 0x123C) println (131); else println (999);
327A             L1581:
327A 2A 04 50            LD    HL,(05004H)
327D             L1582:
327D 47                  LD    B,A
327E 3A 00 50            LD    A,(05000H)
3281 B5                  OR    A,L
3282 6F                  LD    L,A
3283 78                  LD    A,B
3284             L1583:
3284 11 3C 12            LD    DE,4668
3287 B7                  OR    A
3288 ED 52               SBC   HL,DE
328A             L1584:
328A C2 95 32            JP    NZ,L1588
328D             L1585:
328D 3E 83               LD    A,131
328F             L1586:
328F CD 9B 3C            CALL  writeLineA
3292             L1587:
3292 C3 9B 32            JP    L1591
3295             L1588:
3295 21 E7 03            LD    HL,999
3298             L1589:
3298 CD 73 3C            CALL  writeLineHL
329B             L1590:
329B                     ;;testBitwiseOperators.j(227)     if (w2 ^ b1 == 0x1228) println (132); else println (999);
329B             L1591:
329B 2A 04 50            LD    HL,(05004H)
329E             L1592:
329E 47                  LD    B,A
329F 3A 00 50            LD    A,(05000H)
32A2 AD                  XOR   A,L
32A3 6F                  LD    L,A
32A4 78                  LD    A,B
32A5             L1593:
32A5 11 28 12            LD    DE,4648
32A8 B7                  OR    A
32A9 ED 52               SBC   HL,DE
32AB             L1594:
32AB C2 B6 32            JP    NZ,L1598
32AE             L1595:
32AE 3E 84               LD    A,132
32B0             L1596:
32B0 CD 9B 3C            CALL  writeLineA
32B3             L1597:
32B3 C3 BC 32            JP    L1605
32B6             L1598:
32B6 21 E7 03            LD    HL,999
32B9             L1599:
32B9 CD 73 3C            CALL  writeLineHL
32BC             L1600:
32BC                     ;;testBitwiseOperators.j(228)   
32BC             L1601:
32BC                     ;;testBitwiseOperators.j(229)     //var/final var
32BC             L1602:
32BC                     ;;testBitwiseOperators.j(230)     //*************
32BC             L1603:
32BC                     ;;testBitwiseOperators.j(231)     //var byte/final var byte
32BC             L1604:
32BC                     ;;testBitwiseOperators.j(232)     if (b2 & fb1 == 0x04) println (133); else println (999);
32BC             L1605:
32BC 3A 01 50            LD    A,(05001H)
32BF             L1606:
32BF E6 1C               AND   A,28
32C1             L1607:
32C1 D6 04               SUB   A,4
32C3             L1608:
32C3 C2 CE 32            JP    NZ,L1612
32C6             L1609:
32C6 3E 85               LD    A,133
32C8             L1610:
32C8 CD 9B 3C            CALL  writeLineA
32CB             L1611:
32CB C3 D4 32            JP    L1615
32CE             L1612:
32CE 21 E7 03            LD    HL,999
32D1             L1613:
32D1 CD 73 3C            CALL  writeLineHL
32D4             L1614:
32D4                     ;;testBitwiseOperators.j(233)     if (b2 | fb1 == 0x1F) println (134); else println (999);
32D4             L1615:
32D4 3A 01 50            LD    A,(05001H)
32D7             L1616:
32D7 F6 1C               OR    A,28
32D9             L1617:
32D9 D6 1F               SUB   A,31
32DB             L1618:
32DB C2 E6 32            JP    NZ,L1622
32DE             L1619:
32DE 3E 86               LD    A,134
32E0             L1620:
32E0 CD 9B 3C            CALL  writeLineA
32E3             L1621:
32E3 C3 EC 32            JP    L1625
32E6             L1622:
32E6 21 E7 03            LD    HL,999
32E9             L1623:
32E9 CD 73 3C            CALL  writeLineHL
32EC             L1624:
32EC                     ;;testBitwiseOperators.j(234)     if (b2 ^ fb1 == 0x1B) println (135); else println (999);
32EC             L1625:
32EC 3A 01 50            LD    A,(05001H)
32EF             L1626:
32EF EE 1C               XOR   A,28
32F1             L1627:
32F1 D6 1B               SUB   A,27
32F3             L1628:
32F3 C2 FE 32            JP    NZ,L1632
32F6             L1629:
32F6 3E 87               LD    A,135
32F8             L1630:
32F8 CD 9B 3C            CALL  writeLineA
32FB             L1631:
32FB C3 04 33            JP    L1636
32FE             L1632:
32FE 21 E7 03            LD    HL,999
3301             L1633:
3301 CD 73 3C            CALL  writeLineHL
3304             L1634:
3304                     ;;testBitwiseOperators.j(235)     //var word/final var word
3304             L1635:
3304                     ;;testBitwiseOperators.j(236)     if (w2 & fw1 == 0x0224) println (136); else println (999);
3304             L1636:
3304 2A 04 50            LD    HL,(05004H)
3307             L1637:
3307 11 2C 03            LD    DE,812
330A F5                  PUSH  AF
330B 7C                  LD    A,H
330C A2                  AND   A,D
330D 67                  LD    H,A
330E 7D                  LD    A,L
330F A3                  AND   A,E
3310 6F                  LD    L,A
3311 F1                  POP   AF
3312             L1638:
3312 11 24 02            LD    DE,548
3315 B7                  OR    A
3316 ED 52               SBC   HL,DE
3318             L1639:
3318 C2 23 33            JP    NZ,L1643
331B             L1640:
331B 3E 88               LD    A,136
331D             L1641:
331D CD 9B 3C            CALL  writeLineA
3320             L1642:
3320 C3 29 33            JP    L1646
3323             L1643:
3323 21 E7 03            LD    HL,999
3326             L1644:
3326 CD 73 3C            CALL  writeLineHL
3329             L1645:
3329                     ;;testBitwiseOperators.j(237)     if (w2 | fw1 == 0x133C) println (137); else println (999);
3329             L1646:
3329 2A 04 50            LD    HL,(05004H)
332C             L1647:
332C 11 2C 03            LD    DE,812
332F 47                  LD    B,A
3330 7C                  LD    A,H
3331 B2                  OR    A,D
3332 67                  LD    H,A
3333 7D                  LD    A,L
3334 B3                  OR    A,E
3335 6F                  LD    L,A
3336 78                  LD    A,B
3337             L1648:
3337 11 3C 13            LD    DE,4924
333A B7                  OR    A
333B ED 52               SBC   HL,DE
333D             L1649:
333D C2 48 33            JP    NZ,L1653
3340             L1650:
3340 3E 89               LD    A,137
3342             L1651:
3342 CD 9B 3C            CALL  writeLineA
3345             L1652:
3345 C3 4E 33            JP    L1656
3348             L1653:
3348 21 E7 03            LD    HL,999
334B             L1654:
334B CD 73 3C            CALL  writeLineHL
334E             L1655:
334E                     ;;testBitwiseOperators.j(238)     if (w2 ^ fw1 == 0x1118) println (138); else println (999);
334E             L1656:
334E 2A 04 50            LD    HL,(05004H)
3351             L1657:
3351 11 2C 03            LD    DE,812
3354 F5                  PUSH  AF
3355 7C                  LD    A,H
3356 AA                  XOR   A,D
3357 67                  LD    H,A
3358 7D                  LD    A,L
3359 AB                  XOR   A,E
335A 6F                  LD    L,A
335B F1                  POP   AF
335C             L1658:
335C 11 18 11            LD    DE,4376
335F B7                  OR    A
3360 ED 52               SBC   HL,DE
3362             L1659:
3362 C2 6D 33            JP    NZ,L1663
3365             L1660:
3365 3E 8A               LD    A,138
3367             L1661:
3367 CD 9B 3C            CALL  writeLineA
336A             L1662:
336A C3 73 33            JP    L1667
336D             L1663:
336D 21 E7 03            LD    HL,999
3370             L1664:
3370 CD 73 3C            CALL  writeLineHL
3373             L1665:
3373                     ;;testBitwiseOperators.j(239)     //var byte/final var word
3373             L1666:
3373                     ;;testBitwiseOperators.j(240)     if (b1 & fw2 == 0x0014) println (139); else println (999);
3373             L1667:
3373 3A 00 50            LD    A,(05000H)
3376             L1668:
3376 6F                  LD    L,A
3377 26 00               LD    H,0
3379             L1669:
3379 11 34 12            LD    DE,4660
337C F5                  PUSH  AF
337D 7C                  LD    A,H
337E A2                  AND   A,D
337F 67                  LD    H,A
3380 7D                  LD    A,L
3381 A3                  AND   A,E
3382 6F                  LD    L,A
3383 F1                  POP   AF
3384             L1670:
3384 3E 14               LD    A,20
3386             L1671:
3386 5F                  LD    E,A
3387 16 00               LD    D,0
3389 EB                  EX    DE,HL
338A B7                  OR    A
338B ED 52               SBC   HL,DE
338D             L1672:
338D C2 98 33            JP    NZ,L1676
3390             L1673:
3390 3E 8B               LD    A,139
3392             L1674:
3392 CD 9B 3C            CALL  writeLineA
3395             L1675:
3395 C3 9E 33            JP    L1679
3398             L1676:
3398 21 E7 03            LD    HL,999
339B             L1677:
339B CD 73 3C            CALL  writeLineHL
339E             L1678:
339E                     ;;testBitwiseOperators.j(241)     if (b1 | fw2 == 0x123C) println (140); else println (999);
339E             L1679:
339E 3A 00 50            LD    A,(05000H)
33A1             L1680:
33A1 6F                  LD    L,A
33A2 26 00               LD    H,0
33A4             L1681:
33A4 11 34 12            LD    DE,4660
33A7 47                  LD    B,A
33A8 7C                  LD    A,H
33A9 B2                  OR    A,D
33AA 67                  LD    H,A
33AB 7D                  LD    A,L
33AC B3                  OR    A,E
33AD 6F                  LD    L,A
33AE 78                  LD    A,B
33AF             L1682:
33AF 11 3C 12            LD    DE,4668
33B2 B7                  OR    A
33B3 ED 52               SBC   HL,DE
33B5             L1683:
33B5 C2 C0 33            JP    NZ,L1687
33B8             L1684:
33B8 3E 8C               LD    A,140
33BA             L1685:
33BA CD 9B 3C            CALL  writeLineA
33BD             L1686:
33BD C3 C6 33            JP    L1690
33C0             L1687:
33C0 21 E7 03            LD    HL,999
33C3             L1688:
33C3 CD 73 3C            CALL  writeLineHL
33C6             L1689:
33C6                     ;;testBitwiseOperators.j(242)     if (b1 ^ fw2 == 0x1228) println (141); else println (999);
33C6             L1690:
33C6 3A 00 50            LD    A,(05000H)
33C9             L1691:
33C9 6F                  LD    L,A
33CA 26 00               LD    H,0
33CC             L1692:
33CC 11 34 12            LD    DE,4660
33CF F5                  PUSH  AF
33D0 7C                  LD    A,H
33D1 AA                  XOR   A,D
33D2 67                  LD    H,A
33D3 7D                  LD    A,L
33D4 AB                  XOR   A,E
33D5 6F                  LD    L,A
33D6 F1                  POP   AF
33D7             L1693:
33D7 11 28 12            LD    DE,4648
33DA B7                  OR    A
33DB ED 52               SBC   HL,DE
33DD             L1694:
33DD C2 E8 33            JP    NZ,L1698
33E0             L1695:
33E0 3E 8D               LD    A,141
33E2             L1696:
33E2 CD 9B 3C            CALL  writeLineA
33E5             L1697:
33E5 C3 EE 33            JP    L1702
33E8             L1698:
33E8 21 E7 03            LD    HL,999
33EB             L1699:
33EB CD 73 3C            CALL  writeLineHL
33EE             L1700:
33EE                     ;;testBitwiseOperators.j(243)     //var word/final var byte
33EE             L1701:
33EE                     ;;testBitwiseOperators.j(244)     if (w2 & fb1 == 0x0014) println (142); else println (999);
33EE             L1702:
33EE 2A 04 50            LD    HL,(05004H)
33F1             L1703:
33F1 5F                  LD    E,A
33F2 3E 1C               LD    A,28
33F4 A5                  AND   A,L
33F5 6F                  LD    L,A
33F6 7B                  LD    A,E
33F7 26 00               LD    H,0
33F9             L1704:
33F9 3E 14               LD    A,20
33FB             L1705:
33FB 5F                  LD    E,A
33FC 16 00               LD    D,0
33FE EB                  EX    DE,HL
33FF B7                  OR    A
3400 ED 52               SBC   HL,DE
3402             L1706:
3402 C2 0D 34            JP    NZ,L1710
3405             L1707:
3405 3E 8E               LD    A,142
3407             L1708:
3407 CD 9B 3C            CALL  writeLineA
340A             L1709:
340A C3 13 34            JP    L1713
340D             L1710:
340D 21 E7 03            LD    HL,999
3410             L1711:
3410 CD 73 3C            CALL  writeLineHL
3413             L1712:
3413                     ;;testBitwiseOperators.j(245)     if (w2 | fb1 == 0x123C) println (143); else println (999);
3413             L1713:
3413 2A 04 50            LD    HL,(05004H)
3416             L1714:
3416 11 1C 00            LD    DE,28
3419 47                  LD    B,A
341A 7C                  LD    A,H
341B B2                  OR    A,D
341C 67                  LD    H,A
341D 7D                  LD    A,L
341E B3                  OR    A,E
341F 6F                  LD    L,A
3420 78                  LD    A,B
3421             L1715:
3421 11 3C 12            LD    DE,4668
3424 B7                  OR    A
3425 ED 52               SBC   HL,DE
3427             L1716:
3427 C2 32 34            JP    NZ,L1720
342A             L1717:
342A 3E 8F               LD    A,143
342C             L1718:
342C CD 9B 3C            CALL  writeLineA
342F             L1719:
342F C3 38 34            JP    L1723
3432             L1720:
3432 21 E7 03            LD    HL,999
3435             L1721:
3435 CD 73 3C            CALL  writeLineHL
3438             L1722:
3438                     ;;testBitwiseOperators.j(246)     if (w2 ^ fb1 == 0x1228) println (144); else println (999);
3438             L1723:
3438 2A 04 50            LD    HL,(05004H)
343B             L1724:
343B 11 1C 00            LD    DE,28
343E F5                  PUSH  AF
343F 7C                  LD    A,H
3440 AA                  XOR   A,D
3441 67                  LD    H,A
3442 7D                  LD    A,L
3443 AB                  XOR   A,E
3444 6F                  LD    L,A
3445 F1                  POP   AF
3446             L1725:
3446 11 28 12            LD    DE,4648
3449 B7                  OR    A
344A ED 52               SBC   HL,DE
344C             L1726:
344C C2 57 34            JP    NZ,L1730
344F             L1727:
344F 3E 90               LD    A,144
3451             L1728:
3451 CD 9B 3C            CALL  writeLineA
3454             L1729:
3454 C3 5D 34            JP    L1737
3457             L1730:
3457 21 E7 03            LD    HL,999
345A             L1731:
345A CD 73 3C            CALL  writeLineHL
345D             L1732:
345D                     ;;testBitwiseOperators.j(247)   
345D             L1733:
345D                     ;;testBitwiseOperators.j(248)     //final var/constant
345D             L1734:
345D                     ;;testBitwiseOperators.j(249)     //******************
345D             L1735:
345D                     ;;testBitwiseOperators.j(250)     //final var byte/constant byte
345D             L1736:
345D                     ;;testBitwiseOperators.j(251)     if (b2 & 0x1C == 0x04) println (145); else println (999);
345D             L1737:
345D 3A 01 50            LD    A,(05001H)
3460             L1738:
3460 E6 1C               AND   A,28
3462             L1739:
3462 D6 04               SUB   A,4
3464             L1740:
3464 C2 6F 34            JP    NZ,L1744
3467             L1741:
3467 3E 91               LD    A,145
3469             L1742:
3469 CD 9B 3C            CALL  writeLineA
346C             L1743:
346C C3 75 34            JP    L1747
346F             L1744:
346F 21 E7 03            LD    HL,999
3472             L1745:
3472 CD 73 3C            CALL  writeLineHL
3475             L1746:
3475                     ;;testBitwiseOperators.j(252)     if (b2 | 0x1C == 0x1F) println (146); else println (999);
3475             L1747:
3475 3A 01 50            LD    A,(05001H)
3478             L1748:
3478 F6 1C               OR    A,28
347A             L1749:
347A D6 1F               SUB   A,31
347C             L1750:
347C C2 87 34            JP    NZ,L1754
347F             L1751:
347F 3E 92               LD    A,146
3481             L1752:
3481 CD 9B 3C            CALL  writeLineA
3484             L1753:
3484 C3 8D 34            JP    L1757
3487             L1754:
3487 21 E7 03            LD    HL,999
348A             L1755:
348A CD 73 3C            CALL  writeLineHL
348D             L1756:
348D                     ;;testBitwiseOperators.j(253)     if (b2 ^ 0x1C == 0x1B) println (147); else println (999);
348D             L1757:
348D 3A 01 50            LD    A,(05001H)
3490             L1758:
3490 EE 1C               XOR   A,28
3492             L1759:
3492 D6 1B               SUB   A,27
3494             L1760:
3494 C2 9F 34            JP    NZ,L1764
3497             L1761:
3497 3E 93               LD    A,147
3499             L1762:
3499 CD 9B 3C            CALL  writeLineA
349C             L1763:
349C C3 A5 34            JP    L1768
349F             L1764:
349F 21 E7 03            LD    HL,999
34A2             L1765:
34A2 CD 73 3C            CALL  writeLineHL
34A5             L1766:
34A5                     ;;testBitwiseOperators.j(254)     //final var word/constant word
34A5             L1767:
34A5                     ;;testBitwiseOperators.j(255)     if (w2 & 0x032C == 0x0224) println (148); else println (999);
34A5             L1768:
34A5 2A 04 50            LD    HL,(05004H)
34A8             L1769:
34A8 11 2C 03            LD    DE,812
34AB F5                  PUSH  AF
34AC 7C                  LD    A,H
34AD A2                  AND   A,D
34AE 67                  LD    H,A
34AF 7D                  LD    A,L
34B0 A3                  AND   A,E
34B1 6F                  LD    L,A
34B2 F1                  POP   AF
34B3             L1770:
34B3 11 24 02            LD    DE,548
34B6 B7                  OR    A
34B7 ED 52               SBC   HL,DE
34B9             L1771:
34B9 C2 C4 34            JP    NZ,L1775
34BC             L1772:
34BC 3E 94               LD    A,148
34BE             L1773:
34BE CD 9B 3C            CALL  writeLineA
34C1             L1774:
34C1 C3 CA 34            JP    L1778
34C4             L1775:
34C4 21 E7 03            LD    HL,999
34C7             L1776:
34C7 CD 73 3C            CALL  writeLineHL
34CA             L1777:
34CA                     ;;testBitwiseOperators.j(256)     if (w2 | 0x032C == 0x133C) println (149); else println (999);
34CA             L1778:
34CA 2A 04 50            LD    HL,(05004H)
34CD             L1779:
34CD 11 2C 03            LD    DE,812
34D0 47                  LD    B,A
34D1 7C                  LD    A,H
34D2 B2                  OR    A,D
34D3 67                  LD    H,A
34D4 7D                  LD    A,L
34D5 B3                  OR    A,E
34D6 6F                  LD    L,A
34D7 78                  LD    A,B
34D8             L1780:
34D8 11 3C 13            LD    DE,4924
34DB B7                  OR    A
34DC ED 52               SBC   HL,DE
34DE             L1781:
34DE C2 E9 34            JP    NZ,L1785
34E1             L1782:
34E1 3E 95               LD    A,149
34E3             L1783:
34E3 CD 9B 3C            CALL  writeLineA
34E6             L1784:
34E6 C3 EF 34            JP    L1788
34E9             L1785:
34E9 21 E7 03            LD    HL,999
34EC             L1786:
34EC CD 73 3C            CALL  writeLineHL
34EF             L1787:
34EF                     ;;testBitwiseOperators.j(257)     if (w2 ^ 0x032C == 0x1118) println (150); else println (999);
34EF             L1788:
34EF 2A 04 50            LD    HL,(05004H)
34F2             L1789:
34F2 11 2C 03            LD    DE,812
34F5 F5                  PUSH  AF
34F6 7C                  LD    A,H
34F7 AA                  XOR   A,D
34F8 67                  LD    H,A
34F9 7D                  LD    A,L
34FA AB                  XOR   A,E
34FB 6F                  LD    L,A
34FC F1                  POP   AF
34FD             L1790:
34FD 11 18 11            LD    DE,4376
3500 B7                  OR    A
3501 ED 52               SBC   HL,DE
3503             L1791:
3503 C2 0E 35            JP    NZ,L1795
3506             L1792:
3506 3E 96               LD    A,150
3508             L1793:
3508 CD 9B 3C            CALL  writeLineA
350B             L1794:
350B C3 14 35            JP    L1799
350E             L1795:
350E 21 E7 03            LD    HL,999
3511             L1796:
3511 CD 73 3C            CALL  writeLineHL
3514             L1797:
3514                     ;;testBitwiseOperators.j(258)     //final var byte/constant word
3514             L1798:
3514                     ;;testBitwiseOperators.j(259)     if (b1 & 0x1234 == 0x0014) println (151); else println (999);
3514             L1799:
3514 3A 00 50            LD    A,(05000H)
3517             L1800:
3517 6F                  LD    L,A
3518 26 00               LD    H,0
351A             L1801:
351A 11 34 12            LD    DE,4660
351D F5                  PUSH  AF
351E 7C                  LD    A,H
351F A2                  AND   A,D
3520 67                  LD    H,A
3521 7D                  LD    A,L
3522 A3                  AND   A,E
3523 6F                  LD    L,A
3524 F1                  POP   AF
3525             L1802:
3525 3E 14               LD    A,20
3527             L1803:
3527 5F                  LD    E,A
3528 16 00               LD    D,0
352A EB                  EX    DE,HL
352B B7                  OR    A
352C ED 52               SBC   HL,DE
352E             L1804:
352E C2 39 35            JP    NZ,L1808
3531             L1805:
3531 3E 97               LD    A,151
3533             L1806:
3533 CD 9B 3C            CALL  writeLineA
3536             L1807:
3536 C3 3F 35            JP    L1811
3539             L1808:
3539 21 E7 03            LD    HL,999
353C             L1809:
353C CD 73 3C            CALL  writeLineHL
353F             L1810:
353F                     ;;testBitwiseOperators.j(260)     if (b1 | 0x1234 == 0x123C) println (152); else println (999);
353F             L1811:
353F 3A 00 50            LD    A,(05000H)
3542             L1812:
3542 6F                  LD    L,A
3543 26 00               LD    H,0
3545             L1813:
3545 11 34 12            LD    DE,4660
3548 47                  LD    B,A
3549 7C                  LD    A,H
354A B2                  OR    A,D
354B 67                  LD    H,A
354C 7D                  LD    A,L
354D B3                  OR    A,E
354E 6F                  LD    L,A
354F 78                  LD    A,B
3550             L1814:
3550 11 3C 12            LD    DE,4668
3553 B7                  OR    A
3554 ED 52               SBC   HL,DE
3556             L1815:
3556 C2 61 35            JP    NZ,L1819
3559             L1816:
3559 3E 98               LD    A,152
355B             L1817:
355B CD 9B 3C            CALL  writeLineA
355E             L1818:
355E C3 67 35            JP    L1822
3561             L1819:
3561 21 E7 03            LD    HL,999
3564             L1820:
3564 CD 73 3C            CALL  writeLineHL
3567             L1821:
3567                     ;;testBitwiseOperators.j(261)     if (b1 ^ 0x1234 == 0x1228) println (153); else println (999);
3567             L1822:
3567 3A 00 50            LD    A,(05000H)
356A             L1823:
356A 6F                  LD    L,A
356B 26 00               LD    H,0
356D             L1824:
356D 11 34 12            LD    DE,4660
3570 F5                  PUSH  AF
3571 7C                  LD    A,H
3572 AA                  XOR   A,D
3573 67                  LD    H,A
3574 7D                  LD    A,L
3575 AB                  XOR   A,E
3576 6F                  LD    L,A
3577 F1                  POP   AF
3578             L1825:
3578 11 28 12            LD    DE,4648
357B B7                  OR    A
357C ED 52               SBC   HL,DE
357E             L1826:
357E C2 89 35            JP    NZ,L1830
3581             L1827:
3581 3E 99               LD    A,153
3583             L1828:
3583 CD 9B 3C            CALL  writeLineA
3586             L1829:
3586 C3 8F 35            JP    L1834
3589             L1830:
3589 21 E7 03            LD    HL,999
358C             L1831:
358C CD 73 3C            CALL  writeLineHL
358F             L1832:
358F                     ;;testBitwiseOperators.j(262)     //final var word/constant byte
358F             L1833:
358F                     ;;testBitwiseOperators.j(263)     if (w2 & 0x1C == 0x0014) println (154); else println (999);
358F             L1834:
358F 2A 04 50            LD    HL,(05004H)
3592             L1835:
3592 5F                  LD    E,A
3593 3E 1C               LD    A,28
3595 A5                  AND   A,L
3596 6F                  LD    L,A
3597 7B                  LD    A,E
3598 26 00               LD    H,0
359A             L1836:
359A 3E 14               LD    A,20
359C             L1837:
359C 5F                  LD    E,A
359D 16 00               LD    D,0
359F EB                  EX    DE,HL
35A0 B7                  OR    A
35A1 ED 52               SBC   HL,DE
35A3             L1838:
35A3 C2 AE 35            JP    NZ,L1842
35A6             L1839:
35A6 3E 9A               LD    A,154
35A8             L1840:
35A8 CD 9B 3C            CALL  writeLineA
35AB             L1841:
35AB C3 B4 35            JP    L1845
35AE             L1842:
35AE 21 E7 03            LD    HL,999
35B1             L1843:
35B1 CD 73 3C            CALL  writeLineHL
35B4             L1844:
35B4                     ;;testBitwiseOperators.j(264)     if (w2 | 0x1C == 0x123C) println (155); else println (999);
35B4             L1845:
35B4 2A 04 50            LD    HL,(05004H)
35B7             L1846:
35B7 11 1C 00            LD    DE,28
35BA 47                  LD    B,A
35BB 7C                  LD    A,H
35BC B2                  OR    A,D
35BD 67                  LD    H,A
35BE 7D                  LD    A,L
35BF B3                  OR    A,E
35C0 6F                  LD    L,A
35C1 78                  LD    A,B
35C2             L1847:
35C2 11 3C 12            LD    DE,4668
35C5 B7                  OR    A
35C6 ED 52               SBC   HL,DE
35C8             L1848:
35C8 C2 D3 35            JP    NZ,L1852
35CB             L1849:
35CB 3E 9B               LD    A,155
35CD             L1850:
35CD CD 9B 3C            CALL  writeLineA
35D0             L1851:
35D0 C3 D9 35            JP    L1855
35D3             L1852:
35D3 21 E7 03            LD    HL,999
35D6             L1853:
35D6 CD 73 3C            CALL  writeLineHL
35D9             L1854:
35D9                     ;;testBitwiseOperators.j(265)     if (w2 ^ 0x1C == 0x1228) println (156); else println (999);
35D9             L1855:
35D9 2A 04 50            LD    HL,(05004H)
35DC             L1856:
35DC 11 1C 00            LD    DE,28
35DF F5                  PUSH  AF
35E0 7C                  LD    A,H
35E1 AA                  XOR   A,D
35E2 67                  LD    H,A
35E3 7D                  LD    A,L
35E4 AB                  XOR   A,E
35E5 6F                  LD    L,A
35E6 F1                  POP   AF
35E7             L1857:
35E7 11 28 12            LD    DE,4648
35EA B7                  OR    A
35EB ED 52               SBC   HL,DE
35ED             L1858:
35ED C2 F8 35            JP    NZ,L1862
35F0             L1859:
35F0 3E 9C               LD    A,156
35F2             L1860:
35F2 CD 9B 3C            CALL  writeLineA
35F5             L1861:
35F5 C3 FE 35            JP    L1869
35F8             L1862:
35F8 21 E7 03            LD    HL,999
35FB             L1863:
35FB CD 73 3C            CALL  writeLineHL
35FE             L1864:
35FE                     ;;testBitwiseOperators.j(266)   
35FE             L1865:
35FE                     ;;testBitwiseOperators.j(267)     //final var/acc
35FE             L1866:
35FE                     ;;testBitwiseOperators.j(268)     //*************
35FE             L1867:
35FE                     ;;testBitwiseOperators.j(269)     //final var byte/acc byte
35FE             L1868:
35FE                     ;;testBitwiseOperators.j(270)     if (b2 & (0x10 + 0x0C) == 0x04) println (157); else println (999);
35FE             L1869:
35FE 3A 01 50            LD    A,(05001H)
3601             L1870:
3601 F5                  PUSH  AF
3602 3E 10               LD    A,16
3604             L1871:
3604 C6 0C               ADD   A,12
3606             L1872:
3606 C1                  POP   BC
3607 A0                  AND   A,B
3608             L1873:
3608 D6 04               SUB   A,4
360A             L1874:
360A C2 15 36            JP    NZ,L1878
360D             L1875:
360D 3E 9D               LD    A,157
360F             L1876:
360F CD 9B 3C            CALL  writeLineA
3612             L1877:
3612 C3 1B 36            JP    L1881
3615             L1878:
3615 21 E7 03            LD    HL,999
3618             L1879:
3618 CD 73 3C            CALL  writeLineHL
361B             L1880:
361B                     ;;testBitwiseOperators.j(271)     if (b2 | (0x10 + 0x0C) == 0x1F) println (158); else println (999);
361B             L1881:
361B 3A 01 50            LD    A,(05001H)
361E             L1882:
361E F5                  PUSH  AF
361F 3E 10               LD    A,16
3621             L1883:
3621 C6 0C               ADD   A,12
3623             L1884:
3623 C1                  POP   BC
3624 B0                  OR    A,B
3625             L1885:
3625 D6 1F               SUB   A,31
3627             L1886:
3627 C2 32 36            JP    NZ,L1890
362A             L1887:
362A 3E 9E               LD    A,158
362C             L1888:
362C CD 9B 3C            CALL  writeLineA
362F             L1889:
362F C3 38 36            JP    L1893
3632             L1890:
3632 21 E7 03            LD    HL,999
3635             L1891:
3635 CD 73 3C            CALL  writeLineHL
3638             L1892:
3638                     ;;testBitwiseOperators.j(272)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (159); else println (999);
3638             L1893:
3638 3A 01 50            LD    A,(05001H)
363B             L1894:
363B F5                  PUSH  AF
363C 3E 10               LD    A,16
363E             L1895:
363E C6 0C               ADD   A,12
3640             L1896:
3640 C1                  POP   BC
3641 A8                  XOR   A,B
3642             L1897:
3642 D6 1B               SUB   A,27
3644             L1898:
3644 C2 4F 36            JP    NZ,L1902
3647             L1899:
3647 3E 9F               LD    A,159
3649             L1900:
3649 CD 9B 3C            CALL  writeLineA
364C             L1901:
364C C3 55 36            JP    L1906
364F             L1902:
364F 21 E7 03            LD    HL,999
3652             L1903:
3652 CD 73 3C            CALL  writeLineHL
3655             L1904:
3655                     ;;testBitwiseOperators.j(273)     //final var word/acc word
3655             L1905:
3655                     ;;testBitwiseOperators.j(274)     if (w2 & 0x0100 + 0x022C == 0x0224) println (160); else println (999);
3655             L1906:
3655 2A 04 50            LD    HL,(05004H)
3658             L1907:
3658 E5                  PUSH  HL
3659 21 00 01            LD    HL,256
365C             L1908:
365C 11 2C 02            LD    DE,556
365F 19                  ADD   HL,DE
3660             L1909:
3660 D1                  POP   DE
3661 F5                  PUSH  AF
3662 7C                  LD    A,H
3663 A2                  AND   A,D
3664 67                  LD    H,A
3665 7D                  LD    A,L
3666 A3                  AND   A,E
3667 6F                  LD    L,A
3668 F1                  POP   AF
3669             L1910:
3669 11 24 02            LD    DE,548
366C B7                  OR    A
366D ED 52               SBC   HL,DE
366F             L1911:
366F C2 7A 36            JP    NZ,L1915
3672             L1912:
3672 3E A0               LD    A,160
3674             L1913:
3674 CD 9B 3C            CALL  writeLineA
3677             L1914:
3677 C3 80 36            JP    L1918
367A             L1915:
367A 21 E7 03            LD    HL,999
367D             L1916:
367D CD 73 3C            CALL  writeLineHL
3680             L1917:
3680                     ;;testBitwiseOperators.j(275)     if (w2 | 0x0100 + 0x022C == 0x133C) println (161); else println (999);
3680             L1918:
3680 2A 04 50            LD    HL,(05004H)
3683             L1919:
3683 E5                  PUSH  HL
3684 21 00 01            LD    HL,256
3687             L1920:
3687 11 2C 02            LD    DE,556
368A 19                  ADD   HL,DE
368B             L1921:
368B D1                  POP   DE
368C 47                  LD    B,A
368D 7C                  LD    A,H
368E B2                  OR    A,D
368F 67                  LD    H,A
3690 7D                  LD    A,L
3691 B3                  OR    A,E
3692 6F                  LD    L,A
3693 78                  LD    A,B
3694             L1922:
3694 11 3C 13            LD    DE,4924
3697 B7                  OR    A
3698 ED 52               SBC   HL,DE
369A             L1923:
369A C2 A5 36            JP    NZ,L1927
369D             L1924:
369D 3E A1               LD    A,161
369F             L1925:
369F CD 9B 3C            CALL  writeLineA
36A2             L1926:
36A2 C3 AB 36            JP    L1930
36A5             L1927:
36A5 21 E7 03            LD    HL,999
36A8             L1928:
36A8 CD 73 3C            CALL  writeLineHL
36AB             L1929:
36AB                     ;;testBitwiseOperators.j(276)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (162); else println (999);
36AB             L1930:
36AB 2A 04 50            LD    HL,(05004H)
36AE             L1931:
36AE E5                  PUSH  HL
36AF 21 00 01            LD    HL,256
36B2             L1932:
36B2 11 2C 02            LD    DE,556
36B5 19                  ADD   HL,DE
36B6             L1933:
36B6 D1                  POP   DE
36B7 F5                  PUSH  AF
36B8 7C                  LD    A,H
36B9 AA                  XOR   A,D
36BA 67                  LD    H,A
36BB 7D                  LD    A,L
36BC AB                  XOR   A,E
36BD 6F                  LD    L,A
36BE F1                  POP   AF
36BF             L1934:
36BF 11 18 11            LD    DE,4376
36C2 B7                  OR    A
36C3 ED 52               SBC   HL,DE
36C5             L1935:
36C5 C2 D0 36            JP    NZ,L1939
36C8             L1936:
36C8 3E A2               LD    A,162
36CA             L1937:
36CA CD 9B 3C            CALL  writeLineA
36CD             L1938:
36CD C3 D6 36            JP    L1943
36D0             L1939:
36D0 21 E7 03            LD    HL,999
36D3             L1940:
36D3 CD 73 3C            CALL  writeLineHL
36D6             L1941:
36D6                     ;;testBitwiseOperators.j(277)     //final var byte/acc word
36D6             L1942:
36D6                     ;;testBitwiseOperators.j(278)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (163); else println (999);
36D6             L1943:
36D6 3A 00 50            LD    A,(05000H)
36D9             L1944:
36D9 21 00 10            LD    HL,4096
36DC             L1945:
36DC 11 34 02            LD    DE,564
36DF 19                  ADD   HL,DE
36E0             L1946:
36E0 5F                  LD    E,A
36E1 A5                  AND   A,L
36E2 6F                  LD    L,A
36E3 7B                  LD    A,E
36E4 26 00               LD    H,0
36E6             L1947:
36E6 3E 14               LD    A,20
36E8             L1948:
36E8 5F                  LD    E,A
36E9 16 00               LD    D,0
36EB EB                  EX    DE,HL
36EC B7                  OR    A
36ED ED 52               SBC   HL,DE
36EF             L1949:
36EF C2 FA 36            JP    NZ,L1953
36F2             L1950:
36F2 3E A3               LD    A,163
36F4             L1951:
36F4 CD 9B 3C            CALL  writeLineA
36F7             L1952:
36F7 C3 00 37            JP    L1956
36FA             L1953:
36FA 21 E7 03            LD    HL,999
36FD             L1954:
36FD CD 73 3C            CALL  writeLineHL
3700             L1955:
3700                     ;;testBitwiseOperators.j(279)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (164); else println (999);
3700             L1956:
3700 3A 00 50            LD    A,(05000H)
3703             L1957:
3703 21 00 10            LD    HL,4096
3706             L1958:
3706 11 34 02            LD    DE,564
3709 19                  ADD   HL,DE
370A             L1959:
370A B5                  OR    A,L
370B 6F                  LD    L,A
370C             L1960:
370C 11 3C 12            LD    DE,4668
370F B7                  OR    A
3710 ED 52               SBC   HL,DE
3712             L1961:
3712 C2 1D 37            JP    NZ,L1965
3715             L1962:
3715 3E A4               LD    A,164
3717             L1963:
3717 CD 9B 3C            CALL  writeLineA
371A             L1964:
371A C3 23 37            JP    L1968
371D             L1965:
371D 21 E7 03            LD    HL,999
3720             L1966:
3720 CD 73 3C            CALL  writeLineHL
3723             L1967:
3723                     ;;testBitwiseOperators.j(280)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (165); else println (999);
3723             L1968:
3723 3A 00 50            LD    A,(05000H)
3726             L1969:
3726 21 00 10            LD    HL,4096
3729             L1970:
3729 11 34 02            LD    DE,564
372C 19                  ADD   HL,DE
372D             L1971:
372D AD                  XOR   A,L
372E 6F                  LD    L,A
372F             L1972:
372F 11 28 12            LD    DE,4648
3732 B7                  OR    A
3733 ED 52               SBC   HL,DE
3735             L1973:
3735 C2 40 37            JP    NZ,L1977
3738             L1974:
3738 3E A5               LD    A,165
373A             L1975:
373A CD 9B 3C            CALL  writeLineA
373D             L1976:
373D C3 46 37            JP    L1981
3740             L1977:
3740 21 E7 03            LD    HL,999
3743             L1978:
3743 CD 73 3C            CALL  writeLineHL
3746             L1979:
3746                     ;;testBitwiseOperators.j(281)     //final var word/acc byte
3746             L1980:
3746                     ;;testBitwiseOperators.j(282)     if (w2 & 0x10 + 0x0C == 0x0014) println (166); else println (999);
3746             L1981:
3746 2A 04 50            LD    HL,(05004H)
3749             L1982:
3749 3E 10               LD    A,16
374B             L1983:
374B C6 0C               ADD   A,12
374D             L1984:
374D 5F                  LD    E,A
374E A5                  AND   A,L
374F 6F                  LD    L,A
3750 7B                  LD    A,E
3751 26 00               LD    H,0
3753             L1985:
3753 3E 14               LD    A,20
3755             L1986:
3755 5F                  LD    E,A
3756 16 00               LD    D,0
3758 EB                  EX    DE,HL
3759 B7                  OR    A
375A ED 52               SBC   HL,DE
375C             L1987:
375C C2 67 37            JP    NZ,L1991
375F             L1988:
375F 3E A6               LD    A,166
3761             L1989:
3761 CD 9B 3C            CALL  writeLineA
3764             L1990:
3764 C3 6D 37            JP    L1994
3767             L1991:
3767 21 E7 03            LD    HL,999
376A             L1992:
376A CD 73 3C            CALL  writeLineHL
376D             L1993:
376D                     ;;testBitwiseOperators.j(283)     if (w2 | 0x10 + 0x0C == 0x123C) println (167); else println (999);
376D             L1994:
376D 2A 04 50            LD    HL,(05004H)
3770             L1995:
3770 3E 10               LD    A,16
3772             L1996:
3772 C6 0C               ADD   A,12
3774             L1997:
3774 B5                  OR    A,L
3775 6F                  LD    L,A
3776             L1998:
3776 11 3C 12            LD    DE,4668
3779 B7                  OR    A
377A ED 52               SBC   HL,DE
377C             L1999:
377C C2 87 37            JP    NZ,L2003
377F             L2000:
377F 3E A7               LD    A,167
3781             L2001:
3781 CD 9B 3C            CALL  writeLineA
3784             L2002:
3784 C3 8D 37            JP    L2006
3787             L2003:
3787 21 E7 03            LD    HL,999
378A             L2004:
378A CD 73 3C            CALL  writeLineHL
378D             L2005:
378D                     ;;testBitwiseOperators.j(284)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (168); else println (999);
378D             L2006:
378D 2A 04 50            LD    HL,(05004H)
3790             L2007:
3790 3E 10               LD    A,16
3792             L2008:
3792 C6 0C               ADD   A,12
3794             L2009:
3794 AD                  XOR   A,L
3795 6F                  LD    L,A
3796             L2010:
3796 11 28 12            LD    DE,4648
3799 B7                  OR    A
379A ED 52               SBC   HL,DE
379C             L2011:
379C C2 A7 37            JP    NZ,L2015
379F             L2012:
379F 3E A8               LD    A,168
37A1             L2013:
37A1 CD 9B 3C            CALL  writeLineA
37A4             L2014:
37A4 C3 AD 37            JP    L2022
37A7             L2015:
37A7 21 E7 03            LD    HL,999
37AA             L2016:
37AA CD 73 3C            CALL  writeLineHL
37AD             L2017:
37AD                     ;;testBitwiseOperators.j(285)   
37AD             L2018:
37AD                     ;;testBitwiseOperators.j(286)     //final var/var
37AD             L2019:
37AD                     ;;testBitwiseOperators.j(287)     //*************
37AD             L2020:
37AD                     ;;testBitwiseOperators.j(288)     //final var byte/var byte
37AD             L2021:
37AD                     ;;testBitwiseOperators.j(289)     if (b2 & b1 == 0x04) println (169); else println (999);
37AD             L2022:
37AD 3A 01 50            LD    A,(05001H)
37B0             L2023:
37B0 47                  LD    B,A
37B1 3A 00 50            LD    A,(05000H)
37B4 A0                  AND   A,B
37B5             L2024:
37B5 D6 04               SUB   A,4
37B7             L2025:
37B7 C2 C2 37            JP    NZ,L2029
37BA             L2026:
37BA 3E A9               LD    A,169
37BC             L2027:
37BC CD 9B 3C            CALL  writeLineA
37BF             L2028:
37BF C3 C8 37            JP    L2032
37C2             L2029:
37C2 21 E7 03            LD    HL,999
37C5             L2030:
37C5 CD 73 3C            CALL  writeLineHL
37C8             L2031:
37C8                     ;;testBitwiseOperators.j(290)     if (b2 | b1 == 0x1F) println (170); else println (999);
37C8             L2032:
37C8 3A 01 50            LD    A,(05001H)
37CB             L2033:
37CB 47                  LD    B,A
37CC 3A 00 50            LD    A,(05000H)
37CF B0                  OR    A,B
37D0             L2034:
37D0 D6 1F               SUB   A,31
37D2             L2035:
37D2 C2 DD 37            JP    NZ,L2039
37D5             L2036:
37D5 3E AA               LD    A,170
37D7             L2037:
37D7 CD 9B 3C            CALL  writeLineA
37DA             L2038:
37DA C3 E3 37            JP    L2042
37DD             L2039:
37DD 21 E7 03            LD    HL,999
37E0             L2040:
37E0 CD 73 3C            CALL  writeLineHL
37E3             L2041:
37E3                     ;;testBitwiseOperators.j(291)     if (b2 ^ b1 == 0x1B) println (171); else println (999);
37E3             L2042:
37E3 3A 01 50            LD    A,(05001H)
37E6             L2043:
37E6 47                  LD    B,A
37E7 3A 00 50            LD    A,(05000H)
37EA A8                  XOR   A,B
37EB             L2044:
37EB D6 1B               SUB   A,27
37ED             L2045:
37ED C2 F8 37            JP    NZ,L2049
37F0             L2046:
37F0 3E AB               LD    A,171
37F2             L2047:
37F2 CD 9B 3C            CALL  writeLineA
37F5             L2048:
37F5 C3 FE 37            JP    L2053
37F8             L2049:
37F8 21 E7 03            LD    HL,999
37FB             L2050:
37FB CD 73 3C            CALL  writeLineHL
37FE             L2051:
37FE                     ;;testBitwiseOperators.j(292)     //final var word/var word
37FE             L2052:
37FE                     ;;testBitwiseOperators.j(293)     if (w2 & w1 == 0x0224) println (172); else println (999);
37FE             L2053:
37FE 2A 04 50            LD    HL,(05004H)
3801             L2054:
3801 ED 5B 02 50         LD    DE,(05002H)
3805 F5                  PUSH  AF
3806 7C                  LD    A,H
3807 A2                  AND   A,D
3808 67                  LD    H,A
3809 7D                  LD    A,L
380A A3                  AND   A,E
380B 6F                  LD    L,A
380C F1                  POP   AF
380D             L2055:
380D 11 24 02            LD    DE,548
3810 B7                  OR    A
3811 ED 52               SBC   HL,DE
3813             L2056:
3813 C2 1E 38            JP    NZ,L2060
3816             L2057:
3816 3E AC               LD    A,172
3818             L2058:
3818 CD 9B 3C            CALL  writeLineA
381B             L2059:
381B C3 24 38            JP    L2063
381E             L2060:
381E 21 E7 03            LD    HL,999
3821             L2061:
3821 CD 73 3C            CALL  writeLineHL
3824             L2062:
3824                     ;;testBitwiseOperators.j(294)     if (w2 | w1 == 0x133C) println (173); else println (999);
3824             L2063:
3824 2A 04 50            LD    HL,(05004H)
3827             L2064:
3827 ED 5B 02 50         LD    DE,(05002H)
382B 47                  LD    B,A
382C 7C                  LD    A,H
382D B2                  OR    A,D
382E 67                  LD    H,A
382F 7D                  LD    A,L
3830 B3                  OR    A,E
3831 6F                  LD    L,A
3832 78                  LD    A,B
3833             L2065:
3833 11 3C 13            LD    DE,4924
3836 B7                  OR    A
3837 ED 52               SBC   HL,DE
3839             L2066:
3839 C2 44 38            JP    NZ,L2070
383C             L2067:
383C 3E AD               LD    A,173
383E             L2068:
383E CD 9B 3C            CALL  writeLineA
3841             L2069:
3841 C3 4A 38            JP    L2073
3844             L2070:
3844 21 E7 03            LD    HL,999
3847             L2071:
3847 CD 73 3C            CALL  writeLineHL
384A             L2072:
384A                     ;;testBitwiseOperators.j(295)     if (w2 ^ w1 == 0x1118) println (174); else println (999);
384A             L2073:
384A 2A 04 50            LD    HL,(05004H)
384D             L2074:
384D ED 5B 02 50         LD    DE,(05002H)
3851 F5                  PUSH  AF
3852 7C                  LD    A,H
3853 AA                  XOR   A,D
3854 67                  LD    H,A
3855 7D                  LD    A,L
3856 AB                  XOR   A,E
3857 6F                  LD    L,A
3858 F1                  POP   AF
3859             L2075:
3859 11 18 11            LD    DE,4376
385C B7                  OR    A
385D ED 52               SBC   HL,DE
385F             L2076:
385F C2 6A 38            JP    NZ,L2080
3862             L2077:
3862 3E AE               LD    A,174
3864             L2078:
3864 CD 9B 3C            CALL  writeLineA
3867             L2079:
3867 C3 70 38            JP    L2084
386A             L2080:
386A 21 E7 03            LD    HL,999
386D             L2081:
386D CD 73 3C            CALL  writeLineHL
3870             L2082:
3870                     ;;testBitwiseOperators.j(296)     //final var byte/var word
3870             L2083:
3870                     ;;testBitwiseOperators.j(297)     if (b1 & w2 == 0x0014) println (175); else println (999);
3870             L2084:
3870 3A 00 50            LD    A,(05000H)
3873             L2085:
3873 6F                  LD    L,A
3874 26 00               LD    H,0
3876             L2086:
3876 ED 5B 04 50         LD    DE,(05004H)
387A F5                  PUSH  AF
387B 7C                  LD    A,H
387C A2                  AND   A,D
387D 67                  LD    H,A
387E 7D                  LD    A,L
387F A3                  AND   A,E
3880 6F                  LD    L,A
3881 F1                  POP   AF
3882             L2087:
3882 3E 14               LD    A,20
3884             L2088:
3884 5F                  LD    E,A
3885 16 00               LD    D,0
3887 EB                  EX    DE,HL
3888 B7                  OR    A
3889 ED 52               SBC   HL,DE
388B             L2089:
388B C2 96 38            JP    NZ,L2093
388E             L2090:
388E 3E AF               LD    A,175
3890             L2091:
3890 CD 9B 3C            CALL  writeLineA
3893             L2092:
3893 C3 9C 38            JP    L2096
3896             L2093:
3896 21 E7 03            LD    HL,999
3899             L2094:
3899 CD 73 3C            CALL  writeLineHL
389C             L2095:
389C                     ;;testBitwiseOperators.j(298)     if (b1 | w2 == 0x123C) println (176); else println (999);
389C             L2096:
389C 3A 00 50            LD    A,(05000H)
389F             L2097:
389F 6F                  LD    L,A
38A0 26 00               LD    H,0
38A2             L2098:
38A2 ED 5B 04 50         LD    DE,(05004H)
38A6 47                  LD    B,A
38A7 7C                  LD    A,H
38A8 B2                  OR    A,D
38A9 67                  LD    H,A
38AA 7D                  LD    A,L
38AB B3                  OR    A,E
38AC 6F                  LD    L,A
38AD 78                  LD    A,B
38AE             L2099:
38AE 11 3C 12            LD    DE,4668
38B1 B7                  OR    A
38B2 ED 52               SBC   HL,DE
38B4             L2100:
38B4 C2 BF 38            JP    NZ,L2104
38B7             L2101:
38B7 3E B0               LD    A,176
38B9             L2102:
38B9 CD 9B 3C            CALL  writeLineA
38BC             L2103:
38BC C3 C5 38            JP    L2107
38BF             L2104:
38BF 21 E7 03            LD    HL,999
38C2             L2105:
38C2 CD 73 3C            CALL  writeLineHL
38C5             L2106:
38C5                     ;;testBitwiseOperators.j(299)     if (b1 ^ w2 == 0x1228) println (177); else println (999);
38C5             L2107:
38C5 3A 00 50            LD    A,(05000H)
38C8             L2108:
38C8 6F                  LD    L,A
38C9 26 00               LD    H,0
38CB             L2109:
38CB ED 5B 04 50         LD    DE,(05004H)
38CF F5                  PUSH  AF
38D0 7C                  LD    A,H
38D1 AA                  XOR   A,D
38D2 67                  LD    H,A
38D3 7D                  LD    A,L
38D4 AB                  XOR   A,E
38D5 6F                  LD    L,A
38D6 F1                  POP   AF
38D7             L2110:
38D7 11 28 12            LD    DE,4648
38DA B7                  OR    A
38DB ED 52               SBC   HL,DE
38DD             L2111:
38DD C2 E8 38            JP    NZ,L2115
38E0             L2112:
38E0 3E B1               LD    A,177
38E2             L2113:
38E2 CD 9B 3C            CALL  writeLineA
38E5             L2114:
38E5 C3 EE 38            JP    L2119
38E8             L2115:
38E8 21 E7 03            LD    HL,999
38EB             L2116:
38EB CD 73 3C            CALL  writeLineHL
38EE             L2117:
38EE                     ;;testBitwiseOperators.j(300)     //final var word/var byte
38EE             L2118:
38EE                     ;;testBitwiseOperators.j(301)     if (w2 & b1 == 0x0014) println (178); else println (999);
38EE             L2119:
38EE 2A 04 50            LD    HL,(05004H)
38F1             L2120:
38F1 5F                  LD    E,A
38F2 3A 00 50            LD    A,(05000H)
38F5 A5                  AND   A,L
38F6 6F                  LD    L,A
38F7 7B                  LD    A,E
38F8 26 00               LD    H,0
38FA             L2121:
38FA 3E 14               LD    A,20
38FC             L2122:
38FC 5F                  LD    E,A
38FD 16 00               LD    D,0
38FF EB                  EX    DE,HL
3900 B7                  OR    A
3901 ED 52               SBC   HL,DE
3903             L2123:
3903 C2 0E 39            JP    NZ,L2127
3906             L2124:
3906 3E B2               LD    A,178
3908             L2125:
3908 CD 9B 3C            CALL  writeLineA
390B             L2126:
390B C3 14 39            JP    L2130
390E             L2127:
390E 21 E7 03            LD    HL,999
3911             L2128:
3911 CD 73 3C            CALL  writeLineHL
3914             L2129:
3914                     ;;testBitwiseOperators.j(302)     if (w2 | b1 == 0x123C) println (179); else println (999);
3914             L2130:
3914 2A 04 50            LD    HL,(05004H)
3917             L2131:
3917 47                  LD    B,A
3918 3A 00 50            LD    A,(05000H)
391B B5                  OR    A,L
391C 6F                  LD    L,A
391D 78                  LD    A,B
391E             L2132:
391E 11 3C 12            LD    DE,4668
3921 B7                  OR    A
3922 ED 52               SBC   HL,DE
3924             L2133:
3924 C2 2F 39            JP    NZ,L2137
3927             L2134:
3927 3E B3               LD    A,179
3929             L2135:
3929 CD 9B 3C            CALL  writeLineA
392C             L2136:
392C C3 35 39            JP    L2140
392F             L2137:
392F 21 E7 03            LD    HL,999
3932             L2138:
3932 CD 73 3C            CALL  writeLineHL
3935             L2139:
3935                     ;;testBitwiseOperators.j(303)     if (w2 ^ b1 == 0x1228) println (180); else println (999);
3935             L2140:
3935 2A 04 50            LD    HL,(05004H)
3938             L2141:
3938 47                  LD    B,A
3939 3A 00 50            LD    A,(05000H)
393C AD                  XOR   A,L
393D 6F                  LD    L,A
393E 78                  LD    A,B
393F             L2142:
393F 11 28 12            LD    DE,4648
3942 B7                  OR    A
3943 ED 52               SBC   HL,DE
3945             L2143:
3945 C2 50 39            JP    NZ,L2147
3948             L2144:
3948 3E B4               LD    A,180
394A             L2145:
394A CD 9B 3C            CALL  writeLineA
394D             L2146:
394D C3 56 39            JP    L2154
3950             L2147:
3950 21 E7 03            LD    HL,999
3953             L2148:
3953 CD 73 3C            CALL  writeLineHL
3956             L2149:
3956                     ;;testBitwiseOperators.j(304)   
3956             L2150:
3956                     ;;testBitwiseOperators.j(305)     //final var/final var
3956             L2151:
3956                     ;;testBitwiseOperators.j(306)     //*******************
3956             L2152:
3956                     ;;testBitwiseOperators.j(307)     //final var byte/final var byte
3956             L2153:
3956                     ;;testBitwiseOperators.j(308)     if (fb2 & fb1 == 0x04) println (181); else println (999);
3956             L2154:
3956 3E 07               LD    A,7
3958             L2155:
3958 E6 1C               AND   A,28
395A             L2156:
395A D6 04               SUB   A,4
395C             L2157:
395C C2 67 39            JP    NZ,L2161
395F             L2158:
395F 3E B5               LD    A,181
3961             L2159:
3961 CD 9B 3C            CALL  writeLineA
3964             L2160:
3964 C3 6D 39            JP    L2164
3967             L2161:
3967 21 E7 03            LD    HL,999
396A             L2162:
396A CD 73 3C            CALL  writeLineHL
396D             L2163:
396D                     ;;testBitwiseOperators.j(309)     if (fb2 | fb1 == 0x1F) println (182); else println (999);
396D             L2164:
396D 3E 07               LD    A,7
396F             L2165:
396F F6 1C               OR    A,28
3971             L2166:
3971 D6 1F               SUB   A,31
3973             L2167:
3973 C2 7E 39            JP    NZ,L2171
3976             L2168:
3976 3E B6               LD    A,182
3978             L2169:
3978 CD 9B 3C            CALL  writeLineA
397B             L2170:
397B C3 84 39            JP    L2174
397E             L2171:
397E 21 E7 03            LD    HL,999
3981             L2172:
3981 CD 73 3C            CALL  writeLineHL
3984             L2173:
3984                     ;;testBitwiseOperators.j(310)     if (fb2 ^ fb1 == 0x1B) println (183); else println (999);
3984             L2174:
3984 3E 07               LD    A,7
3986             L2175:
3986 EE 1C               XOR   A,28
3988             L2176:
3988 D6 1B               SUB   A,27
398A             L2177:
398A C2 95 39            JP    NZ,L2181
398D             L2178:
398D 3E B7               LD    A,183
398F             L2179:
398F CD 9B 3C            CALL  writeLineA
3992             L2180:
3992 C3 9B 39            JP    L2185
3995             L2181:
3995 21 E7 03            LD    HL,999
3998             L2182:
3998 CD 73 3C            CALL  writeLineHL
399B             L2183:
399B                     ;;testBitwiseOperators.j(311)     //final var word/final var word
399B             L2184:
399B                     ;;testBitwiseOperators.j(312)     if (fw2 & fw1 == 0x0224) println (184); else println (999);
399B             L2185:
399B 21 34 12            LD    HL,4660
399E             L2186:
399E 11 2C 03            LD    DE,812
39A1 F5                  PUSH  AF
39A2 7C                  LD    A,H
39A3 A2                  AND   A,D
39A4 67                  LD    H,A
39A5 7D                  LD    A,L
39A6 A3                  AND   A,E
39A7 6F                  LD    L,A
39A8 F1                  POP   AF
39A9             L2187:
39A9 11 24 02            LD    DE,548
39AC B7                  OR    A
39AD ED 52               SBC   HL,DE
39AF             L2188:
39AF C2 BA 39            JP    NZ,L2192
39B2             L2189:
39B2 3E B8               LD    A,184
39B4             L2190:
39B4 CD 9B 3C            CALL  writeLineA
39B7             L2191:
39B7 C3 C0 39            JP    L2195
39BA             L2192:
39BA 21 E7 03            LD    HL,999
39BD             L2193:
39BD CD 73 3C            CALL  writeLineHL
39C0             L2194:
39C0                     ;;testBitwiseOperators.j(313)     if (fw2 | fw1 == 0x133C) println (185); else println (999);
39C0             L2195:
39C0 21 34 12            LD    HL,4660
39C3             L2196:
39C3 11 2C 03            LD    DE,812
39C6 47                  LD    B,A
39C7 7C                  LD    A,H
39C8 B2                  OR    A,D
39C9 67                  LD    H,A
39CA 7D                  LD    A,L
39CB B3                  OR    A,E
39CC 6F                  LD    L,A
39CD 78                  LD    A,B
39CE             L2197:
39CE 11 3C 13            LD    DE,4924
39D1 B7                  OR    A
39D2 ED 52               SBC   HL,DE
39D4             L2198:
39D4 C2 DF 39            JP    NZ,L2202
39D7             L2199:
39D7 3E B9               LD    A,185
39D9             L2200:
39D9 CD 9B 3C            CALL  writeLineA
39DC             L2201:
39DC C3 E5 39            JP    L2205
39DF             L2202:
39DF 21 E7 03            LD    HL,999
39E2             L2203:
39E2 CD 73 3C            CALL  writeLineHL
39E5             L2204:
39E5                     ;;testBitwiseOperators.j(314)     if (fw2 ^ fw1 == 0x1118) println (186); else println (999);
39E5             L2205:
39E5 21 34 12            LD    HL,4660
39E8             L2206:
39E8 11 2C 03            LD    DE,812
39EB F5                  PUSH  AF
39EC 7C                  LD    A,H
39ED AA                  XOR   A,D
39EE 67                  LD    H,A
39EF 7D                  LD    A,L
39F0 AB                  XOR   A,E
39F1 6F                  LD    L,A
39F2 F1                  POP   AF
39F3             L2207:
39F3 11 18 11            LD    DE,4376
39F6 B7                  OR    A
39F7 ED 52               SBC   HL,DE
39F9             L2208:
39F9 C2 04 3A            JP    NZ,L2212
39FC             L2209:
39FC 3E BA               LD    A,186
39FE             L2210:
39FE CD 9B 3C            CALL  writeLineA
3A01             L2211:
3A01 C3 0A 3A            JP    L2216
3A04             L2212:
3A04 21 E7 03            LD    HL,999
3A07             L2213:
3A07 CD 73 3C            CALL  writeLineHL
3A0A             L2214:
3A0A                     ;;testBitwiseOperators.j(315)     //final var byte/final var word
3A0A             L2215:
3A0A                     ;;testBitwiseOperators.j(316)     if (fb1 & fw2 == 0x0014) println (187); else println (999);
3A0A             L2216:
3A0A 3E 1C               LD    A,28
3A0C             L2217:
3A0C 6F                  LD    L,A
3A0D 26 00               LD    H,0
3A0F             L2218:
3A0F 11 34 12            LD    DE,4660
3A12 F5                  PUSH  AF
3A13 7C                  LD    A,H
3A14 A2                  AND   A,D
3A15 67                  LD    H,A
3A16 7D                  LD    A,L
3A17 A3                  AND   A,E
3A18 6F                  LD    L,A
3A19 F1                  POP   AF
3A1A             L2219:
3A1A 3E 14               LD    A,20
3A1C             L2220:
3A1C 5F                  LD    E,A
3A1D 16 00               LD    D,0
3A1F EB                  EX    DE,HL
3A20 B7                  OR    A
3A21 ED 52               SBC   HL,DE
3A23             L2221:
3A23 C2 2E 3A            JP    NZ,L2225
3A26             L2222:
3A26 3E BB               LD    A,187
3A28             L2223:
3A28 CD 9B 3C            CALL  writeLineA
3A2B             L2224:
3A2B C3 34 3A            JP    L2228
3A2E             L2225:
3A2E 21 E7 03            LD    HL,999
3A31             L2226:
3A31 CD 73 3C            CALL  writeLineHL
3A34             L2227:
3A34                     ;;testBitwiseOperators.j(317)     if (fb1 | fw2 == 0x123C) println (188); else println (999);
3A34             L2228:
3A34 3E 1C               LD    A,28
3A36             L2229:
3A36 6F                  LD    L,A
3A37 26 00               LD    H,0
3A39             L2230:
3A39 11 34 12            LD    DE,4660
3A3C 47                  LD    B,A
3A3D 7C                  LD    A,H
3A3E B2                  OR    A,D
3A3F 67                  LD    H,A
3A40 7D                  LD    A,L
3A41 B3                  OR    A,E
3A42 6F                  LD    L,A
3A43 78                  LD    A,B
3A44             L2231:
3A44 11 3C 12            LD    DE,4668
3A47 B7                  OR    A
3A48 ED 52               SBC   HL,DE
3A4A             L2232:
3A4A C2 55 3A            JP    NZ,L2236
3A4D             L2233:
3A4D 3E BC               LD    A,188
3A4F             L2234:
3A4F CD 9B 3C            CALL  writeLineA
3A52             L2235:
3A52 C3 5B 3A            JP    L2239
3A55             L2236:
3A55 21 E7 03            LD    HL,999
3A58             L2237:
3A58 CD 73 3C            CALL  writeLineHL
3A5B             L2238:
3A5B                     ;;testBitwiseOperators.j(318)     if (fb1 ^ fw2 == 0x1228) println (189); else println (999);
3A5B             L2239:
3A5B 3E 1C               LD    A,28
3A5D             L2240:
3A5D 6F                  LD    L,A
3A5E 26 00               LD    H,0
3A60             L2241:
3A60 11 34 12            LD    DE,4660
3A63 F5                  PUSH  AF
3A64 7C                  LD    A,H
3A65 AA                  XOR   A,D
3A66 67                  LD    H,A
3A67 7D                  LD    A,L
3A68 AB                  XOR   A,E
3A69 6F                  LD    L,A
3A6A F1                  POP   AF
3A6B             L2242:
3A6B 11 28 12            LD    DE,4648
3A6E B7                  OR    A
3A6F ED 52               SBC   HL,DE
3A71             L2243:
3A71 C2 7C 3A            JP    NZ,L2247
3A74             L2244:
3A74 3E BD               LD    A,189
3A76             L2245:
3A76 CD 9B 3C            CALL  writeLineA
3A79             L2246:
3A79 C3 82 3A            JP    L2251
3A7C             L2247:
3A7C 21 E7 03            LD    HL,999
3A7F             L2248:
3A7F CD 73 3C            CALL  writeLineHL
3A82             L2249:
3A82                     ;;testBitwiseOperators.j(319)     //final var word/final var byte
3A82             L2250:
3A82                     ;;testBitwiseOperators.j(320)     if (fw2 & fb1 == 0x0014) println (190); else println (999);
3A82             L2251:
3A82 21 34 12            LD    HL,4660
3A85             L2252:
3A85 5F                  LD    E,A
3A86 3E 1C               LD    A,28
3A88 A5                  AND   A,L
3A89 6F                  LD    L,A
3A8A 7B                  LD    A,E
3A8B 26 00               LD    H,0
3A8D             L2253:
3A8D 3E 14               LD    A,20
3A8F             L2254:
3A8F 5F                  LD    E,A
3A90 16 00               LD    D,0
3A92 EB                  EX    DE,HL
3A93 B7                  OR    A
3A94 ED 52               SBC   HL,DE
3A96             L2255:
3A96 C2 A1 3A            JP    NZ,L2259
3A99             L2256:
3A99 3E BE               LD    A,190
3A9B             L2257:
3A9B CD 9B 3C            CALL  writeLineA
3A9E             L2258:
3A9E C3 A7 3A            JP    L2262
3AA1             L2259:
3AA1 21 E7 03            LD    HL,999
3AA4             L2260:
3AA4 CD 73 3C            CALL  writeLineHL
3AA7             L2261:
3AA7                     ;;testBitwiseOperators.j(321)     if (fw2 | fb1 == 0x123C) println (191); else println (999);
3AA7             L2262:
3AA7 21 34 12            LD    HL,4660
3AAA             L2263:
3AAA 11 1C 00            LD    DE,28
3AAD 47                  LD    B,A
3AAE 7C                  LD    A,H
3AAF B2                  OR    A,D
3AB0 67                  LD    H,A
3AB1 7D                  LD    A,L
3AB2 B3                  OR    A,E
3AB3 6F                  LD    L,A
3AB4 78                  LD    A,B
3AB5             L2264:
3AB5 11 3C 12            LD    DE,4668
3AB8 B7                  OR    A
3AB9 ED 52               SBC   HL,DE
3ABB             L2265:
3ABB C2 C6 3A            JP    NZ,L2269
3ABE             L2266:
3ABE 3E BF               LD    A,191
3AC0             L2267:
3AC0 CD 9B 3C            CALL  writeLineA
3AC3             L2268:
3AC3 C3 CC 3A            JP    L2272
3AC6             L2269:
3AC6 21 E7 03            LD    HL,999
3AC9             L2270:
3AC9 CD 73 3C            CALL  writeLineHL
3ACC             L2271:
3ACC                     ;;testBitwiseOperators.j(322)     if (fw2 ^ fb1 == 0x1228) println (192); else println (999);
3ACC             L2272:
3ACC 21 34 12            LD    HL,4660
3ACF             L2273:
3ACF 11 1C 00            LD    DE,28
3AD2 F5                  PUSH  AF
3AD3 7C                  LD    A,H
3AD4 AA                  XOR   A,D
3AD5 67                  LD    H,A
3AD6 7D                  LD    A,L
3AD7 AB                  XOR   A,E
3AD8 6F                  LD    L,A
3AD9 F1                  POP   AF
3ADA             L2274:
3ADA 11 28 12            LD    DE,4648
3ADD B7                  OR    A
3ADE ED 52               SBC   HL,DE
3AE0             L2275:
3AE0 C2 EB 3A            JP    NZ,L2279
3AE3             L2276:
3AE3 3E C0               LD    A,192
3AE5             L2277:
3AE5 CD 9B 3C            CALL  writeLineA
3AE8             L2278:
3AE8 C3 F1 3A            JP    L2283
3AEB             L2279:
3AEB 21 E7 03            LD    HL,999
3AEE             L2280:
3AEE CD 73 3C            CALL  writeLineHL
3AF1             L2281:
3AF1                     ;;testBitwiseOperators.j(323)   
3AF1             L2282:
3AF1                     ;;testBitwiseOperators.j(324)     println("Klaar");
3AF1             L2283:
3AF1 21 FC 3A            LD    HL,L2290
3AF4             L2284:
3AF4 CD 20 3B            CALL  writeLineStr
3AF7             L2285:
3AF7                     ;;testBitwiseOperators.j(325)   }
3AF7             L2286:
3AF7 DD F9               LD    SP,IX
3AF9             L2287:
3AF9 DD E1               POP   IX
3AFB             L2288:
3AFB C9                  return
3AFC             L2289:
3AFC                     ;;testBitwiseOperators.j(326) }
3AFC             L2290:
3AFC 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
3B02             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
3B02             STAT0   equ 004H          ;147 ASCI0 Status register.
3B02             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
3B02             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
3B02             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
3B02             TDRE    equ 1             ;STAT0->Tx data register empty bit.
3B02             OVERRUN equ 6             ;STAT0->OVERRUN bit.
3B02             RDRF    equ 7             ;STAT0->Rx data register full bit.
3B02             ;****************
3B02             ;getChar
3B02             ;Check if an input character from ASCI0 is available.
3B02             ;  IN:  none
3B02             ;  OUT: F: ZERO flag set if no character is available.
3B02             ;          ZERO flag reset if a character is available.
3B02             ;       A : character from ASCI0, if available.
3B02             ;  USES:AF
3B02             ;****************
3B02             getChar:
3B02 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
3B05 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
3B07 20 07               JR    NZ,getChar1 ;-yes: reset error flags
3B09 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
3B0B C8                  RET   Z           ;-no: return without a character
3B0C ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
3B0F C9                  RET
3B10             getChar1:
3B10 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
3B13 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
3B15 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
3B18 AF                  XOR   A,A
3B19 C9                  RET               ;return without a character
3B1A             ;****************
3B1A             ;putMsg
3B1A             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
3B1A             ;  IN:  none.
3B1A             ;  OUT: none.
3B1A             ;  USES:none.
3B1A             ;****************
3B1A             putMsg:
3B1A E3                  EX    (SP),HL     ;save HL and load return address into HL.
3B1B CD 27 3B            CALL  writeStr
3B1E E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
3B1F C9                  RET
3B20             ;****************
3B20             ;writeLineStr
3B20             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
3B20             ;  IN:  HL:address of zero terminated string to be printed.
3B20             ;  OUT: none.
3B20             ;  USES:HL (point to byte after zero terminated string)
3B20             ;****************
3B20             writeLineStr:
3B20 CD 27 3B            CALL  writeStr
3B23 CD 43 3B            CALL  putCRLF
3B26 C9                  RET
3B27             ;****************
3B27             ;writeStr
3B27             ;Print via ASCI0 a zero terminated string, pointed to by HL.
3B27             ;  IN:  HL:address of zero terminated string to be printed.
3B27             ;  OUT: none.
3B27             ;  USES:HL (point to byte after zero terminated string)
3B27             ;****************
3B27             writeStr:
3B27 F5                  PUSH  AF          ;save registers
3B28             putStr1:
3B28 7E                  LD    A,(HL)      ;get next character
3B29 23                  INC   HL
3B2A B7                  OR    A,A         ;is it zer0?
3B2B 28 05               JR    Z,putStr2   ;yes ->return
3B2D CD 36 3B            CALL  putChar     ;no->put it to ASCI0
3B30 18 F6               JR    putStr1
3B32             putStr2:
3B32 F1                  POP   AF
3B33 C9                  RET
3B34             ;****************
3B34             ;putSpace
3B34             ;Send a space character to ASCI0
3B34             ;  IN:  none.
3B34             ;  OUT: none.
3B34             ;  USES:AF
3B34             ;****************
3B34             putSpace:
3B34 3E 20               LD    A,' '       ;load space and continue with putChar.
3B36             ;****************
3B36             ;putChar
3B36             ;Send one character to ASCI0.
3B36             ;  IN:  A = character
3B36             ;  OUT: none.
3B36             ;  USES:none.
3B36             ;****************
3B36             putChar:
3B36 F5                  PUSH  AF          ;send the character via ASCI0
3B37             putChar1:
3B37 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
3B3A CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
3B3C 28 F9               JR    Z,putChar1
3B3E F1                  POP   AF          ;restore AF registers
3B3F ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
3B42 C9                  RET
3B43             ;****************
3B43             ;putCRLF
3B43             ;Send CR and LF to ASCI0
3B43             ;  IN:  none.
3B43             ;  OUT: none.
3B43             ;  USES:none.
3B43             ;****************
3B43             putCRLF:
3B43 F5                  PUSH  AF
3B44 3E 0D               LD    A,'\r'       ;print carriage return
3B46 CD 36 3B            CALL  putChar
3B49 3E 0A               LD    A,'\n'       ;print line feed
3B4B CD 36 3B            CALL  putChar
3B4E F1                  POP   AF
3B4F C9                  RET
3B50             ;****************
3B50             ;putErase
3B50             ;Erase the latest character at ASCI0
3B50             ;  IN:  none.
3B50             ;  OUT: none.
3B50             ;  USES:AF
3B50             ;****************
3B50             putErase:
3B50 3E 08               LD    A,'\b'       ;print backspace
3B52 CD 36 3B            CALL  putChar
3B55 CD 34 3B            CALL  putSpace    ;print space (erase character)
3B58 3E 08               LD    A,'\b'      ;print backspace
3B5A 18 DA               JR    putChar
3B5C             ;****************
3B5C             ;putBell
3B5C             ;Send a Bell character to ASCI0
3B5C             ;  IN:  none.
3B5C             ;  OUT: none.
3B5C             ;  USES:AF
3B5C             ;****************
3B5C             putBell:
3B5C 3E 07               LD    A,07        ;ring the bell at ASCI0
3B5E 18 D6               JR    putChar
3B60             ;****************
3B60             ;putHexHL
3B60             ;Print HL register pair as 4 hex digits
3B60             ;  IN:  HL = word to be printed.
3B60             ;  OUT: none.
3B60             ;  USES:none.
3B60             ;****************
3B60             putHexHL:
3B60 F5                  PUSH  AF          ;save used registers
3B61 7C                  LD    A,H         ;print H as 2 hex digits
3B62 CD 6B 3B            CALL  putHexA
3B65 7D                  LD    A,L         ;print L as 2 hex digits
3B66 CD 6B 3B            CALL  putHexA
3B69 F1                  POP   AF          ;restore used registers
3B6A C9                  RET
3B6B             ;****************
3B6B             ;putHexA
3B6B             ;Print A register as 2 hex digits
3B6B             ;  IN:  A = byte to be printed
3B6B             ;  OUT: none.
3B6B             ;  USES:none.
3B6B             ;****************
3B6B             putHexA:
3B6B F5                  PUSH  AF          ;save input
3B6C 1F                  RRA               ;shift upper nibble to the right
3B6D 1F                  RRA
3B6E 1F                  RRA
3B6F 1F                  RRA
3B70 CD 74 3B            CALL  putHexA1    ;print upper nibble
3B73 F1                  POP   AF          ;restore input & print lower nibble
3B74             putHexA1:
3B74 F5                  PUSH  AF          ;save input
3B75 E6 0F               AND   A,00FH      ;mask lower nibble
3B77 C6 30               ADD   A,'0'       ;convert to hex digit
3B79 FE 3A               CP    A,'9'+1
3B7B 38 02               JR    C,putHexA2
3B7D C6 07               ADD   A,07
3B7F             putHexA2:
3B7F CD 36 3B            CALL  putChar
3B82 F1                  POP   AF          ;restore input
3B83 C9                  RET               ;and return
3B84             ;****************
3B84             ;mul16
3B84             ;16 by 16 bit unsigned multiplication with 16 bit result.
3B84             ;  IN:  HL = operand 1
3B84             ;       DE = operand 2
3B84             ;  OUT: HL = HL * DE low part
3B84             ;  USES:DE
3B84             ;  Size   25 bytes
3B84             ;  Time  160 cycles
3B84             ;****************
3B84             mul16:
3B84                     ;HL = HL * DE
3B84                     ;        H  L
3B84                     ;        D  E
3B84                     ;    --------*
3B84                     ;          EL
3B84                     ;       EH  0
3B84                     ;       DL  0
3B84                     ; -----------+
3B84                     ;        R  S
3B84                     ;S = ELlow
3B84                     ;R = ELhigh+EHlow+DLlow
3B84 C5                  PUSH  BC          ;11  11 save BC
3B85 44                  LD    B,H         ; 4  15 copy HL to BC
3B86 4D                  LD    C,L         ; 4  19
3B87 63                  LD    H,E         ; 4  23 HL contains EL
3B88 ED 6C               MLT   HL          ;17  40
3B8A E5                  PUSH  HL          ;11  51
3B8B 63                  LD    H,E         ; 4  55 HL contains EH aka EB
3B8C 68                  LD    L,B         ; 4  59
3B8D ED 6C               MLT   HL          ;17  76
3B8F 45                  LD    B,L         ; 4  80 save EHlow in B
3B90 62                  LD    H,D         ; 4  84 HL contains DL aka DC
3B91 69                  LD    L,C         ; 4  88
3B92 ED 6C               MLT   HL          ;17 105
3B94 55                  LD    D,L         ; 4 109 DLlow into DE
3B95 1E 00               LD    E,0         ; 6 115
3B97 E1                  POP   HL          ; 9 124 add EL+DElow
3B98 19                  ADD   HL,DE       ; 7 131
3B99 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
3B9A 19                  ADD   HL,DE       ; 7 142
3B9B C1                  POP   BC          ; 9 151 restore BC
3B9C C9                  RET               ; 9 160
3B9D             ;****************
3B9D             ;mul16_10
3B9D             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
3B9D             ;  IN:  HL = operand
3B9D             ;  OUT: HL = HL * 10; low part
3B9D             ;  USES:Flags
3B9D             ;  Size   9 bytes
3B9D             ;  Time   65 cycles
3B9D             ;****************
3B9D             mul16_10:
3B9D D5                  PUSH  DE          ;11 11
3B9E 54                  LD    D,H         ; 4 15
3B9F 5D                  LD    E,L         ; 4 19
3BA0 29                  ADD   HL,HL       ; 7 26 times 2
3BA1 29                  ADD   HL,HL       ; 7 33 times 4
3BA2 19                  ADD   HL,DE       ; 7 40 times 5
3BA3 29                  ADD   HL,HL       ; 7 47 times 10
3BA4 D1                  POP   DE          ; 9 56
3BA5 C9                  RET               ; 9 65
3BA6             ;****************
3BA6             ;mul16_8
3BA6             ;16 by 8 bit unsigned multiplication with 16 bit result.
3BA6             ;  IN:  HL = operand 1
3BA6             ;        A = operand 2
3BA6             ;  OUT: HL = HL * A low part
3BA6             ;  USES:AF
3BA6             ;  Size   .. bytes
3BA6             ;  Time  ... cycles
3BA6             ;****************
3BA6             mul16_8:
3BA6                     ;HL = HL * A
3BA6                     ;        H  L
3BA6                     ;           A
3BA6                     ;    --------*
3BA6                     ;          AL
3BA6                     ;       AH  0
3BA6                     ; -----------+
3BA6                     ;        R  S
3BA6                     ;S = ALlow
3BA6                     ;R = ALhigh+AHlow
3BA6 C5                  PUSH  BC          ;11  11 save BC
3BA7 44                  LD    B,H         ; 4  15
3BA8 4F                  LD    C,A         ; 4  19
3BA9 67                  LD    H,A         ; 4  23
3BAA ED 6C               MLT   HL          ;17  40 HL = AL
3BAC ED 4C               MLT   BC          ;17  57 BC = AH
3BAE 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
3BAF 81                  ADD   A,C         ; 4  65
3BB0 67                  LD    H,A         ; 4  69
3BB1 C1                  POP   BC          ; 9  78 | 289 restore BC
3BB2 C9                  RET               ; 9  87 | 307
3BB3             ;****************
3BB3             ;mul1632
3BB3             ;16 by 16 bit unsigned multiplication with 32 bit result.
3BB3             ;  IN:  HL = operand 1
3BB3             ;       DE = operand 2
3BB3             ;  OUT: HL = HL * DE low part
3BB3             ;       DE = HL * DE high part
3BB3             ;  USES:-
3BB3             ;  Size 49 bytes
3BB3             ;  Time between 303 en 307 cycles
3BB3             ;****************
3BB3             mul1632:
3BB3                     ;HL = HL * DE
3BB3                     ;        H  L
3BB3                     ;        D  E
3BB3                     ;    --------*
3BB3                     ;          EL
3BB3                     ;       EH  0
3BB3                     ;       DL  0
3BB3                     ;    DH  0  0
3BB3                     ; -----------+
3BB3                     ;  P  Q  R  S
3BB3                     ;S = ELlow
3BB3                     ;R = ELhigh+EHlow+DLlow
3BB3                     ;Q = DHlow+EHhigh+DLhigh
3BB3                     ;P = DHhigh
3BB3 F5                  PUSH  AF          ;11  11 save AF
3BB4 C5                  PUSH  BC          ;11  22 save BC
3BB5 44                  LD    B,H         ; 4  26
3BB6 4D                  LD    C,L         ; 4  30
3BB7 62                  LD    H,D         ; 4  34 HL contains DH aka DB
3BB8 68                  LD    L,B         ; 4  38
3BB9 ED 6C               MLT   HL          ;17  55
3BBB E5                  PUSH  HL          ;11  66
3BBC 62                  LD    H,D         ; 4  70 HL contains DL aka DC
3BBD 69                  LD    L,C         ; 4  74
3BBE ED 6C               MLT   HL          ;17  91
3BC0 E5                  PUSH  HL          ;11 102
3BC1 63                  LD    H,E         ; 4 106 HL contains EH aka EB
3BC2 68                  LD    L,B         ; 4 110
3BC3 ED 6C               MLT   HL          ;17 127
3BC5 E5                  PUSH  HL          ;11 138
3BC6 63                  LD    H,E         ; 4 142 HL contains EL aka EC
3BC7 69                  LD    L,C         ; 4 146
3BC8 ED 6C               MLT   HL          ;17 163
3BCA D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
3BCB 06 00               LD    B,0         ; 6 178
3BCD 4A                  LD    C,D         ; 4 182 ..C=EHhigh
3BCE 53                  LD    D,E         ; 4 186 ..D=EHlow
3BCF 1E 00               LD    E,0         ; 6 192
3BD1 19                  ADD   HL,DE       ; 7 199
3BD2 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
3BD4 03                  INC   BC          ;         4 209
3BD5             mul16321:
3BD5 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
3BD6 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
3BD7 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
3BD8 19                  ADD   HL,DE       ; 7 231 | 233
3BD9 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
3BDB 03                  INC   BC          ;         4 243
3BDC             mul16322:
3BDC                                       ;HL=RS=EL+EH0+DL0
3BDC                                       ;C=EHhigh
3BDC                                       ;A=DLhigh
3BDC                                       ;E=0
3BDC EB                  EX    DE,HL       ; 3 242 | 246
3BDD 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
3BDE 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
3BDF 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
3BE0 C1                  POP   BC          ; 9 266 | 270
3BE1 09                  ADD   HL,BC       ; 7 273 | 277
3BE2 EB                  EX    DE,HL       ; 3 276 | 280
3BE3                                       ;D=P=DHhigh
3BE3                                       ;E=Q=DHlow+EHhigh+DLhigh
3BE3                                       ;H=R=ELhigh+EHlow+DLlow
3BE3                                       ;L=S=ELlow
3BE3 C1                  POP   BC          ; 9 285 | 289 restore BC
3BE4 F1                  POP   AF          ; 9 294 | 298 restore AF
3BE5 C9                  RET               ; 9 303 | 307
3BE6             ;****************
3BE6             ;mul16S
3BE6             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
3BE6             ;  IN:  HL = operand 1
3BE6             ;       DE = operand 2
3BE6             ;  OUT: DE = HL * DE high part
3BE6             ;       HL = HL * DE low part
3BE6             ;  USES:none.
3BE6             ;  Size 26 bytes
3BE6             ;  Time between 726 en 998 cycles
3BE6             ;****************
3BE6             mul16S:
3BE6 F5                  PUSH  AF          ;11  11 save AF
3BE7 C5                  PUSH  BC          ;11  22 save BC
3BE8 44                  LD    B,H         ; 4  26
3BE9 4D                  LD    C,L         ; 4  30
3BEA 21 00 00            LD    HL,0        ; 9  39
3BED 3E 10               LD    A,16        ; 6  45
3BEF             mul16S1:
3BEF 29                  ADD   HL,HL       ;16*7=112 157
3BF0 CB 13               RL    E           ;16*7=112 269
3BF2 CB 12               RL    D           ;16*7=112 381
3BF4 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
3BF6 09                  ADD   HL,BC       ;             16*7=112 589
3BF7 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
3BF9 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
3BFA             mul16S2:
3BFA 3D                  DEC   A           ;16*4=64    573 | 845 | 813
3BFB 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
3BFD C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
3BFE F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
3BFF C9                  RET               ; 9         726 | 998 | 966
3C00             ;****************
3C00             ;div16
3C00             ;16 by 16 bit unsigned division.
3C00             ;  IN:  HL = dividend
3C00             ;       DE = divisor
3C00             ;  OUT: HL = quotient
3C00             ;       DE = remainder
3C00             ;  USES:-
3C00             ;  Size   32 bytes
3C00             ;  Time   between 1073 en 1121 cycles
3C00             ;pseudo code:
3C00             ;T = AC = dividend
3C00             ;D = DE = divisor
3C00             ;Q = AC = quotient = 0
3C00             ;R = HL = remainder = 0
3C00             ;invariante betrekking:
3C00             ; D/T\Q     
3C00             ;   R       
3C00             ; T = QD + R
3C00             ; T <= 2^N  
3C00             ;
3C00             ; D/T'.RT\Q'      
3C00             ;   R'             
3C00             ; RT <= 2^N        
3C00             ; 0<=k<=N          
3C00             ; RT = T % 2^k     
3C00             ; T' = (T-RT) / 2^k
3C00             ; Q' = T' / D      
3C00             ; R' = T' % D      
3C00             ;
3C00             ;for (i=16; i>0; i--) {
3C00             ;  T = T * 2 (remember MSB in carry)
3C00             ;  R = R * 2 + carry
3C00             ;  Q = Q * 2
3C00             ;  if (R >= D) {
3C00             ;    R = R - D;
3C00             ;    Q++;
3C00             ;  }
3C00             ;}
3C00             ;return Q (in HL) and R (in DE)
3C00             ;****************
3C00             div16:
3C00 F5                  PUSH  AF          ;11  11 save registers used
3C01 C5                  PUSH  BC          ;11  22
3C02 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
3C03 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
3C04 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
3C07 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
3C09             div16_1:
3C09 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
3C0B CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
3C0D ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
3C0F B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
3C10 ED 52               SBC   HL,DE       ;16*10=160 653
3C12 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
3C14 0C                  INC   C           ;              16*4= 64 813   Q++
3C15 18 01               JR    div16_3     ;              16*8=128 941
3C17             div16_2:
3C17 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
3C18             div16_3:
3C18 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
3C1A EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
3C1B 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
3C1C 69                  LD    L,C         ; 4 1046 | 1094
3C1D C1                  POP   BC          ; 9 1055 | 1103
3C1E F1                  POP   AF          ; 9 1064 | 1112
3C1F C9                  RET               ; 9 1073 | 1121
3C20             ;****************
3C20             ;div16_8
3C20             ;16 by 8 bit unsigned division.
3C20             ;  IN:  HL = dividend
3C20             ;       A  = divisor
3C20             ;  OUT: HL = quotient
3C20             ;       A  = remainder
3C20             ;  USES:F(lags)
3C20             ;  Size 18 bytes
3C20             ;  Time between 601 en 697 cycles
3C20             ;****************
3C20             div16_8:
3C20 C5                  PUSH  BC          ;11 11 save registers used
3C21 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
3C23 4F                  LD    C,A         ; 4 21 move divisor to C
3C24 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
3C25             div16_82:
3C25 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
3C26 CB 17               RL    A           ;16*7=112 249
3C28 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
3C29 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
3C2B 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
3C2C 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
3C2D             div16_83:
3C2D 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
3C2F C1                  POP   BC          ;9 592 688
3C30 C9                  RET               ;9 601 697
3C31             ;****************
3C31             ;div8
3C31             ;8 by 8 bit unsigned division.
3C31             ;  IN:  A = dividend
3C31             ;       C = divisor
3C31             ;  OUT: A = quotient
3C31             ;       C = remainder
3C31             ;  USES:F(lags)
3C31             ;  Size 26 bytes
3C31             ;  Time between 411 and 459 cycles
3C31             ;****************
3C31             ;pseudo code:
3C31             ;T = dividend
3C31             ;D = divisor
3C31             ;Q = quotient = 0
3C31             ;R = remainder = 0
3C31             ;invariante betrekking:
3C31             ; T = QD + R
3C31             ; T <= 2^8  
3C31             ;
3C31             ; D/T'.RT\Q'      
3C31             ;   R'             
3C31             ; RT <= 2^8        
3C31             ; 0<=k<=8          
3C31             ; RT = T % 2^k     
3C31             ; T' = (T-RT) / 2^k
3C31             ; Q' = T' / D      
3C31             ; R' = T' % D      
3C31             ;
3C31             ;for (i=8; i>0; i--) {
3C31             ;  T = T * 2 (remember MSB in carry)
3C31             ;  R = R * 2 + carry
3C31             ;  Q = Q * 2
3C31             ;  if (R >= D) {
3C31             ;    R = R - D;
3C31             ;    Q++;
3C31             ;  }
3C31             ;}
3C31             ;return Q (in A) and R (in C)
3C31             ;****************
3C31             ;E = T = dividend
3C31             ;C = D = divisor
3C31             ;D = Q = quotient
3C31             ;A = R = remainder
3C31             ;****************
3C31             ;  IN:  A = dividend
3C31             ;       C  = divisor
3C31             div8:
3C31 D5                  PUSH  DE          ;11 11 save registers used
3C32 C5                  PUSH  BC          ;11 22 save registers used
3C33 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
3C35 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
3C37 5F                  LD    E,A         ; 4 38 E = T = dividend
3C38 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
3C39             div8_1:
3C39 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
3C3B CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
3C3D CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
3C3F B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
3C40 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
3C42 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
3C43 14                  INC   D           ;           8*4=32 354   Q[D]++;
3C44             div8_2:           ;                      }
3C44 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
3C46 C1                  POP   BC          ;9        385 433
3C47 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
3C48 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
3C49 D1                  POP   DE          ;9        402 450
3C4A C9                  RET               ;9        411 459
3C4B             ;****************
3C4B             ;div8_16
3C4B             ;8 by 16 bit unsigned division.
3C4B             ;  IN:  A = dividend
3C4B             ;       HL = divisor
3C4B             ;  OUT: A = quotient
3C4B             ;       C = remainder
3C4B             ;  USES:F(lags)
3C4B             ;  Size 13 bytes (plus dependency on div8)
3C4B             ;  Time 31 or between 436 and 484 cycles
3C4B             ;****************
3C4B             ;invariante betrekking:
3C4B             ; T = dividend
3C4B             ; D = divisor
3C4B             ; Q = quotient
3C4B             ; R = remainder
3C4B             ; T = QD + R
3C4B             ;pseudo code:
3C4B             ; if D >= 256 {
3C4B             ;   R = T
3C4B             ;   Q = 0
3C4B             ; } else {
3C4B             ;   R = T/D (using div8)
3C4B             ;   Q = T%D (using div8)
3C4B             ; }
3C4B             ;****************
3C4B             
3C4B             
3C4B             div8_16:
3C4B 4F                  LD    C,A         ;  4  4         save dividend(A) in C
3C4C 7C                  LD    A,H         ;  4  8         if D >= 256 {
3C4D B7                  OR    A,A         ;  4 12
3C4E 28 02               JR    Z,div8_161  ;  6 18  8  20
3C50 AF                  XOR   A,A         ;  4 22           R = T;
3C51 C9                  RET               ;  9 31           Q = 0;
3C52             div8_161:                     ;               } else {
3C52 79                  LD    A,C         ;        4  24    restore dividend into A
3C53 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
3C54 CD 31 3C            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
3C57 C9                  RET               ; 9  436/484    }
3C58             ;****************
3C58             ;read
3C58             ;read a 16 bit unsigned number from the input
3C58             ;  IN:  none
3C58             ;  OUT: HL = 16 bit unsigned number
3C58             ;  USES:-
3C58             ;****************
3C58             read:
3C58 F5                  PUSH  AF
3C59 21 00 00            LD    HL,0        ;result = 0;
3C5C             read1:
3C5C CD 02 3B            CALL  getChar     ;check if a character is available.
3C5F 28 FB               JR    Z,read1     ;-no: wait for it.
3C61 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
3C63 28 0C               JR    Z,read2
3C65 CD 9D 3B            CALL  mul16_10    ;result *= 10;
3C68 D6 30               SUB   A,'0'       ;digit = char - '0';
3C6A 85                  ADD   A,L         ;result += digit;
3C6B 6F                  LD    L,A
3C6C 30 EE               JR    NC,read1     ;get next character
3C6E 24                  INC   H
3C6F 18 EB               JR    read1        ;get next character
3C71             read2:
3C71 F1                  POP   AF
3C72 C9                  RET
3C73             ;****************
3C73             ;writeLineHL
3C73             ;write a 16 bit unsigned number to the output, followed by a carriage return
3C73             ;  IN:  HL = 16 bit unsigned number
3C73             ;  OUT: none
3C73             ;  USES:HL
3C73             ;****************
3C73             writeLineHL:
3C73 CD 7A 3C            CALL  writeHL
3C76 CD 43 3B            CALL  putCRLF
3C79 C9                  RET
3C7A             ;****************
3C7A             ;writeHL
3C7A             ;write a 16 bit unsigned number to the output
3C7A             ;  IN:  HL = 16 bit unsigned number
3C7A             ;  OUT: none
3C7A             ;  USES:HL
3C7A             ;****************
3C7A             writeHL:
3C7A C5                  PUSH  BC          ;save registers used
3C7B F5                  PUSH  AF
3C7C 06 00               LD    B,0         ;number of digits on stack
3C7E 7C                  LD    A,H         ;is HL=0?
3C7F B5                  OR    A,L
3C80 20 03               JR    NZ,writeHL1
3C82 04                  INC   B           ;write a single digit 0
3C83 18 0C               JR    writeHL3
3C85             writeHL1:
3C85 3E 0A               LD    A,10        ;divide HL by 10
3C87 CD 20 3C            CALL  div16_8
3C8A F5                  PUSH  AF          ;put remainder on stack
3C8B 04                  INC   B
3C8C 7C                  LD    A,H         ;is quotient 0?
3C8D B5                  OR    A,L
3C8E 20 F5               JR    NZ,writeHL1
3C90             writeHL2:
3C90 F1                  POP   AF          ;write digit
3C91             writeHL3:
3C91 C6 30               ADD   A,'0'
3C93 CD 36 3B            CALL  putChar
3C96 10 F8               DJNZ  writeHL2
3C98 F1                  POP   AF          ;restore registers used
3C99 C1                  POP   BC
3C9A C9                  RET
3C9B             ;****************
3C9B             ;writeLineA
3C9B             ;write an 8-bit unsigned number to the output, followed by a carriage return
3C9B             ;  IN:  A = 8-bit unsigned number
3C9B             ;  OUT: none
3C9B             ;  USES:none
3C9B             ;****************
3C9B             writeLineA:
3C9B CD A2 3C            CALL  writeA
3C9E CD 43 3B            CALL  putCRLF
3CA1 C9                  RET
3CA2             ;****************
3CA2             ;writeA
3CA2             ;write an 8-bit unsigned number to the output
3CA2             ;  IN:  A = 8-bit unsigned number
3CA2             ;  OUT: none
3CA2             ;  USES:none
3CA2             ;****************
3CA2             writeA:
3CA2 E5                  PUSH  HL          ;save registers used
3CA3 26 00               LD    H,0
3CA5 6F                  LD    L,A
3CA6 CD 7A 3C            CALL  writeHL
3CA9 E1                  POP   HL
3CAA C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20E0 :
   L1000 = 2B84 :
   L1001 = 2B87 :
   L1002 = 2B8A : 2B7F
   L1003 = 2B8D :
   L1004 = 2B90 :
   L1005 = 2B90 :
   L1006 = 2B90 : 2B87
   L1007 = 2B93 :
   L1008 = 2B97 :
   L1009 = 2BA0 :
    L101 = 20E3 :
   L1010 = 2BA2 :
   L1011 = 2BA9 :
   L1012 = 2BAC :
   L1013 = 2BAE :
   L1014 = 2BB1 :
   L1015 = 2BB4 : 2BA9
   L1016 = 2BB7 :
   L1017 = 2BBA :
   L1018 = 2BBA : 2BB1
   L1019 = 2BBD :
    L102 = 20E3 :
   L1020 = 2BC1 :
   L1021 = 2BC8 :
   L1022 = 2BCE :
   L1023 = 2BD1 :
   L1024 = 2BD3 :
   L1025 = 2BD6 :
   L1026 = 2BD9 : 2BCE
   L1027 = 2BDC :
   L1028 = 2BDF :
   L1029 = 2BDF : 2BD6
    L103 = 20E3 :
   L1030 = 2BE2 :
   L1031 = 2BE6 :
   L1032 = 2BED :
   L1033 = 2BF3 :
   L1034 = 2BF6 :
   L1035 = 2BF8 :
   L1036 = 2BFB :
   L1037 = 2BFE : 2BF3
   L1038 = 2C01 :
   L1039 = 2C04 :
    L104 = 20E3 : 20DA
   L1040 = 2C04 :
   L1041 = 2C04 :
   L1042 = 2C04 :
   L1043 = 2C04 :
   L1044 = 2C04 : 2BFB
   L1045 = 2C06 :
   L1046 = 2C08 :
   L1047 = 2C0A :
   L1048 = 2C0C :
   L1049 = 2C0F :
    L105 = 20E5 :
   L1050 = 2C11 :
   L1051 = 2C14 :
   L1052 = 2C17 : 2C0C
   L1053 = 2C1A :
   L1054 = 2C1D :
   L1055 = 2C1D : 2C14
   L1056 = 2C1F :
   L1057 = 2C21 :
   L1058 = 2C23 :
   L1059 = 2C25 :
    L106 = 20E8 :
   L1060 = 2C28 :
   L1061 = 2C2A :
   L1062 = 2C2D :
   L1063 = 2C30 : 2C25
   L1064 = 2C33 :
   L1065 = 2C36 :
   L1066 = 2C36 : 2C2D
   L1067 = 2C38 :
   L1068 = 2C3A :
   L1069 = 2C3C :
    L107 = 20F3 :
   L1070 = 2C3E :
   L1071 = 2C41 :
   L1072 = 2C43 :
   L1073 = 2C46 :
   L1074 = 2C49 : 2C3E
   L1075 = 2C4C :
   L1076 = 2C4F :
   L1077 = 2C4F :
   L1078 = 2C4F : 2C46
   L1079 = 2C52 :
    L108 = 20F5 :
   L1080 = 2C56 :
   L1081 = 2C61 :
   L1082 = 2C67 :
   L1083 = 2C6A :
   L1084 = 2C6C :
   L1085 = 2C6F :
   L1086 = 2C72 : 2C67
   L1087 = 2C75 :
   L1088 = 2C78 :
   L1089 = 2C78 : 2C6F
    L109 = 20FC :
   L1090 = 2C7B :
   L1091 = 2C7F :
   L1092 = 2C8A :
   L1093 = 2C90 :
   L1094 = 2C93 :
   L1095 = 2C95 :
   L1096 = 2C98 :
   L1097 = 2C9B : 2C90
   L1098 = 2C9E :
   L1099 = 2CA1 :
     L11 = 2013 :
    L110 = 20FF :
   L1100 = 2CA1 : 2C98
   L1101 = 2CA4 :
   L1102 = 2CA8 :
   L1103 = 2CB3 :
   L1104 = 2CB9 :
   L1105 = 2CBC :
   L1106 = 2CBE :
   L1107 = 2CC1 :
   L1108 = 2CC4 : 2CB9
   L1109 = 2CC7 :
    L111 = 2101 :
   L1110 = 2CCA :
   L1111 = 2CCA :
   L1112 = 2CCA : 2CC1
   L1113 = 2CCC :
   L1114 = 2CCE :
   L1115 = 2CD1 :
   L1116 = 2CDC :
   L1117 = 2CDE :
   L1118 = 2CE5 :
   L1119 = 2CE8 :
    L112 = 2104 :
   L1120 = 2CEA :
   L1121 = 2CED :
   L1122 = 2CF0 : 2CE5
   L1123 = 2CF3 :
   L1124 = 2CF6 :
   L1125 = 2CF6 : 2CED
   L1126 = 2CF8 :
   L1127 = 2CFA :
   L1128 = 2CFD :
   L1129 = 2D08 :
    L113 = 2107 : 20FC
   L1130 = 2D0E :
   L1131 = 2D11 :
   L1132 = 2D13 :
   L1133 = 2D16 :
   L1134 = 2D19 : 2D0E
   L1135 = 2D1C :
   L1136 = 2D1F :
   L1137 = 2D1F : 2D16
   L1138 = 2D21 :
   L1139 = 2D23 :
    L114 = 210A :
   L1140 = 2D26 :
   L1141 = 2D31 :
   L1142 = 2D37 :
   L1143 = 2D3A :
   L1144 = 2D3C :
   L1145 = 2D3F :
   L1146 = 2D42 : 2D37
   L1147 = 2D45 :
   L1148 = 2D48 :
   L1149 = 2D48 :
    L115 = 210D :
   L1150 = 2D48 : 2D3F
   L1151 = 2D4B :
   L1152 = 2D4F :
   L1153 = 2D57 :
   L1154 = 2D59 :
   L1155 = 2D60 :
   L1156 = 2D63 :
   L1157 = 2D65 :
   L1158 = 2D68 :
   L1159 = 2D6B : 2D60
    L116 = 210D : 2104
   L1160 = 2D6E :
   L1161 = 2D71 :
   L1162 = 2D71 : 2D68
   L1163 = 2D74 :
   L1164 = 2D78 :
   L1165 = 2D83 :
   L1166 = 2D89 :
   L1167 = 2D8C :
   L1168 = 2D8E :
   L1169 = 2D91 :
    L117 = 210F :
   L1170 = 2D94 : 2D89
   L1171 = 2D97 :
   L1172 = 2D9A :
   L1173 = 2D9A : 2D91
   L1174 = 2D9D :
   L1175 = 2DA1 :
   L1176 = 2DAC :
   L1177 = 2DB2 :
   L1178 = 2DB5 :
   L1179 = 2DB7 :
    L118 = 2112 :
   L1180 = 2DBA :
   L1181 = 2DBD : 2DB2
   L1182 = 2DC0 :
   L1183 = 2DC3 :
   L1184 = 2DC3 :
   L1185 = 2DC3 :
   L1186 = 2DC3 :
   L1187 = 2DC3 :
   L1188 = 2DC3 : 2DBA
   L1189 = 2DC6 :
    L119 = 211D :
   L1190 = 2DC8 :
   L1191 = 2DCA :
   L1192 = 2DCD :
   L1193 = 2DCF :
   L1194 = 2DD2 :
   L1195 = 2DD5 : 2DCA
   L1196 = 2DD8 :
   L1197 = 2DDB :
   L1198 = 2DDB : 2DD2
   L1199 = 2DDE :
     L12 = 2013 :
    L120 = 2123 :
   L1200 = 2DE0 :
   L1201 = 2DE2 :
   L1202 = 2DE5 :
   L1203 = 2DE7 :
   L1204 = 2DEA :
   L1205 = 2DED : 2DE2
   L1206 = 2DF0 :
   L1207 = 2DF3 :
   L1208 = 2DF3 : 2DEA
   L1209 = 2DF6 :
    L121 = 2126 :
   L1210 = 2DF8 :
   L1211 = 2DFA :
   L1212 = 2DFD :
   L1213 = 2DFF :
   L1214 = 2E02 :
   L1215 = 2E05 : 2DFA
   L1216 = 2E08 :
   L1217 = 2E0B :
   L1218 = 2E0B :
   L1219 = 2E0B : 2E02
    L122 = 2128 :
   L1220 = 2E0E :
   L1221 = 2E19 :
   L1222 = 2E1F :
   L1223 = 2E22 :
   L1224 = 2E24 :
   L1225 = 2E27 :
   L1226 = 2E2A : 2E1F
   L1227 = 2E2D :
   L1228 = 2E30 :
   L1229 = 2E30 : 2E27
    L123 = 212B :
   L1230 = 2E33 :
   L1231 = 2E3E :
   L1232 = 2E44 :
   L1233 = 2E47 :
   L1234 = 2E49 :
   L1235 = 2E4C :
   L1236 = 2E4F : 2E44
   L1237 = 2E52 :
   L1238 = 2E55 :
   L1239 = 2E55 : 2E4C
    L124 = 212E : 2123
   L1240 = 2E58 :
   L1241 = 2E63 :
   L1242 = 2E69 :
   L1243 = 2E6C :
   L1244 = 2E6E :
   L1245 = 2E71 :
   L1246 = 2E74 : 2E69
   L1247 = 2E77 :
   L1248 = 2E7A :
   L1249 = 2E7A :
    L125 = 2131 :
   L1250 = 2E7A : 2E71
   L1251 = 2E7D :
   L1252 = 2E80 :
   L1253 = 2E8B :
   L1254 = 2E8D :
   L1255 = 2E94 :
   L1256 = 2E97 :
   L1257 = 2E99 :
   L1258 = 2E9C :
   L1259 = 2E9F : 2E94
    L126 = 2134 :
   L1260 = 2EA2 :
   L1261 = 2EA5 :
   L1262 = 2EA5 : 2E9C
   L1263 = 2EA8 :
   L1264 = 2EAB :
   L1265 = 2EB6 :
   L1266 = 2EBC :
   L1267 = 2EBF :
   L1268 = 2EC1 :
   L1269 = 2EC4 :
    L127 = 2134 : 212B
   L1270 = 2EC7 : 2EBC
   L1271 = 2ECA :
   L1272 = 2ECD :
   L1273 = 2ECD : 2EC4
   L1274 = 2ED0 :
   L1275 = 2ED3 :
   L1276 = 2EDE :
   L1277 = 2EE4 :
   L1278 = 2EE7 :
   L1279 = 2EE9 :
    L128 = 2136 :
   L1280 = 2EEC :
   L1281 = 2EEF : 2EE4
   L1282 = 2EF2 :
   L1283 = 2EF5 :
   L1284 = 2EF5 :
   L1285 = 2EF5 : 2EEC
   L1286 = 2EF8 :
   L1287 = 2F00 :
   L1288 = 2F02 :
   L1289 = 2F09 :
    L129 = 2139 :
   L1290 = 2F0C :
   L1291 = 2F0E :
   L1292 = 2F11 :
   L1293 = 2F14 : 2F09
   L1294 = 2F17 :
   L1295 = 2F1A :
   L1296 = 2F1A : 2F11
   L1297 = 2F1D :
   L1298 = 2F28 :
   L1299 = 2F2E :
     L13 = 2016 :
    L130 = 2144 :
   L1300 = 2F31 :
   L1301 = 2F33 :
   L1302 = 2F36 :
   L1303 = 2F39 : 2F2E
   L1304 = 2F3C :
   L1305 = 2F3F :
   L1306 = 2F3F : 2F36
   L1307 = 2F42 :
   L1308 = 2F4D :
   L1309 = 2F53 :
    L131 = 214A :
   L1310 = 2F56 :
   L1311 = 2F58 :
   L1312 = 2F5B :
   L1313 = 2F5E : 2F53
   L1314 = 2F61 :
   L1315 = 2F64 :
   L1316 = 2F64 :
   L1317 = 2F64 :
   L1318 = 2F64 :
   L1319 = 2F64 :
    L132 = 214D :
   L1320 = 2F64 : 2F5B
   L1321 = 2F67 :
   L1322 = 2F6A :
   L1323 = 2F6C :
   L1324 = 2F6E :
   L1325 = 2F70 :
   L1326 = 2F73 :
   L1327 = 2F75 :
   L1328 = 2F78 :
   L1329 = 2F7B : 2F70
    L133 = 214F :
   L1330 = 2F7E :
   L1331 = 2F81 :
   L1332 = 2F81 : 2F78
   L1333 = 2F84 :
   L1334 = 2F87 :
   L1335 = 2F89 :
   L1336 = 2F8B :
   L1337 = 2F8D :
   L1338 = 2F90 :
   L1339 = 2F92 :
    L134 = 2152 :
   L1340 = 2F95 :
   L1341 = 2F98 : 2F8D
   L1342 = 2F9B :
   L1343 = 2F9E :
   L1344 = 2F9E : 2F95
   L1345 = 2FA1 :
   L1346 = 2FA4 :
   L1347 = 2FA6 :
   L1348 = 2FA8 :
   L1349 = 2FAA :
    L135 = 2155 : 214A
   L1350 = 2FAD :
   L1351 = 2FAF :
   L1352 = 2FB2 :
   L1353 = 2FB5 : 2FAA
   L1354 = 2FB8 :
   L1355 = 2FBB :
   L1356 = 2FBB :
   L1357 = 2FBB : 2FB2
   L1358 = 2FBE :
   L1359 = 2FC2 :
    L136 = 2158 :
   L1360 = 2FC6 :
   L1361 = 2FCF :
   L1362 = 2FD5 :
   L1363 = 2FD8 :
   L1364 = 2FDA :
   L1365 = 2FDD :
   L1366 = 2FE0 : 2FD5
   L1367 = 2FE3 :
   L1368 = 2FE6 :
   L1369 = 2FE6 : 2FDD
    L137 = 215B :
   L1370 = 2FE9 :
   L1371 = 2FED :
   L1372 = 2FF1 :
   L1373 = 2FFA :
   L1374 = 3000 :
   L1375 = 3003 :
   L1376 = 3005 :
   L1377 = 3008 :
   L1378 = 300B : 3000
   L1379 = 300E :
    L138 = 215B :
   L1380 = 3011 :
   L1381 = 3011 : 3008
   L1382 = 3014 :
   L1383 = 3018 :
   L1384 = 301C :
   L1385 = 3025 :
   L1386 = 302B :
   L1387 = 302E :
   L1388 = 3030 :
   L1389 = 3033 :
    L139 = 215B : 2152
   L1390 = 3036 : 302B
   L1391 = 3039 :
   L1392 = 303C :
   L1393 = 303C :
   L1394 = 303C : 3033
   L1395 = 303F :
   L1396 = 3042 :
   L1397 = 3046 :
   L1398 = 304C :
   L1399 = 304E :
     L14 = 2019 :
    L140 = 215E :
   L1400 = 3055 :
   L1401 = 3058 :
   L1402 = 305A :
   L1403 = 305D :
   L1404 = 3060 : 3055
   L1405 = 3063 :
   L1406 = 3066 :
   L1407 = 3066 : 305D
   L1408 = 3069 :
   L1409 = 306C :
    L141 = 2166 :
   L1410 = 3070 :
   L1411 = 3072 :
   L1412 = 3078 :
   L1413 = 307B :
   L1414 = 307D :
   L1415 = 3080 :
   L1416 = 3083 : 3078
   L1417 = 3086 :
   L1418 = 3089 :
   L1419 = 3089 : 3080
    L142 = 2168 :
   L1420 = 308C :
   L1421 = 308F :
   L1422 = 3093 :
   L1423 = 3095 :
   L1424 = 309B :
   L1425 = 309E :
   L1426 = 30A0 :
   L1427 = 30A3 :
   L1428 = 30A6 : 309B
   L1429 = 30A9 :
    L143 = 216F :
   L1430 = 30AC :
   L1431 = 30AC :
   L1432 = 30AC : 30A3
   L1433 = 30AF :
   L1434 = 30B1 :
   L1435 = 30B3 :
   L1436 = 30B9 :
   L1437 = 30BB :
   L1438 = 30C2 :
   L1439 = 30C5 :
    L144 = 2172 :
   L1440 = 30C7 :
   L1441 = 30CA :
   L1442 = 30CD : 30C2
   L1443 = 30D0 :
   L1444 = 30D3 :
   L1445 = 30D3 : 30CA
   L1446 = 30D6 :
   L1447 = 30D8 :
   L1448 = 30DA :
   L1449 = 30DC :
    L145 = 2174 :
   L1450 = 30E2 :
   L1451 = 30E5 :
   L1452 = 30E7 :
   L1453 = 30EA :
   L1454 = 30ED : 30E2
   L1455 = 30F0 :
   L1456 = 30F3 :
   L1457 = 30F3 : 30EA
   L1458 = 30F6 :
   L1459 = 30F8 :
    L146 = 2177 :
   L1460 = 30FA :
   L1461 = 30FC :
   L1462 = 3102 :
   L1463 = 3105 :
   L1464 = 3107 :
   L1465 = 310A :
   L1466 = 310D : 3102
   L1467 = 3110 :
   L1468 = 3113 :
   L1469 = 3113 :
    L147 = 217A : 216F
   L1470 = 3113 :
   L1471 = 3113 :
   L1472 = 3113 :
   L1473 = 3113 : 310A
   L1474 = 3116 :
   L1475 = 311B :
   L1476 = 311D :
   L1477 = 3120 :
   L1478 = 3122 :
   L1479 = 3125 :
    L148 = 217D :
   L1480 = 3128 : 311D
   L1481 = 312B :
   L1482 = 312E :
   L1483 = 312E : 3125
   L1484 = 3131 :
   L1485 = 3136 :
   L1486 = 3138 :
   L1487 = 313B :
   L1488 = 313D :
   L1489 = 3140 :
    L149 = 2180 :
   L1490 = 3143 : 3138
   L1491 = 3146 :
   L1492 = 3149 :
   L1493 = 3149 : 3140
   L1494 = 314C :
   L1495 = 3151 :
   L1496 = 3153 :
   L1497 = 3156 :
   L1498 = 3158 :
   L1499 = 315B :
     L15 = 2019 :
    L150 = 2180 : 2177
   L1500 = 315E : 3153
   L1501 = 3161 :
   L1502 = 3164 :
   L1503 = 3164 :
   L1504 = 3164 : 315B
   L1505 = 3167 :
   L1506 = 3173 :
   L1507 = 3179 :
   L1508 = 317C :
   L1509 = 317E :
    L151 = 2183 :
   L1510 = 3181 :
   L1511 = 3184 : 3179
   L1512 = 3187 :
   L1513 = 318A :
   L1514 = 318A : 3181
   L1515 = 318D :
   L1516 = 3199 :
   L1517 = 319F :
   L1518 = 31A2 :
   L1519 = 31A4 :
    L152 = 218E :
   L1520 = 31A7 :
   L1521 = 31AA : 319F
   L1522 = 31AD :
   L1523 = 31B0 :
   L1524 = 31B0 : 31A7
   L1525 = 31B3 :
   L1526 = 31BF :
   L1527 = 31C5 :
   L1528 = 31C8 :
   L1529 = 31CA :
    L153 = 2194 :
   L1530 = 31CD :
   L1531 = 31D0 : 31C5
   L1532 = 31D3 :
   L1533 = 31D6 :
   L1534 = 31D6 :
   L1535 = 31D6 : 31CD
   L1536 = 31D9 :
   L1537 = 31DC :
   L1538 = 31E8 :
   L1539 = 31EA :
    L154 = 2197 :
   L1540 = 31F1 :
   L1541 = 31F4 :
   L1542 = 31F6 :
   L1543 = 31F9 :
   L1544 = 31FC : 31F1
   L1545 = 31FF :
   L1546 = 3202 :
   L1547 = 3202 : 31F9
   L1548 = 3205 :
   L1549 = 3208 :
    L155 = 2199 :
   L1550 = 3214 :
   L1551 = 321A :
   L1552 = 321D :
   L1553 = 321F :
   L1554 = 3222 :
   L1555 = 3225 : 321A
   L1556 = 3228 :
   L1557 = 322B :
   L1558 = 322B : 3222
   L1559 = 322E :
    L156 = 219C :
   L1560 = 3231 :
   L1561 = 323D :
   L1562 = 3243 :
   L1563 = 3246 :
   L1564 = 3248 :
   L1565 = 324B :
   L1566 = 324E : 3243
   L1567 = 3251 :
   L1568 = 3254 :
   L1569 = 3254 :
    L157 = 219F : 2194
   L1570 = 3254 : 324B
   L1571 = 3257 :
   L1572 = 3260 :
   L1573 = 3262 :
   L1574 = 3269 :
   L1575 = 326C :
   L1576 = 326E :
   L1577 = 3271 :
   L1578 = 3274 : 3269
   L1579 = 3277 :
    L158 = 21A2 :
   L1580 = 327A :
   L1581 = 327A : 3271
   L1582 = 327D :
   L1583 = 3284 :
   L1584 = 328A :
   L1585 = 328D :
   L1586 = 328F :
   L1587 = 3292 :
   L1588 = 3295 : 328A
   L1589 = 3298 :
    L159 = 21A5 :
   L1590 = 329B :
   L1591 = 329B : 3292
   L1592 = 329E :
   L1593 = 32A5 :
   L1594 = 32AB :
   L1595 = 32AE :
   L1596 = 32B0 :
   L1597 = 32B3 :
   L1598 = 32B6 : 32AB
   L1599 = 32B9 :
     L16 = 201C :
    L160 = 21A5 : 219C
   L1600 = 32BC :
   L1601 = 32BC :
   L1602 = 32BC :
   L1603 = 32BC :
   L1604 = 32BC :
   L1605 = 32BC : 32B3
   L1606 = 32BF :
   L1607 = 32C1 :
   L1608 = 32C3 :
   L1609 = 32C6 :
    L161 = 21A8 :
   L1610 = 32C8 :
   L1611 = 32CB :
   L1612 = 32CE : 32C3
   L1613 = 32D1 :
   L1614 = 32D4 :
   L1615 = 32D4 : 32CB
   L1616 = 32D7 :
   L1617 = 32D9 :
   L1618 = 32DB :
   L1619 = 32DE :
    L162 = 21B3 :
   L1620 = 32E0 :
   L1621 = 32E3 :
   L1622 = 32E6 : 32DB
   L1623 = 32E9 :
   L1624 = 32EC :
   L1625 = 32EC : 32E3
   L1626 = 32EF :
   L1627 = 32F1 :
   L1628 = 32F3 :
   L1629 = 32F6 :
    L163 = 21B9 :
   L1630 = 32F8 :
   L1631 = 32FB :
   L1632 = 32FE : 32F3
   L1633 = 3301 :
   L1634 = 3304 :
   L1635 = 3304 :
   L1636 = 3304 : 32FB
   L1637 = 3307 :
   L1638 = 3312 :
   L1639 = 3318 :
    L164 = 21BC :
   L1640 = 331B :
   L1641 = 331D :
   L1642 = 3320 :
   L1643 = 3323 : 3318
   L1644 = 3326 :
   L1645 = 3329 :
   L1646 = 3329 : 3320
   L1647 = 332C :
   L1648 = 3337 :
   L1649 = 333D :
    L165 = 21BE :
   L1650 = 3340 :
   L1651 = 3342 :
   L1652 = 3345 :
   L1653 = 3348 : 333D
   L1654 = 334B :
   L1655 = 334E :
   L1656 = 334E : 3345
   L1657 = 3351 :
   L1658 = 335C :
   L1659 = 3362 :
    L166 = 21C1 :
   L1660 = 3365 :
   L1661 = 3367 :
   L1662 = 336A :
   L1663 = 336D : 3362
   L1664 = 3370 :
   L1665 = 3373 :
   L1666 = 3373 :
   L1667 = 3373 : 336A
   L1668 = 3376 :
   L1669 = 3379 :
    L167 = 21C4 : 21B9
   L1670 = 3384 :
   L1671 = 3386 :
   L1672 = 338D :
   L1673 = 3390 :
   L1674 = 3392 :
   L1675 = 3395 :
   L1676 = 3398 : 338D
   L1677 = 339B :
   L1678 = 339E :
   L1679 = 339E : 3395
    L168 = 21C7 :
   L1680 = 33A1 :
   L1681 = 33A4 :
   L1682 = 33AF :
   L1683 = 33B5 :
   L1684 = 33B8 :
   L1685 = 33BA :
   L1686 = 33BD :
   L1687 = 33C0 : 33B5
   L1688 = 33C3 :
   L1689 = 33C6 :
    L169 = 21CA :
   L1690 = 33C6 : 33BD
   L1691 = 33C9 :
   L1692 = 33CC :
   L1693 = 33D7 :
   L1694 = 33DD :
   L1695 = 33E0 :
   L1696 = 33E2 :
   L1697 = 33E5 :
   L1698 = 33E8 : 33DD
   L1699 = 33EB :
     L17 = 201F :
    L170 = 21CA :
   L1700 = 33EE :
   L1701 = 33EE :
   L1702 = 33EE : 33E5
   L1703 = 33F1 :
   L1704 = 33F9 :
   L1705 = 33FB :
   L1706 = 3402 :
   L1707 = 3405 :
   L1708 = 3407 :
   L1709 = 340A :
    L171 = 21CA :
   L1710 = 340D : 3402
   L1711 = 3410 :
   L1712 = 3413 :
   L1713 = 3413 : 340A
   L1714 = 3416 :
   L1715 = 3421 :
   L1716 = 3427 :
   L1717 = 342A :
   L1718 = 342C :
   L1719 = 342F :
    L172 = 21CA :
   L1720 = 3432 : 3427
   L1721 = 3435 :
   L1722 = 3438 :
   L1723 = 3438 : 342F
   L1724 = 343B :
   L1725 = 3446 :
   L1726 = 344C :
   L1727 = 344F :
   L1728 = 3451 :
   L1729 = 3454 :
    L173 = 21CA :
   L1730 = 3457 : 344C
   L1731 = 345A :
   L1732 = 345D :
   L1733 = 345D :
   L1734 = 345D :
   L1735 = 345D :
   L1736 = 345D :
   L1737 = 345D : 3454
   L1738 = 3460 :
   L1739 = 3462 :
    L174 = 21CA : 21C1
   L1740 = 3464 :
   L1741 = 3467 :
   L1742 = 3469 :
   L1743 = 346C :
   L1744 = 346F : 3464
   L1745 = 3472 :
   L1746 = 3475 :
   L1747 = 3475 : 346C
   L1748 = 3478 :
   L1749 = 347A :
    L175 = 21CC :
   L1750 = 347C :
   L1751 = 347F :
   L1752 = 3481 :
   L1753 = 3484 :
   L1754 = 3487 : 347C
   L1755 = 348A :
   L1756 = 348D :
   L1757 = 348D : 3484
   L1758 = 3490 :
   L1759 = 3492 :
    L176 = 21CF :
   L1760 = 3494 :
   L1761 = 3497 :
   L1762 = 3499 :
   L1763 = 349C :
   L1764 = 349F : 3494
   L1765 = 34A2 :
   L1766 = 34A5 :
   L1767 = 34A5 :
   L1768 = 34A5 : 349C
   L1769 = 34A8 :
    L177 = 21D1 :
   L1770 = 34B3 :
   L1771 = 34B9 :
   L1772 = 34BC :
   L1773 = 34BE :
   L1774 = 34C1 :
   L1775 = 34C4 : 34B9
   L1776 = 34C7 :
   L1777 = 34CA :
   L1778 = 34CA : 34C1
   L1779 = 34CD :
    L178 = 21D3 :
   L1780 = 34D8 :
   L1781 = 34DE :
   L1782 = 34E1 :
   L1783 = 34E3 :
   L1784 = 34E6 :
   L1785 = 34E9 : 34DE
   L1786 = 34EC :
   L1787 = 34EF :
   L1788 = 34EF : 34E6
   L1789 = 34F2 :
    L179 = 21D5 :
   L1790 = 34FD :
   L1791 = 3503 :
   L1792 = 3506 :
   L1793 = 3508 :
   L1794 = 350B :
   L1795 = 350E : 3503
   L1796 = 3511 :
   L1797 = 3514 :
   L1798 = 3514 :
   L1799 = 3514 : 350B
     L18 = 2022 :
    L180 = 21D8 :
   L1800 = 3517 :
   L1801 = 351A :
   L1802 = 3525 :
   L1803 = 3527 :
   L1804 = 352E :
   L1805 = 3531 :
   L1806 = 3533 :
   L1807 = 3536 :
   L1808 = 3539 : 352E
   L1809 = 353C :
    L181 = 21DA :
   L1810 = 353F :
   L1811 = 353F : 3536
   L1812 = 3542 :
   L1813 = 3545 :
   L1814 = 3550 :
   L1815 = 3556 :
   L1816 = 3559 :
   L1817 = 355B :
   L1818 = 355E :
   L1819 = 3561 : 3556
    L182 = 21DD :
   L1820 = 3564 :
   L1821 = 3567 :
   L1822 = 3567 : 355E
   L1823 = 356A :
   L1824 = 356D :
   L1825 = 3578 :
   L1826 = 357E :
   L1827 = 3581 :
   L1828 = 3583 :
   L1829 = 3586 :
    L183 = 21E0 : 21D5
   L1830 = 3589 : 357E
   L1831 = 358C :
   L1832 = 358F :
   L1833 = 358F :
   L1834 = 358F : 3586
   L1835 = 3592 :
   L1836 = 359A :
   L1837 = 359C :
   L1838 = 35A3 :
   L1839 = 35A6 :
    L184 = 21E3 :
   L1840 = 35A8 :
   L1841 = 35AB :
   L1842 = 35AE : 35A3
   L1843 = 35B1 :
   L1844 = 35B4 :
   L1845 = 35B4 : 35AB
   L1846 = 35B7 :
   L1847 = 35C2 :
   L1848 = 35C8 :
   L1849 = 35CB :
    L185 = 21E6 :
   L1850 = 35CD :
   L1851 = 35D0 :
   L1852 = 35D3 : 35C8
   L1853 = 35D6 :
   L1854 = 35D9 :
   L1855 = 35D9 : 35D0
   L1856 = 35DC :
   L1857 = 35E7 :
   L1858 = 35ED :
   L1859 = 35F0 :
    L186 = 21E6 : 21DD
   L1860 = 35F2 :
   L1861 = 35F5 :
   L1862 = 35F8 : 35ED
   L1863 = 35FB :
   L1864 = 35FE :
   L1865 = 35FE :
   L1866 = 35FE :
   L1867 = 35FE :
   L1868 = 35FE :
   L1869 = 35FE : 35F5
    L187 = 21E8 :
   L1870 = 3601 :
   L1871 = 3604 :
   L1872 = 3606 :
   L1873 = 3608 :
   L1874 = 360A :
   L1875 = 360D :
   L1876 = 360F :
   L1877 = 3612 :
   L1878 = 3615 : 360A
   L1879 = 3618 :
    L188 = 21EB :
   L1880 = 361B :
   L1881 = 361B : 3612
   L1882 = 361E :
   L1883 = 3621 :
   L1884 = 3623 :
   L1885 = 3625 :
   L1886 = 3627 :
   L1887 = 362A :
   L1888 = 362C :
   L1889 = 362F :
    L189 = 21ED :
   L1890 = 3632 : 3627
   L1891 = 3635 :
   L1892 = 3638 :
   L1893 = 3638 : 362F
   L1894 = 363B :
   L1895 = 363E :
   L1896 = 3640 :
   L1897 = 3642 :
   L1898 = 3644 :
   L1899 = 3647 :
     L19 = 2022 :
    L190 = 21EF :
   L1900 = 3649 :
   L1901 = 364C :
   L1902 = 364F : 3644
   L1903 = 3652 :
   L1904 = 3655 :
   L1905 = 3655 :
   L1906 = 3655 : 364C
   L1907 = 3658 :
   L1908 = 365C :
   L1909 = 3660 :
    L191 = 21F1 :
   L1910 = 3669 :
   L1911 = 366F :
   L1912 = 3672 :
   L1913 = 3674 :
   L1914 = 3677 :
   L1915 = 367A : 366F
   L1916 = 367D :
   L1917 = 3680 :
   L1918 = 3680 : 3677
   L1919 = 3683 :
    L192 = 21F4 :
   L1920 = 3687 :
   L1921 = 368B :
   L1922 = 3694 :
   L1923 = 369A :
   L1924 = 369D :
   L1925 = 369F :
   L1926 = 36A2 :
   L1927 = 36A5 : 369A
   L1928 = 36A8 :
   L1929 = 36AB :
    L193 = 21F6 :
   L1930 = 36AB : 36A2
   L1931 = 36AE :
   L1932 = 36B2 :
   L1933 = 36B6 :
   L1934 = 36BF :
   L1935 = 36C5 :
   L1936 = 36C8 :
   L1937 = 36CA :
   L1938 = 36CD :
   L1939 = 36D0 : 36C5
    L194 = 21F9 :
   L1940 = 36D3 :
   L1941 = 36D6 :
   L1942 = 36D6 :
   L1943 = 36D6 : 36CD
   L1944 = 36D9 :
   L1945 = 36DC :
   L1946 = 36E0 :
   L1947 = 36E6 :
   L1948 = 36E8 :
   L1949 = 36EF :
    L195 = 21FC : 21F1
   L1950 = 36F2 :
   L1951 = 36F4 :
   L1952 = 36F7 :
   L1953 = 36FA : 36EF
   L1954 = 36FD :
   L1955 = 3700 :
   L1956 = 3700 : 36F7
   L1957 = 3703 :
   L1958 = 3706 :
   L1959 = 370A :
    L196 = 21FF :
   L1960 = 370C :
   L1961 = 3712 :
   L1962 = 3715 :
   L1963 = 3717 :
   L1964 = 371A :
   L1965 = 371D : 3712
   L1966 = 3720 :
   L1967 = 3723 :
   L1968 = 3723 : 371A
   L1969 = 3726 :
    L197 = 2202 :
   L1970 = 3729 :
   L1971 = 372D :
   L1972 = 372F :
   L1973 = 3735 :
   L1974 = 3738 :
   L1975 = 373A :
   L1976 = 373D :
   L1977 = 3740 : 3735
   L1978 = 3743 :
   L1979 = 3746 :
    L198 = 2202 : 21F9
   L1980 = 3746 :
   L1981 = 3746 : 373D
   L1982 = 3749 :
   L1983 = 374B :
   L1984 = 374D :
   L1985 = 3753 :
   L1986 = 3755 :
   L1987 = 375C :
   L1988 = 375F :
   L1989 = 3761 :
    L199 = 2204 :
   L1990 = 3764 :
   L1991 = 3767 : 375C
   L1992 = 376A :
   L1993 = 376D :
   L1994 = 376D : 3764
   L1995 = 3770 :
   L1996 = 3772 :
   L1997 = 3774 :
   L1998 = 3776 :
   L1999 = 377C :
      L2 = 2009 :
     L20 = 2022 :
    L200 = 2207 :
   L2000 = 377F :
   L2001 = 3781 :
   L2002 = 3784 :
   L2003 = 3787 : 377C
   L2004 = 378A :
   L2005 = 378D :
   L2006 = 378D : 3784
   L2007 = 3790 :
   L2008 = 3792 :
   L2009 = 3794 :
    L201 = 2209 :
   L2010 = 3796 :
   L2011 = 379C :
   L2012 = 379F :
   L2013 = 37A1 :
   L2014 = 37A4 :
   L2015 = 37A7 : 379C
   L2016 = 37AA :
   L2017 = 37AD :
   L2018 = 37AD :
   L2019 = 37AD :
    L202 = 220B :
   L2020 = 37AD :
   L2021 = 37AD :
   L2022 = 37AD : 37A4
   L2023 = 37B0 :
   L2024 = 37B5 :
   L2025 = 37B7 :
   L2026 = 37BA :
   L2027 = 37BC :
   L2028 = 37BF :
   L2029 = 37C2 : 37B7
    L203 = 220D :
   L2030 = 37C5 :
   L2031 = 37C8 :
   L2032 = 37C8 : 37BF
   L2033 = 37CB :
   L2034 = 37D0 :
   L2035 = 37D2 :
   L2036 = 37D5 :
   L2037 = 37D7 :
   L2038 = 37DA :
   L2039 = 37DD : 37D2
    L204 = 2210 :
   L2040 = 37E0 :
   L2041 = 37E3 :
   L2042 = 37E3 : 37DA
   L2043 = 37E6 :
   L2044 = 37EB :
   L2045 = 37ED :
   L2046 = 37F0 :
   L2047 = 37F2 :
   L2048 = 37F5 :
   L2049 = 37F8 : 37ED
    L205 = 2212 :
   L2050 = 37FB :
   L2051 = 37FE :
   L2052 = 37FE :
   L2053 = 37FE : 37F5
   L2054 = 3801 :
   L2055 = 380D :
   L2056 = 3813 :
   L2057 = 3816 :
   L2058 = 3818 :
   L2059 = 381B :
    L206 = 2215 :
   L2060 = 381E : 3813
   L2061 = 3821 :
   L2062 = 3824 :
   L2063 = 3824 : 381B
   L2064 = 3827 :
   L2065 = 3833 :
   L2066 = 3839 :
   L2067 = 383C :
   L2068 = 383E :
   L2069 = 3841 :
    L207 = 2218 : 220D
   L2070 = 3844 : 3839
   L2071 = 3847 :
   L2072 = 384A :
   L2073 = 384A : 3841
   L2074 = 384D :
   L2075 = 3859 :
   L2076 = 385F :
   L2077 = 3862 :
   L2078 = 3864 :
   L2079 = 3867 :
    L208 = 221B :
   L2080 = 386A : 385F
   L2081 = 386D :
   L2082 = 3870 :
   L2083 = 3870 :
   L2084 = 3870 : 3867
   L2085 = 3873 :
   L2086 = 3876 :
   L2087 = 3882 :
   L2088 = 3884 :
   L2089 = 388B :
    L209 = 221E :
   L2090 = 388E :
   L2091 = 3890 :
   L2092 = 3893 :
   L2093 = 3896 : 388B
   L2094 = 3899 :
   L2095 = 389C :
   L2096 = 389C : 3893
   L2097 = 389F :
   L2098 = 38A2 :
   L2099 = 38AE :
     L21 = 2022 :
    L210 = 221E :
   L2100 = 38B4 :
   L2101 = 38B7 :
   L2102 = 38B9 :
   L2103 = 38BC :
   L2104 = 38BF : 38B4
   L2105 = 38C2 :
   L2106 = 38C5 :
   L2107 = 38C5 : 38BC
   L2108 = 38C8 :
   L2109 = 38CB :
    L211 = 221E : 2215
   L2110 = 38D7 :
   L2111 = 38DD :
   L2112 = 38E0 :
   L2113 = 38E2 :
   L2114 = 38E5 :
   L2115 = 38E8 : 38DD
   L2116 = 38EB :
   L2117 = 38EE :
   L2118 = 38EE :
   L2119 = 38EE : 38E5
    L212 = 2221 :
   L2120 = 38F1 :
   L2121 = 38FA :
   L2122 = 38FC :
   L2123 = 3903 :
   L2124 = 3906 :
   L2125 = 3908 :
   L2126 = 390B :
   L2127 = 390E : 3903
   L2128 = 3911 :
   L2129 = 3914 :
    L213 = 2225 :
   L2130 = 3914 : 390B
   L2131 = 3917 :
   L2132 = 391E :
   L2133 = 3924 :
   L2134 = 3927 :
   L2135 = 3929 :
   L2136 = 392C :
   L2137 = 392F : 3924
   L2138 = 3932 :
   L2139 = 3935 :
    L214 = 2229 :
   L2140 = 3935 : 392C
   L2141 = 3938 :
   L2142 = 393F :
   L2143 = 3945 :
   L2144 = 3948 :
   L2145 = 394A :
   L2146 = 394D :
   L2147 = 3950 : 3945
   L2148 = 3953 :
   L2149 = 3956 :
    L215 = 2232 :
   L2150 = 3956 :
   L2151 = 3956 :
   L2152 = 3956 :
   L2153 = 3956 :
   L2154 = 3956 : 394D
   L2155 = 3958 :
   L2156 = 395A :
   L2157 = 395C :
   L2158 = 395F :
   L2159 = 3961 :
    L216 = 2238 :
   L2160 = 3964 :
   L2161 = 3967 : 395C
   L2162 = 396A :
   L2163 = 396D :
   L2164 = 396D : 3964
   L2165 = 396F :
   L2166 = 3971 :
   L2167 = 3973 :
   L2168 = 3976 :
   L2169 = 3978 :
    L217 = 223B :
   L2170 = 397B :
   L2171 = 397E : 3973
   L2172 = 3981 :
   L2173 = 3984 :
   L2174 = 3984 : 397B
   L2175 = 3986 :
   L2176 = 3988 :
   L2177 = 398A :
   L2178 = 398D :
   L2179 = 398F :
    L218 = 223D :
   L2180 = 3992 :
   L2181 = 3995 : 398A
   L2182 = 3998 :
   L2183 = 399B :
   L2184 = 399B :
   L2185 = 399B : 3992
   L2186 = 399E :
   L2187 = 39A9 :
   L2188 = 39AF :
   L2189 = 39B2 :
    L219 = 2240 :
   L2190 = 39B4 :
   L2191 = 39B7 :
   L2192 = 39BA : 39AF
   L2193 = 39BD :
   L2194 = 39C0 :
   L2195 = 39C0 : 39B7
   L2196 = 39C3 :
   L2197 = 39CE :
   L2198 = 39D4 :
   L2199 = 39D7 :
     L22 = 2022 :
    L220 = 2243 : 2238
   L2200 = 39D9 :
   L2201 = 39DC :
   L2202 = 39DF : 39D4
   L2203 = 39E2 :
   L2204 = 39E5 :
   L2205 = 39E5 : 39DC
   L2206 = 39E8 :
   L2207 = 39F3 :
   L2208 = 39F9 :
   L2209 = 39FC :
    L221 = 2246 :
   L2210 = 39FE :
   L2211 = 3A01 :
   L2212 = 3A04 : 39F9
   L2213 = 3A07 :
   L2214 = 3A0A :
   L2215 = 3A0A :
   L2216 = 3A0A : 3A01
   L2217 = 3A0C :
   L2218 = 3A0F :
   L2219 = 3A1A :
    L222 = 2249 :
   L2220 = 3A1C :
   L2221 = 3A23 :
   L2222 = 3A26 :
   L2223 = 3A28 :
   L2224 = 3A2B :
   L2225 = 3A2E : 3A23
   L2226 = 3A31 :
   L2227 = 3A34 :
   L2228 = 3A34 : 3A2B
   L2229 = 3A36 :
    L223 = 2249 : 2240
   L2230 = 3A39 :
   L2231 = 3A44 :
   L2232 = 3A4A :
   L2233 = 3A4D :
   L2234 = 3A4F :
   L2235 = 3A52 :
   L2236 = 3A55 : 3A4A
   L2237 = 3A58 :
   L2238 = 3A5B :
   L2239 = 3A5B : 3A52
    L224 = 224C :
   L2240 = 3A5D :
   L2241 = 3A60 :
   L2242 = 3A6B :
   L2243 = 3A71 :
   L2244 = 3A74 :
   L2245 = 3A76 :
   L2246 = 3A79 :
   L2247 = 3A7C : 3A71
   L2248 = 3A7F :
   L2249 = 3A82 :
    L225 = 2250 :
   L2250 = 3A82 :
   L2251 = 3A82 : 3A79
   L2252 = 3A85 :
   L2253 = 3A8D :
   L2254 = 3A8F :
   L2255 = 3A96 :
   L2256 = 3A99 :
   L2257 = 3A9B :
   L2258 = 3A9E :
   L2259 = 3AA1 : 3A96
    L226 = 2254 :
   L2260 = 3AA4 :
   L2261 = 3AA7 :
   L2262 = 3AA7 : 3A9E
   L2263 = 3AAA :
   L2264 = 3AB5 :
   L2265 = 3ABB :
   L2266 = 3ABE :
   L2267 = 3AC0 :
   L2268 = 3AC3 :
   L2269 = 3AC6 : 3ABB
    L227 = 225D :
   L2270 = 3AC9 :
   L2271 = 3ACC :
   L2272 = 3ACC : 3AC3
   L2273 = 3ACF :
   L2274 = 3ADA :
   L2275 = 3AE0 :
   L2276 = 3AE3 :
   L2277 = 3AE5 :
   L2278 = 3AE8 :
   L2279 = 3AEB : 3AE0
    L228 = 2263 :
   L2280 = 3AEE :
   L2281 = 3AF1 :
   L2282 = 3AF1 :
   L2283 = 3AF1 : 3AE8
   L2284 = 3AF4 :
   L2285 = 3AF7 :
   L2286 = 3AF7 :
   L2287 = 3AF9 :
   L2288 = 3AFB :
   L2289 = 3AFC :
    L229 = 2266 :
   L2290 = 3AFC : 3AF1
     L23 = 2022 :
    L230 = 2268 :
    L231 = 226B :
    L232 = 226E : 2263
    L233 = 2271 :
    L234 = 2274 :
    L235 = 2274 : 226B
    L236 = 2277 :
    L237 = 227B :
    L238 = 227F :
    L239 = 2288 :
     L24 = 2022 : 201F
    L240 = 228E :
    L241 = 2291 :
    L242 = 2293 :
    L243 = 2296 :
    L244 = 2299 : 228E
    L245 = 229C :
    L246 = 229F :
    L247 = 229F :
    L248 = 229F : 2296
    L249 = 22A1 :
     L25 = 2022 :
    L250 = 22A4 :
    L251 = 22A8 :
    L252 = 22AE :
    L253 = 22B0 :
    L254 = 22B7 :
    L255 = 22BA :
    L256 = 22BC :
    L257 = 22BF :
    L258 = 22C2 : 22B7
    L259 = 22C5 :
     L26 = 2024 :
    L260 = 22C8 :
    L261 = 22C8 : 22BF
    L262 = 22CA :
    L263 = 22CD :
    L264 = 22D1 :
    L265 = 22D3 :
    L266 = 22D9 :
    L267 = 22DC :
    L268 = 22DE :
    L269 = 22E1 :
     L27 = 202A :
    L270 = 22E4 : 22D9
    L271 = 22E7 :
    L272 = 22EA :
    L273 = 22EA : 22E1
    L274 = 22EC :
    L275 = 22EF :
    L276 = 22F3 :
    L277 = 22F5 :
    L278 = 22FB :
    L279 = 22FE :
     L28 = 202A :
    L280 = 2300 :
    L281 = 2303 :
    L282 = 2306 : 22FB
    L283 = 2309 :
    L284 = 230C :
    L285 = 230C :
    L286 = 230C : 2303
    L287 = 230F :
    L288 = 2311 :
    L289 = 2313 :
     L29 = 202A :
    L290 = 2319 :
    L291 = 231B :
    L292 = 2322 :
    L293 = 2325 :
    L294 = 2327 :
    L295 = 232A :
    L296 = 232D : 2322
    L297 = 2330 :
    L298 = 2333 :
    L299 = 2333 : 232A
      L3 = 2009 :
     L30 = 202C :
    L300 = 2336 :
    L301 = 2338 :
    L302 = 233A :
    L303 = 233C :
    L304 = 2342 :
    L305 = 2345 :
    L306 = 2347 :
    L307 = 234A :
    L308 = 234D : 2342
    L309 = 2350 :
     L31 = 202F :
    L310 = 2353 :
    L311 = 2353 : 234A
    L312 = 2356 :
    L313 = 2358 :
    L314 = 235A :
    L315 = 235C :
    L316 = 2362 :
    L317 = 2365 :
    L318 = 2367 :
    L319 = 236A :
     L32 = 202F :
    L320 = 236D : 2362
    L321 = 2370 :
    L322 = 2373 :
    L323 = 2373 :
    L324 = 2373 :
    L325 = 2373 :
    L326 = 2373 :
    L327 = 2373 : 236A
    L328 = 2375 :
    L329 = 237A :
     L33 = 202F :
    L330 = 237C :
    L331 = 237F :
    L332 = 2381 :
    L333 = 2384 :
    L334 = 2387 : 237C
    L335 = 238A :
    L336 = 238D :
    L337 = 238D : 2384
    L338 = 238F :
    L339 = 2394 :
     L34 = 202F :
    L340 = 2396 :
    L341 = 2399 :
    L342 = 239B :
    L343 = 239E :
    L344 = 23A1 : 2396
    L345 = 23A4 :
    L346 = 23A7 :
    L347 = 23A7 : 239E
    L348 = 23A9 :
    L349 = 23AE :
     L35 = 202F :
    L350 = 23B0 :
    L351 = 23B3 :
    L352 = 23B5 :
    L353 = 23B8 :
    L354 = 23BB : 23B0
    L355 = 23BE :
    L356 = 23C1 :
    L357 = 23C1 :
    L358 = 23C1 : 23B8
    L359 = 23C4 :
     L36 = 202F :
    L360 = 23D0 :
    L361 = 23D6 :
    L362 = 23D9 :
    L363 = 23DB :
    L364 = 23DE :
    L365 = 23E1 : 23D6
    L366 = 23E4 :
    L367 = 23E7 :
    L368 = 23E7 : 23DE
    L369 = 23EA :
     L37 = 202F :
    L370 = 23F6 :
    L371 = 23FC :
    L372 = 23FF :
    L373 = 2401 :
    L374 = 2404 :
    L375 = 2407 : 23FC
    L376 = 240A :
    L377 = 240D :
    L378 = 240D : 2404
    L379 = 2410 :
     L38 = 202F :
    L380 = 241C :
    L381 = 2422 :
    L382 = 2425 :
    L383 = 2427 :
    L384 = 242A :
    L385 = 242D : 2422
    L386 = 2430 :
    L387 = 2433 :
    L388 = 2433 :
    L389 = 2433 : 242A
     L39 = 202F :
    L390 = 2435 :
    L391 = 2438 :
    L392 = 2444 :
    L393 = 2446 :
    L394 = 244D :
    L395 = 2450 :
    L396 = 2452 :
    L397 = 2455 :
    L398 = 2458 : 244D
    L399 = 245B :
      L4 = 2009 :
     L40 = 2031 :
    L400 = 245E :
    L401 = 245E : 2455
    L402 = 2460 :
    L403 = 2463 :
    L404 = 246F :
    L405 = 2475 :
    L406 = 2478 :
    L407 = 247A :
    L408 = 247D :
    L409 = 2480 : 2475
     L41 = 2033 :
    L410 = 2483 :
    L411 = 2486 :
    L412 = 2486 : 247D
    L413 = 2488 :
    L414 = 248B :
    L415 = 2497 :
    L416 = 249D :
    L417 = 24A0 :
    L418 = 24A2 :
    L419 = 24A5 :
     L42 = 2035 :
    L420 = 24A8 : 249D
    L421 = 24AB :
    L422 = 24AE :
    L423 = 24AE :
    L424 = 24AE : 24A5
    L425 = 24B1 :
    L426 = 24BA :
    L427 = 24BC :
    L428 = 24C3 :
    L429 = 24C6 :
     L43 = 2038 :
    L430 = 24C8 :
    L431 = 24CB :
    L432 = 24CE : 24C3
    L433 = 24D1 :
    L434 = 24D4 :
    L435 = 24D4 : 24CB
    L436 = 24D7 :
    L437 = 24DE :
    L438 = 24E4 :
    L439 = 24E7 :
     L44 = 203A :
    L440 = 24E9 :
    L441 = 24EC :
    L442 = 24EF : 24E4
    L443 = 24F2 :
    L444 = 24F5 :
    L445 = 24F5 : 24EC
    L446 = 24F8 :
    L447 = 24FF :
    L448 = 2505 :
    L449 = 2508 :
     L45 = 203D :
    L450 = 250A :
    L451 = 250D :
    L452 = 2510 : 2505
    L453 = 2513 :
    L454 = 2516 :
    L455 = 2516 :
    L456 = 2516 :
    L457 = 2516 :
    L458 = 2516 :
    L459 = 2516 : 250D
     L46 = 2040 : 2035
    L460 = 2518 :
    L461 = 251A :
    L462 = 251C :
    L463 = 251F :
    L464 = 2521 :
    L465 = 2524 :
    L466 = 2527 : 251C
    L467 = 252A :
    L468 = 252D :
    L469 = 252D : 2524
     L47 = 2043 :
    L470 = 252F :
    L471 = 2531 :
    L472 = 2533 :
    L473 = 2536 :
    L474 = 2538 :
    L475 = 253B :
    L476 = 253E : 2533
    L477 = 2541 :
    L478 = 2544 :
    L479 = 2544 : 253B
     L48 = 2046 :
    L480 = 2546 :
    L481 = 2548 :
    L482 = 254A :
    L483 = 254D :
    L484 = 254F :
    L485 = 2552 :
    L486 = 2555 : 254A
    L487 = 2558 :
    L488 = 255B :
    L489 = 255B :
     L49 = 2046 : 203D
    L490 = 255B : 2552
    L491 = 255E :
    L492 = 2569 :
    L493 = 256F :
    L494 = 2572 :
    L495 = 2574 :
    L496 = 2577 :
    L497 = 257A : 256F
    L498 = 257D :
    L499 = 2580 :
      L5 = 2009 :
     L50 = 2048 :
    L500 = 2580 : 2577
    L501 = 2583 :
    L502 = 258E :
    L503 = 2594 :
    L504 = 2597 :
    L505 = 2599 :
    L506 = 259C :
    L507 = 259F : 2594
    L508 = 25A2 :
    L509 = 25A5 :
     L51 = 204A :
    L510 = 25A5 : 259C
    L511 = 25A8 :
    L512 = 25B3 :
    L513 = 25B9 :
    L514 = 25BC :
    L515 = 25BE :
    L516 = 25C1 :
    L517 = 25C4 : 25B9
    L518 = 25C7 :
    L519 = 25CA :
     L52 = 204C :
    L520 = 25CA :
    L521 = 25CA : 25C1
    L522 = 25CC :
    L523 = 25CF :
    L524 = 25DA :
    L525 = 25DC :
    L526 = 25E3 :
    L527 = 25E6 :
    L528 = 25E8 :
    L529 = 25EB :
     L53 = 204F :
    L530 = 25EE : 25E3
    L531 = 25F1 :
    L532 = 25F4 :
    L533 = 25F4 : 25EB
    L534 = 25F6 :
    L535 = 25F9 :
    L536 = 2604 :
    L537 = 260A :
    L538 = 260D :
    L539 = 260F :
     L54 = 2051 :
    L540 = 2612 :
    L541 = 2615 : 260A
    L542 = 2618 :
    L543 = 261B :
    L544 = 261B : 2612
    L545 = 261D :
    L546 = 2620 :
    L547 = 262B :
    L548 = 2631 :
    L549 = 2634 :
     L55 = 2054 :
    L550 = 2636 :
    L551 = 2639 :
    L552 = 263C : 2631
    L553 = 263F :
    L554 = 2642 :
    L555 = 2642 :
    L556 = 2642 : 2639
    L557 = 2645 :
    L558 = 264D :
    L559 = 264F :
     L56 = 2057 : 204C
    L560 = 2656 :
    L561 = 2659 :
    L562 = 265B :
    L563 = 265E :
    L564 = 2661 : 2656
    L565 = 2664 :
    L566 = 2667 :
    L567 = 2667 : 265E
    L568 = 266A :
    L569 = 2675 :
     L57 = 205A :
    L570 = 267B :
    L571 = 267E :
    L572 = 2680 :
    L573 = 2683 :
    L574 = 2686 : 267B
    L575 = 2689 :
    L576 = 268C :
    L577 = 268C : 2683
    L578 = 268F :
    L579 = 269A :
     L58 = 205D :
    L580 = 26A0 :
    L581 = 26A3 :
    L582 = 26A5 :
    L583 = 26A8 :
    L584 = 26AB : 26A0
    L585 = 26AE :
    L586 = 26B1 :
    L587 = 26B1 :
    L588 = 26B1 :
    L589 = 26B1 :
     L59 = 205D : 2054
    L590 = 26B1 :
    L591 = 26B1 : 26A8
    L592 = 26B3 :
    L593 = 26B5 :
    L594 = 26B7 :
    L595 = 26B9 :
    L596 = 26BC :
    L597 = 26BE :
    L598 = 26C1 :
    L599 = 26C4 : 26B9
      L6 = 2009 : 2003
     L60 = 205F :
    L600 = 26C7 :
    L601 = 26CA :
    L602 = 26CA : 26C1
    L603 = 26CC :
    L604 = 26CE :
    L605 = 26D0 :
    L606 = 26D2 :
    L607 = 26D5 :
    L608 = 26D7 :
    L609 = 26DA :
     L61 = 2061 :
    L610 = 26DD : 26D2
    L611 = 26E0 :
    L612 = 26E3 :
    L613 = 26E3 : 26DA
    L614 = 26E5 :
    L615 = 26E7 :
    L616 = 26E9 :
    L617 = 26EB :
    L618 = 26EE :
    L619 = 26F0 :
     L62 = 2063 :
    L620 = 26F3 :
    L621 = 26F6 : 26EB
    L622 = 26F9 :
    L623 = 26FC :
    L624 = 26FC :
    L625 = 26FC : 26F3
    L626 = 26FF :
    L627 = 2703 :
    L628 = 270E :
    L629 = 2714 :
     L63 = 2066 :
    L630 = 2717 :
    L631 = 2719 :
    L632 = 271C :
    L633 = 271F : 2714
    L634 = 2722 :
    L635 = 2725 :
    L636 = 2725 : 271C
    L637 = 2728 :
    L638 = 272C :
    L639 = 2737 :
     L64 = 2068 :
    L640 = 273D :
    L641 = 2740 :
    L642 = 2742 :
    L643 = 2745 :
    L644 = 2748 : 273D
    L645 = 274B :
    L646 = 274E :
    L647 = 274E : 2745
    L648 = 2751 :
    L649 = 2755 :
     L65 = 206B :
    L650 = 2760 :
    L651 = 2766 :
    L652 = 2769 :
    L653 = 276B :
    L654 = 276E :
    L655 = 2771 : 2766
    L656 = 2774 :
    L657 = 2777 :
    L658 = 2777 :
    L659 = 2777 : 276E
     L66 = 206E : 2063
    L660 = 2779 :
    L661 = 277B :
    L662 = 277E :
    L663 = 2789 :
    L664 = 278B :
    L665 = 2792 :
    L666 = 2795 :
    L667 = 2797 :
    L668 = 279A :
    L669 = 279D : 2792
     L67 = 2071 :
    L670 = 27A0 :
    L671 = 27A3 :
    L672 = 27A3 : 279A
    L673 = 27A5 :
    L674 = 27A7 :
    L675 = 27AA :
    L676 = 27B5 :
    L677 = 27BB :
    L678 = 27BE :
    L679 = 27C0 :
     L68 = 2074 :
    L680 = 27C3 :
    L681 = 27C6 : 27BB
    L682 = 27C9 :
    L683 = 27CC :
    L684 = 27CC : 27C3
    L685 = 27CE :
    L686 = 27D0 :
    L687 = 27D3 :
    L688 = 27DE :
    L689 = 27E4 :
     L69 = 2074 :
    L690 = 27E7 :
    L691 = 27E9 :
    L692 = 27EC :
    L693 = 27EF : 27E4
    L694 = 27F2 :
    L695 = 27F5 :
    L696 = 27F5 :
    L697 = 27F5 : 27EC
    L698 = 27F8 :
    L699 = 27FC :
      L7 = 200B :
     L70 = 2074 : 206B
    L700 = 2804 :
    L701 = 2806 :
    L702 = 280D :
    L703 = 2810 :
    L704 = 2812 :
    L705 = 2815 :
    L706 = 2818 : 280D
    L707 = 281B :
    L708 = 281E :
    L709 = 281E : 2815
     L71 = 2077 :
    L710 = 2821 :
    L711 = 2825 :
    L712 = 2830 :
    L713 = 2836 :
    L714 = 2839 :
    L715 = 283B :
    L716 = 283E :
    L717 = 2841 : 2836
    L718 = 2844 :
    L719 = 2847 :
     L72 = 2082 :
    L720 = 2847 : 283E
    L721 = 284A :
    L722 = 284E :
    L723 = 2859 :
    L724 = 285F :
    L725 = 2862 :
    L726 = 2864 :
    L727 = 2867 :
    L728 = 286A : 285F
    L729 = 286D :
     L73 = 2088 :
    L730 = 2870 :
    L731 = 2870 :
    L732 = 2870 :
    L733 = 2870 :
    L734 = 2870 :
    L735 = 2870 : 2867
    L736 = 2872 :
    L737 = 2874 :
    L738 = 2877 :
    L739 = 2879 :
     L74 = 208B :
    L740 = 287B :
    L741 = 287D :
    L742 = 2880 :
    L743 = 2882 :
    L744 = 2885 :
    L745 = 2888 : 287D
    L746 = 288B :
    L747 = 288E :
    L748 = 288E : 2885
    L749 = 2890 :
     L75 = 208D :
    L750 = 2892 :
    L751 = 2895 :
    L752 = 2897 :
    L753 = 2899 :
    L754 = 289B :
    L755 = 289E :
    L756 = 28A0 :
    L757 = 28A3 :
    L758 = 28A6 : 289B
    L759 = 28A9 :
     L76 = 2090 :
    L760 = 28AC :
    L761 = 28AC : 28A3
    L762 = 28AE :
    L763 = 28B0 :
    L764 = 28B3 :
    L765 = 28B5 :
    L766 = 28B7 :
    L767 = 28B9 :
    L768 = 28BC :
    L769 = 28BE :
     L77 = 2093 : 2088
    L770 = 28C1 :
    L771 = 28C4 : 28B9
    L772 = 28C7 :
    L773 = 28CA :
    L774 = 28CA :
    L775 = 28CA : 28C1
    L776 = 28CD :
    L777 = 28D1 :
    L778 = 28D5 :
    L779 = 28D9 :
     L78 = 2096 :
    L780 = 28E2 :
    L781 = 28E8 :
    L782 = 28EB :
    L783 = 28ED :
    L784 = 28F0 :
    L785 = 28F3 : 28E8
    L786 = 28F6 :
    L787 = 28F9 :
    L788 = 28F9 : 28F0
    L789 = 28FC :
     L79 = 2099 :
    L790 = 2900 :
    L791 = 2904 :
    L792 = 2908 :
    L793 = 2911 :
    L794 = 2917 :
    L795 = 291A :
    L796 = 291C :
    L797 = 291F :
    L798 = 2922 : 2917
    L799 = 2925 :
      L8 = 200E :
     L80 = 2099 :
    L800 = 2928 :
    L801 = 2928 : 291F
    L802 = 292B :
    L803 = 292F :
    L804 = 2933 :
    L805 = 2937 :
    L806 = 2940 :
    L807 = 2946 :
    L808 = 2949 :
    L809 = 294B :
     L81 = 2099 : 2090
    L810 = 294E :
    L811 = 2951 : 2946
    L812 = 2954 :
    L813 = 2957 :
    L814 = 2957 :
    L815 = 2957 : 294E
    L816 = 2959 :
    L817 = 295B :
    L818 = 295E :
    L819 = 2962 :
     L82 = 209C :
    L820 = 2968 :
    L821 = 296A :
    L822 = 2971 :
    L823 = 2974 :
    L824 = 2976 :
    L825 = 2979 :
    L826 = 297C : 2971
    L827 = 297F :
    L828 = 2982 :
    L829 = 2982 : 2979
     L83 = 20A7 :
    L830 = 2984 :
    L831 = 2986 :
    L832 = 2989 :
    L833 = 298D :
    L834 = 298F :
    L835 = 2995 :
    L836 = 2998 :
    L837 = 299A :
    L838 = 299D :
    L839 = 29A0 : 2995
     L84 = 20AD :
    L840 = 29A3 :
    L841 = 29A6 :
    L842 = 29A6 : 299D
    L843 = 29A8 :
    L844 = 29AA :
    L845 = 29AD :
    L846 = 29B1 :
    L847 = 29B3 :
    L848 = 29B9 :
    L849 = 29BC :
     L85 = 20B0 :
    L850 = 29BE :
    L851 = 29C1 :
    L852 = 29C4 : 29B9
    L853 = 29C7 :
    L854 = 29CA :
    L855 = 29CA :
    L856 = 29CA : 29C1
    L857 = 29CD :
    L858 = 29D1 :
    L859 = 29D3 :
     L86 = 20B2 :
    L860 = 29D5 :
    L861 = 29DB :
    L862 = 29DD :
    L863 = 29E4 :
    L864 = 29E7 :
    L865 = 29E9 :
    L866 = 29EC :
    L867 = 29EF : 29E4
    L868 = 29F2 :
    L869 = 29F5 :
     L87 = 20B5 :
    L870 = 29F5 : 29EC
    L871 = 29F8 :
    L872 = 29FC :
    L873 = 29FE :
    L874 = 2A00 :
    L875 = 2A02 :
    L876 = 2A08 :
    L877 = 2A0B :
    L878 = 2A0D :
    L879 = 2A10 :
     L88 = 20B8 : 20AD
    L880 = 2A13 : 2A08
    L881 = 2A16 :
    L882 = 2A19 :
    L883 = 2A19 : 2A10
    L884 = 2A1C :
    L885 = 2A20 :
    L886 = 2A22 :
    L887 = 2A24 :
    L888 = 2A26 :
    L889 = 2A2C :
     L89 = 20BB :
    L890 = 2A2F :
    L891 = 2A31 :
    L892 = 2A34 :
    L893 = 2A37 : 2A2C
    L894 = 2A3A :
    L895 = 2A3D :
    L896 = 2A3D :
    L897 = 2A3D :
    L898 = 2A3D :
    L899 = 2A3D :
      L9 = 200E :
     L90 = 20BE :
    L900 = 2A3D : 2A34
    L901 = 2A3F :
    L902 = 2A41 :
    L903 = 2A46 :
    L904 = 2A48 :
    L905 = 2A4B :
    L906 = 2A4D :
    L907 = 2A50 :
    L908 = 2A53 : 2A48
    L909 = 2A56 :
     L91 = 20BE :
    L910 = 2A59 :
    L911 = 2A59 : 2A50
    L912 = 2A5B :
    L913 = 2A5D :
    L914 = 2A62 :
    L915 = 2A64 :
    L916 = 2A67 :
    L917 = 2A69 :
    L918 = 2A6C :
    L919 = 2A6F : 2A64
     L92 = 20BE : 20B5
    L920 = 2A72 :
    L921 = 2A75 :
    L922 = 2A75 : 2A6C
    L923 = 2A77 :
    L924 = 2A79 :
    L925 = 2A7E :
    L926 = 2A80 :
    L927 = 2A83 :
    L928 = 2A85 :
    L929 = 2A88 :
     L93 = 20C1 :
    L930 = 2A8B : 2A80
    L931 = 2A8E :
    L932 = 2A91 :
    L933 = 2A91 :
    L934 = 2A91 : 2A88
    L935 = 2A94 :
    L936 = 2A98 :
    L937 = 2AA4 :
    L938 = 2AAA :
    L939 = 2AAD :
     L94 = 20CC :
    L940 = 2AAF :
    L941 = 2AB2 :
    L942 = 2AB5 : 2AAA
    L943 = 2AB8 :
    L944 = 2ABB :
    L945 = 2ABB : 2AB2
    L946 = 2ABE :
    L947 = 2AC2 :
    L948 = 2ACE :
    L949 = 2AD4 :
     L95 = 20D2 :
    L950 = 2AD7 :
    L951 = 2AD9 :
    L952 = 2ADC :
    L953 = 2ADF : 2AD4
    L954 = 2AE2 :
    L955 = 2AE5 :
    L956 = 2AE5 : 2ADC
    L957 = 2AE8 :
    L958 = 2AEC :
    L959 = 2AF8 :
     L96 = 20D5 :
    L960 = 2AFE :
    L961 = 2B01 :
    L962 = 2B03 :
    L963 = 2B06 :
    L964 = 2B09 : 2AFE
    L965 = 2B0C :
    L966 = 2B0F :
    L967 = 2B0F :
    L968 = 2B0F : 2B06
    L969 = 2B11 :
     L97 = 20D7 :
    L970 = 2B13 :
    L971 = 2B16 :
    L972 = 2B22 :
    L973 = 2B24 :
    L974 = 2B2B :
    L975 = 2B2E :
    L976 = 2B30 :
    L977 = 2B33 :
    L978 = 2B36 : 2B2B
    L979 = 2B39 :
     L98 = 20DA :
    L980 = 2B3C :
    L981 = 2B3C : 2B33
    L982 = 2B3E :
    L983 = 2B40 :
    L984 = 2B43 :
    L985 = 2B4F :
    L986 = 2B55 :
    L987 = 2B58 :
    L988 = 2B5A :
    L989 = 2B5D :
     L99 = 20DD : 20D2
    L990 = 2B60 : 2B55
    L991 = 2B63 :
    L992 = 2B66 :
    L993 = 2B66 : 2B5D
    L994 = 2B68 :
    L995 = 2B6A :
    L996 = 2B6D :
    L997 = 2B79 :
    L998 = 2B7F :
    L999 = 2B82 :
   div16 = 3C00 :
 div16_1 = 3C09 : 3C18
 div16_2 = 3C17 : 3C12
 div16_3 = 3C18 : 3C15
 div16_8 = 3C20 : 3C87
div16_82 = 3C25 : 3C2D
div16_83 = 3C2D : 3C29
    div8 = 3C31 : 3C54
  div8_1 = 3C39 : 3C44
 div8_16 = 3C4B :
div8_161 = 3C52 : 3C4E
  div8_2 = 3C44 : 3C40
 getChar = 3B02 : 3C5C
getChar1 = 3B10 : 3B07
   mul16 = 3B84 :
 mul1632 = 3BB3 :
mul16321 = 3BD5 : 3BD2
mul16322 = 3BDC : 3BD9
  mul16S = 3BE6 :
 mul16S1 = 3BEF : 3BFB
 mul16S2 = 3BFA : 3BF4 3BF7
mul16_10 = 3B9D : 3C65
 mul16_8 = 3BA6 :
 putBell = 3B5C :
 putCRLF = 3B43 : 3B23 3C76 3C9E
 putChar = 3B36 : 3B2D 3B46 3B4B 3B52 3B5A 3B5E 3B7F 3C93
putChar1 = 3B37 : 3B3C
putErase = 3B50 :
 putHexA = 3B6B : 3B62 3B66
putHexA1 = 3B74 : 3B70
putHexA2 = 3B7F : 3B7B
putHexHL = 3B60 :
  putMsg = 3B1A :
putSpace = 3B34 : 3B55
 putStr1 = 3B28 : 3B30
 putStr2 = 3B32 : 3B2B
    read = 3C58 :
   read1 = 3C5C : 3C5F 3C6C 3C6F
   read2 = 3C71 : 3C63
   start = 2000 :
  writeA = 3CA2 : 3C9B
 writeHL = 3C7A : 3C73 3CA6
writeHL1 = 3C85 : 3C80 3C8E
writeHL2 = 3C90 : 3C96
writeHL3 = 3C91 : 3C83
writeLineA = 3C9B : 202C 203A 2051 2068 208D 20B2 20D7 2101 2128 214F 2174 2199
                : 21BE 21DA 21F6 2212 223D 2268 2293 22BC 22DE 2300 2327 2347
                : 2367 2381 239B 23B5 23DB 2401 2427 2452 247A 24A2 24C8 24E9
                : 250A 2521 2538 254F 2574 2599 25BE 25E8 260F 2636 265B 2680
                : 26A5 26BE 26D7 26F0 2719 2742 276B 2797 27C0 27E9 2812 283B
                : 2864 2882 28A0 28BE 28ED 291C 294B 2976 299A 29BE 29E9 2A0D
                : 2A31 2A4D 2A69 2A85 2AAF 2AD9 2B03 2B30 2B5A 2B84 2BAE 2BD3
                : 2BF8 2C11 2C2A 2C43 2C6C 2C95 2CBE 2CEA 2D13 2D3C 2D65 2D8E
                : 2DB7 2DCF 2DE7 2DFF 2E24 2E49 2E6E 2E99 2EC1 2EE9 2F0E 2F33
                : 2F58 2F75 2F92 2FAF 2FDA 3005 3030 305A 307D 30A0 30C7 30E7
                : 3107 3122 313D 3158 317E 31A4 31CA 31F6 321F 3248 326E 328F
                : 32B0 32C8 32E0 32F8 331D 3342 3367 3392 33BA 33E2 3407 342C
                : 3451 3469 3481 3499 34BE 34E3 3508 3533 355B 3583 35A8 35CD
                : 35F2 360F 362C 3649 3674 369F 36CA 36F4 3717 373A 3761 3781
                : 37A1 37BC 37D7 37F2 3818 383E 3864 3890 38B9 38E2 3908 3929
                : 394A 3961 3978 398F 39B4 39D9 39FE 3A28 3A4F 3A76 3A9B 3AC0
                : 3AE5
writeLineHL = 3C73 : 2043 205A 2071 2096 20BB 20E0 210A 2131 2158 217D 21A2 21C7
                : 21E3 21FF 221B 2246 2271 229C 22C5 22E7 2309 2330 2350 2370
                : 238A 23A4 23BE 23E4 240A 2430 245B 2483 24AB 24D1 24F2 2513
                : 252A 2541 2558 257D 25A2 25C7 25F1 2618 263F 2664 2689 26AE
                : 26C7 26E0 26F9 2722 274B 2774 27A0 27C9 27F2 281B 2844 286D
                : 288B 28A9 28C7 28F6 2925 2954 297F 29A3 29C7 29F2 2A16 2A3A
                : 2A56 2A72 2A8E 2AB8 2AE2 2B0C 2B39 2B63 2B8D 2BB7 2BDC 2C01
                : 2C1A 2C33 2C4C 2C75 2C9E 2CC7 2CF3 2D1C 2D45 2D6E 2D97 2DC0
                : 2DD8 2DF0 2E08 2E2D 2E52 2E77 2EA2 2ECA 2EF2 2F17 2F3C 2F61
                : 2F7E 2F9B 2FB8 2FE3 300E 3039 3063 3086 30A9 30D0 30F0 3110
                : 312B 3146 3161 3187 31AD 31D3 31FF 3228 3251 3277 3298 32B9
                : 32D1 32E9 3301 3326 334B 3370 339B 33C3 33EB 3410 3435 345A
                : 3472 348A 34A2 34C7 34EC 3511 353C 3564 358C 35B1 35D6 35FB
                : 3618 3635 3652 367D 36A8 36D3 36FD 3720 3743 376A 378A 37AA
                : 37C5 37E0 37FB 3821 3847 386D 3899 38C2 38EB 3911 3932 3953
                : 396A 3981 3998 39BD 39E2 3A07 3A31 3A58 3A7F 3AA4 3AC9 3AEE
                :
writeLineStr = 3B20 : 3AF4
writeStr = 3B27 : 3B1B 3B20
