2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testBitwiseOperators.j(0) /* Program to test bitwise operators and, or and xor. */
2009             L3:
2009                     ;;testBitwiseOperators.j(1) class TestBitwiseOperators {
2009             L4:
2009                     ;class TestBitwiseOperators []
2009             L5:
2009                     ;;testBitwiseOperators.j(2)   private static byte b1 = 0x1C;
2009             L6:
2009 3E 1C               LD    A,28
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testBitwiseOperators.j(3)   private static byte b2 = 0x07;
200E             L9:
200E 3E 07               LD    A,7
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testBitwiseOperators.j(4)   private static word w1 = 0x032C;
2013             L12:
2013 21 2C 03            LD    HL,812
2016             L13:
2016 22 02 50            LD    (05002H),HL
2019             L14:
2019                     ;;testBitwiseOperators.j(5)   private static word w2 = 0x1234;
2019             L15:
2019 21 34 12            LD    HL,4660
201C             L16:
201C 22 04 50            LD    (05004H),HL
201F             L17:
201F C3 22 20            JP    L24
2022             L18:
2022                     ;;testBitwiseOperators.j(6)   private static final byte fb1 = 0x1C;
2022             L19:
2022                     ;;testBitwiseOperators.j(7)   private static final byte fb2 = 0x07;
2022             L20:
2022                     ;;testBitwiseOperators.j(8)   private static final word fw1 = 0x032C;
2022             L21:
2022                     ;;testBitwiseOperators.j(9)   private static final word fw2 = 0x1234;
2022             L22:
2022                     ;;testBitwiseOperators.j(10) 
2022             L23:
2022                     ;;testBitwiseOperators.j(11)   public static void main() {
2022             L24:
2022                     ;method TestBitwiseOperators.main [public, static] void ()
2022             L25:
2022 DD E5               PUSH  IX
2024             L26:
2024 DD 21 00 00         LD    IX,0x0000
2028 DD 39               ADD   IX,SP
202A             L27:
202A             L28:
202A                     ;;testBitwiseOperators.j(12)     println(0);
202A             L29:
202A 3E 00               LD    A,0
202C             L30:
202C CD 1B 3D            CALL  writeLineA
202F             L31:
202F                     ;;testBitwiseOperators.j(13)     
202F             L32:
202F                     ;;testBitwiseOperators.j(14)     // Possible operand types: constant, acc, var, final var, stack8, stack16.
202F             L33:
202F                     ;;testBitwiseOperators.j(15)     // Possible data types: byte, word.
202F             L34:
202F                     ;;testBitwiseOperators.j(16)   
202F             L35:
202F                     ;;testBitwiseOperators.j(17)     //constant/constant
202F             L36:
202F                     ;;testBitwiseOperators.j(18)     //*****************
202F             L37:
202F                     ;;testBitwiseOperators.j(19)     //constant byte/constant byte
202F             L38:
202F                     ;;testBitwiseOperators.j(20)     if (0x07 & 0x1C == 0x04) println (1); else println (999); //0000.0111 & 0001.1100 = 0000.0100
202F             L39:
202F 3E 07               LD    A,7
2031             L40:
2031 E6 1C               AND   A,28
2033             L41:
2033 D6 04               SUB   A,4
2035             L42:
2035 C2 40 20            JP    NZ,L46
2038             L43:
2038 3E 01               LD    A,1
203A             L44:
203A CD 1B 3D            CALL  writeLineA
203D             L45:
203D C3 46 20            JP    L49
2040             L46:
2040 21 E7 03            LD    HL,999
2043             L47:
2043 CD F3 3C            CALL  writeLineHL
2046             L48:
2046                     ;;testBitwiseOperators.j(21)     if (0x07 | 0x1C == 0x1F) println (2); else println (999); //0000.0111 | 0001.1100 = 0001.1111
2046             L49:
2046 3E 07               LD    A,7
2048             L50:
2048 F6 1C               OR    A,28
204A             L51:
204A D6 1F               SUB   A,31
204C             L52:
204C C2 57 20            JP    NZ,L56
204F             L53:
204F 3E 02               LD    A,2
2051             L54:
2051 CD 1B 3D            CALL  writeLineA
2054             L55:
2054 C3 5D 20            JP    L59
2057             L56:
2057 21 E7 03            LD    HL,999
205A             L57:
205A CD F3 3C            CALL  writeLineHL
205D             L58:
205D                     ;;testBitwiseOperators.j(22)     if (0x07 ^ 0x1C == 0x1B) println (3); else println (999); //0000.0111 ^ 0001.1100 = 0001.1011
205D             L59:
205D 3E 07               LD    A,7
205F             L60:
205F EE 1C               XOR   A,28
2061             L61:
2061 D6 1B               SUB   A,27
2063             L62:
2063 C2 6E 20            JP    NZ,L66
2066             L63:
2066 3E 03               LD    A,3
2068             L64:
2068 CD 1B 3D            CALL  writeLineA
206B             L65:
206B C3 74 20            JP    L70
206E             L66:
206E 21 E7 03            LD    HL,999
2071             L67:
2071 CD F3 3C            CALL  writeLineHL
2074             L68:
2074                     ;;testBitwiseOperators.j(23)     //constant word/constant word
2074             L69:
2074                     ;;testBitwiseOperators.j(24)     if (0x1234 & 0x032C == 0x0224) println (4); else println (999);
2074             L70:
2074 21 34 12            LD    HL,4660
2077             L71:
2077 11 2C 03            LD    DE,812
207A C5                  PUSH  BC
207B 47                  LD    B,A
207C 7C                  LD    A,H
207D A2                  AND   A,D
207E 67                  LD    H,A
207F 7D                  LD    A,L
2080 A3                  AND   A,E
2081 6F                  LD    L,A
2082 78                  LD    A,B
2083 C1                  POP   BC
2084             L72:
2084 11 24 02            LD    DE,548
2087 B7                  OR    A
2088 ED 52               SBC   HL,DE
208A             L73:
208A C2 95 20            JP    NZ,L77
208D             L74:
208D 3E 04               LD    A,4
208F             L75:
208F CD 1B 3D            CALL  writeLineA
2092             L76:
2092 C3 9B 20            JP    L81
2095             L77:
2095 21 E7 03            LD    HL,999
2098             L78:
2098 CD F3 3C            CALL  writeLineHL
209B             L79:
209B                     ;;testBitwiseOperators.j(25)     //0001.0010.0011.0100 & 0000.0011.0010.1100 = 0000.0010.0010.0100
209B             L80:
209B                     ;;testBitwiseOperators.j(26)     if (0x1234 | 0x032C == 0x133C) println (5); else println (999);
209B             L81:
209B 21 34 12            LD    HL,4660
209E             L82:
209E 11 2C 03            LD    DE,812
20A1 47                  LD    B,A
20A2 7C                  LD    A,H
20A3 B2                  OR    A,D
20A4 67                  LD    H,A
20A5 7D                  LD    A,L
20A6 B3                  OR    A,E
20A7 6F                  LD    L,A
20A8 78                  LD    A,B
20A9             L83:
20A9 11 3C 13            LD    DE,4924
20AC B7                  OR    A
20AD ED 52               SBC   HL,DE
20AF             L84:
20AF C2 BA 20            JP    NZ,L88
20B2             L85:
20B2 3E 05               LD    A,5
20B4             L86:
20B4 CD 1B 3D            CALL  writeLineA
20B7             L87:
20B7 C3 C0 20            JP    L92
20BA             L88:
20BA 21 E7 03            LD    HL,999
20BD             L89:
20BD CD F3 3C            CALL  writeLineHL
20C0             L90:
20C0                     ;;testBitwiseOperators.j(27)     //0001.0010.0011.0100 | 0000.0011.0010.1100 = 0001.0011.0011.1100
20C0             L91:
20C0                     ;;testBitwiseOperators.j(28)     if (0x1234 ^ 0x032C == 0x1118) println (6); else println (999);
20C0             L92:
20C0 21 34 12            LD    HL,4660
20C3             L93:
20C3 11 2C 03            LD    DE,812
20C6 C5                  PUSH  BC
20C7 47                  LD    B,A
20C8 7C                  LD    A,H
20C9 AA                  XOR   A,D
20CA 67                  LD    H,A
20CB 7D                  LD    A,L
20CC AB                  XOR   A,E
20CD 6F                  LD    L,A
20CE 78                  LD    A,B
20CF C1                  POP   BC
20D0             L94:
20D0 11 18 11            LD    DE,4376
20D3 B7                  OR    A
20D4 ED 52               SBC   HL,DE
20D6             L95:
20D6 C2 E1 20            JP    NZ,L99
20D9             L96:
20D9 3E 06               LD    A,6
20DB             L97:
20DB CD 1B 3D            CALL  writeLineA
20DE             L98:
20DE C3 E7 20            JP    L104
20E1             L99:
20E1 21 E7 03            LD    HL,999
20E4             L100:
20E4 CD F3 3C            CALL  writeLineHL
20E7             L101:
20E7                     ;;testBitwiseOperators.j(29)     //0001.0010.0011.0100 ^ 0000.0011.0010.1100 = 0001.0001.0001.1000
20E7             L102:
20E7                     ;;testBitwiseOperators.j(30)     //constant byte/constant word
20E7             L103:
20E7                     ;;testBitwiseOperators.j(31)     if (0x1C & 0x1234 == 0x0014) println (7); else println (999); //0001.1100 & 0001.0010.0011.0100 = 0000.0000.0001.0100
20E7             L104:
20E7 3E 1C               LD    A,28
20E9             L105:
20E9 6F                  LD    L,A
20EA 26 00               LD    H,0
20EC             L106:
20EC 11 34 12            LD    DE,4660
20EF C5                  PUSH  BC
20F0 47                  LD    B,A
20F1 7C                  LD    A,H
20F2 A2                  AND   A,D
20F3 67                  LD    H,A
20F4 7D                  LD    A,L
20F5 A3                  AND   A,E
20F6 6F                  LD    L,A
20F7 78                  LD    A,B
20F8 C1                  POP   BC
20F9             L107:
20F9 3E 14               LD    A,20
20FB             L108:
20FB 5F                  LD    E,A
20FC 16 00               LD    D,0
20FE EB                  EX    DE,HL
20FF B7                  OR    A
2100 ED 52               SBC   HL,DE
2102             L109:
2102 C2 0D 21            JP    NZ,L113
2105             L110:
2105 3E 07               LD    A,7
2107             L111:
2107 CD 1B 3D            CALL  writeLineA
210A             L112:
210A C3 13 21            JP    L116
210D             L113:
210D 21 E7 03            LD    HL,999
2110             L114:
2110 CD F3 3C            CALL  writeLineHL
2113             L115:
2113                     ;;testBitwiseOperators.j(32)     if (0x1C | 0x1234 == 0x123C) println (8); else println (999); //0001.1100 | 0001.0010.0011.0100 = 0001.0010.0011.1100
2113             L116:
2113 3E 1C               LD    A,28
2115             L117:
2115 6F                  LD    L,A
2116 26 00               LD    H,0
2118             L118:
2118 11 34 12            LD    DE,4660
211B 47                  LD    B,A
211C 7C                  LD    A,H
211D B2                  OR    A,D
211E 67                  LD    H,A
211F 7D                  LD    A,L
2120 B3                  OR    A,E
2121 6F                  LD    L,A
2122 78                  LD    A,B
2123             L119:
2123 11 3C 12            LD    DE,4668
2126 B7                  OR    A
2127 ED 52               SBC   HL,DE
2129             L120:
2129 C2 34 21            JP    NZ,L124
212C             L121:
212C 3E 08               LD    A,8
212E             L122:
212E CD 1B 3D            CALL  writeLineA
2131             L123:
2131 C3 3A 21            JP    L127
2134             L124:
2134 21 E7 03            LD    HL,999
2137             L125:
2137 CD F3 3C            CALL  writeLineHL
213A             L126:
213A                     ;;testBitwiseOperators.j(33)     if (0x1C ^ 0x1234 == 0x1228) println (9); else println (999); //0001.1100 ^ 0001.0010.0011.0100 = 0001.0010.0010.1000
213A             L127:
213A 3E 1C               LD    A,28
213C             L128:
213C 6F                  LD    L,A
213D 26 00               LD    H,0
213F             L129:
213F 11 34 12            LD    DE,4660
2142 C5                  PUSH  BC
2143 47                  LD    B,A
2144 7C                  LD    A,H
2145 AA                  XOR   A,D
2146 67                  LD    H,A
2147 7D                  LD    A,L
2148 AB                  XOR   A,E
2149 6F                  LD    L,A
214A 78                  LD    A,B
214B C1                  POP   BC
214C             L130:
214C 11 28 12            LD    DE,4648
214F B7                  OR    A
2150 ED 52               SBC   HL,DE
2152             L131:
2152 C2 5D 21            JP    NZ,L135
2155             L132:
2155 3E 09               LD    A,9
2157             L133:
2157 CD 1B 3D            CALL  writeLineA
215A             L134:
215A C3 63 21            JP    L139
215D             L135:
215D 21 E7 03            LD    HL,999
2160             L136:
2160 CD F3 3C            CALL  writeLineHL
2163             L137:
2163                     ;;testBitwiseOperators.j(34)     //constant word/constant byte
2163             L138:
2163                     ;;testBitwiseOperators.j(35)     if (0x1234 & 0x1C == 0x0014) println (10); else println (999); //0001.0010.0011.0100 & 0001.1100 = 0000.0000.0001.0100
2163             L139:
2163 21 34 12            LD    HL,4660
2166             L140:
2166 5F                  LD    E,A
2167 3E 1C               LD    A,28
2169 A5                  AND   A,L
216A 6F                  LD    L,A
216B 7B                  LD    A,E
216C 26 00               LD    H,0
216E             L141:
216E 3E 14               LD    A,20
2170             L142:
2170 5F                  LD    E,A
2171 16 00               LD    D,0
2173 EB                  EX    DE,HL
2174 B7                  OR    A
2175 ED 52               SBC   HL,DE
2177             L143:
2177 C2 82 21            JP    NZ,L147
217A             L144:
217A 3E 0A               LD    A,10
217C             L145:
217C CD 1B 3D            CALL  writeLineA
217F             L146:
217F C3 88 21            JP    L150
2182             L147:
2182 21 E7 03            LD    HL,999
2185             L148:
2185 CD F3 3C            CALL  writeLineHL
2188             L149:
2188                     ;;testBitwiseOperators.j(36)     if (0x1234 | 0x1C == 0x123C) println (11); else println (999); //0001.0010.0011.0100 | 0001.1100 = 0001.0010.0011.1100
2188             L150:
2188 21 34 12            LD    HL,4660
218B             L151:
218B 11 1C 00            LD    DE,28
218E 47                  LD    B,A
218F 7C                  LD    A,H
2190 B2                  OR    A,D
2191 67                  LD    H,A
2192 7D                  LD    A,L
2193 B3                  OR    A,E
2194 6F                  LD    L,A
2195 78                  LD    A,B
2196             L152:
2196 11 3C 12            LD    DE,4668
2199 B7                  OR    A
219A ED 52               SBC   HL,DE
219C             L153:
219C C2 A7 21            JP    NZ,L157
219F             L154:
219F 3E 0B               LD    A,11
21A1             L155:
21A1 CD 1B 3D            CALL  writeLineA
21A4             L156:
21A4 C3 AD 21            JP    L160
21A7             L157:
21A7 21 E7 03            LD    HL,999
21AA             L158:
21AA CD F3 3C            CALL  writeLineHL
21AD             L159:
21AD                     ;;testBitwiseOperators.j(37)     if (0x1234 ^ 0x1C == 0x1228) println (12); else println (999); //0001.0010.0011.0100 ^ 0001.1100 = 0001.0010.0010.1000
21AD             L160:
21AD 21 34 12            LD    HL,4660
21B0             L161:
21B0 11 1C 00            LD    DE,28
21B3 C5                  PUSH  BC
21B4 47                  LD    B,A
21B5 7C                  LD    A,H
21B6 AA                  XOR   A,D
21B7 67                  LD    H,A
21B8 7D                  LD    A,L
21B9 AB                  XOR   A,E
21BA 6F                  LD    L,A
21BB 78                  LD    A,B
21BC C1                  POP   BC
21BD             L162:
21BD 11 28 12            LD    DE,4648
21C0 B7                  OR    A
21C1 ED 52               SBC   HL,DE
21C3             L163:
21C3 C2 CE 21            JP    NZ,L167
21C6             L164:
21C6 3E 0C               LD    A,12
21C8             L165:
21C8 CD 1B 3D            CALL  writeLineA
21CB             L166:
21CB C3 D4 21            JP    L174
21CE             L167:
21CE 21 E7 03            LD    HL,999
21D1             L168:
21D1 CD F3 3C            CALL  writeLineHL
21D4             L169:
21D4                     ;;testBitwiseOperators.j(38)   
21D4             L170:
21D4                     ;;testBitwiseOperators.j(39)     //constant/acc
21D4             L171:
21D4                     ;;testBitwiseOperators.j(40)     //************
21D4             L172:
21D4                     ;;testBitwiseOperators.j(41)     //constant byte/acc byte
21D4             L173:
21D4                     ;;testBitwiseOperators.j(42)     if (0x07 & (0x10 + 0x0C) == 0x04) println (13); else println (999);
21D4             L174:
21D4 3E 07               LD    A,7
21D6             L175:
21D6 F5                  PUSH  AF
21D7 3E 10               LD    A,16
21D9             L176:
21D9 C6 0C               ADD   A,12
21DB             L177:
21DB C1                  POP   BC
21DC A0                  AND   A,B
21DD             L178:
21DD D6 04               SUB   A,4
21DF             L179:
21DF C2 EA 21            JP    NZ,L183
21E2             L180:
21E2 3E 0D               LD    A,13
21E4             L181:
21E4 CD 1B 3D            CALL  writeLineA
21E7             L182:
21E7 C3 F0 21            JP    L186
21EA             L183:
21EA 21 E7 03            LD    HL,999
21ED             L184:
21ED CD F3 3C            CALL  writeLineHL
21F0             L185:
21F0                     ;;testBitwiseOperators.j(43)     if (0x07 | (0x10 + 0x0C) == 0x1F) println (14); else println (999);
21F0             L186:
21F0 3E 07               LD    A,7
21F2             L187:
21F2 F5                  PUSH  AF
21F3 3E 10               LD    A,16
21F5             L188:
21F5 C6 0C               ADD   A,12
21F7             L189:
21F7 C1                  POP   BC
21F8 B0                  OR    A,B
21F9             L190:
21F9 D6 1F               SUB   A,31
21FB             L191:
21FB C2 06 22            JP    NZ,L195
21FE             L192:
21FE 3E 0E               LD    A,14
2200             L193:
2200 CD 1B 3D            CALL  writeLineA
2203             L194:
2203 C3 0C 22            JP    L198
2206             L195:
2206 21 E7 03            LD    HL,999
2209             L196:
2209 CD F3 3C            CALL  writeLineHL
220C             L197:
220C                     ;;testBitwiseOperators.j(44)     if (0x07 ^ (0x10 + 0x0C) == 0x1B) println (15); else println (999);
220C             L198:
220C 3E 07               LD    A,7
220E             L199:
220E F5                  PUSH  AF
220F 3E 10               LD    A,16
2211             L200:
2211 C6 0C               ADD   A,12
2213             L201:
2213 C1                  POP   BC
2214 A8                  XOR   A,B
2215             L202:
2215 D6 1B               SUB   A,27
2217             L203:
2217 C2 22 22            JP    NZ,L207
221A             L204:
221A 3E 0F               LD    A,15
221C             L205:
221C CD 1B 3D            CALL  writeLineA
221F             L206:
221F C3 28 22            JP    L211
2222             L207:
2222 21 E7 03            LD    HL,999
2225             L208:
2225 CD F3 3C            CALL  writeLineHL
2228             L209:
2228                     ;;testBitwiseOperators.j(45)     //constant word/acc word
2228             L210:
2228                     ;;testBitwiseOperators.j(46)     if (0x1234 & 0x0100 + 0x022C == 0x0224) println (16); else println (999);
2228             L211:
2228 21 34 12            LD    HL,4660
222B             L212:
222B E5                  PUSH  HL
222C 21 00 01            LD    HL,256
222F             L213:
222F 11 2C 02            LD    DE,556
2232 19                  ADD   HL,DE
2233             L214:
2233 D1                  POP   DE
2234 C5                  PUSH  BC
2235 47                  LD    B,A
2236 7C                  LD    A,H
2237 A2                  AND   A,D
2238 67                  LD    H,A
2239 7D                  LD    A,L
223A A3                  AND   A,E
223B 6F                  LD    L,A
223C 78                  LD    A,B
223D C1                  POP   BC
223E             L215:
223E 11 24 02            LD    DE,548
2241 B7                  OR    A
2242 ED 52               SBC   HL,DE
2244             L216:
2244 C2 4F 22            JP    NZ,L220
2247             L217:
2247 3E 10               LD    A,16
2249             L218:
2249 CD 1B 3D            CALL  writeLineA
224C             L219:
224C C3 55 22            JP    L223
224F             L220:
224F 21 E7 03            LD    HL,999
2252             L221:
2252 CD F3 3C            CALL  writeLineHL
2255             L222:
2255                     ;;testBitwiseOperators.j(47)     if (0x1234 | 0x0100 + 0x022C == 0x133C) println (17); else println (999);
2255             L223:
2255 21 34 12            LD    HL,4660
2258             L224:
2258 E5                  PUSH  HL
2259 21 00 01            LD    HL,256
225C             L225:
225C 11 2C 02            LD    DE,556
225F 19                  ADD   HL,DE
2260             L226:
2260 D1                  POP   DE
2261 47                  LD    B,A
2262 7C                  LD    A,H
2263 B2                  OR    A,D
2264 67                  LD    H,A
2265 7D                  LD    A,L
2266 B3                  OR    A,E
2267 6F                  LD    L,A
2268 78                  LD    A,B
2269             L227:
2269 11 3C 13            LD    DE,4924
226C B7                  OR    A
226D ED 52               SBC   HL,DE
226F             L228:
226F C2 7A 22            JP    NZ,L232
2272             L229:
2272 3E 11               LD    A,17
2274             L230:
2274 CD 1B 3D            CALL  writeLineA
2277             L231:
2277 C3 80 22            JP    L235
227A             L232:
227A 21 E7 03            LD    HL,999
227D             L233:
227D CD F3 3C            CALL  writeLineHL
2280             L234:
2280                     ;;testBitwiseOperators.j(48)     if (0x1234 ^ 0x0100 + 0x022C == 0x1118) println (18); else println (999);
2280             L235:
2280 21 34 12            LD    HL,4660
2283             L236:
2283 E5                  PUSH  HL
2284 21 00 01            LD    HL,256
2287             L237:
2287 11 2C 02            LD    DE,556
228A 19                  ADD   HL,DE
228B             L238:
228B D1                  POP   DE
228C C5                  PUSH  BC
228D 47                  LD    B,A
228E 7C                  LD    A,H
228F AA                  XOR   A,D
2290 67                  LD    H,A
2291 7D                  LD    A,L
2292 AB                  XOR   A,E
2293 6F                  LD    L,A
2294 78                  LD    A,B
2295 C1                  POP   BC
2296             L239:
2296 11 18 11            LD    DE,4376
2299 B7                  OR    A
229A ED 52               SBC   HL,DE
229C             L240:
229C C2 A7 22            JP    NZ,L244
229F             L241:
229F 3E 12               LD    A,18
22A1             L242:
22A1 CD 1B 3D            CALL  writeLineA
22A4             L243:
22A4 C3 AD 22            JP    L248
22A7             L244:
22A7 21 E7 03            LD    HL,999
22AA             L245:
22AA CD F3 3C            CALL  writeLineHL
22AD             L246:
22AD                     ;;testBitwiseOperators.j(49)     //constant byte/acc word
22AD             L247:
22AD                     ;;testBitwiseOperators.j(50)     if (0x1C & 0x1000 + 0x0234 == 0x0014) println (19); else println (999);
22AD             L248:
22AD 3E 1C               LD    A,28
22AF             L249:
22AF 21 00 10            LD    HL,4096
22B2             L250:
22B2 11 34 02            LD    DE,564
22B5 19                  ADD   HL,DE
22B6             L251:
22B6 5F                  LD    E,A
22B7 A5                  AND   A,L
22B8 6F                  LD    L,A
22B9 7B                  LD    A,E
22BA 26 00               LD    H,0
22BC             L252:
22BC 3E 14               LD    A,20
22BE             L253:
22BE 5F                  LD    E,A
22BF 16 00               LD    D,0
22C1 EB                  EX    DE,HL
22C2 B7                  OR    A
22C3 ED 52               SBC   HL,DE
22C5             L254:
22C5 C2 D0 22            JP    NZ,L258
22C8             L255:
22C8 3E 13               LD    A,19
22CA             L256:
22CA CD 1B 3D            CALL  writeLineA
22CD             L257:
22CD C3 D6 22            JP    L261
22D0             L258:
22D0 21 E7 03            LD    HL,999
22D3             L259:
22D3 CD F3 3C            CALL  writeLineHL
22D6             L260:
22D6                     ;;testBitwiseOperators.j(51)     if (0x1C | 0x1000 + 0x0234 == 0x123C) println (20); else println (999);
22D6             L261:
22D6 3E 1C               LD    A,28
22D8             L262:
22D8 21 00 10            LD    HL,4096
22DB             L263:
22DB 11 34 02            LD    DE,564
22DE 19                  ADD   HL,DE
22DF             L264:
22DF B5                  OR    A,L
22E0 6F                  LD    L,A
22E1             L265:
22E1 11 3C 12            LD    DE,4668
22E4 B7                  OR    A
22E5 ED 52               SBC   HL,DE
22E7             L266:
22E7 C2 F2 22            JP    NZ,L270
22EA             L267:
22EA 3E 14               LD    A,20
22EC             L268:
22EC CD 1B 3D            CALL  writeLineA
22EF             L269:
22EF C3 F8 22            JP    L273
22F2             L270:
22F2 21 E7 03            LD    HL,999
22F5             L271:
22F5 CD F3 3C            CALL  writeLineHL
22F8             L272:
22F8                     ;;testBitwiseOperators.j(52)     if (0x1C ^ 0x1000 + 0x0234 == 0x1228) println (21); else println (999);
22F8             L273:
22F8 3E 1C               LD    A,28
22FA             L274:
22FA 21 00 10            LD    HL,4096
22FD             L275:
22FD 11 34 02            LD    DE,564
2300 19                  ADD   HL,DE
2301             L276:
2301 AD                  XOR   A,L
2302 6F                  LD    L,A
2303             L277:
2303 11 28 12            LD    DE,4648
2306 B7                  OR    A
2307 ED 52               SBC   HL,DE
2309             L278:
2309 C2 14 23            JP    NZ,L282
230C             L279:
230C 3E 15               LD    A,21
230E             L280:
230E CD 1B 3D            CALL  writeLineA
2311             L281:
2311 C3 1A 23            JP    L286
2314             L282:
2314 21 E7 03            LD    HL,999
2317             L283:
2317 CD F3 3C            CALL  writeLineHL
231A             L284:
231A                     ;;testBitwiseOperators.j(53)     //constant word/acc byte
231A             L285:
231A                     ;;testBitwiseOperators.j(54)     if (0x1234 & 0x10 + 0x0C == 0x0014) println (22); else println (999);
231A             L286:
231A 21 34 12            LD    HL,4660
231D             L287:
231D 3E 10               LD    A,16
231F             L288:
231F C6 0C               ADD   A,12
2321             L289:
2321 5F                  LD    E,A
2322 A5                  AND   A,L
2323 6F                  LD    L,A
2324 7B                  LD    A,E
2325 26 00               LD    H,0
2327             L290:
2327 3E 14               LD    A,20
2329             L291:
2329 5F                  LD    E,A
232A 16 00               LD    D,0
232C EB                  EX    DE,HL
232D B7                  OR    A
232E ED 52               SBC   HL,DE
2330             L292:
2330 C2 3B 23            JP    NZ,L296
2333             L293:
2333 3E 16               LD    A,22
2335             L294:
2335 CD 1B 3D            CALL  writeLineA
2338             L295:
2338 C3 41 23            JP    L299
233B             L296:
233B 21 E7 03            LD    HL,999
233E             L297:
233E CD F3 3C            CALL  writeLineHL
2341             L298:
2341                     ;;testBitwiseOperators.j(55)     if (0x1234 | 0x10 + 0x0C == 0x123C) println (23); else println (999);
2341             L299:
2341 21 34 12            LD    HL,4660
2344             L300:
2344 3E 10               LD    A,16
2346             L301:
2346 C6 0C               ADD   A,12
2348             L302:
2348 B5                  OR    A,L
2349 6F                  LD    L,A
234A             L303:
234A 11 3C 12            LD    DE,4668
234D B7                  OR    A
234E ED 52               SBC   HL,DE
2350             L304:
2350 C2 5B 23            JP    NZ,L308
2353             L305:
2353 3E 17               LD    A,23
2355             L306:
2355 CD 1B 3D            CALL  writeLineA
2358             L307:
2358 C3 61 23            JP    L311
235B             L308:
235B 21 E7 03            LD    HL,999
235E             L309:
235E CD F3 3C            CALL  writeLineHL
2361             L310:
2361                     ;;testBitwiseOperators.j(56)     if (0x1234 ^ 0x10 + 0x0C == 0x1228) println (24); else println (999);
2361             L311:
2361 21 34 12            LD    HL,4660
2364             L312:
2364 3E 10               LD    A,16
2366             L313:
2366 C6 0C               ADD   A,12
2368             L314:
2368 AD                  XOR   A,L
2369 6F                  LD    L,A
236A             L315:
236A 11 28 12            LD    DE,4648
236D B7                  OR    A
236E ED 52               SBC   HL,DE
2370             L316:
2370 C2 7B 23            JP    NZ,L320
2373             L317:
2373 3E 18               LD    A,24
2375             L318:
2375 CD 1B 3D            CALL  writeLineA
2378             L319:
2378 C3 81 23            JP    L327
237B             L320:
237B 21 E7 03            LD    HL,999
237E             L321:
237E CD F3 3C            CALL  writeLineHL
2381             L322:
2381                     ;;testBitwiseOperators.j(57)   
2381             L323:
2381                     ;;testBitwiseOperators.j(58)     //constant/var
2381             L324:
2381                     ;;testBitwiseOperators.j(59)     //*****************
2381             L325:
2381                     ;;testBitwiseOperators.j(60)     //constant byte/var byte
2381             L326:
2381                     ;;testBitwiseOperators.j(61)     if (0x07 & b1 == 0x04) println (25); else println (999);
2381             L327:
2381 3E 07               LD    A,7
2383             L328:
2383 47                  LD    B,A
2384 3A 00 50            LD    A,(05000H)
2387 A0                  AND   A,B
2388             L329:
2388 D6 04               SUB   A,4
238A             L330:
238A C2 95 23            JP    NZ,L334
238D             L331:
238D 3E 19               LD    A,25
238F             L332:
238F CD 1B 3D            CALL  writeLineA
2392             L333:
2392 C3 9B 23            JP    L337
2395             L334:
2395 21 E7 03            LD    HL,999
2398             L335:
2398 CD F3 3C            CALL  writeLineHL
239B             L336:
239B                     ;;testBitwiseOperators.j(62)     if (0x07 | b1 == 0x1F) println (26); else println (999);
239B             L337:
239B 3E 07               LD    A,7
239D             L338:
239D 47                  LD    B,A
239E 3A 00 50            LD    A,(05000H)
23A1 B0                  OR    A,B
23A2             L339:
23A2 D6 1F               SUB   A,31
23A4             L340:
23A4 C2 AF 23            JP    NZ,L344
23A7             L341:
23A7 3E 1A               LD    A,26
23A9             L342:
23A9 CD 1B 3D            CALL  writeLineA
23AC             L343:
23AC C3 B5 23            JP    L347
23AF             L344:
23AF 21 E7 03            LD    HL,999
23B2             L345:
23B2 CD F3 3C            CALL  writeLineHL
23B5             L346:
23B5                     ;;testBitwiseOperators.j(63)     if (0x07 ^ b1 == 0x1B) println (27); else println (999);
23B5             L347:
23B5 3E 07               LD    A,7
23B7             L348:
23B7 47                  LD    B,A
23B8 3A 00 50            LD    A,(05000H)
23BB A8                  XOR   A,B
23BC             L349:
23BC D6 1B               SUB   A,27
23BE             L350:
23BE C2 C9 23            JP    NZ,L354
23C1             L351:
23C1 3E 1B               LD    A,27
23C3             L352:
23C3 CD 1B 3D            CALL  writeLineA
23C6             L353:
23C6 C3 CF 23            JP    L358
23C9             L354:
23C9 21 E7 03            LD    HL,999
23CC             L355:
23CC CD F3 3C            CALL  writeLineHL
23CF             L356:
23CF                     ;;testBitwiseOperators.j(64)     //constant word/var word
23CF             L357:
23CF                     ;;testBitwiseOperators.j(65)     if (0x1234 & w1 == 0x0224) println (28); else println (999);
23CF             L358:
23CF 21 34 12            LD    HL,4660
23D2             L359:
23D2 ED 5B 02 50         LD    DE,(05002H)
23D6 C5                  PUSH  BC
23D7 47                  LD    B,A
23D8 7C                  LD    A,H
23D9 A2                  AND   A,D
23DA 67                  LD    H,A
23DB 7D                  LD    A,L
23DC A3                  AND   A,E
23DD 6F                  LD    L,A
23DE 78                  LD    A,B
23DF C1                  POP   BC
23E0             L360:
23E0 11 24 02            LD    DE,548
23E3 B7                  OR    A
23E4 ED 52               SBC   HL,DE
23E6             L361:
23E6 C2 F1 23            JP    NZ,L365
23E9             L362:
23E9 3E 1C               LD    A,28
23EB             L363:
23EB CD 1B 3D            CALL  writeLineA
23EE             L364:
23EE C3 F7 23            JP    L368
23F1             L365:
23F1 21 E7 03            LD    HL,999
23F4             L366:
23F4 CD F3 3C            CALL  writeLineHL
23F7             L367:
23F7                     ;;testBitwiseOperators.j(66)     if (0x1234 | w1 == 0x133C) println (29); else println (999);
23F7             L368:
23F7 21 34 12            LD    HL,4660
23FA             L369:
23FA ED 5B 02 50         LD    DE,(05002H)
23FE 47                  LD    B,A
23FF 7C                  LD    A,H
2400 B2                  OR    A,D
2401 67                  LD    H,A
2402 7D                  LD    A,L
2403 B3                  OR    A,E
2404 6F                  LD    L,A
2405 78                  LD    A,B
2406             L370:
2406 11 3C 13            LD    DE,4924
2409 B7                  OR    A
240A ED 52               SBC   HL,DE
240C             L371:
240C C2 17 24            JP    NZ,L375
240F             L372:
240F 3E 1D               LD    A,29
2411             L373:
2411 CD 1B 3D            CALL  writeLineA
2414             L374:
2414 C3 1D 24            JP    L378
2417             L375:
2417 21 E7 03            LD    HL,999
241A             L376:
241A CD F3 3C            CALL  writeLineHL
241D             L377:
241D                     ;;testBitwiseOperators.j(67)     if (0x1234 ^ w1 == 0x1118) println (30); else println (999);
241D             L378:
241D 21 34 12            LD    HL,4660
2420             L379:
2420 ED 5B 02 50         LD    DE,(05002H)
2424 C5                  PUSH  BC
2425 47                  LD    B,A
2426 7C                  LD    A,H
2427 AA                  XOR   A,D
2428 67                  LD    H,A
2429 7D                  LD    A,L
242A AB                  XOR   A,E
242B 6F                  LD    L,A
242C 78                  LD    A,B
242D C1                  POP   BC
242E             L380:
242E 11 18 11            LD    DE,4376
2431 B7                  OR    A
2432 ED 52               SBC   HL,DE
2434             L381:
2434 C2 3F 24            JP    NZ,L385
2437             L382:
2437 3E 1E               LD    A,30
2439             L383:
2439 CD 1B 3D            CALL  writeLineA
243C             L384:
243C C3 45 24            JP    L389
243F             L385:
243F 21 E7 03            LD    HL,999
2442             L386:
2442 CD F3 3C            CALL  writeLineHL
2445             L387:
2445                     ;;testBitwiseOperators.j(68)     //constant byte/var word
2445             L388:
2445                     ;;testBitwiseOperators.j(69)     if (0x1C & w2 == 0x0014) println (31); else println (999);
2445             L389:
2445 3E 1C               LD    A,28
2447             L390:
2447 6F                  LD    L,A
2448 26 00               LD    H,0
244A             L391:
244A ED 5B 04 50         LD    DE,(05004H)
244E C5                  PUSH  BC
244F 47                  LD    B,A
2450 7C                  LD    A,H
2451 A2                  AND   A,D
2452 67                  LD    H,A
2453 7D                  LD    A,L
2454 A3                  AND   A,E
2455 6F                  LD    L,A
2456 78                  LD    A,B
2457 C1                  POP   BC
2458             L392:
2458 3E 14               LD    A,20
245A             L393:
245A 5F                  LD    E,A
245B 16 00               LD    D,0
245D EB                  EX    DE,HL
245E B7                  OR    A
245F ED 52               SBC   HL,DE
2461             L394:
2461 C2 6C 24            JP    NZ,L398
2464             L395:
2464 3E 1F               LD    A,31
2466             L396:
2466 CD 1B 3D            CALL  writeLineA
2469             L397:
2469 C3 72 24            JP    L401
246C             L398:
246C 21 E7 03            LD    HL,999
246F             L399:
246F CD F3 3C            CALL  writeLineHL
2472             L400:
2472                     ;;testBitwiseOperators.j(70)     if (0x1C | w2 == 0x123C) println (32); else println (999);
2472             L401:
2472 3E 1C               LD    A,28
2474             L402:
2474 6F                  LD    L,A
2475 26 00               LD    H,0
2477             L403:
2477 ED 5B 04 50         LD    DE,(05004H)
247B 47                  LD    B,A
247C 7C                  LD    A,H
247D B2                  OR    A,D
247E 67                  LD    H,A
247F 7D                  LD    A,L
2480 B3                  OR    A,E
2481 6F                  LD    L,A
2482 78                  LD    A,B
2483             L404:
2483 11 3C 12            LD    DE,4668
2486 B7                  OR    A
2487 ED 52               SBC   HL,DE
2489             L405:
2489 C2 94 24            JP    NZ,L409
248C             L406:
248C 3E 20               LD    A,32
248E             L407:
248E CD 1B 3D            CALL  writeLineA
2491             L408:
2491 C3 9A 24            JP    L412
2494             L409:
2494 21 E7 03            LD    HL,999
2497             L410:
2497 CD F3 3C            CALL  writeLineHL
249A             L411:
249A                     ;;testBitwiseOperators.j(71)     if (0x1C ^ w2 == 0x1228) println (33); else println (999);
249A             L412:
249A 3E 1C               LD    A,28
249C             L413:
249C 6F                  LD    L,A
249D 26 00               LD    H,0
249F             L414:
249F ED 5B 04 50         LD    DE,(05004H)
24A3 C5                  PUSH  BC
24A4 47                  LD    B,A
24A5 7C                  LD    A,H
24A6 AA                  XOR   A,D
24A7 67                  LD    H,A
24A8 7D                  LD    A,L
24A9 AB                  XOR   A,E
24AA 6F                  LD    L,A
24AB 78                  LD    A,B
24AC C1                  POP   BC
24AD             L415:
24AD 11 28 12            LD    DE,4648
24B0 B7                  OR    A
24B1 ED 52               SBC   HL,DE
24B3             L416:
24B3 C2 BE 24            JP    NZ,L420
24B6             L417:
24B6 3E 21               LD    A,33
24B8             L418:
24B8 CD 1B 3D            CALL  writeLineA
24BB             L419:
24BB C3 C4 24            JP    L424
24BE             L420:
24BE 21 E7 03            LD    HL,999
24C1             L421:
24C1 CD F3 3C            CALL  writeLineHL
24C4             L422:
24C4                     ;;testBitwiseOperators.j(72)     //constant word/var byte
24C4             L423:
24C4                     ;;testBitwiseOperators.j(73)     if (0x1234 & b1 == 0x0014) println (34); else println (999);
24C4             L424:
24C4 21 34 12            LD    HL,4660
24C7             L425:
24C7 5F                  LD    E,A
24C8 3A 00 50            LD    A,(05000H)
24CB A5                  AND   A,L
24CC 6F                  LD    L,A
24CD 7B                  LD    A,E
24CE 26 00               LD    H,0
24D0             L426:
24D0 3E 14               LD    A,20
24D2             L427:
24D2 5F                  LD    E,A
24D3 16 00               LD    D,0
24D5 EB                  EX    DE,HL
24D6 B7                  OR    A
24D7 ED 52               SBC   HL,DE
24D9             L428:
24D9 C2 E4 24            JP    NZ,L432
24DC             L429:
24DC 3E 22               LD    A,34
24DE             L430:
24DE CD 1B 3D            CALL  writeLineA
24E1             L431:
24E1 C3 EA 24            JP    L435
24E4             L432:
24E4 21 E7 03            LD    HL,999
24E7             L433:
24E7 CD F3 3C            CALL  writeLineHL
24EA             L434:
24EA                     ;;testBitwiseOperators.j(74)     if (0x1234 | b1 == 0x123C) println (35); else println (999);
24EA             L435:
24EA 21 34 12            LD    HL,4660
24ED             L436:
24ED 47                  LD    B,A
24EE 3A 00 50            LD    A,(05000H)
24F1 B5                  OR    A,L
24F2 6F                  LD    L,A
24F3 78                  LD    A,B
24F4             L437:
24F4 11 3C 12            LD    DE,4668
24F7 B7                  OR    A
24F8 ED 52               SBC   HL,DE
24FA             L438:
24FA C2 05 25            JP    NZ,L442
24FD             L439:
24FD 3E 23               LD    A,35
24FF             L440:
24FF CD 1B 3D            CALL  writeLineA
2502             L441:
2502 C3 0B 25            JP    L445
2505             L442:
2505 21 E7 03            LD    HL,999
2508             L443:
2508 CD F3 3C            CALL  writeLineHL
250B             L444:
250B                     ;;testBitwiseOperators.j(75)     if (0x1234 ^ b1 == 0x1228) println (36); else println (999);
250B             L445:
250B 21 34 12            LD    HL,4660
250E             L446:
250E 47                  LD    B,A
250F 3A 00 50            LD    A,(05000H)
2512 AD                  XOR   A,L
2513 6F                  LD    L,A
2514 78                  LD    A,B
2515             L447:
2515 11 28 12            LD    DE,4648
2518 B7                  OR    A
2519 ED 52               SBC   HL,DE
251B             L448:
251B C2 26 25            JP    NZ,L452
251E             L449:
251E 3E 24               LD    A,36
2520             L450:
2520 CD 1B 3D            CALL  writeLineA
2523             L451:
2523 C3 2C 25            JP    L459
2526             L452:
2526 21 E7 03            LD    HL,999
2529             L453:
2529 CD F3 3C            CALL  writeLineHL
252C             L454:
252C                     ;;testBitwiseOperators.j(76)   
252C             L455:
252C                     ;;testBitwiseOperators.j(77)     //constant/final var
252C             L456:
252C                     ;;testBitwiseOperators.j(78)     //*****************
252C             L457:
252C                     ;;testBitwiseOperators.j(79)     //constant byte/final var byte
252C             L458:
252C                     ;;testBitwiseOperators.j(80)     if (0x07 & fb1 == 0x04) println (37); else println (999);
252C             L459:
252C 3E 07               LD    A,7
252E             L460:
252E E6 1C               AND   A,28
2530             L461:
2530 D6 04               SUB   A,4
2532             L462:
2532 C2 3D 25            JP    NZ,L466
2535             L463:
2535 3E 25               LD    A,37
2537             L464:
2537 CD 1B 3D            CALL  writeLineA
253A             L465:
253A C3 43 25            JP    L469
253D             L466:
253D 21 E7 03            LD    HL,999
2540             L467:
2540 CD F3 3C            CALL  writeLineHL
2543             L468:
2543                     ;;testBitwiseOperators.j(81)     if (0x07 | fb1 == 0x1F) println (38); else println (999);
2543             L469:
2543 3E 07               LD    A,7
2545             L470:
2545 F6 1C               OR    A,28
2547             L471:
2547 D6 1F               SUB   A,31
2549             L472:
2549 C2 54 25            JP    NZ,L476
254C             L473:
254C 3E 26               LD    A,38
254E             L474:
254E CD 1B 3D            CALL  writeLineA
2551             L475:
2551 C3 5A 25            JP    L479
2554             L476:
2554 21 E7 03            LD    HL,999
2557             L477:
2557 CD F3 3C            CALL  writeLineHL
255A             L478:
255A                     ;;testBitwiseOperators.j(82)     if (0x07 ^ fb1 == 0x1B) println (39); else println (999);
255A             L479:
255A 3E 07               LD    A,7
255C             L480:
255C EE 1C               XOR   A,28
255E             L481:
255E D6 1B               SUB   A,27
2560             L482:
2560 C2 6B 25            JP    NZ,L486
2563             L483:
2563 3E 27               LD    A,39
2565             L484:
2565 CD 1B 3D            CALL  writeLineA
2568             L485:
2568 C3 71 25            JP    L490
256B             L486:
256B 21 E7 03            LD    HL,999
256E             L487:
256E CD F3 3C            CALL  writeLineHL
2571             L488:
2571                     ;;testBitwiseOperators.j(83)     //constant word/final var word
2571             L489:
2571                     ;;testBitwiseOperators.j(84)     if (0x1234 & fw1 == 0x0224) println (40); else println (999);
2571             L490:
2571 21 34 12            LD    HL,4660
2574             L491:
2574 11 2C 03            LD    DE,812
2577 C5                  PUSH  BC
2578 47                  LD    B,A
2579 7C                  LD    A,H
257A A2                  AND   A,D
257B 67                  LD    H,A
257C 7D                  LD    A,L
257D A3                  AND   A,E
257E 6F                  LD    L,A
257F 78                  LD    A,B
2580 C1                  POP   BC
2581             L492:
2581 11 24 02            LD    DE,548
2584 B7                  OR    A
2585 ED 52               SBC   HL,DE
2587             L493:
2587 C2 92 25            JP    NZ,L497
258A             L494:
258A 3E 28               LD    A,40
258C             L495:
258C CD 1B 3D            CALL  writeLineA
258F             L496:
258F C3 98 25            JP    L500
2592             L497:
2592 21 E7 03            LD    HL,999
2595             L498:
2595 CD F3 3C            CALL  writeLineHL
2598             L499:
2598                     ;;testBitwiseOperators.j(85)     if (0x1234 | fw1 == 0x133C) println (41); else println (999);
2598             L500:
2598 21 34 12            LD    HL,4660
259B             L501:
259B 11 2C 03            LD    DE,812
259E 47                  LD    B,A
259F 7C                  LD    A,H
25A0 B2                  OR    A,D
25A1 67                  LD    H,A
25A2 7D                  LD    A,L
25A3 B3                  OR    A,E
25A4 6F                  LD    L,A
25A5 78                  LD    A,B
25A6             L502:
25A6 11 3C 13            LD    DE,4924
25A9 B7                  OR    A
25AA ED 52               SBC   HL,DE
25AC             L503:
25AC C2 B7 25            JP    NZ,L507
25AF             L504:
25AF 3E 29               LD    A,41
25B1             L505:
25B1 CD 1B 3D            CALL  writeLineA
25B4             L506:
25B4 C3 BD 25            JP    L510
25B7             L507:
25B7 21 E7 03            LD    HL,999
25BA             L508:
25BA CD F3 3C            CALL  writeLineHL
25BD             L509:
25BD                     ;;testBitwiseOperators.j(86)     if (0x1234 ^ fw1 == 0x1118) println (42); else println (999);
25BD             L510:
25BD 21 34 12            LD    HL,4660
25C0             L511:
25C0 11 2C 03            LD    DE,812
25C3 C5                  PUSH  BC
25C4 47                  LD    B,A
25C5 7C                  LD    A,H
25C6 AA                  XOR   A,D
25C7 67                  LD    H,A
25C8 7D                  LD    A,L
25C9 AB                  XOR   A,E
25CA 6F                  LD    L,A
25CB 78                  LD    A,B
25CC C1                  POP   BC
25CD             L512:
25CD 11 18 11            LD    DE,4376
25D0 B7                  OR    A
25D1 ED 52               SBC   HL,DE
25D3             L513:
25D3 C2 DE 25            JP    NZ,L517
25D6             L514:
25D6 3E 2A               LD    A,42
25D8             L515:
25D8 CD 1B 3D            CALL  writeLineA
25DB             L516:
25DB C3 E4 25            JP    L521
25DE             L517:
25DE 21 E7 03            LD    HL,999
25E1             L518:
25E1 CD F3 3C            CALL  writeLineHL
25E4             L519:
25E4                     ;;testBitwiseOperators.j(87)     //constant byte/final var word
25E4             L520:
25E4                     ;;testBitwiseOperators.j(88)     if (0x1C & fw2 == 0x0014) println (43); else println (999);
25E4             L521:
25E4 3E 1C               LD    A,28
25E6             L522:
25E6 6F                  LD    L,A
25E7 26 00               LD    H,0
25E9             L523:
25E9 11 34 12            LD    DE,4660
25EC C5                  PUSH  BC
25ED 47                  LD    B,A
25EE 7C                  LD    A,H
25EF A2                  AND   A,D
25F0 67                  LD    H,A
25F1 7D                  LD    A,L
25F2 A3                  AND   A,E
25F3 6F                  LD    L,A
25F4 78                  LD    A,B
25F5 C1                  POP   BC
25F6             L524:
25F6 3E 14               LD    A,20
25F8             L525:
25F8 5F                  LD    E,A
25F9 16 00               LD    D,0
25FB EB                  EX    DE,HL
25FC B7                  OR    A
25FD ED 52               SBC   HL,DE
25FF             L526:
25FF C2 0A 26            JP    NZ,L530
2602             L527:
2602 3E 2B               LD    A,43
2604             L528:
2604 CD 1B 3D            CALL  writeLineA
2607             L529:
2607 C3 10 26            JP    L533
260A             L530:
260A 21 E7 03            LD    HL,999
260D             L531:
260D CD F3 3C            CALL  writeLineHL
2610             L532:
2610                     ;;testBitwiseOperators.j(89)     if (0x1C | fw2 == 0x123C) println (44); else println (999);
2610             L533:
2610 3E 1C               LD    A,28
2612             L534:
2612 6F                  LD    L,A
2613 26 00               LD    H,0
2615             L535:
2615 11 34 12            LD    DE,4660
2618 47                  LD    B,A
2619 7C                  LD    A,H
261A B2                  OR    A,D
261B 67                  LD    H,A
261C 7D                  LD    A,L
261D B3                  OR    A,E
261E 6F                  LD    L,A
261F 78                  LD    A,B
2620             L536:
2620 11 3C 12            LD    DE,4668
2623 B7                  OR    A
2624 ED 52               SBC   HL,DE
2626             L537:
2626 C2 31 26            JP    NZ,L541
2629             L538:
2629 3E 2C               LD    A,44
262B             L539:
262B CD 1B 3D            CALL  writeLineA
262E             L540:
262E C3 37 26            JP    L544
2631             L541:
2631 21 E7 03            LD    HL,999
2634             L542:
2634 CD F3 3C            CALL  writeLineHL
2637             L543:
2637                     ;;testBitwiseOperators.j(90)     if (0x1C ^ fw2 == 0x1228) println (45); else println (999);
2637             L544:
2637 3E 1C               LD    A,28
2639             L545:
2639 6F                  LD    L,A
263A 26 00               LD    H,0
263C             L546:
263C 11 34 12            LD    DE,4660
263F C5                  PUSH  BC
2640 47                  LD    B,A
2641 7C                  LD    A,H
2642 AA                  XOR   A,D
2643 67                  LD    H,A
2644 7D                  LD    A,L
2645 AB                  XOR   A,E
2646 6F                  LD    L,A
2647 78                  LD    A,B
2648 C1                  POP   BC
2649             L547:
2649 11 28 12            LD    DE,4648
264C B7                  OR    A
264D ED 52               SBC   HL,DE
264F             L548:
264F C2 5A 26            JP    NZ,L552
2652             L549:
2652 3E 2D               LD    A,45
2654             L550:
2654 CD 1B 3D            CALL  writeLineA
2657             L551:
2657 C3 60 26            JP    L556
265A             L552:
265A 21 E7 03            LD    HL,999
265D             L553:
265D CD F3 3C            CALL  writeLineHL
2660             L554:
2660                     ;;testBitwiseOperators.j(91)     //constant word/final var byte
2660             L555:
2660                     ;;testBitwiseOperators.j(92)     if (0x1234 & fb1 == 0x0014) println (46); else println (999);
2660             L556:
2660 21 34 12            LD    HL,4660
2663             L557:
2663 5F                  LD    E,A
2664 3E 1C               LD    A,28
2666 A5                  AND   A,L
2667 6F                  LD    L,A
2668 7B                  LD    A,E
2669 26 00               LD    H,0
266B             L558:
266B 3E 14               LD    A,20
266D             L559:
266D 5F                  LD    E,A
266E 16 00               LD    D,0
2670 EB                  EX    DE,HL
2671 B7                  OR    A
2672 ED 52               SBC   HL,DE
2674             L560:
2674 C2 7F 26            JP    NZ,L564
2677             L561:
2677 3E 2E               LD    A,46
2679             L562:
2679 CD 1B 3D            CALL  writeLineA
267C             L563:
267C C3 85 26            JP    L567
267F             L564:
267F 21 E7 03            LD    HL,999
2682             L565:
2682 CD F3 3C            CALL  writeLineHL
2685             L566:
2685                     ;;testBitwiseOperators.j(93)     if (0x1234 | fb1 == 0x123C) println (47); else println (999);
2685             L567:
2685 21 34 12            LD    HL,4660
2688             L568:
2688 11 1C 00            LD    DE,28
268B 47                  LD    B,A
268C 7C                  LD    A,H
268D B2                  OR    A,D
268E 67                  LD    H,A
268F 7D                  LD    A,L
2690 B3                  OR    A,E
2691 6F                  LD    L,A
2692 78                  LD    A,B
2693             L569:
2693 11 3C 12            LD    DE,4668
2696 B7                  OR    A
2697 ED 52               SBC   HL,DE
2699             L570:
2699 C2 A4 26            JP    NZ,L574
269C             L571:
269C 3E 2F               LD    A,47
269E             L572:
269E CD 1B 3D            CALL  writeLineA
26A1             L573:
26A1 C3 AA 26            JP    L577
26A4             L574:
26A4 21 E7 03            LD    HL,999
26A7             L575:
26A7 CD F3 3C            CALL  writeLineHL
26AA             L576:
26AA                     ;;testBitwiseOperators.j(94)     if (0x1234 ^ fb1 == 0x1228) println (48); else println (999);
26AA             L577:
26AA 21 34 12            LD    HL,4660
26AD             L578:
26AD 11 1C 00            LD    DE,28
26B0 C5                  PUSH  BC
26B1 47                  LD    B,A
26B2 7C                  LD    A,H
26B3 AA                  XOR   A,D
26B4 67                  LD    H,A
26B5 7D                  LD    A,L
26B6 AB                  XOR   A,E
26B7 6F                  LD    L,A
26B8 78                  LD    A,B
26B9 C1                  POP   BC
26BA             L579:
26BA 11 28 12            LD    DE,4648
26BD B7                  OR    A
26BE ED 52               SBC   HL,DE
26C0             L580:
26C0 C2 CB 26            JP    NZ,L584
26C3             L581:
26C3 3E 30               LD    A,48
26C5             L582:
26C5 CD 1B 3D            CALL  writeLineA
26C8             L583:
26C8 C3 D1 26            JP    L591
26CB             L584:
26CB 21 E7 03            LD    HL,999
26CE             L585:
26CE CD F3 3C            CALL  writeLineHL
26D1             L586:
26D1                     ;;testBitwiseOperators.j(95)   
26D1             L587:
26D1                     ;;testBitwiseOperators.j(96)     //acc/constant
26D1             L588:
26D1                     ;;testBitwiseOperators.j(97)     //************
26D1             L589:
26D1                     ;;testBitwiseOperators.j(98)     //acc byte/constant byte
26D1             L590:
26D1                     ;;testBitwiseOperators.j(99)     if ((0x04 + 0x03) & 0x1C == 0x04) println (49); else println (999);
26D1             L591:
26D1 3E 04               LD    A,4
26D3             L592:
26D3 C6 03               ADD   A,3
26D5             L593:
26D5 E6 1C               AND   A,28
26D7             L594:
26D7 D6 04               SUB   A,4
26D9             L595:
26D9 C2 E4 26            JP    NZ,L599
26DC             L596:
26DC 3E 31               LD    A,49
26DE             L597:
26DE CD 1B 3D            CALL  writeLineA
26E1             L598:
26E1 C3 EA 26            JP    L602
26E4             L599:
26E4 21 E7 03            LD    HL,999
26E7             L600:
26E7 CD F3 3C            CALL  writeLineHL
26EA             L601:
26EA                     ;;testBitwiseOperators.j(100)     if ((0x04 + 0x03) | 0x1C == 0x1F) println (50); else println (999);
26EA             L602:
26EA 3E 04               LD    A,4
26EC             L603:
26EC C6 03               ADD   A,3
26EE             L604:
26EE F6 1C               OR    A,28
26F0             L605:
26F0 D6 1F               SUB   A,31
26F2             L606:
26F2 C2 FD 26            JP    NZ,L610
26F5             L607:
26F5 3E 32               LD    A,50
26F7             L608:
26F7 CD 1B 3D            CALL  writeLineA
26FA             L609:
26FA C3 03 27            JP    L613
26FD             L610:
26FD 21 E7 03            LD    HL,999
2700             L611:
2700 CD F3 3C            CALL  writeLineHL
2703             L612:
2703                     ;;testBitwiseOperators.j(101)     if ((0x04 + 0x03) ^ 0x1C == 0x1B) println (51); else println (999);
2703             L613:
2703 3E 04               LD    A,4
2705             L614:
2705 C6 03               ADD   A,3
2707             L615:
2707 EE 1C               XOR   A,28
2709             L616:
2709 D6 1B               SUB   A,27
270B             L617:
270B C2 16 27            JP    NZ,L621
270E             L618:
270E 3E 33               LD    A,51
2710             L619:
2710 CD 1B 3D            CALL  writeLineA
2713             L620:
2713 C3 1C 27            JP    L625
2716             L621:
2716 21 E7 03            LD    HL,999
2719             L622:
2719 CD F3 3C            CALL  writeLineHL
271C             L623:
271C                     ;;testBitwiseOperators.j(102)     //acc word/constant word
271C             L624:
271C                     ;;testBitwiseOperators.j(103)     if (0x1000 + 0x0234 & 0x032C == 0x0224) println (52); else println (999);
271C             L625:
271C 21 00 10            LD    HL,4096
271F             L626:
271F 11 34 02            LD    DE,564
2722 19                  ADD   HL,DE
2723             L627:
2723 11 2C 03            LD    DE,812
2726 C5                  PUSH  BC
2727 47                  LD    B,A
2728 7C                  LD    A,H
2729 A2                  AND   A,D
272A 67                  LD    H,A
272B 7D                  LD    A,L
272C A3                  AND   A,E
272D 6F                  LD    L,A
272E 78                  LD    A,B
272F C1                  POP   BC
2730             L628:
2730 11 24 02            LD    DE,548
2733 B7                  OR    A
2734 ED 52               SBC   HL,DE
2736             L629:
2736 C2 41 27            JP    NZ,L633
2739             L630:
2739 3E 34               LD    A,52
273B             L631:
273B CD 1B 3D            CALL  writeLineA
273E             L632:
273E C3 47 27            JP    L636
2741             L633:
2741 21 E7 03            LD    HL,999
2744             L634:
2744 CD F3 3C            CALL  writeLineHL
2747             L635:
2747                     ;;testBitwiseOperators.j(104)     if (0x1000 + 0x0234 | 0x032C == 0x133C) println (53); else println (999);
2747             L636:
2747 21 00 10            LD    HL,4096
274A             L637:
274A 11 34 02            LD    DE,564
274D 19                  ADD   HL,DE
274E             L638:
274E 11 2C 03            LD    DE,812
2751 47                  LD    B,A
2752 7C                  LD    A,H
2753 B2                  OR    A,D
2754 67                  LD    H,A
2755 7D                  LD    A,L
2756 B3                  OR    A,E
2757 6F                  LD    L,A
2758 78                  LD    A,B
2759             L639:
2759 11 3C 13            LD    DE,4924
275C B7                  OR    A
275D ED 52               SBC   HL,DE
275F             L640:
275F C2 6A 27            JP    NZ,L644
2762             L641:
2762 3E 35               LD    A,53
2764             L642:
2764 CD 1B 3D            CALL  writeLineA
2767             L643:
2767 C3 70 27            JP    L647
276A             L644:
276A 21 E7 03            LD    HL,999
276D             L645:
276D CD F3 3C            CALL  writeLineHL
2770             L646:
2770                     ;;testBitwiseOperators.j(105)     if (0x1000 + 0x0234 ^ 0x032C == 0x1118) println (54); else println (999);
2770             L647:
2770 21 00 10            LD    HL,4096
2773             L648:
2773 11 34 02            LD    DE,564
2776 19                  ADD   HL,DE
2777             L649:
2777 11 2C 03            LD    DE,812
277A C5                  PUSH  BC
277B 47                  LD    B,A
277C 7C                  LD    A,H
277D AA                  XOR   A,D
277E 67                  LD    H,A
277F 7D                  LD    A,L
2780 AB                  XOR   A,E
2781 6F                  LD    L,A
2782 78                  LD    A,B
2783 C1                  POP   BC
2784             L650:
2784 11 18 11            LD    DE,4376
2787 B7                  OR    A
2788 ED 52               SBC   HL,DE
278A             L651:
278A C2 95 27            JP    NZ,L655
278D             L652:
278D 3E 36               LD    A,54
278F             L653:
278F CD 1B 3D            CALL  writeLineA
2792             L654:
2792 C3 9B 27            JP    L659
2795             L655:
2795 21 E7 03            LD    HL,999
2798             L656:
2798 CD F3 3C            CALL  writeLineHL
279B             L657:
279B                     ;;testBitwiseOperators.j(106)     //acc byte/constant word
279B             L658:
279B                     ;;testBitwiseOperators.j(107)     if (0x10 + 0x0C & 0x1234 == 0x0014) println (55); else println (999);
279B             L659:
279B 3E 10               LD    A,16
279D             L660:
279D C6 0C               ADD   A,12
279F             L661:
279F 6F                  LD    L,A
27A0 26 00               LD    H,0
27A2             L662:
27A2 11 34 12            LD    DE,4660
27A5 C5                  PUSH  BC
27A6 47                  LD    B,A
27A7 7C                  LD    A,H
27A8 A2                  AND   A,D
27A9 67                  LD    H,A
27AA 7D                  LD    A,L
27AB A3                  AND   A,E
27AC 6F                  LD    L,A
27AD 78                  LD    A,B
27AE C1                  POP   BC
27AF             L663:
27AF 3E 14               LD    A,20
27B1             L664:
27B1 5F                  LD    E,A
27B2 16 00               LD    D,0
27B4 EB                  EX    DE,HL
27B5 B7                  OR    A
27B6 ED 52               SBC   HL,DE
27B8             L665:
27B8 C2 C3 27            JP    NZ,L669
27BB             L666:
27BB 3E 37               LD    A,55
27BD             L667:
27BD CD 1B 3D            CALL  writeLineA
27C0             L668:
27C0 C3 C9 27            JP    L672
27C3             L669:
27C3 21 E7 03            LD    HL,999
27C6             L670:
27C6 CD F3 3C            CALL  writeLineHL
27C9             L671:
27C9                     ;;testBitwiseOperators.j(108)     if (0x10 + 0x0C | 0x1234 == 0x123C) println (56); else println (999);
27C9             L672:
27C9 3E 10               LD    A,16
27CB             L673:
27CB C6 0C               ADD   A,12
27CD             L674:
27CD 6F                  LD    L,A
27CE 26 00               LD    H,0
27D0             L675:
27D0 11 34 12            LD    DE,4660
27D3 47                  LD    B,A
27D4 7C                  LD    A,H
27D5 B2                  OR    A,D
27D6 67                  LD    H,A
27D7 7D                  LD    A,L
27D8 B3                  OR    A,E
27D9 6F                  LD    L,A
27DA 78                  LD    A,B
27DB             L676:
27DB 11 3C 12            LD    DE,4668
27DE B7                  OR    A
27DF ED 52               SBC   HL,DE
27E1             L677:
27E1 C2 EC 27            JP    NZ,L681
27E4             L678:
27E4 3E 38               LD    A,56
27E6             L679:
27E6 CD 1B 3D            CALL  writeLineA
27E9             L680:
27E9 C3 F2 27            JP    L684
27EC             L681:
27EC 21 E7 03            LD    HL,999
27EF             L682:
27EF CD F3 3C            CALL  writeLineHL
27F2             L683:
27F2                     ;;testBitwiseOperators.j(109)     if (0x10 + 0x0C ^ 0x1234 == 0x1228) println (57); else println (999);
27F2             L684:
27F2 3E 10               LD    A,16
27F4             L685:
27F4 C6 0C               ADD   A,12
27F6             L686:
27F6 6F                  LD    L,A
27F7 26 00               LD    H,0
27F9             L687:
27F9 11 34 12            LD    DE,4660
27FC C5                  PUSH  BC
27FD 47                  LD    B,A
27FE 7C                  LD    A,H
27FF AA                  XOR   A,D
2800 67                  LD    H,A
2801 7D                  LD    A,L
2802 AB                  XOR   A,E
2803 6F                  LD    L,A
2804 78                  LD    A,B
2805 C1                  POP   BC
2806             L688:
2806 11 28 12            LD    DE,4648
2809 B7                  OR    A
280A ED 52               SBC   HL,DE
280C             L689:
280C C2 17 28            JP    NZ,L693
280F             L690:
280F 3E 39               LD    A,57
2811             L691:
2811 CD 1B 3D            CALL  writeLineA
2814             L692:
2814 C3 1D 28            JP    L697
2817             L693:
2817 21 E7 03            LD    HL,999
281A             L694:
281A CD F3 3C            CALL  writeLineHL
281D             L695:
281D                     ;;testBitwiseOperators.j(110)     //acc word/constant byte
281D             L696:
281D                     ;;testBitwiseOperators.j(111)     if (0x1000 + 0x0234 & 0x1C == 0x0014) println (58); else println (999);
281D             L697:
281D 21 00 10            LD    HL,4096
2820             L698:
2820 11 34 02            LD    DE,564
2823 19                  ADD   HL,DE
2824             L699:
2824 5F                  LD    E,A
2825 3E 1C               LD    A,28
2827 A5                  AND   A,L
2828 6F                  LD    L,A
2829 7B                  LD    A,E
282A 26 00               LD    H,0
282C             L700:
282C 3E 14               LD    A,20
282E             L701:
282E 5F                  LD    E,A
282F 16 00               LD    D,0
2831 EB                  EX    DE,HL
2832 B7                  OR    A
2833 ED 52               SBC   HL,DE
2835             L702:
2835 C2 40 28            JP    NZ,L706
2838             L703:
2838 3E 3A               LD    A,58
283A             L704:
283A CD 1B 3D            CALL  writeLineA
283D             L705:
283D C3 46 28            JP    L709
2840             L706:
2840 21 E7 03            LD    HL,999
2843             L707:
2843 CD F3 3C            CALL  writeLineHL
2846             L708:
2846                     ;;testBitwiseOperators.j(112)     if (0x1000 + 0x0234 | 0x1C == 0x123C) println (59); else println (999);
2846             L709:
2846 21 00 10            LD    HL,4096
2849             L710:
2849 11 34 02            LD    DE,564
284C 19                  ADD   HL,DE
284D             L711:
284D 11 1C 00            LD    DE,28
2850 47                  LD    B,A
2851 7C                  LD    A,H
2852 B2                  OR    A,D
2853 67                  LD    H,A
2854 7D                  LD    A,L
2855 B3                  OR    A,E
2856 6F                  LD    L,A
2857 78                  LD    A,B
2858             L712:
2858 11 3C 12            LD    DE,4668
285B B7                  OR    A
285C ED 52               SBC   HL,DE
285E             L713:
285E C2 69 28            JP    NZ,L717
2861             L714:
2861 3E 3B               LD    A,59
2863             L715:
2863 CD 1B 3D            CALL  writeLineA
2866             L716:
2866 C3 6F 28            JP    L720
2869             L717:
2869 21 E7 03            LD    HL,999
286C             L718:
286C CD F3 3C            CALL  writeLineHL
286F             L719:
286F                     ;;testBitwiseOperators.j(113)     if (0x1000 + 0x0234 ^ 0x1C == 0x1228) println (60); else println (999);
286F             L720:
286F 21 00 10            LD    HL,4096
2872             L721:
2872 11 34 02            LD    DE,564
2875 19                  ADD   HL,DE
2876             L722:
2876 11 1C 00            LD    DE,28
2879 C5                  PUSH  BC
287A 47                  LD    B,A
287B 7C                  LD    A,H
287C AA                  XOR   A,D
287D 67                  LD    H,A
287E 7D                  LD    A,L
287F AB                  XOR   A,E
2880 6F                  LD    L,A
2881 78                  LD    A,B
2882 C1                  POP   BC
2883             L723:
2883 11 28 12            LD    DE,4648
2886 B7                  OR    A
2887 ED 52               SBC   HL,DE
2889             L724:
2889 C2 94 28            JP    NZ,L728
288C             L725:
288C 3E 3C               LD    A,60
288E             L726:
288E CD 1B 3D            CALL  writeLineA
2891             L727:
2891 C3 9A 28            JP    L735
2894             L728:
2894 21 E7 03            LD    HL,999
2897             L729:
2897 CD F3 3C            CALL  writeLineHL
289A             L730:
289A                     ;;testBitwiseOperators.j(114)   
289A             L731:
289A                     ;;testBitwiseOperators.j(115)     //acc/acc
289A             L732:
289A                     ;;testBitwiseOperators.j(116)     //*******
289A             L733:
289A                     ;;testBitwiseOperators.j(117)     //acc byte/acc byte
289A             L734:
289A                     ;;testBitwiseOperators.j(118)     if (0x04 + 0x03 & 0x10 + 0x0C == 0x04) println (61); else println (999);
289A             L735:
289A 3E 04               LD    A,4
289C             L736:
289C C6 03               ADD   A,3
289E             L737:
289E F5                  PUSH  AF
289F 3E 10               LD    A,16
28A1             L738:
28A1 C6 0C               ADD   A,12
28A3             L739:
28A3 C1                  POP   BC
28A4 A0                  AND   A,B
28A5             L740:
28A5 D6 04               SUB   A,4
28A7             L741:
28A7 C2 B2 28            JP    NZ,L745
28AA             L742:
28AA 3E 3D               LD    A,61
28AC             L743:
28AC CD 1B 3D            CALL  writeLineA
28AF             L744:
28AF C3 B8 28            JP    L748
28B2             L745:
28B2 21 E7 03            LD    HL,999
28B5             L746:
28B5 CD F3 3C            CALL  writeLineHL
28B8             L747:
28B8                     ;;testBitwiseOperators.j(119)     if (0x04 + 0x03 | 0x10 + 0x0C == 0x1F) println (62); else println (999);
28B8             L748:
28B8 3E 04               LD    A,4
28BA             L749:
28BA C6 03               ADD   A,3
28BC             L750:
28BC F5                  PUSH  AF
28BD 3E 10               LD    A,16
28BF             L751:
28BF C6 0C               ADD   A,12
28C1             L752:
28C1 C1                  POP   BC
28C2 B0                  OR    A,B
28C3             L753:
28C3 D6 1F               SUB   A,31
28C5             L754:
28C5 C2 D0 28            JP    NZ,L758
28C8             L755:
28C8 3E 3E               LD    A,62
28CA             L756:
28CA CD 1B 3D            CALL  writeLineA
28CD             L757:
28CD C3 D6 28            JP    L761
28D0             L758:
28D0 21 E7 03            LD    HL,999
28D3             L759:
28D3 CD F3 3C            CALL  writeLineHL
28D6             L760:
28D6                     ;;testBitwiseOperators.j(120)     if (0x04 + 0x03 ^ 0x10 + 0x0C == 0x1B) println (63); else println (999);
28D6             L761:
28D6 3E 04               LD    A,4
28D8             L762:
28D8 C6 03               ADD   A,3
28DA             L763:
28DA F5                  PUSH  AF
28DB 3E 10               LD    A,16
28DD             L764:
28DD C6 0C               ADD   A,12
28DF             L765:
28DF C1                  POP   BC
28E0 A8                  XOR   A,B
28E1             L766:
28E1 D6 1B               SUB   A,27
28E3             L767:
28E3 C2 EE 28            JP    NZ,L771
28E6             L768:
28E6 3E 3F               LD    A,63
28E8             L769:
28E8 CD 1B 3D            CALL  writeLineA
28EB             L770:
28EB C3 F4 28            JP    L775
28EE             L771:
28EE 21 E7 03            LD    HL,999
28F1             L772:
28F1 CD F3 3C            CALL  writeLineHL
28F4             L773:
28F4                     ;;testBitwiseOperators.j(121)     //acc word/acc word
28F4             L774:
28F4                     ;;testBitwiseOperators.j(122)     if (0x1000 + 0x0234 & 0x0100 + 0x022C == 0x0224) println (64); else println (999);
28F4             L775:
28F4 21 00 10            LD    HL,4096
28F7             L776:
28F7 11 34 02            LD    DE,564
28FA 19                  ADD   HL,DE
28FB             L777:
28FB E5                  PUSH  HL
28FC 21 00 01            LD    HL,256
28FF             L778:
28FF 11 2C 02            LD    DE,556
2902 19                  ADD   HL,DE
2903             L779:
2903 D1                  POP   DE
2904 C5                  PUSH  BC
2905 47                  LD    B,A
2906 7C                  LD    A,H
2907 A2                  AND   A,D
2908 67                  LD    H,A
2909 7D                  LD    A,L
290A A3                  AND   A,E
290B 6F                  LD    L,A
290C 78                  LD    A,B
290D C1                  POP   BC
290E             L780:
290E 11 24 02            LD    DE,548
2911 B7                  OR    A
2912 ED 52               SBC   HL,DE
2914             L781:
2914 C2 1F 29            JP    NZ,L785
2917             L782:
2917 3E 40               LD    A,64
2919             L783:
2919 CD 1B 3D            CALL  writeLineA
291C             L784:
291C C3 25 29            JP    L788
291F             L785:
291F 21 E7 03            LD    HL,999
2922             L786:
2922 CD F3 3C            CALL  writeLineHL
2925             L787:
2925                     ;;testBitwiseOperators.j(123)     if (0x1000 + 0x0234 | 0x0100 + 0x022C == 0x133C) println (65); else println (999);
2925             L788:
2925 21 00 10            LD    HL,4096
2928             L789:
2928 11 34 02            LD    DE,564
292B 19                  ADD   HL,DE
292C             L790:
292C E5                  PUSH  HL
292D 21 00 01            LD    HL,256
2930             L791:
2930 11 2C 02            LD    DE,556
2933 19                  ADD   HL,DE
2934             L792:
2934 D1                  POP   DE
2935 47                  LD    B,A
2936 7C                  LD    A,H
2937 B2                  OR    A,D
2938 67                  LD    H,A
2939 7D                  LD    A,L
293A B3                  OR    A,E
293B 6F                  LD    L,A
293C 78                  LD    A,B
293D             L793:
293D 11 3C 13            LD    DE,4924
2940 B7                  OR    A
2941 ED 52               SBC   HL,DE
2943             L794:
2943 C2 4E 29            JP    NZ,L798
2946             L795:
2946 3E 41               LD    A,65
2948             L796:
2948 CD 1B 3D            CALL  writeLineA
294B             L797:
294B C3 54 29            JP    L801
294E             L798:
294E 21 E7 03            LD    HL,999
2951             L799:
2951 CD F3 3C            CALL  writeLineHL
2954             L800:
2954                     ;;testBitwiseOperators.j(124)     if (0x1000 + 0x0234 ^ 0x0100 + 0x022C == 0x1118) println (66); else println (999);
2954             L801:
2954 21 00 10            LD    HL,4096
2957             L802:
2957 11 34 02            LD    DE,564
295A 19                  ADD   HL,DE
295B             L803:
295B E5                  PUSH  HL
295C 21 00 01            LD    HL,256
295F             L804:
295F 11 2C 02            LD    DE,556
2962 19                  ADD   HL,DE
2963             L805:
2963 D1                  POP   DE
2964 C5                  PUSH  BC
2965 47                  LD    B,A
2966 7C                  LD    A,H
2967 AA                  XOR   A,D
2968 67                  LD    H,A
2969 7D                  LD    A,L
296A AB                  XOR   A,E
296B 6F                  LD    L,A
296C 78                  LD    A,B
296D C1                  POP   BC
296E             L806:
296E 11 18 11            LD    DE,4376
2971 B7                  OR    A
2972 ED 52               SBC   HL,DE
2974             L807:
2974 C2 7F 29            JP    NZ,L811
2977             L808:
2977 3E 42               LD    A,66
2979             L809:
2979 CD 1B 3D            CALL  writeLineA
297C             L810:
297C C3 85 29            JP    L815
297F             L811:
297F 21 E7 03            LD    HL,999
2982             L812:
2982 CD F3 3C            CALL  writeLineHL
2985             L813:
2985                     ;;testBitwiseOperators.j(125)     //acc byte/acc word
2985             L814:
2985                     ;;testBitwiseOperators.j(126)     if (0x10 + 0x0C & 0x1000 + 0x0234 == 0x0014) println (67); else println (999);
2985             L815:
2985 3E 10               LD    A,16
2987             L816:
2987 C6 0C               ADD   A,12
2989             L817:
2989 21 00 10            LD    HL,4096
298C             L818:
298C 11 34 02            LD    DE,564
298F 19                  ADD   HL,DE
2990             L819:
2990 5F                  LD    E,A
2991 A5                  AND   A,L
2992 6F                  LD    L,A
2993 7B                  LD    A,E
2994 26 00               LD    H,0
2996             L820:
2996 3E 14               LD    A,20
2998             L821:
2998 5F                  LD    E,A
2999 16 00               LD    D,0
299B EB                  EX    DE,HL
299C B7                  OR    A
299D ED 52               SBC   HL,DE
299F             L822:
299F C2 AA 29            JP    NZ,L826
29A2             L823:
29A2 3E 43               LD    A,67
29A4             L824:
29A4 CD 1B 3D            CALL  writeLineA
29A7             L825:
29A7 C3 B0 29            JP    L829
29AA             L826:
29AA 21 E7 03            LD    HL,999
29AD             L827:
29AD CD F3 3C            CALL  writeLineHL
29B0             L828:
29B0                     ;;testBitwiseOperators.j(127)     if (0x10 + 0x0C | 0x1000 + 0x0234 == 0x123C) println (68); else println (999);
29B0             L829:
29B0 3E 10               LD    A,16
29B2             L830:
29B2 C6 0C               ADD   A,12
29B4             L831:
29B4 21 00 10            LD    HL,4096
29B7             L832:
29B7 11 34 02            LD    DE,564
29BA 19                  ADD   HL,DE
29BB             L833:
29BB B5                  OR    A,L
29BC 6F                  LD    L,A
29BD             L834:
29BD 11 3C 12            LD    DE,4668
29C0 B7                  OR    A
29C1 ED 52               SBC   HL,DE
29C3             L835:
29C3 C2 CE 29            JP    NZ,L839
29C6             L836:
29C6 3E 44               LD    A,68
29C8             L837:
29C8 CD 1B 3D            CALL  writeLineA
29CB             L838:
29CB C3 D4 29            JP    L842
29CE             L839:
29CE 21 E7 03            LD    HL,999
29D1             L840:
29D1 CD F3 3C            CALL  writeLineHL
29D4             L841:
29D4                     ;;testBitwiseOperators.j(128)     if (0x10 + 0x0C ^ 0x1000 + 0x0234 == 0x1228) println (69); else println (999);
29D4             L842:
29D4 3E 10               LD    A,16
29D6             L843:
29D6 C6 0C               ADD   A,12
29D8             L844:
29D8 21 00 10            LD    HL,4096
29DB             L845:
29DB 11 34 02            LD    DE,564
29DE 19                  ADD   HL,DE
29DF             L846:
29DF AD                  XOR   A,L
29E0 6F                  LD    L,A
29E1             L847:
29E1 11 28 12            LD    DE,4648
29E4 B7                  OR    A
29E5 ED 52               SBC   HL,DE
29E7             L848:
29E7 C2 F2 29            JP    NZ,L852
29EA             L849:
29EA 3E 45               LD    A,69
29EC             L850:
29EC CD 1B 3D            CALL  writeLineA
29EF             L851:
29EF C3 F8 29            JP    L856
29F2             L852:
29F2 21 E7 03            LD    HL,999
29F5             L853:
29F5 CD F3 3C            CALL  writeLineHL
29F8             L854:
29F8                     ;;testBitwiseOperators.j(129)     //acc word/acc byte
29F8             L855:
29F8                     ;;testBitwiseOperators.j(130)     if (0x1000 + 0x0234 & 0x10 + 0x0C == 0x0014) println (70); else println (999);
29F8             L856:
29F8 21 00 10            LD    HL,4096
29FB             L857:
29FB 11 34 02            LD    DE,564
29FE 19                  ADD   HL,DE
29FF             L858:
29FF 3E 10               LD    A,16
2A01             L859:
2A01 C6 0C               ADD   A,12
2A03             L860:
2A03 5F                  LD    E,A
2A04 A5                  AND   A,L
2A05 6F                  LD    L,A
2A06 7B                  LD    A,E
2A07 26 00               LD    H,0
2A09             L861:
2A09 3E 14               LD    A,20
2A0B             L862:
2A0B 5F                  LD    E,A
2A0C 16 00               LD    D,0
2A0E EB                  EX    DE,HL
2A0F B7                  OR    A
2A10 ED 52               SBC   HL,DE
2A12             L863:
2A12 C2 1D 2A            JP    NZ,L867
2A15             L864:
2A15 3E 46               LD    A,70
2A17             L865:
2A17 CD 1B 3D            CALL  writeLineA
2A1A             L866:
2A1A C3 23 2A            JP    L870
2A1D             L867:
2A1D 21 E7 03            LD    HL,999
2A20             L868:
2A20 CD F3 3C            CALL  writeLineHL
2A23             L869:
2A23                     ;;testBitwiseOperators.j(131)     if (0x1000 + 0x0234 | 0x10 + 0x0C == 0x123C) println (71); else println (999);
2A23             L870:
2A23 21 00 10            LD    HL,4096
2A26             L871:
2A26 11 34 02            LD    DE,564
2A29 19                  ADD   HL,DE
2A2A             L872:
2A2A 3E 10               LD    A,16
2A2C             L873:
2A2C C6 0C               ADD   A,12
2A2E             L874:
2A2E B5                  OR    A,L
2A2F 6F                  LD    L,A
2A30             L875:
2A30 11 3C 12            LD    DE,4668
2A33 B7                  OR    A
2A34 ED 52               SBC   HL,DE
2A36             L876:
2A36 C2 41 2A            JP    NZ,L880
2A39             L877:
2A39 3E 47               LD    A,71
2A3B             L878:
2A3B CD 1B 3D            CALL  writeLineA
2A3E             L879:
2A3E C3 47 2A            JP    L883
2A41             L880:
2A41 21 E7 03            LD    HL,999
2A44             L881:
2A44 CD F3 3C            CALL  writeLineHL
2A47             L882:
2A47                     ;;testBitwiseOperators.j(132)     if (0x1000 + 0x0234 ^ 0x10 + 0x0C == 0x1228) println (72); else println (999);
2A47             L883:
2A47 21 00 10            LD    HL,4096
2A4A             L884:
2A4A 11 34 02            LD    DE,564
2A4D 19                  ADD   HL,DE
2A4E             L885:
2A4E 3E 10               LD    A,16
2A50             L886:
2A50 C6 0C               ADD   A,12
2A52             L887:
2A52 AD                  XOR   A,L
2A53 6F                  LD    L,A
2A54             L888:
2A54 11 28 12            LD    DE,4648
2A57 B7                  OR    A
2A58 ED 52               SBC   HL,DE
2A5A             L889:
2A5A C2 65 2A            JP    NZ,L893
2A5D             L890:
2A5D 3E 48               LD    A,72
2A5F             L891:
2A5F CD 1B 3D            CALL  writeLineA
2A62             L892:
2A62 C3 6B 2A            JP    L900
2A65             L893:
2A65 21 E7 03            LD    HL,999
2A68             L894:
2A68 CD F3 3C            CALL  writeLineHL
2A6B             L895:
2A6B                     ;;testBitwiseOperators.j(133)   
2A6B             L896:
2A6B                     ;;testBitwiseOperators.j(134)     //acc/var
2A6B             L897:
2A6B                     ;;testBitwiseOperators.j(135)     //*******
2A6B             L898:
2A6B                     ;;testBitwiseOperators.j(136)     //acc byte/var byte
2A6B             L899:
2A6B                     ;;testBitwiseOperators.j(137)     if (0x04 + 0x03 & b1 == 0x04) println (73); else println (999);
2A6B             L900:
2A6B 3E 04               LD    A,4
2A6D             L901:
2A6D C6 03               ADD   A,3
2A6F             L902:
2A6F 47                  LD    B,A
2A70 3A 00 50            LD    A,(05000H)
2A73 A0                  AND   A,B
2A74             L903:
2A74 D6 04               SUB   A,4
2A76             L904:
2A76 C2 81 2A            JP    NZ,L908
2A79             L905:
2A79 3E 49               LD    A,73
2A7B             L906:
2A7B CD 1B 3D            CALL  writeLineA
2A7E             L907:
2A7E C3 87 2A            JP    L911
2A81             L908:
2A81 21 E7 03            LD    HL,999
2A84             L909:
2A84 CD F3 3C            CALL  writeLineHL
2A87             L910:
2A87                     ;;testBitwiseOperators.j(138)     if (0x04 + 0x03 | b1 == 0x1F) println (74); else println (999);
2A87             L911:
2A87 3E 04               LD    A,4
2A89             L912:
2A89 C6 03               ADD   A,3
2A8B             L913:
2A8B 47                  LD    B,A
2A8C 3A 00 50            LD    A,(05000H)
2A8F B0                  OR    A,B
2A90             L914:
2A90 D6 1F               SUB   A,31
2A92             L915:
2A92 C2 9D 2A            JP    NZ,L919
2A95             L916:
2A95 3E 4A               LD    A,74
2A97             L917:
2A97 CD 1B 3D            CALL  writeLineA
2A9A             L918:
2A9A C3 A3 2A            JP    L922
2A9D             L919:
2A9D 21 E7 03            LD    HL,999
2AA0             L920:
2AA0 CD F3 3C            CALL  writeLineHL
2AA3             L921:
2AA3                     ;;testBitwiseOperators.j(139)     if (0x04 + 0x03 ^ b1 == 0x1B) println (75); else println (999);
2AA3             L922:
2AA3 3E 04               LD    A,4
2AA5             L923:
2AA5 C6 03               ADD   A,3
2AA7             L924:
2AA7 47                  LD    B,A
2AA8 3A 00 50            LD    A,(05000H)
2AAB A8                  XOR   A,B
2AAC             L925:
2AAC D6 1B               SUB   A,27
2AAE             L926:
2AAE C2 B9 2A            JP    NZ,L930
2AB1             L927:
2AB1 3E 4B               LD    A,75
2AB3             L928:
2AB3 CD 1B 3D            CALL  writeLineA
2AB6             L929:
2AB6 C3 BF 2A            JP    L934
2AB9             L930:
2AB9 21 E7 03            LD    HL,999
2ABC             L931:
2ABC CD F3 3C            CALL  writeLineHL
2ABF             L932:
2ABF                     ;;testBitwiseOperators.j(140)     //acc word/var word
2ABF             L933:
2ABF                     ;;testBitwiseOperators.j(141)     if (0x1000 + 0x0234 & w1 == 0x0224) println (76); else println (999);
2ABF             L934:
2ABF 21 00 10            LD    HL,4096
2AC2             L935:
2AC2 11 34 02            LD    DE,564
2AC5 19                  ADD   HL,DE
2AC6             L936:
2AC6 ED 5B 02 50         LD    DE,(05002H)
2ACA C5                  PUSH  BC
2ACB 47                  LD    B,A
2ACC 7C                  LD    A,H
2ACD A2                  AND   A,D
2ACE 67                  LD    H,A
2ACF 7D                  LD    A,L
2AD0 A3                  AND   A,E
2AD1 6F                  LD    L,A
2AD2 78                  LD    A,B
2AD3 C1                  POP   BC
2AD4             L937:
2AD4 11 24 02            LD    DE,548
2AD7 B7                  OR    A
2AD8 ED 52               SBC   HL,DE
2ADA             L938:
2ADA C2 E5 2A            JP    NZ,L942
2ADD             L939:
2ADD 3E 4C               LD    A,76
2ADF             L940:
2ADF CD 1B 3D            CALL  writeLineA
2AE2             L941:
2AE2 C3 EB 2A            JP    L945
2AE5             L942:
2AE5 21 E7 03            LD    HL,999
2AE8             L943:
2AE8 CD F3 3C            CALL  writeLineHL
2AEB             L944:
2AEB                     ;;testBitwiseOperators.j(142)     if (0x1000 + 0x0234 | w1 == 0x133C) println (77); else println (999);
2AEB             L945:
2AEB 21 00 10            LD    HL,4096
2AEE             L946:
2AEE 11 34 02            LD    DE,564
2AF1 19                  ADD   HL,DE
2AF2             L947:
2AF2 ED 5B 02 50         LD    DE,(05002H)
2AF6 47                  LD    B,A
2AF7 7C                  LD    A,H
2AF8 B2                  OR    A,D
2AF9 67                  LD    H,A
2AFA 7D                  LD    A,L
2AFB B3                  OR    A,E
2AFC 6F                  LD    L,A
2AFD 78                  LD    A,B
2AFE             L948:
2AFE 11 3C 13            LD    DE,4924
2B01 B7                  OR    A
2B02 ED 52               SBC   HL,DE
2B04             L949:
2B04 C2 0F 2B            JP    NZ,L953
2B07             L950:
2B07 3E 4D               LD    A,77
2B09             L951:
2B09 CD 1B 3D            CALL  writeLineA
2B0C             L952:
2B0C C3 15 2B            JP    L956
2B0F             L953:
2B0F 21 E7 03            LD    HL,999
2B12             L954:
2B12 CD F3 3C            CALL  writeLineHL
2B15             L955:
2B15                     ;;testBitwiseOperators.j(143)     if (0x1000 + 0x0234 ^ w1 == 0x1118) println (78); else println (999);
2B15             L956:
2B15 21 00 10            LD    HL,4096
2B18             L957:
2B18 11 34 02            LD    DE,564
2B1B 19                  ADD   HL,DE
2B1C             L958:
2B1C ED 5B 02 50         LD    DE,(05002H)
2B20 C5                  PUSH  BC
2B21 47                  LD    B,A
2B22 7C                  LD    A,H
2B23 AA                  XOR   A,D
2B24 67                  LD    H,A
2B25 7D                  LD    A,L
2B26 AB                  XOR   A,E
2B27 6F                  LD    L,A
2B28 78                  LD    A,B
2B29 C1                  POP   BC
2B2A             L959:
2B2A 11 18 11            LD    DE,4376
2B2D B7                  OR    A
2B2E ED 52               SBC   HL,DE
2B30             L960:
2B30 C2 3B 2B            JP    NZ,L964
2B33             L961:
2B33 3E 4E               LD    A,78
2B35             L962:
2B35 CD 1B 3D            CALL  writeLineA
2B38             L963:
2B38 C3 41 2B            JP    L968
2B3B             L964:
2B3B 21 E7 03            LD    HL,999
2B3E             L965:
2B3E CD F3 3C            CALL  writeLineHL
2B41             L966:
2B41                     ;;testBitwiseOperators.j(144)     //acc byte/var word
2B41             L967:
2B41                     ;;testBitwiseOperators.j(145)     if (0x10 + 0x0C & w2 == 0x0014) println (79); else println (999);
2B41             L968:
2B41 3E 10               LD    A,16
2B43             L969:
2B43 C6 0C               ADD   A,12
2B45             L970:
2B45 6F                  LD    L,A
2B46 26 00               LD    H,0
2B48             L971:
2B48 ED 5B 04 50         LD    DE,(05004H)
2B4C C5                  PUSH  BC
2B4D 47                  LD    B,A
2B4E 7C                  LD    A,H
2B4F A2                  AND   A,D
2B50 67                  LD    H,A
2B51 7D                  LD    A,L
2B52 A3                  AND   A,E
2B53 6F                  LD    L,A
2B54 78                  LD    A,B
2B55 C1                  POP   BC
2B56             L972:
2B56 3E 14               LD    A,20
2B58             L973:
2B58 5F                  LD    E,A
2B59 16 00               LD    D,0
2B5B EB                  EX    DE,HL
2B5C B7                  OR    A
2B5D ED 52               SBC   HL,DE
2B5F             L974:
2B5F C2 6A 2B            JP    NZ,L978
2B62             L975:
2B62 3E 4F               LD    A,79
2B64             L976:
2B64 CD 1B 3D            CALL  writeLineA
2B67             L977:
2B67 C3 70 2B            JP    L981
2B6A             L978:
2B6A 21 E7 03            LD    HL,999
2B6D             L979:
2B6D CD F3 3C            CALL  writeLineHL
2B70             L980:
2B70                     ;;testBitwiseOperators.j(146)     if (0x10 + 0x0C | w2 == 0x123C) println (80); else println (999);
2B70             L981:
2B70 3E 10               LD    A,16
2B72             L982:
2B72 C6 0C               ADD   A,12
2B74             L983:
2B74 6F                  LD    L,A
2B75 26 00               LD    H,0
2B77             L984:
2B77 ED 5B 04 50         LD    DE,(05004H)
2B7B 47                  LD    B,A
2B7C 7C                  LD    A,H
2B7D B2                  OR    A,D
2B7E 67                  LD    H,A
2B7F 7D                  LD    A,L
2B80 B3                  OR    A,E
2B81 6F                  LD    L,A
2B82 78                  LD    A,B
2B83             L985:
2B83 11 3C 12            LD    DE,4668
2B86 B7                  OR    A
2B87 ED 52               SBC   HL,DE
2B89             L986:
2B89 C2 94 2B            JP    NZ,L990
2B8C             L987:
2B8C 3E 50               LD    A,80
2B8E             L988:
2B8E CD 1B 3D            CALL  writeLineA
2B91             L989:
2B91 C3 9A 2B            JP    L993
2B94             L990:
2B94 21 E7 03            LD    HL,999
2B97             L991:
2B97 CD F3 3C            CALL  writeLineHL
2B9A             L992:
2B9A                     ;;testBitwiseOperators.j(147)     if (0x10 + 0x0C ^ w2 == 0x1228) println (81); else println (999);
2B9A             L993:
2B9A 3E 10               LD    A,16
2B9C             L994:
2B9C C6 0C               ADD   A,12
2B9E             L995:
2B9E 6F                  LD    L,A
2B9F 26 00               LD    H,0
2BA1             L996:
2BA1 ED 5B 04 50         LD    DE,(05004H)
2BA5 C5                  PUSH  BC
2BA6 47                  LD    B,A
2BA7 7C                  LD    A,H
2BA8 AA                  XOR   A,D
2BA9 67                  LD    H,A
2BAA 7D                  LD    A,L
2BAB AB                  XOR   A,E
2BAC 6F                  LD    L,A
2BAD 78                  LD    A,B
2BAE C1                  POP   BC
2BAF             L997:
2BAF 11 28 12            LD    DE,4648
2BB2 B7                  OR    A
2BB3 ED 52               SBC   HL,DE
2BB5             L998:
2BB5 C2 C0 2B            JP    NZ,L1002
2BB8             L999:
2BB8 3E 51               LD    A,81
2BBA             L1000:
2BBA CD 1B 3D            CALL  writeLineA
2BBD             L1001:
2BBD C3 C6 2B            JP    L1006
2BC0             L1002:
2BC0 21 E7 03            LD    HL,999
2BC3             L1003:
2BC3 CD F3 3C            CALL  writeLineHL
2BC6             L1004:
2BC6                     ;;testBitwiseOperators.j(148)     //acc word/var byte
2BC6             L1005:
2BC6                     ;;testBitwiseOperators.j(149)     if (0x1000 + 0x0234 & b1 == 0x0014) println (82); else println (999);
2BC6             L1006:
2BC6 21 00 10            LD    HL,4096
2BC9             L1007:
2BC9 11 34 02            LD    DE,564
2BCC 19                  ADD   HL,DE
2BCD             L1008:
2BCD 5F                  LD    E,A
2BCE 3A 00 50            LD    A,(05000H)
2BD1 A5                  AND   A,L
2BD2 6F                  LD    L,A
2BD3 7B                  LD    A,E
2BD4 26 00               LD    H,0
2BD6             L1009:
2BD6 3E 14               LD    A,20
2BD8             L1010:
2BD8 5F                  LD    E,A
2BD9 16 00               LD    D,0
2BDB EB                  EX    DE,HL
2BDC B7                  OR    A
2BDD ED 52               SBC   HL,DE
2BDF             L1011:
2BDF C2 EA 2B            JP    NZ,L1015
2BE2             L1012:
2BE2 3E 52               LD    A,82
2BE4             L1013:
2BE4 CD 1B 3D            CALL  writeLineA
2BE7             L1014:
2BE7 C3 F0 2B            JP    L1018
2BEA             L1015:
2BEA 21 E7 03            LD    HL,999
2BED             L1016:
2BED CD F3 3C            CALL  writeLineHL
2BF0             L1017:
2BF0                     ;;testBitwiseOperators.j(150)     if (0x1000 + 0x0234 | b1 == 0x123C) println (83); else println (999);
2BF0             L1018:
2BF0 21 00 10            LD    HL,4096
2BF3             L1019:
2BF3 11 34 02            LD    DE,564
2BF6 19                  ADD   HL,DE
2BF7             L1020:
2BF7 47                  LD    B,A
2BF8 3A 00 50            LD    A,(05000H)
2BFB B5                  OR    A,L
2BFC 6F                  LD    L,A
2BFD 78                  LD    A,B
2BFE             L1021:
2BFE 11 3C 12            LD    DE,4668
2C01 B7                  OR    A
2C02 ED 52               SBC   HL,DE
2C04             L1022:
2C04 C2 0F 2C            JP    NZ,L1026
2C07             L1023:
2C07 3E 53               LD    A,83
2C09             L1024:
2C09 CD 1B 3D            CALL  writeLineA
2C0C             L1025:
2C0C C3 15 2C            JP    L1029
2C0F             L1026:
2C0F 21 E7 03            LD    HL,999
2C12             L1027:
2C12 CD F3 3C            CALL  writeLineHL
2C15             L1028:
2C15                     ;;testBitwiseOperators.j(151)     if (0x1000 + 0x0234 ^ b1 == 0x1228) println (84); else println (999);
2C15             L1029:
2C15 21 00 10            LD    HL,4096
2C18             L1030:
2C18 11 34 02            LD    DE,564
2C1B 19                  ADD   HL,DE
2C1C             L1031:
2C1C 47                  LD    B,A
2C1D 3A 00 50            LD    A,(05000H)
2C20 AD                  XOR   A,L
2C21 6F                  LD    L,A
2C22 78                  LD    A,B
2C23             L1032:
2C23 11 28 12            LD    DE,4648
2C26 B7                  OR    A
2C27 ED 52               SBC   HL,DE
2C29             L1033:
2C29 C2 34 2C            JP    NZ,L1037
2C2C             L1034:
2C2C 3E 54               LD    A,84
2C2E             L1035:
2C2E CD 1B 3D            CALL  writeLineA
2C31             L1036:
2C31 C3 3A 2C            JP    L1044
2C34             L1037:
2C34 21 E7 03            LD    HL,999
2C37             L1038:
2C37 CD F3 3C            CALL  writeLineHL
2C3A             L1039:
2C3A                     ;;testBitwiseOperators.j(152)   
2C3A             L1040:
2C3A                     ;;testBitwiseOperators.j(153)     //acc/final var
2C3A             L1041:
2C3A                     ;;testBitwiseOperators.j(154)     //*************
2C3A             L1042:
2C3A                     ;;testBitwiseOperators.j(155)     //acc byte/final var byte
2C3A             L1043:
2C3A                     ;;testBitwiseOperators.j(156)     if (0x04 + 0x03 & fb1 == 0x04) println (85); else println (999);
2C3A             L1044:
2C3A 3E 04               LD    A,4
2C3C             L1045:
2C3C C6 03               ADD   A,3
2C3E             L1046:
2C3E E6 1C               AND   A,28
2C40             L1047:
2C40 D6 04               SUB   A,4
2C42             L1048:
2C42 C2 4D 2C            JP    NZ,L1052
2C45             L1049:
2C45 3E 55               LD    A,85
2C47             L1050:
2C47 CD 1B 3D            CALL  writeLineA
2C4A             L1051:
2C4A C3 53 2C            JP    L1055
2C4D             L1052:
2C4D 21 E7 03            LD    HL,999
2C50             L1053:
2C50 CD F3 3C            CALL  writeLineHL
2C53             L1054:
2C53                     ;;testBitwiseOperators.j(157)     if (0x04 + 0x03 | fb1 == 0x1F) println (86); else println (999);
2C53             L1055:
2C53 3E 04               LD    A,4
2C55             L1056:
2C55 C6 03               ADD   A,3
2C57             L1057:
2C57 F6 1C               OR    A,28
2C59             L1058:
2C59 D6 1F               SUB   A,31
2C5B             L1059:
2C5B C2 66 2C            JP    NZ,L1063
2C5E             L1060:
2C5E 3E 56               LD    A,86
2C60             L1061:
2C60 CD 1B 3D            CALL  writeLineA
2C63             L1062:
2C63 C3 6C 2C            JP    L1066
2C66             L1063:
2C66 21 E7 03            LD    HL,999
2C69             L1064:
2C69 CD F3 3C            CALL  writeLineHL
2C6C             L1065:
2C6C                     ;;testBitwiseOperators.j(158)     if (0x04 + 0x03 ^ fb1 == 0x1B) println (87); else println (999);
2C6C             L1066:
2C6C 3E 04               LD    A,4
2C6E             L1067:
2C6E C6 03               ADD   A,3
2C70             L1068:
2C70 EE 1C               XOR   A,28
2C72             L1069:
2C72 D6 1B               SUB   A,27
2C74             L1070:
2C74 C2 7F 2C            JP    NZ,L1074
2C77             L1071:
2C77 3E 57               LD    A,87
2C79             L1072:
2C79 CD 1B 3D            CALL  writeLineA
2C7C             L1073:
2C7C C3 85 2C            JP    L1078
2C7F             L1074:
2C7F 21 E7 03            LD    HL,999
2C82             L1075:
2C82 CD F3 3C            CALL  writeLineHL
2C85             L1076:
2C85                     ;;testBitwiseOperators.j(159)     //acc word/final var word
2C85             L1077:
2C85                     ;;testBitwiseOperators.j(160)     if (0x1000 + 0x0234 & fw1 == 0x0224) println (88); else println (999);
2C85             L1078:
2C85 21 00 10            LD    HL,4096
2C88             L1079:
2C88 11 34 02            LD    DE,564
2C8B 19                  ADD   HL,DE
2C8C             L1080:
2C8C 11 2C 03            LD    DE,812
2C8F C5                  PUSH  BC
2C90 47                  LD    B,A
2C91 7C                  LD    A,H
2C92 A2                  AND   A,D
2C93 67                  LD    H,A
2C94 7D                  LD    A,L
2C95 A3                  AND   A,E
2C96 6F                  LD    L,A
2C97 78                  LD    A,B
2C98 C1                  POP   BC
2C99             L1081:
2C99 11 24 02            LD    DE,548
2C9C B7                  OR    A
2C9D ED 52               SBC   HL,DE
2C9F             L1082:
2C9F C2 AA 2C            JP    NZ,L1086
2CA2             L1083:
2CA2 3E 58               LD    A,88
2CA4             L1084:
2CA4 CD 1B 3D            CALL  writeLineA
2CA7             L1085:
2CA7 C3 B0 2C            JP    L1089
2CAA             L1086:
2CAA 21 E7 03            LD    HL,999
2CAD             L1087:
2CAD CD F3 3C            CALL  writeLineHL
2CB0             L1088:
2CB0                     ;;testBitwiseOperators.j(161)     if (0x1000 + 0x0234 | fw1 == 0x133C) println (89); else println (999);
2CB0             L1089:
2CB0 21 00 10            LD    HL,4096
2CB3             L1090:
2CB3 11 34 02            LD    DE,564
2CB6 19                  ADD   HL,DE
2CB7             L1091:
2CB7 11 2C 03            LD    DE,812
2CBA 47                  LD    B,A
2CBB 7C                  LD    A,H
2CBC B2                  OR    A,D
2CBD 67                  LD    H,A
2CBE 7D                  LD    A,L
2CBF B3                  OR    A,E
2CC0 6F                  LD    L,A
2CC1 78                  LD    A,B
2CC2             L1092:
2CC2 11 3C 13            LD    DE,4924
2CC5 B7                  OR    A
2CC6 ED 52               SBC   HL,DE
2CC8             L1093:
2CC8 C2 D3 2C            JP    NZ,L1097
2CCB             L1094:
2CCB 3E 59               LD    A,89
2CCD             L1095:
2CCD CD 1B 3D            CALL  writeLineA
2CD0             L1096:
2CD0 C3 D9 2C            JP    L1100
2CD3             L1097:
2CD3 21 E7 03            LD    HL,999
2CD6             L1098:
2CD6 CD F3 3C            CALL  writeLineHL
2CD9             L1099:
2CD9                     ;;testBitwiseOperators.j(162)     if (0x1000 + 0x0234 ^ fw1 == 0x1118) println (90); else println (999);
2CD9             L1100:
2CD9 21 00 10            LD    HL,4096
2CDC             L1101:
2CDC 11 34 02            LD    DE,564
2CDF 19                  ADD   HL,DE
2CE0             L1102:
2CE0 11 2C 03            LD    DE,812
2CE3 C5                  PUSH  BC
2CE4 47                  LD    B,A
2CE5 7C                  LD    A,H
2CE6 AA                  XOR   A,D
2CE7 67                  LD    H,A
2CE8 7D                  LD    A,L
2CE9 AB                  XOR   A,E
2CEA 6F                  LD    L,A
2CEB 78                  LD    A,B
2CEC C1                  POP   BC
2CED             L1103:
2CED 11 18 11            LD    DE,4376
2CF0 B7                  OR    A
2CF1 ED 52               SBC   HL,DE
2CF3             L1104:
2CF3 C2 FE 2C            JP    NZ,L1108
2CF6             L1105:
2CF6 3E 5A               LD    A,90
2CF8             L1106:
2CF8 CD 1B 3D            CALL  writeLineA
2CFB             L1107:
2CFB C3 04 2D            JP    L1112
2CFE             L1108:
2CFE 21 E7 03            LD    HL,999
2D01             L1109:
2D01 CD F3 3C            CALL  writeLineHL
2D04             L1110:
2D04                     ;;testBitwiseOperators.j(163)     //acc byte/final var word
2D04             L1111:
2D04                     ;;testBitwiseOperators.j(164)     if (0x10 + 0x0C & fw2 == 0x0014) println (91); else println (999);
2D04             L1112:
2D04 3E 10               LD    A,16
2D06             L1113:
2D06 C6 0C               ADD   A,12
2D08             L1114:
2D08 6F                  LD    L,A
2D09 26 00               LD    H,0
2D0B             L1115:
2D0B 11 34 12            LD    DE,4660
2D0E C5                  PUSH  BC
2D0F 47                  LD    B,A
2D10 7C                  LD    A,H
2D11 A2                  AND   A,D
2D12 67                  LD    H,A
2D13 7D                  LD    A,L
2D14 A3                  AND   A,E
2D15 6F                  LD    L,A
2D16 78                  LD    A,B
2D17 C1                  POP   BC
2D18             L1116:
2D18 3E 14               LD    A,20
2D1A             L1117:
2D1A 5F                  LD    E,A
2D1B 16 00               LD    D,0
2D1D EB                  EX    DE,HL
2D1E B7                  OR    A
2D1F ED 52               SBC   HL,DE
2D21             L1118:
2D21 C2 2C 2D            JP    NZ,L1122
2D24             L1119:
2D24 3E 5B               LD    A,91
2D26             L1120:
2D26 CD 1B 3D            CALL  writeLineA
2D29             L1121:
2D29 C3 32 2D            JP    L1125
2D2C             L1122:
2D2C 21 E7 03            LD    HL,999
2D2F             L1123:
2D2F CD F3 3C            CALL  writeLineHL
2D32             L1124:
2D32                     ;;testBitwiseOperators.j(165)     if (0x10 + 0x0C | fw2 == 0x123C) println (92); else println (999);
2D32             L1125:
2D32 3E 10               LD    A,16
2D34             L1126:
2D34 C6 0C               ADD   A,12
2D36             L1127:
2D36 6F                  LD    L,A
2D37 26 00               LD    H,0
2D39             L1128:
2D39 11 34 12            LD    DE,4660
2D3C 47                  LD    B,A
2D3D 7C                  LD    A,H
2D3E B2                  OR    A,D
2D3F 67                  LD    H,A
2D40 7D                  LD    A,L
2D41 B3                  OR    A,E
2D42 6F                  LD    L,A
2D43 78                  LD    A,B
2D44             L1129:
2D44 11 3C 12            LD    DE,4668
2D47 B7                  OR    A
2D48 ED 52               SBC   HL,DE
2D4A             L1130:
2D4A C2 55 2D            JP    NZ,L1134
2D4D             L1131:
2D4D 3E 5C               LD    A,92
2D4F             L1132:
2D4F CD 1B 3D            CALL  writeLineA
2D52             L1133:
2D52 C3 5B 2D            JP    L1137
2D55             L1134:
2D55 21 E7 03            LD    HL,999
2D58             L1135:
2D58 CD F3 3C            CALL  writeLineHL
2D5B             L1136:
2D5B                     ;;testBitwiseOperators.j(166)     if (0x10 + 0x0C ^ fw2 == 0x1228) println (93); else println (999);
2D5B             L1137:
2D5B 3E 10               LD    A,16
2D5D             L1138:
2D5D C6 0C               ADD   A,12
2D5F             L1139:
2D5F 6F                  LD    L,A
2D60 26 00               LD    H,0
2D62             L1140:
2D62 11 34 12            LD    DE,4660
2D65 C5                  PUSH  BC
2D66 47                  LD    B,A
2D67 7C                  LD    A,H
2D68 AA                  XOR   A,D
2D69 67                  LD    H,A
2D6A 7D                  LD    A,L
2D6B AB                  XOR   A,E
2D6C 6F                  LD    L,A
2D6D 78                  LD    A,B
2D6E C1                  POP   BC
2D6F             L1141:
2D6F 11 28 12            LD    DE,4648
2D72 B7                  OR    A
2D73 ED 52               SBC   HL,DE
2D75             L1142:
2D75 C2 80 2D            JP    NZ,L1146
2D78             L1143:
2D78 3E 5D               LD    A,93
2D7A             L1144:
2D7A CD 1B 3D            CALL  writeLineA
2D7D             L1145:
2D7D C3 86 2D            JP    L1150
2D80             L1146:
2D80 21 E7 03            LD    HL,999
2D83             L1147:
2D83 CD F3 3C            CALL  writeLineHL
2D86             L1148:
2D86                     ;;testBitwiseOperators.j(167)     //acc word/final var byte
2D86             L1149:
2D86                     ;;testBitwiseOperators.j(168)     if (0x1000 + 0x0234 & fb1 == 0x0014) println (94); else println (999);
2D86             L1150:
2D86 21 00 10            LD    HL,4096
2D89             L1151:
2D89 11 34 02            LD    DE,564
2D8C 19                  ADD   HL,DE
2D8D             L1152:
2D8D 5F                  LD    E,A
2D8E 3E 1C               LD    A,28
2D90 A5                  AND   A,L
2D91 6F                  LD    L,A
2D92 7B                  LD    A,E
2D93 26 00               LD    H,0
2D95             L1153:
2D95 3E 14               LD    A,20
2D97             L1154:
2D97 5F                  LD    E,A
2D98 16 00               LD    D,0
2D9A EB                  EX    DE,HL
2D9B B7                  OR    A
2D9C ED 52               SBC   HL,DE
2D9E             L1155:
2D9E C2 A9 2D            JP    NZ,L1159
2DA1             L1156:
2DA1 3E 5E               LD    A,94
2DA3             L1157:
2DA3 CD 1B 3D            CALL  writeLineA
2DA6             L1158:
2DA6 C3 AF 2D            JP    L1162
2DA9             L1159:
2DA9 21 E7 03            LD    HL,999
2DAC             L1160:
2DAC CD F3 3C            CALL  writeLineHL
2DAF             L1161:
2DAF                     ;;testBitwiseOperators.j(169)     if (0x1000 + 0x0234 | fb1 == 0x123C) println (95); else println (999);
2DAF             L1162:
2DAF 21 00 10            LD    HL,4096
2DB2             L1163:
2DB2 11 34 02            LD    DE,564
2DB5 19                  ADD   HL,DE
2DB6             L1164:
2DB6 11 1C 00            LD    DE,28
2DB9 47                  LD    B,A
2DBA 7C                  LD    A,H
2DBB B2                  OR    A,D
2DBC 67                  LD    H,A
2DBD 7D                  LD    A,L
2DBE B3                  OR    A,E
2DBF 6F                  LD    L,A
2DC0 78                  LD    A,B
2DC1             L1165:
2DC1 11 3C 12            LD    DE,4668
2DC4 B7                  OR    A
2DC5 ED 52               SBC   HL,DE
2DC7             L1166:
2DC7 C2 D2 2D            JP    NZ,L1170
2DCA             L1167:
2DCA 3E 5F               LD    A,95
2DCC             L1168:
2DCC CD 1B 3D            CALL  writeLineA
2DCF             L1169:
2DCF C3 D8 2D            JP    L1173
2DD2             L1170:
2DD2 21 E7 03            LD    HL,999
2DD5             L1171:
2DD5 CD F3 3C            CALL  writeLineHL
2DD8             L1172:
2DD8                     ;;testBitwiseOperators.j(170)     if (0x1000 + 0x0234 ^ fb1 == 0x1228) println (96); else println (999);
2DD8             L1173:
2DD8 21 00 10            LD    HL,4096
2DDB             L1174:
2DDB 11 34 02            LD    DE,564
2DDE 19                  ADD   HL,DE
2DDF             L1175:
2DDF 11 1C 00            LD    DE,28
2DE2 C5                  PUSH  BC
2DE3 47                  LD    B,A
2DE4 7C                  LD    A,H
2DE5 AA                  XOR   A,D
2DE6 67                  LD    H,A
2DE7 7D                  LD    A,L
2DE8 AB                  XOR   A,E
2DE9 6F                  LD    L,A
2DEA 78                  LD    A,B
2DEB C1                  POP   BC
2DEC             L1176:
2DEC 11 28 12            LD    DE,4648
2DEF B7                  OR    A
2DF0 ED 52               SBC   HL,DE
2DF2             L1177:
2DF2 C2 FD 2D            JP    NZ,L1181
2DF5             L1178:
2DF5 3E 60               LD    A,96
2DF7             L1179:
2DF7 CD 1B 3D            CALL  writeLineA
2DFA             L1180:
2DFA C3 03 2E            JP    L1188
2DFD             L1181:
2DFD 21 E7 03            LD    HL,999
2E00             L1182:
2E00 CD F3 3C            CALL  writeLineHL
2E03             L1183:
2E03                     ;;testBitwiseOperators.j(171)   
2E03             L1184:
2E03                     ;;testBitwiseOperators.j(172)     //var/constant
2E03             L1185:
2E03                     ;;testBitwiseOperators.j(173)     //************
2E03             L1186:
2E03                     ;;testBitwiseOperators.j(174)     //var byte/constant byte
2E03             L1187:
2E03                     ;;testBitwiseOperators.j(175)     if (b2 & 0x1C == 0x04) println (97); else println (999);
2E03             L1188:
2E03 3A 01 50            LD    A,(05001H)
2E06             L1189:
2E06 E6 1C               AND   A,28
2E08             L1190:
2E08 D6 04               SUB   A,4
2E0A             L1191:
2E0A C2 15 2E            JP    NZ,L1195
2E0D             L1192:
2E0D 3E 61               LD    A,97
2E0F             L1193:
2E0F CD 1B 3D            CALL  writeLineA
2E12             L1194:
2E12 C3 1B 2E            JP    L1198
2E15             L1195:
2E15 21 E7 03            LD    HL,999
2E18             L1196:
2E18 CD F3 3C            CALL  writeLineHL
2E1B             L1197:
2E1B                     ;;testBitwiseOperators.j(176)     if (b2 | 0x1C == 0x1F) println (98); else println (999);
2E1B             L1198:
2E1B 3A 01 50            LD    A,(05001H)
2E1E             L1199:
2E1E F6 1C               OR    A,28
2E20             L1200:
2E20 D6 1F               SUB   A,31
2E22             L1201:
2E22 C2 2D 2E            JP    NZ,L1205
2E25             L1202:
2E25 3E 62               LD    A,98
2E27             L1203:
2E27 CD 1B 3D            CALL  writeLineA
2E2A             L1204:
2E2A C3 33 2E            JP    L1208
2E2D             L1205:
2E2D 21 E7 03            LD    HL,999
2E30             L1206:
2E30 CD F3 3C            CALL  writeLineHL
2E33             L1207:
2E33                     ;;testBitwiseOperators.j(177)     if (b2 ^ 0x1C == 0x1B) println (99); else println (999);
2E33             L1208:
2E33 3A 01 50            LD    A,(05001H)
2E36             L1209:
2E36 EE 1C               XOR   A,28
2E38             L1210:
2E38 D6 1B               SUB   A,27
2E3A             L1211:
2E3A C2 45 2E            JP    NZ,L1215
2E3D             L1212:
2E3D 3E 63               LD    A,99
2E3F             L1213:
2E3F CD 1B 3D            CALL  writeLineA
2E42             L1214:
2E42 C3 4B 2E            JP    L1219
2E45             L1215:
2E45 21 E7 03            LD    HL,999
2E48             L1216:
2E48 CD F3 3C            CALL  writeLineHL
2E4B             L1217:
2E4B                     ;;testBitwiseOperators.j(178)     //var word/constant word
2E4B             L1218:
2E4B                     ;;testBitwiseOperators.j(179)     if (w2 & 0x032C == 0x0224) println (100); else println (999);
2E4B             L1219:
2E4B 2A 04 50            LD    HL,(05004H)
2E4E             L1220:
2E4E 11 2C 03            LD    DE,812
2E51 C5                  PUSH  BC
2E52 47                  LD    B,A
2E53 7C                  LD    A,H
2E54 A2                  AND   A,D
2E55 67                  LD    H,A
2E56 7D                  LD    A,L
2E57 A3                  AND   A,E
2E58 6F                  LD    L,A
2E59 78                  LD    A,B
2E5A C1                  POP   BC
2E5B             L1221:
2E5B 11 24 02            LD    DE,548
2E5E B7                  OR    A
2E5F ED 52               SBC   HL,DE
2E61             L1222:
2E61 C2 6C 2E            JP    NZ,L1226
2E64             L1223:
2E64 3E 64               LD    A,100
2E66             L1224:
2E66 CD 1B 3D            CALL  writeLineA
2E69             L1225:
2E69 C3 72 2E            JP    L1229
2E6C             L1226:
2E6C 21 E7 03            LD    HL,999
2E6F             L1227:
2E6F CD F3 3C            CALL  writeLineHL
2E72             L1228:
2E72                     ;;testBitwiseOperators.j(180)     if (w2 | 0x032C == 0x133C) println (101); else println (999);
2E72             L1229:
2E72 2A 04 50            LD    HL,(05004H)
2E75             L1230:
2E75 11 2C 03            LD    DE,812
2E78 47                  LD    B,A
2E79 7C                  LD    A,H
2E7A B2                  OR    A,D
2E7B 67                  LD    H,A
2E7C 7D                  LD    A,L
2E7D B3                  OR    A,E
2E7E 6F                  LD    L,A
2E7F 78                  LD    A,B
2E80             L1231:
2E80 11 3C 13            LD    DE,4924
2E83 B7                  OR    A
2E84 ED 52               SBC   HL,DE
2E86             L1232:
2E86 C2 91 2E            JP    NZ,L1236
2E89             L1233:
2E89 3E 65               LD    A,101
2E8B             L1234:
2E8B CD 1B 3D            CALL  writeLineA
2E8E             L1235:
2E8E C3 97 2E            JP    L1239
2E91             L1236:
2E91 21 E7 03            LD    HL,999
2E94             L1237:
2E94 CD F3 3C            CALL  writeLineHL
2E97             L1238:
2E97                     ;;testBitwiseOperators.j(181)     if (w2 ^ 0x032C == 0x1118) println (102); else println (999);
2E97             L1239:
2E97 2A 04 50            LD    HL,(05004H)
2E9A             L1240:
2E9A 11 2C 03            LD    DE,812
2E9D C5                  PUSH  BC
2E9E 47                  LD    B,A
2E9F 7C                  LD    A,H
2EA0 AA                  XOR   A,D
2EA1 67                  LD    H,A
2EA2 7D                  LD    A,L
2EA3 AB                  XOR   A,E
2EA4 6F                  LD    L,A
2EA5 78                  LD    A,B
2EA6 C1                  POP   BC
2EA7             L1241:
2EA7 11 18 11            LD    DE,4376
2EAA B7                  OR    A
2EAB ED 52               SBC   HL,DE
2EAD             L1242:
2EAD C2 B8 2E            JP    NZ,L1246
2EB0             L1243:
2EB0 3E 66               LD    A,102
2EB2             L1244:
2EB2 CD 1B 3D            CALL  writeLineA
2EB5             L1245:
2EB5 C3 BE 2E            JP    L1250
2EB8             L1246:
2EB8 21 E7 03            LD    HL,999
2EBB             L1247:
2EBB CD F3 3C            CALL  writeLineHL
2EBE             L1248:
2EBE                     ;;testBitwiseOperators.j(182)     //var byte/constant word
2EBE             L1249:
2EBE                     ;;testBitwiseOperators.j(183)     if (b1 & 0x1234 == 0x0014) println (103); else println (999);
2EBE             L1250:
2EBE 3A 00 50            LD    A,(05000H)
2EC1             L1251:
2EC1 6F                  LD    L,A
2EC2 26 00               LD    H,0
2EC4             L1252:
2EC4 11 34 12            LD    DE,4660
2EC7 C5                  PUSH  BC
2EC8 47                  LD    B,A
2EC9 7C                  LD    A,H
2ECA A2                  AND   A,D
2ECB 67                  LD    H,A
2ECC 7D                  LD    A,L
2ECD A3                  AND   A,E
2ECE 6F                  LD    L,A
2ECF 78                  LD    A,B
2ED0 C1                  POP   BC
2ED1             L1253:
2ED1 3E 14               LD    A,20
2ED3             L1254:
2ED3 5F                  LD    E,A
2ED4 16 00               LD    D,0
2ED6 EB                  EX    DE,HL
2ED7 B7                  OR    A
2ED8 ED 52               SBC   HL,DE
2EDA             L1255:
2EDA C2 E5 2E            JP    NZ,L1259
2EDD             L1256:
2EDD 3E 67               LD    A,103
2EDF             L1257:
2EDF CD 1B 3D            CALL  writeLineA
2EE2             L1258:
2EE2 C3 EB 2E            JP    L1262
2EE5             L1259:
2EE5 21 E7 03            LD    HL,999
2EE8             L1260:
2EE8 CD F3 3C            CALL  writeLineHL
2EEB             L1261:
2EEB                     ;;testBitwiseOperators.j(184)     if (b1 | 0x1234 == 0x123C) println (104); else println (999);
2EEB             L1262:
2EEB 3A 00 50            LD    A,(05000H)
2EEE             L1263:
2EEE 6F                  LD    L,A
2EEF 26 00               LD    H,0
2EF1             L1264:
2EF1 11 34 12            LD    DE,4660
2EF4 47                  LD    B,A
2EF5 7C                  LD    A,H
2EF6 B2                  OR    A,D
2EF7 67                  LD    H,A
2EF8 7D                  LD    A,L
2EF9 B3                  OR    A,E
2EFA 6F                  LD    L,A
2EFB 78                  LD    A,B
2EFC             L1265:
2EFC 11 3C 12            LD    DE,4668
2EFF B7                  OR    A
2F00 ED 52               SBC   HL,DE
2F02             L1266:
2F02 C2 0D 2F            JP    NZ,L1270
2F05             L1267:
2F05 3E 68               LD    A,104
2F07             L1268:
2F07 CD 1B 3D            CALL  writeLineA
2F0A             L1269:
2F0A C3 13 2F            JP    L1273
2F0D             L1270:
2F0D 21 E7 03            LD    HL,999
2F10             L1271:
2F10 CD F3 3C            CALL  writeLineHL
2F13             L1272:
2F13                     ;;testBitwiseOperators.j(185)     if (b1 ^ 0x1234 == 0x1228) println (105); else println (999);
2F13             L1273:
2F13 3A 00 50            LD    A,(05000H)
2F16             L1274:
2F16 6F                  LD    L,A
2F17 26 00               LD    H,0
2F19             L1275:
2F19 11 34 12            LD    DE,4660
2F1C C5                  PUSH  BC
2F1D 47                  LD    B,A
2F1E 7C                  LD    A,H
2F1F AA                  XOR   A,D
2F20 67                  LD    H,A
2F21 7D                  LD    A,L
2F22 AB                  XOR   A,E
2F23 6F                  LD    L,A
2F24 78                  LD    A,B
2F25 C1                  POP   BC
2F26             L1276:
2F26 11 28 12            LD    DE,4648
2F29 B7                  OR    A
2F2A ED 52               SBC   HL,DE
2F2C             L1277:
2F2C C2 37 2F            JP    NZ,L1281
2F2F             L1278:
2F2F 3E 69               LD    A,105
2F31             L1279:
2F31 CD 1B 3D            CALL  writeLineA
2F34             L1280:
2F34 C3 3D 2F            JP    L1285
2F37             L1281:
2F37 21 E7 03            LD    HL,999
2F3A             L1282:
2F3A CD F3 3C            CALL  writeLineHL
2F3D             L1283:
2F3D                     ;;testBitwiseOperators.j(186)     //var word/constant byte
2F3D             L1284:
2F3D                     ;;testBitwiseOperators.j(187)     if (w2 & 0x1C == 0x0014) println (106); else println (999);
2F3D             L1285:
2F3D 2A 04 50            LD    HL,(05004H)
2F40             L1286:
2F40 5F                  LD    E,A
2F41 3E 1C               LD    A,28
2F43 A5                  AND   A,L
2F44 6F                  LD    L,A
2F45 7B                  LD    A,E
2F46 26 00               LD    H,0
2F48             L1287:
2F48 3E 14               LD    A,20
2F4A             L1288:
2F4A 5F                  LD    E,A
2F4B 16 00               LD    D,0
2F4D EB                  EX    DE,HL
2F4E B7                  OR    A
2F4F ED 52               SBC   HL,DE
2F51             L1289:
2F51 C2 5C 2F            JP    NZ,L1293
2F54             L1290:
2F54 3E 6A               LD    A,106
2F56             L1291:
2F56 CD 1B 3D            CALL  writeLineA
2F59             L1292:
2F59 C3 62 2F            JP    L1296
2F5C             L1293:
2F5C 21 E7 03            LD    HL,999
2F5F             L1294:
2F5F CD F3 3C            CALL  writeLineHL
2F62             L1295:
2F62                     ;;testBitwiseOperators.j(188)     if (w2 | 0x1C == 0x123C) println (107); else println (999);
2F62             L1296:
2F62 2A 04 50            LD    HL,(05004H)
2F65             L1297:
2F65 11 1C 00            LD    DE,28
2F68 47                  LD    B,A
2F69 7C                  LD    A,H
2F6A B2                  OR    A,D
2F6B 67                  LD    H,A
2F6C 7D                  LD    A,L
2F6D B3                  OR    A,E
2F6E 6F                  LD    L,A
2F6F 78                  LD    A,B
2F70             L1298:
2F70 11 3C 12            LD    DE,4668
2F73 B7                  OR    A
2F74 ED 52               SBC   HL,DE
2F76             L1299:
2F76 C2 81 2F            JP    NZ,L1303
2F79             L1300:
2F79 3E 6B               LD    A,107
2F7B             L1301:
2F7B CD 1B 3D            CALL  writeLineA
2F7E             L1302:
2F7E C3 87 2F            JP    L1306
2F81             L1303:
2F81 21 E7 03            LD    HL,999
2F84             L1304:
2F84 CD F3 3C            CALL  writeLineHL
2F87             L1305:
2F87                     ;;testBitwiseOperators.j(189)     if (w2 ^ 0x1C == 0x1228) println (108); else println (999);
2F87             L1306:
2F87 2A 04 50            LD    HL,(05004H)
2F8A             L1307:
2F8A 11 1C 00            LD    DE,28
2F8D C5                  PUSH  BC
2F8E 47                  LD    B,A
2F8F 7C                  LD    A,H
2F90 AA                  XOR   A,D
2F91 67                  LD    H,A
2F92 7D                  LD    A,L
2F93 AB                  XOR   A,E
2F94 6F                  LD    L,A
2F95 78                  LD    A,B
2F96 C1                  POP   BC
2F97             L1308:
2F97 11 28 12            LD    DE,4648
2F9A B7                  OR    A
2F9B ED 52               SBC   HL,DE
2F9D             L1309:
2F9D C2 A8 2F            JP    NZ,L1313
2FA0             L1310:
2FA0 3E 6C               LD    A,108
2FA2             L1311:
2FA2 CD 1B 3D            CALL  writeLineA
2FA5             L1312:
2FA5 C3 AE 2F            JP    L1320
2FA8             L1313:
2FA8 21 E7 03            LD    HL,999
2FAB             L1314:
2FAB CD F3 3C            CALL  writeLineHL
2FAE             L1315:
2FAE                     ;;testBitwiseOperators.j(190)   
2FAE             L1316:
2FAE                     ;;testBitwiseOperators.j(191)     //var/acc
2FAE             L1317:
2FAE                     ;;testBitwiseOperators.j(192)     //*******
2FAE             L1318:
2FAE                     ;;testBitwiseOperators.j(193)     //var byte/acc byte
2FAE             L1319:
2FAE                     ;;testBitwiseOperators.j(194)     if (b2 & (0x10 + 0x0C) == 0x04) println (109); else println (999);
2FAE             L1320:
2FAE 3A 01 50            LD    A,(05001H)
2FB1             L1321:
2FB1 F5                  PUSH  AF
2FB2 3E 10               LD    A,16
2FB4             L1322:
2FB4 C6 0C               ADD   A,12
2FB6             L1323:
2FB6 C1                  POP   BC
2FB7 A0                  AND   A,B
2FB8             L1324:
2FB8 D6 04               SUB   A,4
2FBA             L1325:
2FBA C2 C5 2F            JP    NZ,L1329
2FBD             L1326:
2FBD 3E 6D               LD    A,109
2FBF             L1327:
2FBF CD 1B 3D            CALL  writeLineA
2FC2             L1328:
2FC2 C3 CB 2F            JP    L1332
2FC5             L1329:
2FC5 21 E7 03            LD    HL,999
2FC8             L1330:
2FC8 CD F3 3C            CALL  writeLineHL
2FCB             L1331:
2FCB                     ;;testBitwiseOperators.j(195)     if (b2 | (0x10 + 0x0C) == 0x1F) println (110); else println (999);
2FCB             L1332:
2FCB 3A 01 50            LD    A,(05001H)
2FCE             L1333:
2FCE F5                  PUSH  AF
2FCF 3E 10               LD    A,16
2FD1             L1334:
2FD1 C6 0C               ADD   A,12
2FD3             L1335:
2FD3 C1                  POP   BC
2FD4 B0                  OR    A,B
2FD5             L1336:
2FD5 D6 1F               SUB   A,31
2FD7             L1337:
2FD7 C2 E2 2F            JP    NZ,L1341
2FDA             L1338:
2FDA 3E 6E               LD    A,110
2FDC             L1339:
2FDC CD 1B 3D            CALL  writeLineA
2FDF             L1340:
2FDF C3 E8 2F            JP    L1344
2FE2             L1341:
2FE2 21 E7 03            LD    HL,999
2FE5             L1342:
2FE5 CD F3 3C            CALL  writeLineHL
2FE8             L1343:
2FE8                     ;;testBitwiseOperators.j(196)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (111); else println (999);
2FE8             L1344:
2FE8 3A 01 50            LD    A,(05001H)
2FEB             L1345:
2FEB F5                  PUSH  AF
2FEC 3E 10               LD    A,16
2FEE             L1346:
2FEE C6 0C               ADD   A,12
2FF0             L1347:
2FF0 C1                  POP   BC
2FF1 A8                  XOR   A,B
2FF2             L1348:
2FF2 D6 1B               SUB   A,27
2FF4             L1349:
2FF4 C2 FF 2F            JP    NZ,L1353
2FF7             L1350:
2FF7 3E 6F               LD    A,111
2FF9             L1351:
2FF9 CD 1B 3D            CALL  writeLineA
2FFC             L1352:
2FFC C3 05 30            JP    L1357
2FFF             L1353:
2FFF 21 E7 03            LD    HL,999
3002             L1354:
3002 CD F3 3C            CALL  writeLineHL
3005             L1355:
3005                     ;;testBitwiseOperators.j(197)     //var word/acc word
3005             L1356:
3005                     ;;testBitwiseOperators.j(198)     if (w2 & 0x0100 + 0x022C == 0x0224) println (112); else println (999);
3005             L1357:
3005 2A 04 50            LD    HL,(05004H)
3008             L1358:
3008 E5                  PUSH  HL
3009 21 00 01            LD    HL,256
300C             L1359:
300C 11 2C 02            LD    DE,556
300F 19                  ADD   HL,DE
3010             L1360:
3010 D1                  POP   DE
3011 C5                  PUSH  BC
3012 47                  LD    B,A
3013 7C                  LD    A,H
3014 A2                  AND   A,D
3015 67                  LD    H,A
3016 7D                  LD    A,L
3017 A3                  AND   A,E
3018 6F                  LD    L,A
3019 78                  LD    A,B
301A C1                  POP   BC
301B             L1361:
301B 11 24 02            LD    DE,548
301E B7                  OR    A
301F ED 52               SBC   HL,DE
3021             L1362:
3021 C2 2C 30            JP    NZ,L1366
3024             L1363:
3024 3E 70               LD    A,112
3026             L1364:
3026 CD 1B 3D            CALL  writeLineA
3029             L1365:
3029 C3 32 30            JP    L1369
302C             L1366:
302C 21 E7 03            LD    HL,999
302F             L1367:
302F CD F3 3C            CALL  writeLineHL
3032             L1368:
3032                     ;;testBitwiseOperators.j(199)     if (w2 | 0x0100 + 0x022C == 0x133C) println (113); else println (999);
3032             L1369:
3032 2A 04 50            LD    HL,(05004H)
3035             L1370:
3035 E5                  PUSH  HL
3036 21 00 01            LD    HL,256
3039             L1371:
3039 11 2C 02            LD    DE,556
303C 19                  ADD   HL,DE
303D             L1372:
303D D1                  POP   DE
303E 47                  LD    B,A
303F 7C                  LD    A,H
3040 B2                  OR    A,D
3041 67                  LD    H,A
3042 7D                  LD    A,L
3043 B3                  OR    A,E
3044 6F                  LD    L,A
3045 78                  LD    A,B
3046             L1373:
3046 11 3C 13            LD    DE,4924
3049 B7                  OR    A
304A ED 52               SBC   HL,DE
304C             L1374:
304C C2 57 30            JP    NZ,L1378
304F             L1375:
304F 3E 71               LD    A,113
3051             L1376:
3051 CD 1B 3D            CALL  writeLineA
3054             L1377:
3054 C3 5D 30            JP    L1381
3057             L1378:
3057 21 E7 03            LD    HL,999
305A             L1379:
305A CD F3 3C            CALL  writeLineHL
305D             L1380:
305D                     ;;testBitwiseOperators.j(200)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (114); else println (999);
305D             L1381:
305D 2A 04 50            LD    HL,(05004H)
3060             L1382:
3060 E5                  PUSH  HL
3061 21 00 01            LD    HL,256
3064             L1383:
3064 11 2C 02            LD    DE,556
3067 19                  ADD   HL,DE
3068             L1384:
3068 D1                  POP   DE
3069 C5                  PUSH  BC
306A 47                  LD    B,A
306B 7C                  LD    A,H
306C AA                  XOR   A,D
306D 67                  LD    H,A
306E 7D                  LD    A,L
306F AB                  XOR   A,E
3070 6F                  LD    L,A
3071 78                  LD    A,B
3072 C1                  POP   BC
3073             L1385:
3073 11 18 11            LD    DE,4376
3076 B7                  OR    A
3077 ED 52               SBC   HL,DE
3079             L1386:
3079 C2 84 30            JP    NZ,L1390
307C             L1387:
307C 3E 72               LD    A,114
307E             L1388:
307E CD 1B 3D            CALL  writeLineA
3081             L1389:
3081 C3 8A 30            JP    L1394
3084             L1390:
3084 21 E7 03            LD    HL,999
3087             L1391:
3087 CD F3 3C            CALL  writeLineHL
308A             L1392:
308A                     ;;testBitwiseOperators.j(201)     //var byte/acc word
308A             L1393:
308A                     ;;testBitwiseOperators.j(202)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (115); else println (999);
308A             L1394:
308A 3A 00 50            LD    A,(05000H)
308D             L1395:
308D 21 00 10            LD    HL,4096
3090             L1396:
3090 11 34 02            LD    DE,564
3093 19                  ADD   HL,DE
3094             L1397:
3094 5F                  LD    E,A
3095 A5                  AND   A,L
3096 6F                  LD    L,A
3097 7B                  LD    A,E
3098 26 00               LD    H,0
309A             L1398:
309A 3E 14               LD    A,20
309C             L1399:
309C 5F                  LD    E,A
309D 16 00               LD    D,0
309F EB                  EX    DE,HL
30A0 B7                  OR    A
30A1 ED 52               SBC   HL,DE
30A3             L1400:
30A3 C2 AE 30            JP    NZ,L1404
30A6             L1401:
30A6 3E 73               LD    A,115
30A8             L1402:
30A8 CD 1B 3D            CALL  writeLineA
30AB             L1403:
30AB C3 B4 30            JP    L1407
30AE             L1404:
30AE 21 E7 03            LD    HL,999
30B1             L1405:
30B1 CD F3 3C            CALL  writeLineHL
30B4             L1406:
30B4                     ;;testBitwiseOperators.j(203)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (116); else println (999);
30B4             L1407:
30B4 3A 00 50            LD    A,(05000H)
30B7             L1408:
30B7 21 00 10            LD    HL,4096
30BA             L1409:
30BA 11 34 02            LD    DE,564
30BD 19                  ADD   HL,DE
30BE             L1410:
30BE B5                  OR    A,L
30BF 6F                  LD    L,A
30C0             L1411:
30C0 11 3C 12            LD    DE,4668
30C3 B7                  OR    A
30C4 ED 52               SBC   HL,DE
30C6             L1412:
30C6 C2 D1 30            JP    NZ,L1416
30C9             L1413:
30C9 3E 74               LD    A,116
30CB             L1414:
30CB CD 1B 3D            CALL  writeLineA
30CE             L1415:
30CE C3 D7 30            JP    L1419
30D1             L1416:
30D1 21 E7 03            LD    HL,999
30D4             L1417:
30D4 CD F3 3C            CALL  writeLineHL
30D7             L1418:
30D7                     ;;testBitwiseOperators.j(204)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (117); else println (999);
30D7             L1419:
30D7 3A 00 50            LD    A,(05000H)
30DA             L1420:
30DA 21 00 10            LD    HL,4096
30DD             L1421:
30DD 11 34 02            LD    DE,564
30E0 19                  ADD   HL,DE
30E1             L1422:
30E1 AD                  XOR   A,L
30E2 6F                  LD    L,A
30E3             L1423:
30E3 11 28 12            LD    DE,4648
30E6 B7                  OR    A
30E7 ED 52               SBC   HL,DE
30E9             L1424:
30E9 C2 F4 30            JP    NZ,L1428
30EC             L1425:
30EC 3E 75               LD    A,117
30EE             L1426:
30EE CD 1B 3D            CALL  writeLineA
30F1             L1427:
30F1 C3 FA 30            JP    L1432
30F4             L1428:
30F4 21 E7 03            LD    HL,999
30F7             L1429:
30F7 CD F3 3C            CALL  writeLineHL
30FA             L1430:
30FA                     ;;testBitwiseOperators.j(205)     //var word/acc byte
30FA             L1431:
30FA                     ;;testBitwiseOperators.j(206)     if (w2 & 0x10 + 0x0C == 0x0014) println (118); else println (999);
30FA             L1432:
30FA 2A 04 50            LD    HL,(05004H)
30FD             L1433:
30FD 3E 10               LD    A,16
30FF             L1434:
30FF C6 0C               ADD   A,12
3101             L1435:
3101 5F                  LD    E,A
3102 A5                  AND   A,L
3103 6F                  LD    L,A
3104 7B                  LD    A,E
3105 26 00               LD    H,0
3107             L1436:
3107 3E 14               LD    A,20
3109             L1437:
3109 5F                  LD    E,A
310A 16 00               LD    D,0
310C EB                  EX    DE,HL
310D B7                  OR    A
310E ED 52               SBC   HL,DE
3110             L1438:
3110 C2 1B 31            JP    NZ,L1442
3113             L1439:
3113 3E 76               LD    A,118
3115             L1440:
3115 CD 1B 3D            CALL  writeLineA
3118             L1441:
3118 C3 21 31            JP    L1445
311B             L1442:
311B 21 E7 03            LD    HL,999
311E             L1443:
311E CD F3 3C            CALL  writeLineHL
3121             L1444:
3121                     ;;testBitwiseOperators.j(207)     if (w2 | 0x10 + 0x0C == 0x123C) println (119); else println (999);
3121             L1445:
3121 2A 04 50            LD    HL,(05004H)
3124             L1446:
3124 3E 10               LD    A,16
3126             L1447:
3126 C6 0C               ADD   A,12
3128             L1448:
3128 B5                  OR    A,L
3129 6F                  LD    L,A
312A             L1449:
312A 11 3C 12            LD    DE,4668
312D B7                  OR    A
312E ED 52               SBC   HL,DE
3130             L1450:
3130 C2 3B 31            JP    NZ,L1454
3133             L1451:
3133 3E 77               LD    A,119
3135             L1452:
3135 CD 1B 3D            CALL  writeLineA
3138             L1453:
3138 C3 41 31            JP    L1457
313B             L1454:
313B 21 E7 03            LD    HL,999
313E             L1455:
313E CD F3 3C            CALL  writeLineHL
3141             L1456:
3141                     ;;testBitwiseOperators.j(208)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (120); else println (999);
3141             L1457:
3141 2A 04 50            LD    HL,(05004H)
3144             L1458:
3144 3E 10               LD    A,16
3146             L1459:
3146 C6 0C               ADD   A,12
3148             L1460:
3148 AD                  XOR   A,L
3149 6F                  LD    L,A
314A             L1461:
314A 11 28 12            LD    DE,4648
314D B7                  OR    A
314E ED 52               SBC   HL,DE
3150             L1462:
3150 C2 5B 31            JP    NZ,L1466
3153             L1463:
3153 3E 78               LD    A,120
3155             L1464:
3155 CD 1B 3D            CALL  writeLineA
3158             L1465:
3158 C3 61 31            JP    L1473
315B             L1466:
315B 21 E7 03            LD    HL,999
315E             L1467:
315E CD F3 3C            CALL  writeLineHL
3161             L1468:
3161                     ;;testBitwiseOperators.j(209)   
3161             L1469:
3161                     ;;testBitwiseOperators.j(210)     //var/var
3161             L1470:
3161                     ;;testBitwiseOperators.j(211)     //*******
3161             L1471:
3161                     ;;testBitwiseOperators.j(212)     //var byte/var byte
3161             L1472:
3161                     ;;testBitwiseOperators.j(213)     if (b2 & b1 == 0x04) println (121); else println (999);
3161             L1473:
3161 3A 01 50            LD    A,(05001H)
3164             L1474:
3164 47                  LD    B,A
3165 3A 00 50            LD    A,(05000H)
3168 A0                  AND   A,B
3169             L1475:
3169 D6 04               SUB   A,4
316B             L1476:
316B C2 76 31            JP    NZ,L1480
316E             L1477:
316E 3E 79               LD    A,121
3170             L1478:
3170 CD 1B 3D            CALL  writeLineA
3173             L1479:
3173 C3 7C 31            JP    L1483
3176             L1480:
3176 21 E7 03            LD    HL,999
3179             L1481:
3179 CD F3 3C            CALL  writeLineHL
317C             L1482:
317C                     ;;testBitwiseOperators.j(214)     if (b2 | b1 == 0x1F) println (122); else println (999);
317C             L1483:
317C 3A 01 50            LD    A,(05001H)
317F             L1484:
317F 47                  LD    B,A
3180 3A 00 50            LD    A,(05000H)
3183 B0                  OR    A,B
3184             L1485:
3184 D6 1F               SUB   A,31
3186             L1486:
3186 C2 91 31            JP    NZ,L1490
3189             L1487:
3189 3E 7A               LD    A,122
318B             L1488:
318B CD 1B 3D            CALL  writeLineA
318E             L1489:
318E C3 97 31            JP    L1493
3191             L1490:
3191 21 E7 03            LD    HL,999
3194             L1491:
3194 CD F3 3C            CALL  writeLineHL
3197             L1492:
3197                     ;;testBitwiseOperators.j(215)     if (b2 ^ b1 == 0x1B) println (123); else println (999);
3197             L1493:
3197 3A 01 50            LD    A,(05001H)
319A             L1494:
319A 47                  LD    B,A
319B 3A 00 50            LD    A,(05000H)
319E A8                  XOR   A,B
319F             L1495:
319F D6 1B               SUB   A,27
31A1             L1496:
31A1 C2 AC 31            JP    NZ,L1500
31A4             L1497:
31A4 3E 7B               LD    A,123
31A6             L1498:
31A6 CD 1B 3D            CALL  writeLineA
31A9             L1499:
31A9 C3 B2 31            JP    L1504
31AC             L1500:
31AC 21 E7 03            LD    HL,999
31AF             L1501:
31AF CD F3 3C            CALL  writeLineHL
31B2             L1502:
31B2                     ;;testBitwiseOperators.j(216)     //var word/var word
31B2             L1503:
31B2                     ;;testBitwiseOperators.j(217)     if (w2 & w1 == 0x0224) println (124); else println (999);
31B2             L1504:
31B2 2A 04 50            LD    HL,(05004H)
31B5             L1505:
31B5 ED 5B 02 50         LD    DE,(05002H)
31B9 C5                  PUSH  BC
31BA 47                  LD    B,A
31BB 7C                  LD    A,H
31BC A2                  AND   A,D
31BD 67                  LD    H,A
31BE 7D                  LD    A,L
31BF A3                  AND   A,E
31C0 6F                  LD    L,A
31C1 78                  LD    A,B
31C2 C1                  POP   BC
31C3             L1506:
31C3 11 24 02            LD    DE,548
31C6 B7                  OR    A
31C7 ED 52               SBC   HL,DE
31C9             L1507:
31C9 C2 D4 31            JP    NZ,L1511
31CC             L1508:
31CC 3E 7C               LD    A,124
31CE             L1509:
31CE CD 1B 3D            CALL  writeLineA
31D1             L1510:
31D1 C3 DA 31            JP    L1514
31D4             L1511:
31D4 21 E7 03            LD    HL,999
31D7             L1512:
31D7 CD F3 3C            CALL  writeLineHL
31DA             L1513:
31DA                     ;;testBitwiseOperators.j(218)     if (w2 | w1 == 0x133C) println (125); else println (999);
31DA             L1514:
31DA 2A 04 50            LD    HL,(05004H)
31DD             L1515:
31DD ED 5B 02 50         LD    DE,(05002H)
31E1 47                  LD    B,A
31E2 7C                  LD    A,H
31E3 B2                  OR    A,D
31E4 67                  LD    H,A
31E5 7D                  LD    A,L
31E6 B3                  OR    A,E
31E7 6F                  LD    L,A
31E8 78                  LD    A,B
31E9             L1516:
31E9 11 3C 13            LD    DE,4924
31EC B7                  OR    A
31ED ED 52               SBC   HL,DE
31EF             L1517:
31EF C2 FA 31            JP    NZ,L1521
31F2             L1518:
31F2 3E 7D               LD    A,125
31F4             L1519:
31F4 CD 1B 3D            CALL  writeLineA
31F7             L1520:
31F7 C3 00 32            JP    L1524
31FA             L1521:
31FA 21 E7 03            LD    HL,999
31FD             L1522:
31FD CD F3 3C            CALL  writeLineHL
3200             L1523:
3200                     ;;testBitwiseOperators.j(219)     if (w2 ^ w1 == 0x1118) println (126); else println (999);
3200             L1524:
3200 2A 04 50            LD    HL,(05004H)
3203             L1525:
3203 ED 5B 02 50         LD    DE,(05002H)
3207 C5                  PUSH  BC
3208 47                  LD    B,A
3209 7C                  LD    A,H
320A AA                  XOR   A,D
320B 67                  LD    H,A
320C 7D                  LD    A,L
320D AB                  XOR   A,E
320E 6F                  LD    L,A
320F 78                  LD    A,B
3210 C1                  POP   BC
3211             L1526:
3211 11 18 11            LD    DE,4376
3214 B7                  OR    A
3215 ED 52               SBC   HL,DE
3217             L1527:
3217 C2 22 32            JP    NZ,L1531
321A             L1528:
321A 3E 7E               LD    A,126
321C             L1529:
321C CD 1B 3D            CALL  writeLineA
321F             L1530:
321F C3 28 32            JP    L1535
3222             L1531:
3222 21 E7 03            LD    HL,999
3225             L1532:
3225 CD F3 3C            CALL  writeLineHL
3228             L1533:
3228                     ;;testBitwiseOperators.j(220)     //var byte/var word
3228             L1534:
3228                     ;;testBitwiseOperators.j(221)     if (b1 & w2 == 0x0014) println (127); else println (999);
3228             L1535:
3228 3A 00 50            LD    A,(05000H)
322B             L1536:
322B 6F                  LD    L,A
322C 26 00               LD    H,0
322E             L1537:
322E ED 5B 04 50         LD    DE,(05004H)
3232 C5                  PUSH  BC
3233 47                  LD    B,A
3234 7C                  LD    A,H
3235 A2                  AND   A,D
3236 67                  LD    H,A
3237 7D                  LD    A,L
3238 A3                  AND   A,E
3239 6F                  LD    L,A
323A 78                  LD    A,B
323B C1                  POP   BC
323C             L1538:
323C 3E 14               LD    A,20
323E             L1539:
323E 5F                  LD    E,A
323F 16 00               LD    D,0
3241 EB                  EX    DE,HL
3242 B7                  OR    A
3243 ED 52               SBC   HL,DE
3245             L1540:
3245 C2 50 32            JP    NZ,L1544
3248             L1541:
3248 3E 7F               LD    A,127
324A             L1542:
324A CD 1B 3D            CALL  writeLineA
324D             L1543:
324D C3 56 32            JP    L1547
3250             L1544:
3250 21 E7 03            LD    HL,999
3253             L1545:
3253 CD F3 3C            CALL  writeLineHL
3256             L1546:
3256                     ;;testBitwiseOperators.j(222)     if (b1 | w2 == 0x123C) println (128); else println (999);
3256             L1547:
3256 3A 00 50            LD    A,(05000H)
3259             L1548:
3259 6F                  LD    L,A
325A 26 00               LD    H,0
325C             L1549:
325C ED 5B 04 50         LD    DE,(05004H)
3260 47                  LD    B,A
3261 7C                  LD    A,H
3262 B2                  OR    A,D
3263 67                  LD    H,A
3264 7D                  LD    A,L
3265 B3                  OR    A,E
3266 6F                  LD    L,A
3267 78                  LD    A,B
3268             L1550:
3268 11 3C 12            LD    DE,4668
326B B7                  OR    A
326C ED 52               SBC   HL,DE
326E             L1551:
326E C2 79 32            JP    NZ,L1555
3271             L1552:
3271 3E 80               LD    A,128
3273             L1553:
3273 CD 1B 3D            CALL  writeLineA
3276             L1554:
3276 C3 7F 32            JP    L1558
3279             L1555:
3279 21 E7 03            LD    HL,999
327C             L1556:
327C CD F3 3C            CALL  writeLineHL
327F             L1557:
327F                     ;;testBitwiseOperators.j(223)     if (b1 ^ w2 == 0x1228) println (129); else println (999);
327F             L1558:
327F 3A 00 50            LD    A,(05000H)
3282             L1559:
3282 6F                  LD    L,A
3283 26 00               LD    H,0
3285             L1560:
3285 ED 5B 04 50         LD    DE,(05004H)
3289 C5                  PUSH  BC
328A 47                  LD    B,A
328B 7C                  LD    A,H
328C AA                  XOR   A,D
328D 67                  LD    H,A
328E 7D                  LD    A,L
328F AB                  XOR   A,E
3290 6F                  LD    L,A
3291 78                  LD    A,B
3292 C1                  POP   BC
3293             L1561:
3293 11 28 12            LD    DE,4648
3296 B7                  OR    A
3297 ED 52               SBC   HL,DE
3299             L1562:
3299 C2 A4 32            JP    NZ,L1566
329C             L1563:
329C 3E 81               LD    A,129
329E             L1564:
329E CD 1B 3D            CALL  writeLineA
32A1             L1565:
32A1 C3 AA 32            JP    L1570
32A4             L1566:
32A4 21 E7 03            LD    HL,999
32A7             L1567:
32A7 CD F3 3C            CALL  writeLineHL
32AA             L1568:
32AA                     ;;testBitwiseOperators.j(224)     //var word/var byte
32AA             L1569:
32AA                     ;;testBitwiseOperators.j(225)     if (w2 & b1 == 0x0014) println (130); else println (999);
32AA             L1570:
32AA 2A 04 50            LD    HL,(05004H)
32AD             L1571:
32AD 5F                  LD    E,A
32AE 3A 00 50            LD    A,(05000H)
32B1 A5                  AND   A,L
32B2 6F                  LD    L,A
32B3 7B                  LD    A,E
32B4 26 00               LD    H,0
32B6             L1572:
32B6 3E 14               LD    A,20
32B8             L1573:
32B8 5F                  LD    E,A
32B9 16 00               LD    D,0
32BB EB                  EX    DE,HL
32BC B7                  OR    A
32BD ED 52               SBC   HL,DE
32BF             L1574:
32BF C2 CA 32            JP    NZ,L1578
32C2             L1575:
32C2 3E 82               LD    A,130
32C4             L1576:
32C4 CD 1B 3D            CALL  writeLineA
32C7             L1577:
32C7 C3 D0 32            JP    L1581
32CA             L1578:
32CA 21 E7 03            LD    HL,999
32CD             L1579:
32CD CD F3 3C            CALL  writeLineHL
32D0             L1580:
32D0                     ;;testBitwiseOperators.j(226)     if (w2 | b1 == 0x123C) println (131); else println (999);
32D0             L1581:
32D0 2A 04 50            LD    HL,(05004H)
32D3             L1582:
32D3 47                  LD    B,A
32D4 3A 00 50            LD    A,(05000H)
32D7 B5                  OR    A,L
32D8 6F                  LD    L,A
32D9 78                  LD    A,B
32DA             L1583:
32DA 11 3C 12            LD    DE,4668
32DD B7                  OR    A
32DE ED 52               SBC   HL,DE
32E0             L1584:
32E0 C2 EB 32            JP    NZ,L1588
32E3             L1585:
32E3 3E 83               LD    A,131
32E5             L1586:
32E5 CD 1B 3D            CALL  writeLineA
32E8             L1587:
32E8 C3 F1 32            JP    L1591
32EB             L1588:
32EB 21 E7 03            LD    HL,999
32EE             L1589:
32EE CD F3 3C            CALL  writeLineHL
32F1             L1590:
32F1                     ;;testBitwiseOperators.j(227)     if (w2 ^ b1 == 0x1228) println (132); else println (999);
32F1             L1591:
32F1 2A 04 50            LD    HL,(05004H)
32F4             L1592:
32F4 47                  LD    B,A
32F5 3A 00 50            LD    A,(05000H)
32F8 AD                  XOR   A,L
32F9 6F                  LD    L,A
32FA 78                  LD    A,B
32FB             L1593:
32FB 11 28 12            LD    DE,4648
32FE B7                  OR    A
32FF ED 52               SBC   HL,DE
3301             L1594:
3301 C2 0C 33            JP    NZ,L1598
3304             L1595:
3304 3E 84               LD    A,132
3306             L1596:
3306 CD 1B 3D            CALL  writeLineA
3309             L1597:
3309 C3 12 33            JP    L1605
330C             L1598:
330C 21 E7 03            LD    HL,999
330F             L1599:
330F CD F3 3C            CALL  writeLineHL
3312             L1600:
3312                     ;;testBitwiseOperators.j(228)   
3312             L1601:
3312                     ;;testBitwiseOperators.j(229)     //var/final var
3312             L1602:
3312                     ;;testBitwiseOperators.j(230)     //*************
3312             L1603:
3312                     ;;testBitwiseOperators.j(231)     //var byte/final var byte
3312             L1604:
3312                     ;;testBitwiseOperators.j(232)     if (b2 & fb1 == 0x04) println (133); else println (999);
3312             L1605:
3312 3A 01 50            LD    A,(05001H)
3315             L1606:
3315 E6 1C               AND   A,28
3317             L1607:
3317 D6 04               SUB   A,4
3319             L1608:
3319 C2 24 33            JP    NZ,L1612
331C             L1609:
331C 3E 85               LD    A,133
331E             L1610:
331E CD 1B 3D            CALL  writeLineA
3321             L1611:
3321 C3 2A 33            JP    L1615
3324             L1612:
3324 21 E7 03            LD    HL,999
3327             L1613:
3327 CD F3 3C            CALL  writeLineHL
332A             L1614:
332A                     ;;testBitwiseOperators.j(233)     if (b2 | fb1 == 0x1F) println (134); else println (999);
332A             L1615:
332A 3A 01 50            LD    A,(05001H)
332D             L1616:
332D F6 1C               OR    A,28
332F             L1617:
332F D6 1F               SUB   A,31
3331             L1618:
3331 C2 3C 33            JP    NZ,L1622
3334             L1619:
3334 3E 86               LD    A,134
3336             L1620:
3336 CD 1B 3D            CALL  writeLineA
3339             L1621:
3339 C3 42 33            JP    L1625
333C             L1622:
333C 21 E7 03            LD    HL,999
333F             L1623:
333F CD F3 3C            CALL  writeLineHL
3342             L1624:
3342                     ;;testBitwiseOperators.j(234)     if (b2 ^ fb1 == 0x1B) println (135); else println (999);
3342             L1625:
3342 3A 01 50            LD    A,(05001H)
3345             L1626:
3345 EE 1C               XOR   A,28
3347             L1627:
3347 D6 1B               SUB   A,27
3349             L1628:
3349 C2 54 33            JP    NZ,L1632
334C             L1629:
334C 3E 87               LD    A,135
334E             L1630:
334E CD 1B 3D            CALL  writeLineA
3351             L1631:
3351 C3 5A 33            JP    L1636
3354             L1632:
3354 21 E7 03            LD    HL,999
3357             L1633:
3357 CD F3 3C            CALL  writeLineHL
335A             L1634:
335A                     ;;testBitwiseOperators.j(235)     //var word/final var word
335A             L1635:
335A                     ;;testBitwiseOperators.j(236)     if (w2 & fw1 == 0x0224) println (136); else println (999);
335A             L1636:
335A 2A 04 50            LD    HL,(05004H)
335D             L1637:
335D 11 2C 03            LD    DE,812
3360 C5                  PUSH  BC
3361 47                  LD    B,A
3362 7C                  LD    A,H
3363 A2                  AND   A,D
3364 67                  LD    H,A
3365 7D                  LD    A,L
3366 A3                  AND   A,E
3367 6F                  LD    L,A
3368 78                  LD    A,B
3369 C1                  POP   BC
336A             L1638:
336A 11 24 02            LD    DE,548
336D B7                  OR    A
336E ED 52               SBC   HL,DE
3370             L1639:
3370 C2 7B 33            JP    NZ,L1643
3373             L1640:
3373 3E 88               LD    A,136
3375             L1641:
3375 CD 1B 3D            CALL  writeLineA
3378             L1642:
3378 C3 81 33            JP    L1646
337B             L1643:
337B 21 E7 03            LD    HL,999
337E             L1644:
337E CD F3 3C            CALL  writeLineHL
3381             L1645:
3381                     ;;testBitwiseOperators.j(237)     if (w2 | fw1 == 0x133C) println (137); else println (999);
3381             L1646:
3381 2A 04 50            LD    HL,(05004H)
3384             L1647:
3384 11 2C 03            LD    DE,812
3387 47                  LD    B,A
3388 7C                  LD    A,H
3389 B2                  OR    A,D
338A 67                  LD    H,A
338B 7D                  LD    A,L
338C B3                  OR    A,E
338D 6F                  LD    L,A
338E 78                  LD    A,B
338F             L1648:
338F 11 3C 13            LD    DE,4924
3392 B7                  OR    A
3393 ED 52               SBC   HL,DE
3395             L1649:
3395 C2 A0 33            JP    NZ,L1653
3398             L1650:
3398 3E 89               LD    A,137
339A             L1651:
339A CD 1B 3D            CALL  writeLineA
339D             L1652:
339D C3 A6 33            JP    L1656
33A0             L1653:
33A0 21 E7 03            LD    HL,999
33A3             L1654:
33A3 CD F3 3C            CALL  writeLineHL
33A6             L1655:
33A6                     ;;testBitwiseOperators.j(238)     if (w2 ^ fw1 == 0x1118) println (138); else println (999);
33A6             L1656:
33A6 2A 04 50            LD    HL,(05004H)
33A9             L1657:
33A9 11 2C 03            LD    DE,812
33AC C5                  PUSH  BC
33AD 47                  LD    B,A
33AE 7C                  LD    A,H
33AF AA                  XOR   A,D
33B0 67                  LD    H,A
33B1 7D                  LD    A,L
33B2 AB                  XOR   A,E
33B3 6F                  LD    L,A
33B4 78                  LD    A,B
33B5 C1                  POP   BC
33B6             L1658:
33B6 11 18 11            LD    DE,4376
33B9 B7                  OR    A
33BA ED 52               SBC   HL,DE
33BC             L1659:
33BC C2 C7 33            JP    NZ,L1663
33BF             L1660:
33BF 3E 8A               LD    A,138
33C1             L1661:
33C1 CD 1B 3D            CALL  writeLineA
33C4             L1662:
33C4 C3 CD 33            JP    L1667
33C7             L1663:
33C7 21 E7 03            LD    HL,999
33CA             L1664:
33CA CD F3 3C            CALL  writeLineHL
33CD             L1665:
33CD                     ;;testBitwiseOperators.j(239)     //var byte/final var word
33CD             L1666:
33CD                     ;;testBitwiseOperators.j(240)     if (b1 & fw2 == 0x0014) println (139); else println (999);
33CD             L1667:
33CD 3A 00 50            LD    A,(05000H)
33D0             L1668:
33D0 6F                  LD    L,A
33D1 26 00               LD    H,0
33D3             L1669:
33D3 11 34 12            LD    DE,4660
33D6 C5                  PUSH  BC
33D7 47                  LD    B,A
33D8 7C                  LD    A,H
33D9 A2                  AND   A,D
33DA 67                  LD    H,A
33DB 7D                  LD    A,L
33DC A3                  AND   A,E
33DD 6F                  LD    L,A
33DE 78                  LD    A,B
33DF C1                  POP   BC
33E0             L1670:
33E0 3E 14               LD    A,20
33E2             L1671:
33E2 5F                  LD    E,A
33E3 16 00               LD    D,0
33E5 EB                  EX    DE,HL
33E6 B7                  OR    A
33E7 ED 52               SBC   HL,DE
33E9             L1672:
33E9 C2 F4 33            JP    NZ,L1676
33EC             L1673:
33EC 3E 8B               LD    A,139
33EE             L1674:
33EE CD 1B 3D            CALL  writeLineA
33F1             L1675:
33F1 C3 FA 33            JP    L1679
33F4             L1676:
33F4 21 E7 03            LD    HL,999
33F7             L1677:
33F7 CD F3 3C            CALL  writeLineHL
33FA             L1678:
33FA                     ;;testBitwiseOperators.j(241)     if (b1 | fw2 == 0x123C) println (140); else println (999);
33FA             L1679:
33FA 3A 00 50            LD    A,(05000H)
33FD             L1680:
33FD 6F                  LD    L,A
33FE 26 00               LD    H,0
3400             L1681:
3400 11 34 12            LD    DE,4660
3403 47                  LD    B,A
3404 7C                  LD    A,H
3405 B2                  OR    A,D
3406 67                  LD    H,A
3407 7D                  LD    A,L
3408 B3                  OR    A,E
3409 6F                  LD    L,A
340A 78                  LD    A,B
340B             L1682:
340B 11 3C 12            LD    DE,4668
340E B7                  OR    A
340F ED 52               SBC   HL,DE
3411             L1683:
3411 C2 1C 34            JP    NZ,L1687
3414             L1684:
3414 3E 8C               LD    A,140
3416             L1685:
3416 CD 1B 3D            CALL  writeLineA
3419             L1686:
3419 C3 22 34            JP    L1690
341C             L1687:
341C 21 E7 03            LD    HL,999
341F             L1688:
341F CD F3 3C            CALL  writeLineHL
3422             L1689:
3422                     ;;testBitwiseOperators.j(242)     if (b1 ^ fw2 == 0x1228) println (141); else println (999);
3422             L1690:
3422 3A 00 50            LD    A,(05000H)
3425             L1691:
3425 6F                  LD    L,A
3426 26 00               LD    H,0
3428             L1692:
3428 11 34 12            LD    DE,4660
342B C5                  PUSH  BC
342C 47                  LD    B,A
342D 7C                  LD    A,H
342E AA                  XOR   A,D
342F 67                  LD    H,A
3430 7D                  LD    A,L
3431 AB                  XOR   A,E
3432 6F                  LD    L,A
3433 78                  LD    A,B
3434 C1                  POP   BC
3435             L1693:
3435 11 28 12            LD    DE,4648
3438 B7                  OR    A
3439 ED 52               SBC   HL,DE
343B             L1694:
343B C2 46 34            JP    NZ,L1698
343E             L1695:
343E 3E 8D               LD    A,141
3440             L1696:
3440 CD 1B 3D            CALL  writeLineA
3443             L1697:
3443 C3 4C 34            JP    L1702
3446             L1698:
3446 21 E7 03            LD    HL,999
3449             L1699:
3449 CD F3 3C            CALL  writeLineHL
344C             L1700:
344C                     ;;testBitwiseOperators.j(243)     //var word/final var byte
344C             L1701:
344C                     ;;testBitwiseOperators.j(244)     if (w2 & fb1 == 0x0014) println (142); else println (999);
344C             L1702:
344C 2A 04 50            LD    HL,(05004H)
344F             L1703:
344F 5F                  LD    E,A
3450 3E 1C               LD    A,28
3452 A5                  AND   A,L
3453 6F                  LD    L,A
3454 7B                  LD    A,E
3455 26 00               LD    H,0
3457             L1704:
3457 3E 14               LD    A,20
3459             L1705:
3459 5F                  LD    E,A
345A 16 00               LD    D,0
345C EB                  EX    DE,HL
345D B7                  OR    A
345E ED 52               SBC   HL,DE
3460             L1706:
3460 C2 6B 34            JP    NZ,L1710
3463             L1707:
3463 3E 8E               LD    A,142
3465             L1708:
3465 CD 1B 3D            CALL  writeLineA
3468             L1709:
3468 C3 71 34            JP    L1713
346B             L1710:
346B 21 E7 03            LD    HL,999
346E             L1711:
346E CD F3 3C            CALL  writeLineHL
3471             L1712:
3471                     ;;testBitwiseOperators.j(245)     if (w2 | fb1 == 0x123C) println (143); else println (999);
3471             L1713:
3471 2A 04 50            LD    HL,(05004H)
3474             L1714:
3474 11 1C 00            LD    DE,28
3477 47                  LD    B,A
3478 7C                  LD    A,H
3479 B2                  OR    A,D
347A 67                  LD    H,A
347B 7D                  LD    A,L
347C B3                  OR    A,E
347D 6F                  LD    L,A
347E 78                  LD    A,B
347F             L1715:
347F 11 3C 12            LD    DE,4668
3482 B7                  OR    A
3483 ED 52               SBC   HL,DE
3485             L1716:
3485 C2 90 34            JP    NZ,L1720
3488             L1717:
3488 3E 8F               LD    A,143
348A             L1718:
348A CD 1B 3D            CALL  writeLineA
348D             L1719:
348D C3 96 34            JP    L1723
3490             L1720:
3490 21 E7 03            LD    HL,999
3493             L1721:
3493 CD F3 3C            CALL  writeLineHL
3496             L1722:
3496                     ;;testBitwiseOperators.j(246)     if (w2 ^ fb1 == 0x1228) println (144); else println (999);
3496             L1723:
3496 2A 04 50            LD    HL,(05004H)
3499             L1724:
3499 11 1C 00            LD    DE,28
349C C5                  PUSH  BC
349D 47                  LD    B,A
349E 7C                  LD    A,H
349F AA                  XOR   A,D
34A0 67                  LD    H,A
34A1 7D                  LD    A,L
34A2 AB                  XOR   A,E
34A3 6F                  LD    L,A
34A4 78                  LD    A,B
34A5 C1                  POP   BC
34A6             L1725:
34A6 11 28 12            LD    DE,4648
34A9 B7                  OR    A
34AA ED 52               SBC   HL,DE
34AC             L1726:
34AC C2 B7 34            JP    NZ,L1730
34AF             L1727:
34AF 3E 90               LD    A,144
34B1             L1728:
34B1 CD 1B 3D            CALL  writeLineA
34B4             L1729:
34B4 C3 BD 34            JP    L1737
34B7             L1730:
34B7 21 E7 03            LD    HL,999
34BA             L1731:
34BA CD F3 3C            CALL  writeLineHL
34BD             L1732:
34BD                     ;;testBitwiseOperators.j(247)   
34BD             L1733:
34BD                     ;;testBitwiseOperators.j(248)     //final var/constant
34BD             L1734:
34BD                     ;;testBitwiseOperators.j(249)     //******************
34BD             L1735:
34BD                     ;;testBitwiseOperators.j(250)     //final var byte/constant byte
34BD             L1736:
34BD                     ;;testBitwiseOperators.j(251)     if (b2 & 0x1C == 0x04) println (145); else println (999);
34BD             L1737:
34BD 3A 01 50            LD    A,(05001H)
34C0             L1738:
34C0 E6 1C               AND   A,28
34C2             L1739:
34C2 D6 04               SUB   A,4
34C4             L1740:
34C4 C2 CF 34            JP    NZ,L1744
34C7             L1741:
34C7 3E 91               LD    A,145
34C9             L1742:
34C9 CD 1B 3D            CALL  writeLineA
34CC             L1743:
34CC C3 D5 34            JP    L1747
34CF             L1744:
34CF 21 E7 03            LD    HL,999
34D2             L1745:
34D2 CD F3 3C            CALL  writeLineHL
34D5             L1746:
34D5                     ;;testBitwiseOperators.j(252)     if (b2 | 0x1C == 0x1F) println (146); else println (999);
34D5             L1747:
34D5 3A 01 50            LD    A,(05001H)
34D8             L1748:
34D8 F6 1C               OR    A,28
34DA             L1749:
34DA D6 1F               SUB   A,31
34DC             L1750:
34DC C2 E7 34            JP    NZ,L1754
34DF             L1751:
34DF 3E 92               LD    A,146
34E1             L1752:
34E1 CD 1B 3D            CALL  writeLineA
34E4             L1753:
34E4 C3 ED 34            JP    L1757
34E7             L1754:
34E7 21 E7 03            LD    HL,999
34EA             L1755:
34EA CD F3 3C            CALL  writeLineHL
34ED             L1756:
34ED                     ;;testBitwiseOperators.j(253)     if (b2 ^ 0x1C == 0x1B) println (147); else println (999);
34ED             L1757:
34ED 3A 01 50            LD    A,(05001H)
34F0             L1758:
34F0 EE 1C               XOR   A,28
34F2             L1759:
34F2 D6 1B               SUB   A,27
34F4             L1760:
34F4 C2 FF 34            JP    NZ,L1764
34F7             L1761:
34F7 3E 93               LD    A,147
34F9             L1762:
34F9 CD 1B 3D            CALL  writeLineA
34FC             L1763:
34FC C3 05 35            JP    L1768
34FF             L1764:
34FF 21 E7 03            LD    HL,999
3502             L1765:
3502 CD F3 3C            CALL  writeLineHL
3505             L1766:
3505                     ;;testBitwiseOperators.j(254)     //final var word/constant word
3505             L1767:
3505                     ;;testBitwiseOperators.j(255)     if (w2 & 0x032C == 0x0224) println (148); else println (999);
3505             L1768:
3505 2A 04 50            LD    HL,(05004H)
3508             L1769:
3508 11 2C 03            LD    DE,812
350B C5                  PUSH  BC
350C 47                  LD    B,A
350D 7C                  LD    A,H
350E A2                  AND   A,D
350F 67                  LD    H,A
3510 7D                  LD    A,L
3511 A3                  AND   A,E
3512 6F                  LD    L,A
3513 78                  LD    A,B
3514 C1                  POP   BC
3515             L1770:
3515 11 24 02            LD    DE,548
3518 B7                  OR    A
3519 ED 52               SBC   HL,DE
351B             L1771:
351B C2 26 35            JP    NZ,L1775
351E             L1772:
351E 3E 94               LD    A,148
3520             L1773:
3520 CD 1B 3D            CALL  writeLineA
3523             L1774:
3523 C3 2C 35            JP    L1778
3526             L1775:
3526 21 E7 03            LD    HL,999
3529             L1776:
3529 CD F3 3C            CALL  writeLineHL
352C             L1777:
352C                     ;;testBitwiseOperators.j(256)     if (w2 | 0x032C == 0x133C) println (149); else println (999);
352C             L1778:
352C 2A 04 50            LD    HL,(05004H)
352F             L1779:
352F 11 2C 03            LD    DE,812
3532 47                  LD    B,A
3533 7C                  LD    A,H
3534 B2                  OR    A,D
3535 67                  LD    H,A
3536 7D                  LD    A,L
3537 B3                  OR    A,E
3538 6F                  LD    L,A
3539 78                  LD    A,B
353A             L1780:
353A 11 3C 13            LD    DE,4924
353D B7                  OR    A
353E ED 52               SBC   HL,DE
3540             L1781:
3540 C2 4B 35            JP    NZ,L1785
3543             L1782:
3543 3E 95               LD    A,149
3545             L1783:
3545 CD 1B 3D            CALL  writeLineA
3548             L1784:
3548 C3 51 35            JP    L1788
354B             L1785:
354B 21 E7 03            LD    HL,999
354E             L1786:
354E CD F3 3C            CALL  writeLineHL
3551             L1787:
3551                     ;;testBitwiseOperators.j(257)     if (w2 ^ 0x032C == 0x1118) println (150); else println (999);
3551             L1788:
3551 2A 04 50            LD    HL,(05004H)
3554             L1789:
3554 11 2C 03            LD    DE,812
3557 C5                  PUSH  BC
3558 47                  LD    B,A
3559 7C                  LD    A,H
355A AA                  XOR   A,D
355B 67                  LD    H,A
355C 7D                  LD    A,L
355D AB                  XOR   A,E
355E 6F                  LD    L,A
355F 78                  LD    A,B
3560 C1                  POP   BC
3561             L1790:
3561 11 18 11            LD    DE,4376
3564 B7                  OR    A
3565 ED 52               SBC   HL,DE
3567             L1791:
3567 C2 72 35            JP    NZ,L1795
356A             L1792:
356A 3E 96               LD    A,150
356C             L1793:
356C CD 1B 3D            CALL  writeLineA
356F             L1794:
356F C3 78 35            JP    L1799
3572             L1795:
3572 21 E7 03            LD    HL,999
3575             L1796:
3575 CD F3 3C            CALL  writeLineHL
3578             L1797:
3578                     ;;testBitwiseOperators.j(258)     //final var byte/constant word
3578             L1798:
3578                     ;;testBitwiseOperators.j(259)     if (b1 & 0x1234 == 0x0014) println (151); else println (999);
3578             L1799:
3578 3A 00 50            LD    A,(05000H)
357B             L1800:
357B 6F                  LD    L,A
357C 26 00               LD    H,0
357E             L1801:
357E 11 34 12            LD    DE,4660
3581 C5                  PUSH  BC
3582 47                  LD    B,A
3583 7C                  LD    A,H
3584 A2                  AND   A,D
3585 67                  LD    H,A
3586 7D                  LD    A,L
3587 A3                  AND   A,E
3588 6F                  LD    L,A
3589 78                  LD    A,B
358A C1                  POP   BC
358B             L1802:
358B 3E 14               LD    A,20
358D             L1803:
358D 5F                  LD    E,A
358E 16 00               LD    D,0
3590 EB                  EX    DE,HL
3591 B7                  OR    A
3592 ED 52               SBC   HL,DE
3594             L1804:
3594 C2 9F 35            JP    NZ,L1808
3597             L1805:
3597 3E 97               LD    A,151
3599             L1806:
3599 CD 1B 3D            CALL  writeLineA
359C             L1807:
359C C3 A5 35            JP    L1811
359F             L1808:
359F 21 E7 03            LD    HL,999
35A2             L1809:
35A2 CD F3 3C            CALL  writeLineHL
35A5             L1810:
35A5                     ;;testBitwiseOperators.j(260)     if (b1 | 0x1234 == 0x123C) println (152); else println (999);
35A5             L1811:
35A5 3A 00 50            LD    A,(05000H)
35A8             L1812:
35A8 6F                  LD    L,A
35A9 26 00               LD    H,0
35AB             L1813:
35AB 11 34 12            LD    DE,4660
35AE 47                  LD    B,A
35AF 7C                  LD    A,H
35B0 B2                  OR    A,D
35B1 67                  LD    H,A
35B2 7D                  LD    A,L
35B3 B3                  OR    A,E
35B4 6F                  LD    L,A
35B5 78                  LD    A,B
35B6             L1814:
35B6 11 3C 12            LD    DE,4668
35B9 B7                  OR    A
35BA ED 52               SBC   HL,DE
35BC             L1815:
35BC C2 C7 35            JP    NZ,L1819
35BF             L1816:
35BF 3E 98               LD    A,152
35C1             L1817:
35C1 CD 1B 3D            CALL  writeLineA
35C4             L1818:
35C4 C3 CD 35            JP    L1822
35C7             L1819:
35C7 21 E7 03            LD    HL,999
35CA             L1820:
35CA CD F3 3C            CALL  writeLineHL
35CD             L1821:
35CD                     ;;testBitwiseOperators.j(261)     if (b1 ^ 0x1234 == 0x1228) println (153); else println (999);
35CD             L1822:
35CD 3A 00 50            LD    A,(05000H)
35D0             L1823:
35D0 6F                  LD    L,A
35D1 26 00               LD    H,0
35D3             L1824:
35D3 11 34 12            LD    DE,4660
35D6 C5                  PUSH  BC
35D7 47                  LD    B,A
35D8 7C                  LD    A,H
35D9 AA                  XOR   A,D
35DA 67                  LD    H,A
35DB 7D                  LD    A,L
35DC AB                  XOR   A,E
35DD 6F                  LD    L,A
35DE 78                  LD    A,B
35DF C1                  POP   BC
35E0             L1825:
35E0 11 28 12            LD    DE,4648
35E3 B7                  OR    A
35E4 ED 52               SBC   HL,DE
35E6             L1826:
35E6 C2 F1 35            JP    NZ,L1830
35E9             L1827:
35E9 3E 99               LD    A,153
35EB             L1828:
35EB CD 1B 3D            CALL  writeLineA
35EE             L1829:
35EE C3 F7 35            JP    L1834
35F1             L1830:
35F1 21 E7 03            LD    HL,999
35F4             L1831:
35F4 CD F3 3C            CALL  writeLineHL
35F7             L1832:
35F7                     ;;testBitwiseOperators.j(262)     //final var word/constant byte
35F7             L1833:
35F7                     ;;testBitwiseOperators.j(263)     if (w2 & 0x1C == 0x0014) println (154); else println (999);
35F7             L1834:
35F7 2A 04 50            LD    HL,(05004H)
35FA             L1835:
35FA 5F                  LD    E,A
35FB 3E 1C               LD    A,28
35FD A5                  AND   A,L
35FE 6F                  LD    L,A
35FF 7B                  LD    A,E
3600 26 00               LD    H,0
3602             L1836:
3602 3E 14               LD    A,20
3604             L1837:
3604 5F                  LD    E,A
3605 16 00               LD    D,0
3607 EB                  EX    DE,HL
3608 B7                  OR    A
3609 ED 52               SBC   HL,DE
360B             L1838:
360B C2 16 36            JP    NZ,L1842
360E             L1839:
360E 3E 9A               LD    A,154
3610             L1840:
3610 CD 1B 3D            CALL  writeLineA
3613             L1841:
3613 C3 1C 36            JP    L1845
3616             L1842:
3616 21 E7 03            LD    HL,999
3619             L1843:
3619 CD F3 3C            CALL  writeLineHL
361C             L1844:
361C                     ;;testBitwiseOperators.j(264)     if (w2 | 0x1C == 0x123C) println (155); else println (999);
361C             L1845:
361C 2A 04 50            LD    HL,(05004H)
361F             L1846:
361F 11 1C 00            LD    DE,28
3622 47                  LD    B,A
3623 7C                  LD    A,H
3624 B2                  OR    A,D
3625 67                  LD    H,A
3626 7D                  LD    A,L
3627 B3                  OR    A,E
3628 6F                  LD    L,A
3629 78                  LD    A,B
362A             L1847:
362A 11 3C 12            LD    DE,4668
362D B7                  OR    A
362E ED 52               SBC   HL,DE
3630             L1848:
3630 C2 3B 36            JP    NZ,L1852
3633             L1849:
3633 3E 9B               LD    A,155
3635             L1850:
3635 CD 1B 3D            CALL  writeLineA
3638             L1851:
3638 C3 41 36            JP    L1855
363B             L1852:
363B 21 E7 03            LD    HL,999
363E             L1853:
363E CD F3 3C            CALL  writeLineHL
3641             L1854:
3641                     ;;testBitwiseOperators.j(265)     if (w2 ^ 0x1C == 0x1228) println (156); else println (999);
3641             L1855:
3641 2A 04 50            LD    HL,(05004H)
3644             L1856:
3644 11 1C 00            LD    DE,28
3647 C5                  PUSH  BC
3648 47                  LD    B,A
3649 7C                  LD    A,H
364A AA                  XOR   A,D
364B 67                  LD    H,A
364C 7D                  LD    A,L
364D AB                  XOR   A,E
364E 6F                  LD    L,A
364F 78                  LD    A,B
3650 C1                  POP   BC
3651             L1857:
3651 11 28 12            LD    DE,4648
3654 B7                  OR    A
3655 ED 52               SBC   HL,DE
3657             L1858:
3657 C2 62 36            JP    NZ,L1862
365A             L1859:
365A 3E 9C               LD    A,156
365C             L1860:
365C CD 1B 3D            CALL  writeLineA
365F             L1861:
365F C3 68 36            JP    L1869
3662             L1862:
3662 21 E7 03            LD    HL,999
3665             L1863:
3665 CD F3 3C            CALL  writeLineHL
3668             L1864:
3668                     ;;testBitwiseOperators.j(266)   
3668             L1865:
3668                     ;;testBitwiseOperators.j(267)     //final var/acc
3668             L1866:
3668                     ;;testBitwiseOperators.j(268)     //*************
3668             L1867:
3668                     ;;testBitwiseOperators.j(269)     //final var byte/acc byte
3668             L1868:
3668                     ;;testBitwiseOperators.j(270)     if (b2 & (0x10 + 0x0C) == 0x04) println (157); else println (999);
3668             L1869:
3668 3A 01 50            LD    A,(05001H)
366B             L1870:
366B F5                  PUSH  AF
366C 3E 10               LD    A,16
366E             L1871:
366E C6 0C               ADD   A,12
3670             L1872:
3670 C1                  POP   BC
3671 A0                  AND   A,B
3672             L1873:
3672 D6 04               SUB   A,4
3674             L1874:
3674 C2 7F 36            JP    NZ,L1878
3677             L1875:
3677 3E 9D               LD    A,157
3679             L1876:
3679 CD 1B 3D            CALL  writeLineA
367C             L1877:
367C C3 85 36            JP    L1881
367F             L1878:
367F 21 E7 03            LD    HL,999
3682             L1879:
3682 CD F3 3C            CALL  writeLineHL
3685             L1880:
3685                     ;;testBitwiseOperators.j(271)     if (b2 | (0x10 + 0x0C) == 0x1F) println (158); else println (999);
3685             L1881:
3685 3A 01 50            LD    A,(05001H)
3688             L1882:
3688 F5                  PUSH  AF
3689 3E 10               LD    A,16
368B             L1883:
368B C6 0C               ADD   A,12
368D             L1884:
368D C1                  POP   BC
368E B0                  OR    A,B
368F             L1885:
368F D6 1F               SUB   A,31
3691             L1886:
3691 C2 9C 36            JP    NZ,L1890
3694             L1887:
3694 3E 9E               LD    A,158
3696             L1888:
3696 CD 1B 3D            CALL  writeLineA
3699             L1889:
3699 C3 A2 36            JP    L1893
369C             L1890:
369C 21 E7 03            LD    HL,999
369F             L1891:
369F CD F3 3C            CALL  writeLineHL
36A2             L1892:
36A2                     ;;testBitwiseOperators.j(272)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (159); else println (999);
36A2             L1893:
36A2 3A 01 50            LD    A,(05001H)
36A5             L1894:
36A5 F5                  PUSH  AF
36A6 3E 10               LD    A,16
36A8             L1895:
36A8 C6 0C               ADD   A,12
36AA             L1896:
36AA C1                  POP   BC
36AB A8                  XOR   A,B
36AC             L1897:
36AC D6 1B               SUB   A,27
36AE             L1898:
36AE C2 B9 36            JP    NZ,L1902
36B1             L1899:
36B1 3E 9F               LD    A,159
36B3             L1900:
36B3 CD 1B 3D            CALL  writeLineA
36B6             L1901:
36B6 C3 BF 36            JP    L1906
36B9             L1902:
36B9 21 E7 03            LD    HL,999
36BC             L1903:
36BC CD F3 3C            CALL  writeLineHL
36BF             L1904:
36BF                     ;;testBitwiseOperators.j(273)     //final var word/acc word
36BF             L1905:
36BF                     ;;testBitwiseOperators.j(274)     if (w2 & 0x0100 + 0x022C == 0x0224) println (160); else println (999);
36BF             L1906:
36BF 2A 04 50            LD    HL,(05004H)
36C2             L1907:
36C2 E5                  PUSH  HL
36C3 21 00 01            LD    HL,256
36C6             L1908:
36C6 11 2C 02            LD    DE,556
36C9 19                  ADD   HL,DE
36CA             L1909:
36CA D1                  POP   DE
36CB C5                  PUSH  BC
36CC 47                  LD    B,A
36CD 7C                  LD    A,H
36CE A2                  AND   A,D
36CF 67                  LD    H,A
36D0 7D                  LD    A,L
36D1 A3                  AND   A,E
36D2 6F                  LD    L,A
36D3 78                  LD    A,B
36D4 C1                  POP   BC
36D5             L1910:
36D5 11 24 02            LD    DE,548
36D8 B7                  OR    A
36D9 ED 52               SBC   HL,DE
36DB             L1911:
36DB C2 E6 36            JP    NZ,L1915
36DE             L1912:
36DE 3E A0               LD    A,160
36E0             L1913:
36E0 CD 1B 3D            CALL  writeLineA
36E3             L1914:
36E3 C3 EC 36            JP    L1918
36E6             L1915:
36E6 21 E7 03            LD    HL,999
36E9             L1916:
36E9 CD F3 3C            CALL  writeLineHL
36EC             L1917:
36EC                     ;;testBitwiseOperators.j(275)     if (w2 | 0x0100 + 0x022C == 0x133C) println (161); else println (999);
36EC             L1918:
36EC 2A 04 50            LD    HL,(05004H)
36EF             L1919:
36EF E5                  PUSH  HL
36F0 21 00 01            LD    HL,256
36F3             L1920:
36F3 11 2C 02            LD    DE,556
36F6 19                  ADD   HL,DE
36F7             L1921:
36F7 D1                  POP   DE
36F8 47                  LD    B,A
36F9 7C                  LD    A,H
36FA B2                  OR    A,D
36FB 67                  LD    H,A
36FC 7D                  LD    A,L
36FD B3                  OR    A,E
36FE 6F                  LD    L,A
36FF 78                  LD    A,B
3700             L1922:
3700 11 3C 13            LD    DE,4924
3703 B7                  OR    A
3704 ED 52               SBC   HL,DE
3706             L1923:
3706 C2 11 37            JP    NZ,L1927
3709             L1924:
3709 3E A1               LD    A,161
370B             L1925:
370B CD 1B 3D            CALL  writeLineA
370E             L1926:
370E C3 17 37            JP    L1930
3711             L1927:
3711 21 E7 03            LD    HL,999
3714             L1928:
3714 CD F3 3C            CALL  writeLineHL
3717             L1929:
3717                     ;;testBitwiseOperators.j(276)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (162); else println (999);
3717             L1930:
3717 2A 04 50            LD    HL,(05004H)
371A             L1931:
371A E5                  PUSH  HL
371B 21 00 01            LD    HL,256
371E             L1932:
371E 11 2C 02            LD    DE,556
3721 19                  ADD   HL,DE
3722             L1933:
3722 D1                  POP   DE
3723 C5                  PUSH  BC
3724 47                  LD    B,A
3725 7C                  LD    A,H
3726 AA                  XOR   A,D
3727 67                  LD    H,A
3728 7D                  LD    A,L
3729 AB                  XOR   A,E
372A 6F                  LD    L,A
372B 78                  LD    A,B
372C C1                  POP   BC
372D             L1934:
372D 11 18 11            LD    DE,4376
3730 B7                  OR    A
3731 ED 52               SBC   HL,DE
3733             L1935:
3733 C2 3E 37            JP    NZ,L1939
3736             L1936:
3736 3E A2               LD    A,162
3738             L1937:
3738 CD 1B 3D            CALL  writeLineA
373B             L1938:
373B C3 44 37            JP    L1943
373E             L1939:
373E 21 E7 03            LD    HL,999
3741             L1940:
3741 CD F3 3C            CALL  writeLineHL
3744             L1941:
3744                     ;;testBitwiseOperators.j(277)     //final var byte/acc word
3744             L1942:
3744                     ;;testBitwiseOperators.j(278)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (163); else println (999);
3744             L1943:
3744 3A 00 50            LD    A,(05000H)
3747             L1944:
3747 21 00 10            LD    HL,4096
374A             L1945:
374A 11 34 02            LD    DE,564
374D 19                  ADD   HL,DE
374E             L1946:
374E 5F                  LD    E,A
374F A5                  AND   A,L
3750 6F                  LD    L,A
3751 7B                  LD    A,E
3752 26 00               LD    H,0
3754             L1947:
3754 3E 14               LD    A,20
3756             L1948:
3756 5F                  LD    E,A
3757 16 00               LD    D,0
3759 EB                  EX    DE,HL
375A B7                  OR    A
375B ED 52               SBC   HL,DE
375D             L1949:
375D C2 68 37            JP    NZ,L1953
3760             L1950:
3760 3E A3               LD    A,163
3762             L1951:
3762 CD 1B 3D            CALL  writeLineA
3765             L1952:
3765 C3 6E 37            JP    L1956
3768             L1953:
3768 21 E7 03            LD    HL,999
376B             L1954:
376B CD F3 3C            CALL  writeLineHL
376E             L1955:
376E                     ;;testBitwiseOperators.j(279)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (164); else println (999);
376E             L1956:
376E 3A 00 50            LD    A,(05000H)
3771             L1957:
3771 21 00 10            LD    HL,4096
3774             L1958:
3774 11 34 02            LD    DE,564
3777 19                  ADD   HL,DE
3778             L1959:
3778 B5                  OR    A,L
3779 6F                  LD    L,A
377A             L1960:
377A 11 3C 12            LD    DE,4668
377D B7                  OR    A
377E ED 52               SBC   HL,DE
3780             L1961:
3780 C2 8B 37            JP    NZ,L1965
3783             L1962:
3783 3E A4               LD    A,164
3785             L1963:
3785 CD 1B 3D            CALL  writeLineA
3788             L1964:
3788 C3 91 37            JP    L1968
378B             L1965:
378B 21 E7 03            LD    HL,999
378E             L1966:
378E CD F3 3C            CALL  writeLineHL
3791             L1967:
3791                     ;;testBitwiseOperators.j(280)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (165); else println (999);
3791             L1968:
3791 3A 00 50            LD    A,(05000H)
3794             L1969:
3794 21 00 10            LD    HL,4096
3797             L1970:
3797 11 34 02            LD    DE,564
379A 19                  ADD   HL,DE
379B             L1971:
379B AD                  XOR   A,L
379C 6F                  LD    L,A
379D             L1972:
379D 11 28 12            LD    DE,4648
37A0 B7                  OR    A
37A1 ED 52               SBC   HL,DE
37A3             L1973:
37A3 C2 AE 37            JP    NZ,L1977
37A6             L1974:
37A6 3E A5               LD    A,165
37A8             L1975:
37A8 CD 1B 3D            CALL  writeLineA
37AB             L1976:
37AB C3 B4 37            JP    L1981
37AE             L1977:
37AE 21 E7 03            LD    HL,999
37B1             L1978:
37B1 CD F3 3C            CALL  writeLineHL
37B4             L1979:
37B4                     ;;testBitwiseOperators.j(281)     //final var word/acc byte
37B4             L1980:
37B4                     ;;testBitwiseOperators.j(282)     if (w2 & 0x10 + 0x0C == 0x0014) println (166); else println (999);
37B4             L1981:
37B4 2A 04 50            LD    HL,(05004H)
37B7             L1982:
37B7 3E 10               LD    A,16
37B9             L1983:
37B9 C6 0C               ADD   A,12
37BB             L1984:
37BB 5F                  LD    E,A
37BC A5                  AND   A,L
37BD 6F                  LD    L,A
37BE 7B                  LD    A,E
37BF 26 00               LD    H,0
37C1             L1985:
37C1 3E 14               LD    A,20
37C3             L1986:
37C3 5F                  LD    E,A
37C4 16 00               LD    D,0
37C6 EB                  EX    DE,HL
37C7 B7                  OR    A
37C8 ED 52               SBC   HL,DE
37CA             L1987:
37CA C2 D5 37            JP    NZ,L1991
37CD             L1988:
37CD 3E A6               LD    A,166
37CF             L1989:
37CF CD 1B 3D            CALL  writeLineA
37D2             L1990:
37D2 C3 DB 37            JP    L1994
37D5             L1991:
37D5 21 E7 03            LD    HL,999
37D8             L1992:
37D8 CD F3 3C            CALL  writeLineHL
37DB             L1993:
37DB                     ;;testBitwiseOperators.j(283)     if (w2 | 0x10 + 0x0C == 0x123C) println (167); else println (999);
37DB             L1994:
37DB 2A 04 50            LD    HL,(05004H)
37DE             L1995:
37DE 3E 10               LD    A,16
37E0             L1996:
37E0 C6 0C               ADD   A,12
37E2             L1997:
37E2 B5                  OR    A,L
37E3 6F                  LD    L,A
37E4             L1998:
37E4 11 3C 12            LD    DE,4668
37E7 B7                  OR    A
37E8 ED 52               SBC   HL,DE
37EA             L1999:
37EA C2 F5 37            JP    NZ,L2003
37ED             L2000:
37ED 3E A7               LD    A,167
37EF             L2001:
37EF CD 1B 3D            CALL  writeLineA
37F2             L2002:
37F2 C3 FB 37            JP    L2006
37F5             L2003:
37F5 21 E7 03            LD    HL,999
37F8             L2004:
37F8 CD F3 3C            CALL  writeLineHL
37FB             L2005:
37FB                     ;;testBitwiseOperators.j(284)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (168); else println (999);
37FB             L2006:
37FB 2A 04 50            LD    HL,(05004H)
37FE             L2007:
37FE 3E 10               LD    A,16
3800             L2008:
3800 C6 0C               ADD   A,12
3802             L2009:
3802 AD                  XOR   A,L
3803 6F                  LD    L,A
3804             L2010:
3804 11 28 12            LD    DE,4648
3807 B7                  OR    A
3808 ED 52               SBC   HL,DE
380A             L2011:
380A C2 15 38            JP    NZ,L2015
380D             L2012:
380D 3E A8               LD    A,168
380F             L2013:
380F CD 1B 3D            CALL  writeLineA
3812             L2014:
3812 C3 1B 38            JP    L2022
3815             L2015:
3815 21 E7 03            LD    HL,999
3818             L2016:
3818 CD F3 3C            CALL  writeLineHL
381B             L2017:
381B                     ;;testBitwiseOperators.j(285)   
381B             L2018:
381B                     ;;testBitwiseOperators.j(286)     //final var/var
381B             L2019:
381B                     ;;testBitwiseOperators.j(287)     //*************
381B             L2020:
381B                     ;;testBitwiseOperators.j(288)     //final var byte/var byte
381B             L2021:
381B                     ;;testBitwiseOperators.j(289)     if (b2 & b1 == 0x04) println (169); else println (999);
381B             L2022:
381B 3A 01 50            LD    A,(05001H)
381E             L2023:
381E 47                  LD    B,A
381F 3A 00 50            LD    A,(05000H)
3822 A0                  AND   A,B
3823             L2024:
3823 D6 04               SUB   A,4
3825             L2025:
3825 C2 30 38            JP    NZ,L2029
3828             L2026:
3828 3E A9               LD    A,169
382A             L2027:
382A CD 1B 3D            CALL  writeLineA
382D             L2028:
382D C3 36 38            JP    L2032
3830             L2029:
3830 21 E7 03            LD    HL,999
3833             L2030:
3833 CD F3 3C            CALL  writeLineHL
3836             L2031:
3836                     ;;testBitwiseOperators.j(290)     if (b2 | b1 == 0x1F) println (170); else println (999);
3836             L2032:
3836 3A 01 50            LD    A,(05001H)
3839             L2033:
3839 47                  LD    B,A
383A 3A 00 50            LD    A,(05000H)
383D B0                  OR    A,B
383E             L2034:
383E D6 1F               SUB   A,31
3840             L2035:
3840 C2 4B 38            JP    NZ,L2039
3843             L2036:
3843 3E AA               LD    A,170
3845             L2037:
3845 CD 1B 3D            CALL  writeLineA
3848             L2038:
3848 C3 51 38            JP    L2042
384B             L2039:
384B 21 E7 03            LD    HL,999
384E             L2040:
384E CD F3 3C            CALL  writeLineHL
3851             L2041:
3851                     ;;testBitwiseOperators.j(291)     if (b2 ^ b1 == 0x1B) println (171); else println (999);
3851             L2042:
3851 3A 01 50            LD    A,(05001H)
3854             L2043:
3854 47                  LD    B,A
3855 3A 00 50            LD    A,(05000H)
3858 A8                  XOR   A,B
3859             L2044:
3859 D6 1B               SUB   A,27
385B             L2045:
385B C2 66 38            JP    NZ,L2049
385E             L2046:
385E 3E AB               LD    A,171
3860             L2047:
3860 CD 1B 3D            CALL  writeLineA
3863             L2048:
3863 C3 6C 38            JP    L2053
3866             L2049:
3866 21 E7 03            LD    HL,999
3869             L2050:
3869 CD F3 3C            CALL  writeLineHL
386C             L2051:
386C                     ;;testBitwiseOperators.j(292)     //final var word/var word
386C             L2052:
386C                     ;;testBitwiseOperators.j(293)     if (w2 & w1 == 0x0224) println (172); else println (999);
386C             L2053:
386C 2A 04 50            LD    HL,(05004H)
386F             L2054:
386F ED 5B 02 50         LD    DE,(05002H)
3873 C5                  PUSH  BC
3874 47                  LD    B,A
3875 7C                  LD    A,H
3876 A2                  AND   A,D
3877 67                  LD    H,A
3878 7D                  LD    A,L
3879 A3                  AND   A,E
387A 6F                  LD    L,A
387B 78                  LD    A,B
387C C1                  POP   BC
387D             L2055:
387D 11 24 02            LD    DE,548
3880 B7                  OR    A
3881 ED 52               SBC   HL,DE
3883             L2056:
3883 C2 8E 38            JP    NZ,L2060
3886             L2057:
3886 3E AC               LD    A,172
3888             L2058:
3888 CD 1B 3D            CALL  writeLineA
388B             L2059:
388B C3 94 38            JP    L2063
388E             L2060:
388E 21 E7 03            LD    HL,999
3891             L2061:
3891 CD F3 3C            CALL  writeLineHL
3894             L2062:
3894                     ;;testBitwiseOperators.j(294)     if (w2 | w1 == 0x133C) println (173); else println (999);
3894             L2063:
3894 2A 04 50            LD    HL,(05004H)
3897             L2064:
3897 ED 5B 02 50         LD    DE,(05002H)
389B 47                  LD    B,A
389C 7C                  LD    A,H
389D B2                  OR    A,D
389E 67                  LD    H,A
389F 7D                  LD    A,L
38A0 B3                  OR    A,E
38A1 6F                  LD    L,A
38A2 78                  LD    A,B
38A3             L2065:
38A3 11 3C 13            LD    DE,4924
38A6 B7                  OR    A
38A7 ED 52               SBC   HL,DE
38A9             L2066:
38A9 C2 B4 38            JP    NZ,L2070
38AC             L2067:
38AC 3E AD               LD    A,173
38AE             L2068:
38AE CD 1B 3D            CALL  writeLineA
38B1             L2069:
38B1 C3 BA 38            JP    L2073
38B4             L2070:
38B4 21 E7 03            LD    HL,999
38B7             L2071:
38B7 CD F3 3C            CALL  writeLineHL
38BA             L2072:
38BA                     ;;testBitwiseOperators.j(295)     if (w2 ^ w1 == 0x1118) println (174); else println (999);
38BA             L2073:
38BA 2A 04 50            LD    HL,(05004H)
38BD             L2074:
38BD ED 5B 02 50         LD    DE,(05002H)
38C1 C5                  PUSH  BC
38C2 47                  LD    B,A
38C3 7C                  LD    A,H
38C4 AA                  XOR   A,D
38C5 67                  LD    H,A
38C6 7D                  LD    A,L
38C7 AB                  XOR   A,E
38C8 6F                  LD    L,A
38C9 78                  LD    A,B
38CA C1                  POP   BC
38CB             L2075:
38CB 11 18 11            LD    DE,4376
38CE B7                  OR    A
38CF ED 52               SBC   HL,DE
38D1             L2076:
38D1 C2 DC 38            JP    NZ,L2080
38D4             L2077:
38D4 3E AE               LD    A,174
38D6             L2078:
38D6 CD 1B 3D            CALL  writeLineA
38D9             L2079:
38D9 C3 E2 38            JP    L2084
38DC             L2080:
38DC 21 E7 03            LD    HL,999
38DF             L2081:
38DF CD F3 3C            CALL  writeLineHL
38E2             L2082:
38E2                     ;;testBitwiseOperators.j(296)     //final var byte/var word
38E2             L2083:
38E2                     ;;testBitwiseOperators.j(297)     if (b1 & w2 == 0x0014) println (175); else println (999);
38E2             L2084:
38E2 3A 00 50            LD    A,(05000H)
38E5             L2085:
38E5 6F                  LD    L,A
38E6 26 00               LD    H,0
38E8             L2086:
38E8 ED 5B 04 50         LD    DE,(05004H)
38EC C5                  PUSH  BC
38ED 47                  LD    B,A
38EE 7C                  LD    A,H
38EF A2                  AND   A,D
38F0 67                  LD    H,A
38F1 7D                  LD    A,L
38F2 A3                  AND   A,E
38F3 6F                  LD    L,A
38F4 78                  LD    A,B
38F5 C1                  POP   BC
38F6             L2087:
38F6 3E 14               LD    A,20
38F8             L2088:
38F8 5F                  LD    E,A
38F9 16 00               LD    D,0
38FB EB                  EX    DE,HL
38FC B7                  OR    A
38FD ED 52               SBC   HL,DE
38FF             L2089:
38FF C2 0A 39            JP    NZ,L2093
3902             L2090:
3902 3E AF               LD    A,175
3904             L2091:
3904 CD 1B 3D            CALL  writeLineA
3907             L2092:
3907 C3 10 39            JP    L2096
390A             L2093:
390A 21 E7 03            LD    HL,999
390D             L2094:
390D CD F3 3C            CALL  writeLineHL
3910             L2095:
3910                     ;;testBitwiseOperators.j(298)     if (b1 | w2 == 0x123C) println (176); else println (999);
3910             L2096:
3910 3A 00 50            LD    A,(05000H)
3913             L2097:
3913 6F                  LD    L,A
3914 26 00               LD    H,0
3916             L2098:
3916 ED 5B 04 50         LD    DE,(05004H)
391A 47                  LD    B,A
391B 7C                  LD    A,H
391C B2                  OR    A,D
391D 67                  LD    H,A
391E 7D                  LD    A,L
391F B3                  OR    A,E
3920 6F                  LD    L,A
3921 78                  LD    A,B
3922             L2099:
3922 11 3C 12            LD    DE,4668
3925 B7                  OR    A
3926 ED 52               SBC   HL,DE
3928             L2100:
3928 C2 33 39            JP    NZ,L2104
392B             L2101:
392B 3E B0               LD    A,176
392D             L2102:
392D CD 1B 3D            CALL  writeLineA
3930             L2103:
3930 C3 39 39            JP    L2107
3933             L2104:
3933 21 E7 03            LD    HL,999
3936             L2105:
3936 CD F3 3C            CALL  writeLineHL
3939             L2106:
3939                     ;;testBitwiseOperators.j(299)     if (b1 ^ w2 == 0x1228) println (177); else println (999);
3939             L2107:
3939 3A 00 50            LD    A,(05000H)
393C             L2108:
393C 6F                  LD    L,A
393D 26 00               LD    H,0
393F             L2109:
393F ED 5B 04 50         LD    DE,(05004H)
3943 C5                  PUSH  BC
3944 47                  LD    B,A
3945 7C                  LD    A,H
3946 AA                  XOR   A,D
3947 67                  LD    H,A
3948 7D                  LD    A,L
3949 AB                  XOR   A,E
394A 6F                  LD    L,A
394B 78                  LD    A,B
394C C1                  POP   BC
394D             L2110:
394D 11 28 12            LD    DE,4648
3950 B7                  OR    A
3951 ED 52               SBC   HL,DE
3953             L2111:
3953 C2 5E 39            JP    NZ,L2115
3956             L2112:
3956 3E B1               LD    A,177
3958             L2113:
3958 CD 1B 3D            CALL  writeLineA
395B             L2114:
395B C3 64 39            JP    L2119
395E             L2115:
395E 21 E7 03            LD    HL,999
3961             L2116:
3961 CD F3 3C            CALL  writeLineHL
3964             L2117:
3964                     ;;testBitwiseOperators.j(300)     //final var word/var byte
3964             L2118:
3964                     ;;testBitwiseOperators.j(301)     if (w2 & b1 == 0x0014) println (178); else println (999);
3964             L2119:
3964 2A 04 50            LD    HL,(05004H)
3967             L2120:
3967 5F                  LD    E,A
3968 3A 00 50            LD    A,(05000H)
396B A5                  AND   A,L
396C 6F                  LD    L,A
396D 7B                  LD    A,E
396E 26 00               LD    H,0
3970             L2121:
3970 3E 14               LD    A,20
3972             L2122:
3972 5F                  LD    E,A
3973 16 00               LD    D,0
3975 EB                  EX    DE,HL
3976 B7                  OR    A
3977 ED 52               SBC   HL,DE
3979             L2123:
3979 C2 84 39            JP    NZ,L2127
397C             L2124:
397C 3E B2               LD    A,178
397E             L2125:
397E CD 1B 3D            CALL  writeLineA
3981             L2126:
3981 C3 8A 39            JP    L2130
3984             L2127:
3984 21 E7 03            LD    HL,999
3987             L2128:
3987 CD F3 3C            CALL  writeLineHL
398A             L2129:
398A                     ;;testBitwiseOperators.j(302)     if (w2 | b1 == 0x123C) println (179); else println (999);
398A             L2130:
398A 2A 04 50            LD    HL,(05004H)
398D             L2131:
398D 47                  LD    B,A
398E 3A 00 50            LD    A,(05000H)
3991 B5                  OR    A,L
3992 6F                  LD    L,A
3993 78                  LD    A,B
3994             L2132:
3994 11 3C 12            LD    DE,4668
3997 B7                  OR    A
3998 ED 52               SBC   HL,DE
399A             L2133:
399A C2 A5 39            JP    NZ,L2137
399D             L2134:
399D 3E B3               LD    A,179
399F             L2135:
399F CD 1B 3D            CALL  writeLineA
39A2             L2136:
39A2 C3 AB 39            JP    L2140
39A5             L2137:
39A5 21 E7 03            LD    HL,999
39A8             L2138:
39A8 CD F3 3C            CALL  writeLineHL
39AB             L2139:
39AB                     ;;testBitwiseOperators.j(303)     if (w2 ^ b1 == 0x1228) println (180); else println (999);
39AB             L2140:
39AB 2A 04 50            LD    HL,(05004H)
39AE             L2141:
39AE 47                  LD    B,A
39AF 3A 00 50            LD    A,(05000H)
39B2 AD                  XOR   A,L
39B3 6F                  LD    L,A
39B4 78                  LD    A,B
39B5             L2142:
39B5 11 28 12            LD    DE,4648
39B8 B7                  OR    A
39B9 ED 52               SBC   HL,DE
39BB             L2143:
39BB C2 C6 39            JP    NZ,L2147
39BE             L2144:
39BE 3E B4               LD    A,180
39C0             L2145:
39C0 CD 1B 3D            CALL  writeLineA
39C3             L2146:
39C3 C3 CC 39            JP    L2154
39C6             L2147:
39C6 21 E7 03            LD    HL,999
39C9             L2148:
39C9 CD F3 3C            CALL  writeLineHL
39CC             L2149:
39CC                     ;;testBitwiseOperators.j(304)   
39CC             L2150:
39CC                     ;;testBitwiseOperators.j(305)     //final var/final var
39CC             L2151:
39CC                     ;;testBitwiseOperators.j(306)     //*******************
39CC             L2152:
39CC                     ;;testBitwiseOperators.j(307)     //final var byte/final var byte
39CC             L2153:
39CC                     ;;testBitwiseOperators.j(308)     if (fb2 & fb1 == 0x04) println (181); else println (999);
39CC             L2154:
39CC 3E 07               LD    A,7
39CE             L2155:
39CE E6 1C               AND   A,28
39D0             L2156:
39D0 D6 04               SUB   A,4
39D2             L2157:
39D2 C2 DD 39            JP    NZ,L2161
39D5             L2158:
39D5 3E B5               LD    A,181
39D7             L2159:
39D7 CD 1B 3D            CALL  writeLineA
39DA             L2160:
39DA C3 E3 39            JP    L2164
39DD             L2161:
39DD 21 E7 03            LD    HL,999
39E0             L2162:
39E0 CD F3 3C            CALL  writeLineHL
39E3             L2163:
39E3                     ;;testBitwiseOperators.j(309)     if (fb2 | fb1 == 0x1F) println (182); else println (999);
39E3             L2164:
39E3 3E 07               LD    A,7
39E5             L2165:
39E5 F6 1C               OR    A,28
39E7             L2166:
39E7 D6 1F               SUB   A,31
39E9             L2167:
39E9 C2 F4 39            JP    NZ,L2171
39EC             L2168:
39EC 3E B6               LD    A,182
39EE             L2169:
39EE CD 1B 3D            CALL  writeLineA
39F1             L2170:
39F1 C3 FA 39            JP    L2174
39F4             L2171:
39F4 21 E7 03            LD    HL,999
39F7             L2172:
39F7 CD F3 3C            CALL  writeLineHL
39FA             L2173:
39FA                     ;;testBitwiseOperators.j(310)     if (fb2 ^ fb1 == 0x1B) println (183); else println (999);
39FA             L2174:
39FA 3E 07               LD    A,7
39FC             L2175:
39FC EE 1C               XOR   A,28
39FE             L2176:
39FE D6 1B               SUB   A,27
3A00             L2177:
3A00 C2 0B 3A            JP    NZ,L2181
3A03             L2178:
3A03 3E B7               LD    A,183
3A05             L2179:
3A05 CD 1B 3D            CALL  writeLineA
3A08             L2180:
3A08 C3 11 3A            JP    L2185
3A0B             L2181:
3A0B 21 E7 03            LD    HL,999
3A0E             L2182:
3A0E CD F3 3C            CALL  writeLineHL
3A11             L2183:
3A11                     ;;testBitwiseOperators.j(311)     //final var word/final var word
3A11             L2184:
3A11                     ;;testBitwiseOperators.j(312)     if (fw2 & fw1 == 0x0224) println (184); else println (999);
3A11             L2185:
3A11 21 34 12            LD    HL,4660
3A14             L2186:
3A14 11 2C 03            LD    DE,812
3A17 C5                  PUSH  BC
3A18 47                  LD    B,A
3A19 7C                  LD    A,H
3A1A A2                  AND   A,D
3A1B 67                  LD    H,A
3A1C 7D                  LD    A,L
3A1D A3                  AND   A,E
3A1E 6F                  LD    L,A
3A1F 78                  LD    A,B
3A20 C1                  POP   BC
3A21             L2187:
3A21 11 24 02            LD    DE,548
3A24 B7                  OR    A
3A25 ED 52               SBC   HL,DE
3A27             L2188:
3A27 C2 32 3A            JP    NZ,L2192
3A2A             L2189:
3A2A 3E B8               LD    A,184
3A2C             L2190:
3A2C CD 1B 3D            CALL  writeLineA
3A2F             L2191:
3A2F C3 38 3A            JP    L2195
3A32             L2192:
3A32 21 E7 03            LD    HL,999
3A35             L2193:
3A35 CD F3 3C            CALL  writeLineHL
3A38             L2194:
3A38                     ;;testBitwiseOperators.j(313)     if (fw2 | fw1 == 0x133C) println (185); else println (999);
3A38             L2195:
3A38 21 34 12            LD    HL,4660
3A3B             L2196:
3A3B 11 2C 03            LD    DE,812
3A3E 47                  LD    B,A
3A3F 7C                  LD    A,H
3A40 B2                  OR    A,D
3A41 67                  LD    H,A
3A42 7D                  LD    A,L
3A43 B3                  OR    A,E
3A44 6F                  LD    L,A
3A45 78                  LD    A,B
3A46             L2197:
3A46 11 3C 13            LD    DE,4924
3A49 B7                  OR    A
3A4A ED 52               SBC   HL,DE
3A4C             L2198:
3A4C C2 57 3A            JP    NZ,L2202
3A4F             L2199:
3A4F 3E B9               LD    A,185
3A51             L2200:
3A51 CD 1B 3D            CALL  writeLineA
3A54             L2201:
3A54 C3 5D 3A            JP    L2205
3A57             L2202:
3A57 21 E7 03            LD    HL,999
3A5A             L2203:
3A5A CD F3 3C            CALL  writeLineHL
3A5D             L2204:
3A5D                     ;;testBitwiseOperators.j(314)     if (fw2 ^ fw1 == 0x1118) println (186); else println (999);
3A5D             L2205:
3A5D 21 34 12            LD    HL,4660
3A60             L2206:
3A60 11 2C 03            LD    DE,812
3A63 C5                  PUSH  BC
3A64 47                  LD    B,A
3A65 7C                  LD    A,H
3A66 AA                  XOR   A,D
3A67 67                  LD    H,A
3A68 7D                  LD    A,L
3A69 AB                  XOR   A,E
3A6A 6F                  LD    L,A
3A6B 78                  LD    A,B
3A6C C1                  POP   BC
3A6D             L2207:
3A6D 11 18 11            LD    DE,4376
3A70 B7                  OR    A
3A71 ED 52               SBC   HL,DE
3A73             L2208:
3A73 C2 7E 3A            JP    NZ,L2212
3A76             L2209:
3A76 3E BA               LD    A,186
3A78             L2210:
3A78 CD 1B 3D            CALL  writeLineA
3A7B             L2211:
3A7B C3 84 3A            JP    L2216
3A7E             L2212:
3A7E 21 E7 03            LD    HL,999
3A81             L2213:
3A81 CD F3 3C            CALL  writeLineHL
3A84             L2214:
3A84                     ;;testBitwiseOperators.j(315)     //final var byte/final var word
3A84             L2215:
3A84                     ;;testBitwiseOperators.j(316)     if (fb1 & fw2 == 0x0014) println (187); else println (999);
3A84             L2216:
3A84 3E 1C               LD    A,28
3A86             L2217:
3A86 6F                  LD    L,A
3A87 26 00               LD    H,0
3A89             L2218:
3A89 11 34 12            LD    DE,4660
3A8C C5                  PUSH  BC
3A8D 47                  LD    B,A
3A8E 7C                  LD    A,H
3A8F A2                  AND   A,D
3A90 67                  LD    H,A
3A91 7D                  LD    A,L
3A92 A3                  AND   A,E
3A93 6F                  LD    L,A
3A94 78                  LD    A,B
3A95 C1                  POP   BC
3A96             L2219:
3A96 3E 14               LD    A,20
3A98             L2220:
3A98 5F                  LD    E,A
3A99 16 00               LD    D,0
3A9B EB                  EX    DE,HL
3A9C B7                  OR    A
3A9D ED 52               SBC   HL,DE
3A9F             L2221:
3A9F C2 AA 3A            JP    NZ,L2225
3AA2             L2222:
3AA2 3E BB               LD    A,187
3AA4             L2223:
3AA4 CD 1B 3D            CALL  writeLineA
3AA7             L2224:
3AA7 C3 B0 3A            JP    L2228
3AAA             L2225:
3AAA 21 E7 03            LD    HL,999
3AAD             L2226:
3AAD CD F3 3C            CALL  writeLineHL
3AB0             L2227:
3AB0                     ;;testBitwiseOperators.j(317)     if (fb1 | fw2 == 0x123C) println (188); else println (999);
3AB0             L2228:
3AB0 3E 1C               LD    A,28
3AB2             L2229:
3AB2 6F                  LD    L,A
3AB3 26 00               LD    H,0
3AB5             L2230:
3AB5 11 34 12            LD    DE,4660
3AB8 47                  LD    B,A
3AB9 7C                  LD    A,H
3ABA B2                  OR    A,D
3ABB 67                  LD    H,A
3ABC 7D                  LD    A,L
3ABD B3                  OR    A,E
3ABE 6F                  LD    L,A
3ABF 78                  LD    A,B
3AC0             L2231:
3AC0 11 3C 12            LD    DE,4668
3AC3 B7                  OR    A
3AC4 ED 52               SBC   HL,DE
3AC6             L2232:
3AC6 C2 D1 3A            JP    NZ,L2236
3AC9             L2233:
3AC9 3E BC               LD    A,188
3ACB             L2234:
3ACB CD 1B 3D            CALL  writeLineA
3ACE             L2235:
3ACE C3 D7 3A            JP    L2239
3AD1             L2236:
3AD1 21 E7 03            LD    HL,999
3AD4             L2237:
3AD4 CD F3 3C            CALL  writeLineHL
3AD7             L2238:
3AD7                     ;;testBitwiseOperators.j(318)     if (fb1 ^ fw2 == 0x1228) println (189); else println (999);
3AD7             L2239:
3AD7 3E 1C               LD    A,28
3AD9             L2240:
3AD9 6F                  LD    L,A
3ADA 26 00               LD    H,0
3ADC             L2241:
3ADC 11 34 12            LD    DE,4660
3ADF C5                  PUSH  BC
3AE0 47                  LD    B,A
3AE1 7C                  LD    A,H
3AE2 AA                  XOR   A,D
3AE3 67                  LD    H,A
3AE4 7D                  LD    A,L
3AE5 AB                  XOR   A,E
3AE6 6F                  LD    L,A
3AE7 78                  LD    A,B
3AE8 C1                  POP   BC
3AE9             L2242:
3AE9 11 28 12            LD    DE,4648
3AEC B7                  OR    A
3AED ED 52               SBC   HL,DE
3AEF             L2243:
3AEF C2 FA 3A            JP    NZ,L2247
3AF2             L2244:
3AF2 3E BD               LD    A,189
3AF4             L2245:
3AF4 CD 1B 3D            CALL  writeLineA
3AF7             L2246:
3AF7 C3 00 3B            JP    L2251
3AFA             L2247:
3AFA 21 E7 03            LD    HL,999
3AFD             L2248:
3AFD CD F3 3C            CALL  writeLineHL
3B00             L2249:
3B00                     ;;testBitwiseOperators.j(319)     //final var word/final var byte
3B00             L2250:
3B00                     ;;testBitwiseOperators.j(320)     if (fw2 & fb1 == 0x0014) println (190); else println (999);
3B00             L2251:
3B00 21 34 12            LD    HL,4660
3B03             L2252:
3B03 5F                  LD    E,A
3B04 3E 1C               LD    A,28
3B06 A5                  AND   A,L
3B07 6F                  LD    L,A
3B08 7B                  LD    A,E
3B09 26 00               LD    H,0
3B0B             L2253:
3B0B 3E 14               LD    A,20
3B0D             L2254:
3B0D 5F                  LD    E,A
3B0E 16 00               LD    D,0
3B10 EB                  EX    DE,HL
3B11 B7                  OR    A
3B12 ED 52               SBC   HL,DE
3B14             L2255:
3B14 C2 1F 3B            JP    NZ,L2259
3B17             L2256:
3B17 3E BE               LD    A,190
3B19             L2257:
3B19 CD 1B 3D            CALL  writeLineA
3B1C             L2258:
3B1C C3 25 3B            JP    L2262
3B1F             L2259:
3B1F 21 E7 03            LD    HL,999
3B22             L2260:
3B22 CD F3 3C            CALL  writeLineHL
3B25             L2261:
3B25                     ;;testBitwiseOperators.j(321)     if (fw2 | fb1 == 0x123C) println (191); else println (999);
3B25             L2262:
3B25 21 34 12            LD    HL,4660
3B28             L2263:
3B28 11 1C 00            LD    DE,28
3B2B 47                  LD    B,A
3B2C 7C                  LD    A,H
3B2D B2                  OR    A,D
3B2E 67                  LD    H,A
3B2F 7D                  LD    A,L
3B30 B3                  OR    A,E
3B31 6F                  LD    L,A
3B32 78                  LD    A,B
3B33             L2264:
3B33 11 3C 12            LD    DE,4668
3B36 B7                  OR    A
3B37 ED 52               SBC   HL,DE
3B39             L2265:
3B39 C2 44 3B            JP    NZ,L2269
3B3C             L2266:
3B3C 3E BF               LD    A,191
3B3E             L2267:
3B3E CD 1B 3D            CALL  writeLineA
3B41             L2268:
3B41 C3 4A 3B            JP    L2272
3B44             L2269:
3B44 21 E7 03            LD    HL,999
3B47             L2270:
3B47 CD F3 3C            CALL  writeLineHL
3B4A             L2271:
3B4A                     ;;testBitwiseOperators.j(322)     if (fw2 ^ fb1 == 0x1228) println (192); else println (999);
3B4A             L2272:
3B4A 21 34 12            LD    HL,4660
3B4D             L2273:
3B4D 11 1C 00            LD    DE,28
3B50 C5                  PUSH  BC
3B51 47                  LD    B,A
3B52 7C                  LD    A,H
3B53 AA                  XOR   A,D
3B54 67                  LD    H,A
3B55 7D                  LD    A,L
3B56 AB                  XOR   A,E
3B57 6F                  LD    L,A
3B58 78                  LD    A,B
3B59 C1                  POP   BC
3B5A             L2274:
3B5A 11 28 12            LD    DE,4648
3B5D B7                  OR    A
3B5E ED 52               SBC   HL,DE
3B60             L2275:
3B60 C2 6B 3B            JP    NZ,L2279
3B63             L2276:
3B63 3E C0               LD    A,192
3B65             L2277:
3B65 CD 1B 3D            CALL  writeLineA
3B68             L2278:
3B68 C3 71 3B            JP    L2283
3B6B             L2279:
3B6B 21 E7 03            LD    HL,999
3B6E             L2280:
3B6E CD F3 3C            CALL  writeLineHL
3B71             L2281:
3B71                     ;;testBitwiseOperators.j(323)   
3B71             L2282:
3B71                     ;;testBitwiseOperators.j(324)     println("Klaar");
3B71             L2283:
3B71 21 7C 3B            LD    HL,L2290
3B74             L2284:
3B74 CD A0 3B            CALL  writeLineStr
3B77             L2285:
3B77                     ;;testBitwiseOperators.j(325)   }
3B77             L2286:
3B77 DD F9               LD    SP,IX
3B79             L2287:
3B79 DD E1               POP   IX
3B7B             L2288:
3B7B C9                  return
3B7C             L2289:
3B7C                     ;;testBitwiseOperators.j(326) }
3B7C             L2290:
3B7C 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
3B82             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
3B82             STAT0   equ 004H          ;147 ASCI0 Status register.
3B82             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
3B82             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
3B82             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
3B82             TDRE    equ 1             ;STAT0->Tx data register empty bit.
3B82             OVERRUN equ 6             ;STAT0->OVERRUN bit.
3B82             RDRF    equ 7             ;STAT0->Rx data register full bit.
3B82             ;****************
3B82             ;getChar
3B82             ;Check if an input character from ASCI0 is available.
3B82             ;  IN:  none
3B82             ;  OUT: F: ZERO flag set if no character is available.
3B82             ;          ZERO flag reset if a character is available.
3B82             ;       A : character from ASCI0, if available.
3B82             ;  USES:AF
3B82             ;****************
3B82             getChar:
3B82 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
3B85 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
3B87 20 07               JR    NZ,getChar1 ;-yes: reset error flags
3B89 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
3B8B C8                  RET   Z           ;-no: return without a character
3B8C ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
3B8F C9                  RET
3B90             getChar1:
3B90 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
3B93 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
3B95 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
3B98 AF                  XOR   A,A
3B99 C9                  RET               ;return without a character
3B9A             ;****************
3B9A             ;putMsg
3B9A             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
3B9A             ;  IN:  none.
3B9A             ;  OUT: none.
3B9A             ;  USES:none.
3B9A             ;****************
3B9A             putMsg:
3B9A E3                  EX    (SP),HL     ;save HL and load return address into HL.
3B9B CD A7 3B            CALL  writeStr
3B9E E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
3B9F C9                  RET
3BA0             ;****************
3BA0             ;writeLineStr
3BA0             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
3BA0             ;  IN:  HL:address of zero terminated string to be printed.
3BA0             ;  OUT: none.
3BA0             ;  USES:HL (point to byte after zero terminated string)
3BA0             ;****************
3BA0             writeLineStr:
3BA0 CD A7 3B            CALL  writeStr
3BA3 CD C3 3B            CALL  putCRLF
3BA6 C9                  RET
3BA7             ;****************
3BA7             ;writeStr
3BA7             ;Print via ASCI0 a zero terminated string, pointed to by HL.
3BA7             ;  IN:  HL:address of zero terminated string to be printed.
3BA7             ;  OUT: none.
3BA7             ;  USES:HL (point to byte after zero terminated string)
3BA7             ;****************
3BA7             writeStr:
3BA7 F5                  PUSH  AF          ;save registers
3BA8             putStr1:
3BA8 7E                  LD    A,(HL)      ;get next character
3BA9 23                  INC   HL
3BAA B7                  OR    A,A         ;is it zer0?
3BAB 28 05               JR    Z,putStr2   ;yes ->return
3BAD CD B6 3B            CALL  putChar     ;no->put it to ASCI0
3BB0 18 F6               JR    putStr1
3BB2             putStr2:
3BB2 F1                  POP   AF
3BB3 C9                  RET
3BB4             ;****************
3BB4             ;putSpace
3BB4             ;Send a space character to ASCI0
3BB4             ;  IN:  none.
3BB4             ;  OUT: none.
3BB4             ;  USES:AF
3BB4             ;****************
3BB4             putSpace:
3BB4 3E 20               LD    A,' '       ;load space and continue with putChar.
3BB6             ;****************
3BB6             ;putChar
3BB6             ;Send one character to ASCI0.
3BB6             ;  IN:  A = character
3BB6             ;  OUT: none.
3BB6             ;  USES:none.
3BB6             ;****************
3BB6             putChar:
3BB6 F5                  PUSH  AF          ;send the character via ASCI0
3BB7             putChar1:
3BB7 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
3BBA CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
3BBC 28 F9               JR    Z,putChar1
3BBE F1                  POP   AF          ;restore AF registers
3BBF ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
3BC2 C9                  RET
3BC3             ;****************
3BC3             ;putCRLF
3BC3             ;Send CR and LF to ASCI0
3BC3             ;  IN:  none.
3BC3             ;  OUT: none.
3BC3             ;  USES:none.
3BC3             ;****************
3BC3             putCRLF:
3BC3 F5                  PUSH  AF
3BC4 3E 0D               LD    A,'\r'       ;print carriage return
3BC6 CD B6 3B            CALL  putChar
3BC9 3E 0A               LD    A,'\n'       ;print line feed
3BCB CD B6 3B            CALL  putChar
3BCE F1                  POP   AF
3BCF C9                  RET
3BD0             ;****************
3BD0             ;putErase
3BD0             ;Erase the latest character at ASCI0
3BD0             ;  IN:  none.
3BD0             ;  OUT: none.
3BD0             ;  USES:AF
3BD0             ;****************
3BD0             putErase:
3BD0 3E 08               LD    A,'\b'       ;print backspace
3BD2 CD B6 3B            CALL  putChar
3BD5 CD B4 3B            CALL  putSpace    ;print space (erase character)
3BD8 3E 08               LD    A,'\b'      ;print backspace
3BDA 18 DA               JR    putChar
3BDC             ;****************
3BDC             ;putBell
3BDC             ;Send a Bell character to ASCI0
3BDC             ;  IN:  none.
3BDC             ;  OUT: none.
3BDC             ;  USES:AF
3BDC             ;****************
3BDC             putBell:
3BDC 3E 07               LD    A,07        ;ring the bell at ASCI0
3BDE 18 D6               JR    putChar
3BE0             ;****************
3BE0             ;putHexHL
3BE0             ;Print HL register pair as 4 hex digits
3BE0             ;  IN:  HL = word to be printed.
3BE0             ;  OUT: none.
3BE0             ;  USES:none.
3BE0             ;****************
3BE0             putHexHL:
3BE0 F5                  PUSH  AF          ;save used registers
3BE1 7C                  LD    A,H         ;print H as 2 hex digits
3BE2 CD EB 3B            CALL  putHexA
3BE5 7D                  LD    A,L         ;print L as 2 hex digits
3BE6 CD EB 3B            CALL  putHexA
3BE9 F1                  POP   AF          ;restore used registers
3BEA C9                  RET
3BEB             ;****************
3BEB             ;putHexA
3BEB             ;Print A register as 2 hex digits
3BEB             ;  IN:  A = byte to be printed
3BEB             ;  OUT: none.
3BEB             ;  USES:none.
3BEB             ;****************
3BEB             putHexA:
3BEB F5                  PUSH  AF          ;save input
3BEC 1F                  RRA               ;shift upper nibble to the right
3BED 1F                  RRA
3BEE 1F                  RRA
3BEF 1F                  RRA
3BF0 CD F4 3B            CALL  putHexA1    ;print upper nibble
3BF3 F1                  POP   AF          ;restore input & print lower nibble
3BF4             putHexA1:
3BF4 F5                  PUSH  AF          ;save input
3BF5 E6 0F               AND   A,00FH      ;mask lower nibble
3BF7 C6 30               ADD   A,'0'       ;convert to hex digit
3BF9 FE 3A               CP    A,'9'+1
3BFB 38 02               JR    C,putHexA2
3BFD C6 07               ADD   A,07
3BFF             putHexA2:
3BFF CD B6 3B            CALL  putChar
3C02 F1                  POP   AF          ;restore input
3C03 C9                  RET               ;and return
3C04             ;****************
3C04             ;mul16
3C04             ;16 by 16 bit unsigned multiplication with 16 bit result.
3C04             ;  IN:  HL = operand 1
3C04             ;       DE = operand 2
3C04             ;  OUT: HL = HL * DE low part
3C04             ;  USES:DE
3C04             ;  Size   25 bytes
3C04             ;  Time  160 cycles
3C04             ;****************
3C04             mul16:
3C04                     ;HL = HL * DE
3C04                     ;        H  L
3C04                     ;        D  E
3C04                     ;    --------*
3C04                     ;          EL
3C04                     ;       EH  0
3C04                     ;       DL  0
3C04                     ; -----------+
3C04                     ;        R  S
3C04                     ;S = ELlow
3C04                     ;R = ELhigh+EHlow+DLlow
3C04 C5                  PUSH  BC          ;11  11 save BC
3C05 44                  LD    B,H         ; 4  15 copy HL to BC
3C06 4D                  LD    C,L         ; 4  19
3C07 63                  LD    H,E         ; 4  23 HL contains EL
3C08 ED 6C               MLT   HL          ;17  40
3C0A E5                  PUSH  HL          ;11  51
3C0B 63                  LD    H,E         ; 4  55 HL contains EH aka EB
3C0C 68                  LD    L,B         ; 4  59
3C0D ED 6C               MLT   HL          ;17  76
3C0F 45                  LD    B,L         ; 4  80 save EHlow in B
3C10 62                  LD    H,D         ; 4  84 HL contains DL aka DC
3C11 69                  LD    L,C         ; 4  88
3C12 ED 6C               MLT   HL          ;17 105
3C14 55                  LD    D,L         ; 4 109 DLlow into DE
3C15 1E 00               LD    E,0         ; 6 115
3C17 E1                  POP   HL          ; 9 124 add EL+DElow
3C18 19                  ADD   HL,DE       ; 7 131
3C19 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
3C1A 19                  ADD   HL,DE       ; 7 142
3C1B C1                  POP   BC          ; 9 151 restore BC
3C1C C9                  RET               ; 9 160
3C1D             ;****************
3C1D             ;mul16_10
3C1D             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
3C1D             ;  IN:  HL = operand
3C1D             ;  OUT: HL = HL * 10; low part
3C1D             ;  USES:Flags
3C1D             ;  Size   9 bytes
3C1D             ;  Time   65 cycles
3C1D             ;****************
3C1D             mul16_10:
3C1D D5                  PUSH  DE          ;11 11
3C1E 54                  LD    D,H         ; 4 15
3C1F 5D                  LD    E,L         ; 4 19
3C20 29                  ADD   HL,HL       ; 7 26 times 2
3C21 29                  ADD   HL,HL       ; 7 33 times 4
3C22 19                  ADD   HL,DE       ; 7 40 times 5
3C23 29                  ADD   HL,HL       ; 7 47 times 10
3C24 D1                  POP   DE          ; 9 56
3C25 C9                  RET               ; 9 65
3C26             ;****************
3C26             ;mul16_8
3C26             ;16 by 8 bit unsigned multiplication with 16 bit result.
3C26             ;  IN:  HL = operand 1
3C26             ;        A = operand 2
3C26             ;  OUT: HL = HL * A low part
3C26             ;  USES:AF
3C26             ;  Size   .. bytes
3C26             ;  Time  ... cycles
3C26             ;****************
3C26             mul16_8:
3C26                     ;HL = HL * A
3C26                     ;        H  L
3C26                     ;           A
3C26                     ;    --------*
3C26                     ;          AL
3C26                     ;       AH  0
3C26                     ; -----------+
3C26                     ;        R  S
3C26                     ;S = ALlow
3C26                     ;R = ALhigh+AHlow
3C26 C5                  PUSH  BC          ;11  11 save BC
3C27 44                  LD    B,H         ; 4  15
3C28 4F                  LD    C,A         ; 4  19
3C29 67                  LD    H,A         ; 4  23
3C2A ED 6C               MLT   HL          ;17  40 HL = AL
3C2C ED 4C               MLT   BC          ;17  57 BC = AH
3C2E 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
3C2F 81                  ADD   A,C         ; 4  65
3C30 67                  LD    H,A         ; 4  69
3C31 C1                  POP   BC          ; 9  78 | 289 restore BC
3C32 C9                  RET               ; 9  87 | 307
3C33             ;****************
3C33             ;mul1632
3C33             ;16 by 16 bit unsigned multiplication with 32 bit result.
3C33             ;  IN:  HL = operand 1
3C33             ;       DE = operand 2
3C33             ;  OUT: HL = HL * DE low part
3C33             ;       DE = HL * DE high part
3C33             ;  USES:-
3C33             ;  Size 49 bytes
3C33             ;  Time between 303 en 307 cycles
3C33             ;****************
3C33             mul1632:
3C33                     ;HL = HL * DE
3C33                     ;        H  L
3C33                     ;        D  E
3C33                     ;    --------*
3C33                     ;          EL
3C33                     ;       EH  0
3C33                     ;       DL  0
3C33                     ;    DH  0  0
3C33                     ; -----------+
3C33                     ;  P  Q  R  S
3C33                     ;S = ELlow
3C33                     ;R = ELhigh+EHlow+DLlow
3C33                     ;Q = DHlow+EHhigh+DLhigh
3C33                     ;P = DHhigh
3C33 F5                  PUSH  AF          ;11  11 save AF
3C34 C5                  PUSH  BC          ;11  22 save BC
3C35 44                  LD    B,H         ; 4  26
3C36 4D                  LD    C,L         ; 4  30
3C37 62                  LD    H,D         ; 4  34 HL contains DH aka DB
3C38 68                  LD    L,B         ; 4  38
3C39 ED 6C               MLT   HL          ;17  55
3C3B E5                  PUSH  HL          ;11  66
3C3C 62                  LD    H,D         ; 4  70 HL contains DL aka DC
3C3D 69                  LD    L,C         ; 4  74
3C3E ED 6C               MLT   HL          ;17  91
3C40 E5                  PUSH  HL          ;11 102
3C41 63                  LD    H,E         ; 4 106 HL contains EH aka EB
3C42 68                  LD    L,B         ; 4 110
3C43 ED 6C               MLT   HL          ;17 127
3C45 E5                  PUSH  HL          ;11 138
3C46 63                  LD    H,E         ; 4 142 HL contains EL aka EC
3C47 69                  LD    L,C         ; 4 146
3C48 ED 6C               MLT   HL          ;17 163
3C4A D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
3C4B 06 00               LD    B,0         ; 6 178
3C4D 4A                  LD    C,D         ; 4 182 ..C=EHhigh
3C4E 53                  LD    D,E         ; 4 186 ..D=EHlow
3C4F 1E 00               LD    E,0         ; 6 192
3C51 19                  ADD   HL,DE       ; 7 199
3C52 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
3C54 03                  INC   BC          ;         4 209
3C55             mul16321:
3C55 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
3C56 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
3C57 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
3C58 19                  ADD   HL,DE       ; 7 231 | 233
3C59 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
3C5B 03                  INC   BC          ;         4 243
3C5C             mul16322:
3C5C                                       ;HL=RS=EL+EH0+DL0
3C5C                                       ;C=EHhigh
3C5C                                       ;A=DLhigh
3C5C                                       ;E=0
3C5C EB                  EX    DE,HL       ; 3 242 | 246
3C5D 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
3C5E 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
3C5F 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
3C60 C1                  POP   BC          ; 9 266 | 270
3C61 09                  ADD   HL,BC       ; 7 273 | 277
3C62 EB                  EX    DE,HL       ; 3 276 | 280
3C63                                       ;D=P=DHhigh
3C63                                       ;E=Q=DHlow+EHhigh+DLhigh
3C63                                       ;H=R=ELhigh+EHlow+DLlow
3C63                                       ;L=S=ELlow
3C63 C1                  POP   BC          ; 9 285 | 289 restore BC
3C64 F1                  POP   AF          ; 9 294 | 298 restore AF
3C65 C9                  RET               ; 9 303 | 307
3C66             ;****************
3C66             ;mul16S
3C66             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
3C66             ;  IN:  HL = operand 1
3C66             ;       DE = operand 2
3C66             ;  OUT: DE = HL * DE high part
3C66             ;       HL = HL * DE low part
3C66             ;  USES:none.
3C66             ;  Size 26 bytes
3C66             ;  Time between 726 en 998 cycles
3C66             ;****************
3C66             mul16S:
3C66 F5                  PUSH  AF          ;11  11 save AF
3C67 C5                  PUSH  BC          ;11  22 save BC
3C68 44                  LD    B,H         ; 4  26
3C69 4D                  LD    C,L         ; 4  30
3C6A 21 00 00            LD    HL,0        ; 9  39
3C6D 3E 10               LD    A,16        ; 6  45
3C6F             mul16S1:
3C6F 29                  ADD   HL,HL       ;16*7=112 157
3C70 CB 13               RL    E           ;16*7=112 269
3C72 CB 12               RL    D           ;16*7=112 381
3C74 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
3C76 09                  ADD   HL,BC       ;             16*7=112 589
3C77 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
3C79 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
3C7A             mul16S2:
3C7A 3D                  DEC   A           ;16*4=64    573 | 845 | 813
3C7B 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
3C7D C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
3C7E F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
3C7F C9                  RET               ; 9         726 | 998 | 966
3C80             ;****************
3C80             ;div16
3C80             ;16 by 16 bit unsigned division.
3C80             ;  IN:  HL = dividend
3C80             ;       DE = divisor
3C80             ;  OUT: HL = quotient
3C80             ;       DE = remainder
3C80             ;  USES:-
3C80             ;  Size   32 bytes
3C80             ;  Time   between 1073 en 1121 cycles
3C80             ;pseudo code:
3C80             ;T = AC = dividend
3C80             ;D = DE = divisor
3C80             ;Q = AC = quotient = 0
3C80             ;R = HL = remainder = 0
3C80             ;invariante betrekking:
3C80             ; D/T\Q     
3C80             ;   R       
3C80             ; T = QD + R
3C80             ; T <= 2^N  
3C80             ;
3C80             ; D/T'.RT\Q'      
3C80             ;   R'             
3C80             ; RT <= 2^N        
3C80             ; 0<=k<=N          
3C80             ; RT = T % 2^k     
3C80             ; T' = (T-RT) / 2^k
3C80             ; Q' = T' / D      
3C80             ; R' = T' % D      
3C80             ;
3C80             ;for (i=16; i>0; i--) {
3C80             ;  T = T * 2 (remember MSB in carry)
3C80             ;  R = R * 2 + carry
3C80             ;  Q = Q * 2
3C80             ;  if (R >= D) {
3C80             ;    R = R - D;
3C80             ;    Q++;
3C80             ;  }
3C80             ;}
3C80             ;return Q (in HL) and R (in DE)
3C80             ;****************
3C80             div16:
3C80 F5                  PUSH  AF          ;11  11 save registers used
3C81 C5                  PUSH  BC          ;11  22
3C82 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
3C83 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
3C84 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
3C87 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
3C89             div16_1:
3C89 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
3C8B CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
3C8D ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
3C8F B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
3C90 ED 52               SBC   HL,DE       ;16*10=160 653
3C92 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
3C94 0C                  INC   C           ;              16*4= 64 813   Q++
3C95 18 01               JR    div16_3     ;              16*8=128 941
3C97             div16_2:
3C97 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
3C98             div16_3:
3C98 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
3C9A EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
3C9B 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
3C9C 69                  LD    L,C         ; 4 1046 | 1094
3C9D C1                  POP   BC          ; 9 1055 | 1103
3C9E F1                  POP   AF          ; 9 1064 | 1112
3C9F C9                  RET               ; 9 1073 | 1121
3CA0             ;****************
3CA0             ;div16_8
3CA0             ;16 by 8 bit unsigned division.
3CA0             ;  IN:  HL = dividend
3CA0             ;       A  = divisor
3CA0             ;  OUT: HL = quotient
3CA0             ;       A  = remainder
3CA0             ;  USES:F(lags)
3CA0             ;  Size 18 bytes
3CA0             ;  Time between 601 en 697 cycles
3CA0             ;****************
3CA0             div16_8:
3CA0 C5                  PUSH  BC          ;11 11 save registers used
3CA1 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
3CA3 4F                  LD    C,A         ; 4 21 move divisor to C
3CA4 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
3CA5             div16_82:
3CA5 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
3CA6 CB 17               RL    A           ;16*7=112 249
3CA8 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
3CA9 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
3CAB 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
3CAC 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
3CAD             div16_83:
3CAD 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
3CAF C1                  POP   BC          ;9 592 688
3CB0 C9                  RET               ;9 601 697
3CB1             ;****************
3CB1             ;div8
3CB1             ;8 by 8 bit unsigned division.
3CB1             ;  IN:  A = dividend
3CB1             ;       C = divisor
3CB1             ;  OUT: A = quotient
3CB1             ;       C = remainder
3CB1             ;  USES:F(lags)
3CB1             ;  Size 26 bytes
3CB1             ;  Time between 411 and 459 cycles
3CB1             ;****************
3CB1             ;pseudo code:
3CB1             ;T = dividend
3CB1             ;D = divisor
3CB1             ;Q = quotient = 0
3CB1             ;R = remainder = 0
3CB1             ;invariante betrekking:
3CB1             ; T = QD + R
3CB1             ; T <= 2^8  
3CB1             ;
3CB1             ; D/T'.RT\Q'      
3CB1             ;   R'             
3CB1             ; RT <= 2^8        
3CB1             ; 0<=k<=8          
3CB1             ; RT = T % 2^k     
3CB1             ; T' = (T-RT) / 2^k
3CB1             ; Q' = T' / D      
3CB1             ; R' = T' % D      
3CB1             ;
3CB1             ;for (i=8; i>0; i--) {
3CB1             ;  T = T * 2 (remember MSB in carry)
3CB1             ;  R = R * 2 + carry
3CB1             ;  Q = Q * 2
3CB1             ;  if (R >= D) {
3CB1             ;    R = R - D;
3CB1             ;    Q++;
3CB1             ;  }
3CB1             ;}
3CB1             ;return Q (in A) and R (in C)
3CB1             ;****************
3CB1             ;E = T = dividend
3CB1             ;C = D = divisor
3CB1             ;D = Q = quotient
3CB1             ;A = R = remainder
3CB1             ;****************
3CB1             ;  IN:  A = dividend
3CB1             ;       C  = divisor
3CB1             div8:
3CB1 D5                  PUSH  DE          ;11 11 save registers used
3CB2 C5                  PUSH  BC          ;11 22 save registers used
3CB3 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
3CB5 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
3CB7 5F                  LD    E,A         ; 4 38 E = T = dividend
3CB8 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
3CB9             div8_1:
3CB9 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
3CBB CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
3CBD CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
3CBF B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
3CC0 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
3CC2 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
3CC3 14                  INC   D           ;           8*4=32 354   Q[D]++;
3CC4             div8_2:           ;                      }
3CC4 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
3CC6 C1                  POP   BC          ;9        385 433
3CC7 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
3CC8 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
3CC9 D1                  POP   DE          ;9        402 450
3CCA C9                  RET               ;9        411 459
3CCB             ;****************
3CCB             ;div8_16
3CCB             ;8 by 16 bit unsigned division.
3CCB             ;  IN:  A = dividend
3CCB             ;       HL = divisor
3CCB             ;  OUT: A = quotient
3CCB             ;       C = remainder
3CCB             ;  USES:F(lags)
3CCB             ;  Size 13 bytes (plus dependency on div8)
3CCB             ;  Time 31 or between 436 and 484 cycles
3CCB             ;****************
3CCB             ;invariante betrekking:
3CCB             ; T = dividend
3CCB             ; D = divisor
3CCB             ; Q = quotient
3CCB             ; R = remainder
3CCB             ; T = QD + R
3CCB             ;pseudo code:
3CCB             ; if D >= 256 {
3CCB             ;   R = T
3CCB             ;   Q = 0
3CCB             ; } else {
3CCB             ;   R = T/D (using div8)
3CCB             ;   Q = T%D (using div8)
3CCB             ; }
3CCB             ;****************
3CCB             
3CCB             
3CCB             div8_16:
3CCB 4F                  LD    C,A         ;  4  4         save dividend(A) in C
3CCC 7C                  LD    A,H         ;  4  8         if D >= 256 {
3CCD B7                  OR    A,A         ;  4 12
3CCE 28 02               JR    Z,div8_161  ;  6 18  8  20
3CD0 AF                  XOR   A,A         ;  4 22           R = T;
3CD1 C9                  RET               ;  9 31           Q = 0;
3CD2             div8_161:                     ;               } else {
3CD2 79                  LD    A,C         ;        4  24    restore dividend into A
3CD3 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
3CD4 CD B1 3C            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
3CD7 C9                  RET               ; 9  436/484    }
3CD8             ;****************
3CD8             ;read
3CD8             ;read a 16 bit unsigned number from the input
3CD8             ;  IN:  none
3CD8             ;  OUT: HL = 16 bit unsigned number
3CD8             ;  USES:-
3CD8             ;****************
3CD8             read:
3CD8 F5                  PUSH  AF
3CD9 21 00 00            LD    HL,0        ;result = 0;
3CDC             read1:
3CDC CD 82 3B            CALL  getChar     ;check if a character is available.
3CDF 28 FB               JR    Z,read1     ;-no: wait for it.
3CE1 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
3CE3 28 0C               JR    Z,read2
3CE5 CD 1D 3C            CALL  mul16_10    ;result *= 10;
3CE8 D6 30               SUB   A,'0'       ;digit = char - '0';
3CEA 85                  ADD   A,L         ;result += digit;
3CEB 6F                  LD    L,A
3CEC 30 EE               JR    NC,read1     ;get next character
3CEE 24                  INC   H
3CEF 18 EB               JR    read1        ;get next character
3CF1             read2:
3CF1 F1                  POP   AF
3CF2 C9                  RET
3CF3             ;****************
3CF3             ;writeLineHL
3CF3             ;write a 16 bit unsigned number to the output, followed by a carriage return
3CF3             ;  IN:  HL = 16 bit unsigned number
3CF3             ;  OUT: none
3CF3             ;  USES:HL
3CF3             ;****************
3CF3             writeLineHL:
3CF3 CD FA 3C            CALL  writeHL
3CF6 CD C3 3B            CALL  putCRLF
3CF9 C9                  RET
3CFA             ;****************
3CFA             ;writeHL
3CFA             ;write a 16 bit unsigned number to the output
3CFA             ;  IN:  HL = 16 bit unsigned number
3CFA             ;  OUT: none
3CFA             ;  USES:HL
3CFA             ;****************
3CFA             writeHL:
3CFA C5                  PUSH  BC          ;save registers used
3CFB F5                  PUSH  AF
3CFC 06 00               LD    B,0         ;number of digits on stack
3CFE 7C                  LD    A,H         ;is HL=0?
3CFF B5                  OR    A,L
3D00 20 03               JR    NZ,writeHL1
3D02 04                  INC   B           ;write a single digit 0
3D03 18 0C               JR    writeHL3
3D05             writeHL1:
3D05 3E 0A               LD    A,10        ;divide HL by 10
3D07 CD A0 3C            CALL  div16_8
3D0A F5                  PUSH  AF          ;put remainder on stack
3D0B 04                  INC   B
3D0C 7C                  LD    A,H         ;is quotient 0?
3D0D B5                  OR    A,L
3D0E 20 F5               JR    NZ,writeHL1
3D10             writeHL2:
3D10 F1                  POP   AF          ;write digit
3D11             writeHL3:
3D11 C6 30               ADD   A,'0'
3D13 CD B6 3B            CALL  putChar
3D16 10 F8               DJNZ  writeHL2
3D18 F1                  POP   AF          ;restore registers used
3D19 C1                  POP   BC
3D1A C9                  RET
3D1B             ;****************
3D1B             ;writeLineA
3D1B             ;write an 8-bit unsigned number to the output, followed by a carriage return
3D1B             ;  IN:  A = 8-bit unsigned number
3D1B             ;  OUT: none
3D1B             ;  USES:none
3D1B             ;****************
3D1B             writeLineA:
3D1B CD 22 3D            CALL  writeA
3D1E CD C3 3B            CALL  putCRLF
3D21 C9                  RET
3D22             ;****************
3D22             ;writeA
3D22             ;write an 8-bit unsigned number to the output
3D22             ;  IN:  A = 8-bit unsigned number
3D22             ;  OUT: none
3D22             ;  USES:none
3D22             ;****************
3D22             writeA:
3D22 E5                  PUSH  HL          ;save registers used
3D23 26 00               LD    H,0
3D25 6F                  LD    L,A
3D26 CD FA 3C            CALL  writeHL
3D29 E1                  POP   HL
3D2A C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20E4 :
   L1000 = 2BBA :
   L1001 = 2BBD :
   L1002 = 2BC0 : 2BB5
   L1003 = 2BC3 :
   L1004 = 2BC6 :
   L1005 = 2BC6 :
   L1006 = 2BC6 : 2BBD
   L1007 = 2BC9 :
   L1008 = 2BCD :
   L1009 = 2BD6 :
    L101 = 20E7 :
   L1010 = 2BD8 :
   L1011 = 2BDF :
   L1012 = 2BE2 :
   L1013 = 2BE4 :
   L1014 = 2BE7 :
   L1015 = 2BEA : 2BDF
   L1016 = 2BED :
   L1017 = 2BF0 :
   L1018 = 2BF0 : 2BE7
   L1019 = 2BF3 :
    L102 = 20E7 :
   L1020 = 2BF7 :
   L1021 = 2BFE :
   L1022 = 2C04 :
   L1023 = 2C07 :
   L1024 = 2C09 :
   L1025 = 2C0C :
   L1026 = 2C0F : 2C04
   L1027 = 2C12 :
   L1028 = 2C15 :
   L1029 = 2C15 : 2C0C
    L103 = 20E7 :
   L1030 = 2C18 :
   L1031 = 2C1C :
   L1032 = 2C23 :
   L1033 = 2C29 :
   L1034 = 2C2C :
   L1035 = 2C2E :
   L1036 = 2C31 :
   L1037 = 2C34 : 2C29
   L1038 = 2C37 :
   L1039 = 2C3A :
    L104 = 20E7 : 20DE
   L1040 = 2C3A :
   L1041 = 2C3A :
   L1042 = 2C3A :
   L1043 = 2C3A :
   L1044 = 2C3A : 2C31
   L1045 = 2C3C :
   L1046 = 2C3E :
   L1047 = 2C40 :
   L1048 = 2C42 :
   L1049 = 2C45 :
    L105 = 20E9 :
   L1050 = 2C47 :
   L1051 = 2C4A :
   L1052 = 2C4D : 2C42
   L1053 = 2C50 :
   L1054 = 2C53 :
   L1055 = 2C53 : 2C4A
   L1056 = 2C55 :
   L1057 = 2C57 :
   L1058 = 2C59 :
   L1059 = 2C5B :
    L106 = 20EC :
   L1060 = 2C5E :
   L1061 = 2C60 :
   L1062 = 2C63 :
   L1063 = 2C66 : 2C5B
   L1064 = 2C69 :
   L1065 = 2C6C :
   L1066 = 2C6C : 2C63
   L1067 = 2C6E :
   L1068 = 2C70 :
   L1069 = 2C72 :
    L107 = 20F9 :
   L1070 = 2C74 :
   L1071 = 2C77 :
   L1072 = 2C79 :
   L1073 = 2C7C :
   L1074 = 2C7F : 2C74
   L1075 = 2C82 :
   L1076 = 2C85 :
   L1077 = 2C85 :
   L1078 = 2C85 : 2C7C
   L1079 = 2C88 :
    L108 = 20FB :
   L1080 = 2C8C :
   L1081 = 2C99 :
   L1082 = 2C9F :
   L1083 = 2CA2 :
   L1084 = 2CA4 :
   L1085 = 2CA7 :
   L1086 = 2CAA : 2C9F
   L1087 = 2CAD :
   L1088 = 2CB0 :
   L1089 = 2CB0 : 2CA7
    L109 = 2102 :
   L1090 = 2CB3 :
   L1091 = 2CB7 :
   L1092 = 2CC2 :
   L1093 = 2CC8 :
   L1094 = 2CCB :
   L1095 = 2CCD :
   L1096 = 2CD0 :
   L1097 = 2CD3 : 2CC8
   L1098 = 2CD6 :
   L1099 = 2CD9 :
     L11 = 2013 :
    L110 = 2105 :
   L1100 = 2CD9 : 2CD0
   L1101 = 2CDC :
   L1102 = 2CE0 :
   L1103 = 2CED :
   L1104 = 2CF3 :
   L1105 = 2CF6 :
   L1106 = 2CF8 :
   L1107 = 2CFB :
   L1108 = 2CFE : 2CF3
   L1109 = 2D01 :
    L111 = 2107 :
   L1110 = 2D04 :
   L1111 = 2D04 :
   L1112 = 2D04 : 2CFB
   L1113 = 2D06 :
   L1114 = 2D08 :
   L1115 = 2D0B :
   L1116 = 2D18 :
   L1117 = 2D1A :
   L1118 = 2D21 :
   L1119 = 2D24 :
    L112 = 210A :
   L1120 = 2D26 :
   L1121 = 2D29 :
   L1122 = 2D2C : 2D21
   L1123 = 2D2F :
   L1124 = 2D32 :
   L1125 = 2D32 : 2D29
   L1126 = 2D34 :
   L1127 = 2D36 :
   L1128 = 2D39 :
   L1129 = 2D44 :
    L113 = 210D : 2102
   L1130 = 2D4A :
   L1131 = 2D4D :
   L1132 = 2D4F :
   L1133 = 2D52 :
   L1134 = 2D55 : 2D4A
   L1135 = 2D58 :
   L1136 = 2D5B :
   L1137 = 2D5B : 2D52
   L1138 = 2D5D :
   L1139 = 2D5F :
    L114 = 2110 :
   L1140 = 2D62 :
   L1141 = 2D6F :
   L1142 = 2D75 :
   L1143 = 2D78 :
   L1144 = 2D7A :
   L1145 = 2D7D :
   L1146 = 2D80 : 2D75
   L1147 = 2D83 :
   L1148 = 2D86 :
   L1149 = 2D86 :
    L115 = 2113 :
   L1150 = 2D86 : 2D7D
   L1151 = 2D89 :
   L1152 = 2D8D :
   L1153 = 2D95 :
   L1154 = 2D97 :
   L1155 = 2D9E :
   L1156 = 2DA1 :
   L1157 = 2DA3 :
   L1158 = 2DA6 :
   L1159 = 2DA9 : 2D9E
    L116 = 2113 : 210A
   L1160 = 2DAC :
   L1161 = 2DAF :
   L1162 = 2DAF : 2DA6
   L1163 = 2DB2 :
   L1164 = 2DB6 :
   L1165 = 2DC1 :
   L1166 = 2DC7 :
   L1167 = 2DCA :
   L1168 = 2DCC :
   L1169 = 2DCF :
    L117 = 2115 :
   L1170 = 2DD2 : 2DC7
   L1171 = 2DD5 :
   L1172 = 2DD8 :
   L1173 = 2DD8 : 2DCF
   L1174 = 2DDB :
   L1175 = 2DDF :
   L1176 = 2DEC :
   L1177 = 2DF2 :
   L1178 = 2DF5 :
   L1179 = 2DF7 :
    L118 = 2118 :
   L1180 = 2DFA :
   L1181 = 2DFD : 2DF2
   L1182 = 2E00 :
   L1183 = 2E03 :
   L1184 = 2E03 :
   L1185 = 2E03 :
   L1186 = 2E03 :
   L1187 = 2E03 :
   L1188 = 2E03 : 2DFA
   L1189 = 2E06 :
    L119 = 2123 :
   L1190 = 2E08 :
   L1191 = 2E0A :
   L1192 = 2E0D :
   L1193 = 2E0F :
   L1194 = 2E12 :
   L1195 = 2E15 : 2E0A
   L1196 = 2E18 :
   L1197 = 2E1B :
   L1198 = 2E1B : 2E12
   L1199 = 2E1E :
     L12 = 2013 :
    L120 = 2129 :
   L1200 = 2E20 :
   L1201 = 2E22 :
   L1202 = 2E25 :
   L1203 = 2E27 :
   L1204 = 2E2A :
   L1205 = 2E2D : 2E22
   L1206 = 2E30 :
   L1207 = 2E33 :
   L1208 = 2E33 : 2E2A
   L1209 = 2E36 :
    L121 = 212C :
   L1210 = 2E38 :
   L1211 = 2E3A :
   L1212 = 2E3D :
   L1213 = 2E3F :
   L1214 = 2E42 :
   L1215 = 2E45 : 2E3A
   L1216 = 2E48 :
   L1217 = 2E4B :
   L1218 = 2E4B :
   L1219 = 2E4B : 2E42
    L122 = 212E :
   L1220 = 2E4E :
   L1221 = 2E5B :
   L1222 = 2E61 :
   L1223 = 2E64 :
   L1224 = 2E66 :
   L1225 = 2E69 :
   L1226 = 2E6C : 2E61
   L1227 = 2E6F :
   L1228 = 2E72 :
   L1229 = 2E72 : 2E69
    L123 = 2131 :
   L1230 = 2E75 :
   L1231 = 2E80 :
   L1232 = 2E86 :
   L1233 = 2E89 :
   L1234 = 2E8B :
   L1235 = 2E8E :
   L1236 = 2E91 : 2E86
   L1237 = 2E94 :
   L1238 = 2E97 :
   L1239 = 2E97 : 2E8E
    L124 = 2134 : 2129
   L1240 = 2E9A :
   L1241 = 2EA7 :
   L1242 = 2EAD :
   L1243 = 2EB0 :
   L1244 = 2EB2 :
   L1245 = 2EB5 :
   L1246 = 2EB8 : 2EAD
   L1247 = 2EBB :
   L1248 = 2EBE :
   L1249 = 2EBE :
    L125 = 2137 :
   L1250 = 2EBE : 2EB5
   L1251 = 2EC1 :
   L1252 = 2EC4 :
   L1253 = 2ED1 :
   L1254 = 2ED3 :
   L1255 = 2EDA :
   L1256 = 2EDD :
   L1257 = 2EDF :
   L1258 = 2EE2 :
   L1259 = 2EE5 : 2EDA
    L126 = 213A :
   L1260 = 2EE8 :
   L1261 = 2EEB :
   L1262 = 2EEB : 2EE2
   L1263 = 2EEE :
   L1264 = 2EF1 :
   L1265 = 2EFC :
   L1266 = 2F02 :
   L1267 = 2F05 :
   L1268 = 2F07 :
   L1269 = 2F0A :
    L127 = 213A : 2131
   L1270 = 2F0D : 2F02
   L1271 = 2F10 :
   L1272 = 2F13 :
   L1273 = 2F13 : 2F0A
   L1274 = 2F16 :
   L1275 = 2F19 :
   L1276 = 2F26 :
   L1277 = 2F2C :
   L1278 = 2F2F :
   L1279 = 2F31 :
    L128 = 213C :
   L1280 = 2F34 :
   L1281 = 2F37 : 2F2C
   L1282 = 2F3A :
   L1283 = 2F3D :
   L1284 = 2F3D :
   L1285 = 2F3D : 2F34
   L1286 = 2F40 :
   L1287 = 2F48 :
   L1288 = 2F4A :
   L1289 = 2F51 :
    L129 = 213F :
   L1290 = 2F54 :
   L1291 = 2F56 :
   L1292 = 2F59 :
   L1293 = 2F5C : 2F51
   L1294 = 2F5F :
   L1295 = 2F62 :
   L1296 = 2F62 : 2F59
   L1297 = 2F65 :
   L1298 = 2F70 :
   L1299 = 2F76 :
     L13 = 2016 :
    L130 = 214C :
   L1300 = 2F79 :
   L1301 = 2F7B :
   L1302 = 2F7E :
   L1303 = 2F81 : 2F76
   L1304 = 2F84 :
   L1305 = 2F87 :
   L1306 = 2F87 : 2F7E
   L1307 = 2F8A :
   L1308 = 2F97 :
   L1309 = 2F9D :
    L131 = 2152 :
   L1310 = 2FA0 :
   L1311 = 2FA2 :
   L1312 = 2FA5 :
   L1313 = 2FA8 : 2F9D
   L1314 = 2FAB :
   L1315 = 2FAE :
   L1316 = 2FAE :
   L1317 = 2FAE :
   L1318 = 2FAE :
   L1319 = 2FAE :
    L132 = 2155 :
   L1320 = 2FAE : 2FA5
   L1321 = 2FB1 :
   L1322 = 2FB4 :
   L1323 = 2FB6 :
   L1324 = 2FB8 :
   L1325 = 2FBA :
   L1326 = 2FBD :
   L1327 = 2FBF :
   L1328 = 2FC2 :
   L1329 = 2FC5 : 2FBA
    L133 = 2157 :
   L1330 = 2FC8 :
   L1331 = 2FCB :
   L1332 = 2FCB : 2FC2
   L1333 = 2FCE :
   L1334 = 2FD1 :
   L1335 = 2FD3 :
   L1336 = 2FD5 :
   L1337 = 2FD7 :
   L1338 = 2FDA :
   L1339 = 2FDC :
    L134 = 215A :
   L1340 = 2FDF :
   L1341 = 2FE2 : 2FD7
   L1342 = 2FE5 :
   L1343 = 2FE8 :
   L1344 = 2FE8 : 2FDF
   L1345 = 2FEB :
   L1346 = 2FEE :
   L1347 = 2FF0 :
   L1348 = 2FF2 :
   L1349 = 2FF4 :
    L135 = 215D : 2152
   L1350 = 2FF7 :
   L1351 = 2FF9 :
   L1352 = 2FFC :
   L1353 = 2FFF : 2FF4
   L1354 = 3002 :
   L1355 = 3005 :
   L1356 = 3005 :
   L1357 = 3005 : 2FFC
   L1358 = 3008 :
   L1359 = 300C :
    L136 = 2160 :
   L1360 = 3010 :
   L1361 = 301B :
   L1362 = 3021 :
   L1363 = 3024 :
   L1364 = 3026 :
   L1365 = 3029 :
   L1366 = 302C : 3021
   L1367 = 302F :
   L1368 = 3032 :
   L1369 = 3032 : 3029
    L137 = 2163 :
   L1370 = 3035 :
   L1371 = 3039 :
   L1372 = 303D :
   L1373 = 3046 :
   L1374 = 304C :
   L1375 = 304F :
   L1376 = 3051 :
   L1377 = 3054 :
   L1378 = 3057 : 304C
   L1379 = 305A :
    L138 = 2163 :
   L1380 = 305D :
   L1381 = 305D : 3054
   L1382 = 3060 :
   L1383 = 3064 :
   L1384 = 3068 :
   L1385 = 3073 :
   L1386 = 3079 :
   L1387 = 307C :
   L1388 = 307E :
   L1389 = 3081 :
    L139 = 2163 : 215A
   L1390 = 3084 : 3079
   L1391 = 3087 :
   L1392 = 308A :
   L1393 = 308A :
   L1394 = 308A : 3081
   L1395 = 308D :
   L1396 = 3090 :
   L1397 = 3094 :
   L1398 = 309A :
   L1399 = 309C :
     L14 = 2019 :
    L140 = 2166 :
   L1400 = 30A3 :
   L1401 = 30A6 :
   L1402 = 30A8 :
   L1403 = 30AB :
   L1404 = 30AE : 30A3
   L1405 = 30B1 :
   L1406 = 30B4 :
   L1407 = 30B4 : 30AB
   L1408 = 30B7 :
   L1409 = 30BA :
    L141 = 216E :
   L1410 = 30BE :
   L1411 = 30C0 :
   L1412 = 30C6 :
   L1413 = 30C9 :
   L1414 = 30CB :
   L1415 = 30CE :
   L1416 = 30D1 : 30C6
   L1417 = 30D4 :
   L1418 = 30D7 :
   L1419 = 30D7 : 30CE
    L142 = 2170 :
   L1420 = 30DA :
   L1421 = 30DD :
   L1422 = 30E1 :
   L1423 = 30E3 :
   L1424 = 30E9 :
   L1425 = 30EC :
   L1426 = 30EE :
   L1427 = 30F1 :
   L1428 = 30F4 : 30E9
   L1429 = 30F7 :
    L143 = 2177 :
   L1430 = 30FA :
   L1431 = 30FA :
   L1432 = 30FA : 30F1
   L1433 = 30FD :
   L1434 = 30FF :
   L1435 = 3101 :
   L1436 = 3107 :
   L1437 = 3109 :
   L1438 = 3110 :
   L1439 = 3113 :
    L144 = 217A :
   L1440 = 3115 :
   L1441 = 3118 :
   L1442 = 311B : 3110
   L1443 = 311E :
   L1444 = 3121 :
   L1445 = 3121 : 3118
   L1446 = 3124 :
   L1447 = 3126 :
   L1448 = 3128 :
   L1449 = 312A :
    L145 = 217C :
   L1450 = 3130 :
   L1451 = 3133 :
   L1452 = 3135 :
   L1453 = 3138 :
   L1454 = 313B : 3130
   L1455 = 313E :
   L1456 = 3141 :
   L1457 = 3141 : 3138
   L1458 = 3144 :
   L1459 = 3146 :
    L146 = 217F :
   L1460 = 3148 :
   L1461 = 314A :
   L1462 = 3150 :
   L1463 = 3153 :
   L1464 = 3155 :
   L1465 = 3158 :
   L1466 = 315B : 3150
   L1467 = 315E :
   L1468 = 3161 :
   L1469 = 3161 :
    L147 = 2182 : 2177
   L1470 = 3161 :
   L1471 = 3161 :
   L1472 = 3161 :
   L1473 = 3161 : 3158
   L1474 = 3164 :
   L1475 = 3169 :
   L1476 = 316B :
   L1477 = 316E :
   L1478 = 3170 :
   L1479 = 3173 :
    L148 = 2185 :
   L1480 = 3176 : 316B
   L1481 = 3179 :
   L1482 = 317C :
   L1483 = 317C : 3173
   L1484 = 317F :
   L1485 = 3184 :
   L1486 = 3186 :
   L1487 = 3189 :
   L1488 = 318B :
   L1489 = 318E :
    L149 = 2188 :
   L1490 = 3191 : 3186
   L1491 = 3194 :
   L1492 = 3197 :
   L1493 = 3197 : 318E
   L1494 = 319A :
   L1495 = 319F :
   L1496 = 31A1 :
   L1497 = 31A4 :
   L1498 = 31A6 :
   L1499 = 31A9 :
     L15 = 2019 :
    L150 = 2188 : 217F
   L1500 = 31AC : 31A1
   L1501 = 31AF :
   L1502 = 31B2 :
   L1503 = 31B2 :
   L1504 = 31B2 : 31A9
   L1505 = 31B5 :
   L1506 = 31C3 :
   L1507 = 31C9 :
   L1508 = 31CC :
   L1509 = 31CE :
    L151 = 218B :
   L1510 = 31D1 :
   L1511 = 31D4 : 31C9
   L1512 = 31D7 :
   L1513 = 31DA :
   L1514 = 31DA : 31D1
   L1515 = 31DD :
   L1516 = 31E9 :
   L1517 = 31EF :
   L1518 = 31F2 :
   L1519 = 31F4 :
    L152 = 2196 :
   L1520 = 31F7 :
   L1521 = 31FA : 31EF
   L1522 = 31FD :
   L1523 = 3200 :
   L1524 = 3200 : 31F7
   L1525 = 3203 :
   L1526 = 3211 :
   L1527 = 3217 :
   L1528 = 321A :
   L1529 = 321C :
    L153 = 219C :
   L1530 = 321F :
   L1531 = 3222 : 3217
   L1532 = 3225 :
   L1533 = 3228 :
   L1534 = 3228 :
   L1535 = 3228 : 321F
   L1536 = 322B :
   L1537 = 322E :
   L1538 = 323C :
   L1539 = 323E :
    L154 = 219F :
   L1540 = 3245 :
   L1541 = 3248 :
   L1542 = 324A :
   L1543 = 324D :
   L1544 = 3250 : 3245
   L1545 = 3253 :
   L1546 = 3256 :
   L1547 = 3256 : 324D
   L1548 = 3259 :
   L1549 = 325C :
    L155 = 21A1 :
   L1550 = 3268 :
   L1551 = 326E :
   L1552 = 3271 :
   L1553 = 3273 :
   L1554 = 3276 :
   L1555 = 3279 : 326E
   L1556 = 327C :
   L1557 = 327F :
   L1558 = 327F : 3276
   L1559 = 3282 :
    L156 = 21A4 :
   L1560 = 3285 :
   L1561 = 3293 :
   L1562 = 3299 :
   L1563 = 329C :
   L1564 = 329E :
   L1565 = 32A1 :
   L1566 = 32A4 : 3299
   L1567 = 32A7 :
   L1568 = 32AA :
   L1569 = 32AA :
    L157 = 21A7 : 219C
   L1570 = 32AA : 32A1
   L1571 = 32AD :
   L1572 = 32B6 :
   L1573 = 32B8 :
   L1574 = 32BF :
   L1575 = 32C2 :
   L1576 = 32C4 :
   L1577 = 32C7 :
   L1578 = 32CA : 32BF
   L1579 = 32CD :
    L158 = 21AA :
   L1580 = 32D0 :
   L1581 = 32D0 : 32C7
   L1582 = 32D3 :
   L1583 = 32DA :
   L1584 = 32E0 :
   L1585 = 32E3 :
   L1586 = 32E5 :
   L1587 = 32E8 :
   L1588 = 32EB : 32E0
   L1589 = 32EE :
    L159 = 21AD :
   L1590 = 32F1 :
   L1591 = 32F1 : 32E8
   L1592 = 32F4 :
   L1593 = 32FB :
   L1594 = 3301 :
   L1595 = 3304 :
   L1596 = 3306 :
   L1597 = 3309 :
   L1598 = 330C : 3301
   L1599 = 330F :
     L16 = 201C :
    L160 = 21AD : 21A4
   L1600 = 3312 :
   L1601 = 3312 :
   L1602 = 3312 :
   L1603 = 3312 :
   L1604 = 3312 :
   L1605 = 3312 : 3309
   L1606 = 3315 :
   L1607 = 3317 :
   L1608 = 3319 :
   L1609 = 331C :
    L161 = 21B0 :
   L1610 = 331E :
   L1611 = 3321 :
   L1612 = 3324 : 3319
   L1613 = 3327 :
   L1614 = 332A :
   L1615 = 332A : 3321
   L1616 = 332D :
   L1617 = 332F :
   L1618 = 3331 :
   L1619 = 3334 :
    L162 = 21BD :
   L1620 = 3336 :
   L1621 = 3339 :
   L1622 = 333C : 3331
   L1623 = 333F :
   L1624 = 3342 :
   L1625 = 3342 : 3339
   L1626 = 3345 :
   L1627 = 3347 :
   L1628 = 3349 :
   L1629 = 334C :
    L163 = 21C3 :
   L1630 = 334E :
   L1631 = 3351 :
   L1632 = 3354 : 3349
   L1633 = 3357 :
   L1634 = 335A :
   L1635 = 335A :
   L1636 = 335A : 3351
   L1637 = 335D :
   L1638 = 336A :
   L1639 = 3370 :
    L164 = 21C6 :
   L1640 = 3373 :
   L1641 = 3375 :
   L1642 = 3378 :
   L1643 = 337B : 3370
   L1644 = 337E :
   L1645 = 3381 :
   L1646 = 3381 : 3378
   L1647 = 3384 :
   L1648 = 338F :
   L1649 = 3395 :
    L165 = 21C8 :
   L1650 = 3398 :
   L1651 = 339A :
   L1652 = 339D :
   L1653 = 33A0 : 3395
   L1654 = 33A3 :
   L1655 = 33A6 :
   L1656 = 33A6 : 339D
   L1657 = 33A9 :
   L1658 = 33B6 :
   L1659 = 33BC :
    L166 = 21CB :
   L1660 = 33BF :
   L1661 = 33C1 :
   L1662 = 33C4 :
   L1663 = 33C7 : 33BC
   L1664 = 33CA :
   L1665 = 33CD :
   L1666 = 33CD :
   L1667 = 33CD : 33C4
   L1668 = 33D0 :
   L1669 = 33D3 :
    L167 = 21CE : 21C3
   L1670 = 33E0 :
   L1671 = 33E2 :
   L1672 = 33E9 :
   L1673 = 33EC :
   L1674 = 33EE :
   L1675 = 33F1 :
   L1676 = 33F4 : 33E9
   L1677 = 33F7 :
   L1678 = 33FA :
   L1679 = 33FA : 33F1
    L168 = 21D1 :
   L1680 = 33FD :
   L1681 = 3400 :
   L1682 = 340B :
   L1683 = 3411 :
   L1684 = 3414 :
   L1685 = 3416 :
   L1686 = 3419 :
   L1687 = 341C : 3411
   L1688 = 341F :
   L1689 = 3422 :
    L169 = 21D4 :
   L1690 = 3422 : 3419
   L1691 = 3425 :
   L1692 = 3428 :
   L1693 = 3435 :
   L1694 = 343B :
   L1695 = 343E :
   L1696 = 3440 :
   L1697 = 3443 :
   L1698 = 3446 : 343B
   L1699 = 3449 :
     L17 = 201F :
    L170 = 21D4 :
   L1700 = 344C :
   L1701 = 344C :
   L1702 = 344C : 3443
   L1703 = 344F :
   L1704 = 3457 :
   L1705 = 3459 :
   L1706 = 3460 :
   L1707 = 3463 :
   L1708 = 3465 :
   L1709 = 3468 :
    L171 = 21D4 :
   L1710 = 346B : 3460
   L1711 = 346E :
   L1712 = 3471 :
   L1713 = 3471 : 3468
   L1714 = 3474 :
   L1715 = 347F :
   L1716 = 3485 :
   L1717 = 3488 :
   L1718 = 348A :
   L1719 = 348D :
    L172 = 21D4 :
   L1720 = 3490 : 3485
   L1721 = 3493 :
   L1722 = 3496 :
   L1723 = 3496 : 348D
   L1724 = 3499 :
   L1725 = 34A6 :
   L1726 = 34AC :
   L1727 = 34AF :
   L1728 = 34B1 :
   L1729 = 34B4 :
    L173 = 21D4 :
   L1730 = 34B7 : 34AC
   L1731 = 34BA :
   L1732 = 34BD :
   L1733 = 34BD :
   L1734 = 34BD :
   L1735 = 34BD :
   L1736 = 34BD :
   L1737 = 34BD : 34B4
   L1738 = 34C0 :
   L1739 = 34C2 :
    L174 = 21D4 : 21CB
   L1740 = 34C4 :
   L1741 = 34C7 :
   L1742 = 34C9 :
   L1743 = 34CC :
   L1744 = 34CF : 34C4
   L1745 = 34D2 :
   L1746 = 34D5 :
   L1747 = 34D5 : 34CC
   L1748 = 34D8 :
   L1749 = 34DA :
    L175 = 21D6 :
   L1750 = 34DC :
   L1751 = 34DF :
   L1752 = 34E1 :
   L1753 = 34E4 :
   L1754 = 34E7 : 34DC
   L1755 = 34EA :
   L1756 = 34ED :
   L1757 = 34ED : 34E4
   L1758 = 34F0 :
   L1759 = 34F2 :
    L176 = 21D9 :
   L1760 = 34F4 :
   L1761 = 34F7 :
   L1762 = 34F9 :
   L1763 = 34FC :
   L1764 = 34FF : 34F4
   L1765 = 3502 :
   L1766 = 3505 :
   L1767 = 3505 :
   L1768 = 3505 : 34FC
   L1769 = 3508 :
    L177 = 21DB :
   L1770 = 3515 :
   L1771 = 351B :
   L1772 = 351E :
   L1773 = 3520 :
   L1774 = 3523 :
   L1775 = 3526 : 351B
   L1776 = 3529 :
   L1777 = 352C :
   L1778 = 352C : 3523
   L1779 = 352F :
    L178 = 21DD :
   L1780 = 353A :
   L1781 = 3540 :
   L1782 = 3543 :
   L1783 = 3545 :
   L1784 = 3548 :
   L1785 = 354B : 3540
   L1786 = 354E :
   L1787 = 3551 :
   L1788 = 3551 : 3548
   L1789 = 3554 :
    L179 = 21DF :
   L1790 = 3561 :
   L1791 = 3567 :
   L1792 = 356A :
   L1793 = 356C :
   L1794 = 356F :
   L1795 = 3572 : 3567
   L1796 = 3575 :
   L1797 = 3578 :
   L1798 = 3578 :
   L1799 = 3578 : 356F
     L18 = 2022 :
    L180 = 21E2 :
   L1800 = 357B :
   L1801 = 357E :
   L1802 = 358B :
   L1803 = 358D :
   L1804 = 3594 :
   L1805 = 3597 :
   L1806 = 3599 :
   L1807 = 359C :
   L1808 = 359F : 3594
   L1809 = 35A2 :
    L181 = 21E4 :
   L1810 = 35A5 :
   L1811 = 35A5 : 359C
   L1812 = 35A8 :
   L1813 = 35AB :
   L1814 = 35B6 :
   L1815 = 35BC :
   L1816 = 35BF :
   L1817 = 35C1 :
   L1818 = 35C4 :
   L1819 = 35C7 : 35BC
    L182 = 21E7 :
   L1820 = 35CA :
   L1821 = 35CD :
   L1822 = 35CD : 35C4
   L1823 = 35D0 :
   L1824 = 35D3 :
   L1825 = 35E0 :
   L1826 = 35E6 :
   L1827 = 35E9 :
   L1828 = 35EB :
   L1829 = 35EE :
    L183 = 21EA : 21DF
   L1830 = 35F1 : 35E6
   L1831 = 35F4 :
   L1832 = 35F7 :
   L1833 = 35F7 :
   L1834 = 35F7 : 35EE
   L1835 = 35FA :
   L1836 = 3602 :
   L1837 = 3604 :
   L1838 = 360B :
   L1839 = 360E :
    L184 = 21ED :
   L1840 = 3610 :
   L1841 = 3613 :
   L1842 = 3616 : 360B
   L1843 = 3619 :
   L1844 = 361C :
   L1845 = 361C : 3613
   L1846 = 361F :
   L1847 = 362A :
   L1848 = 3630 :
   L1849 = 3633 :
    L185 = 21F0 :
   L1850 = 3635 :
   L1851 = 3638 :
   L1852 = 363B : 3630
   L1853 = 363E :
   L1854 = 3641 :
   L1855 = 3641 : 3638
   L1856 = 3644 :
   L1857 = 3651 :
   L1858 = 3657 :
   L1859 = 365A :
    L186 = 21F0 : 21E7
   L1860 = 365C :
   L1861 = 365F :
   L1862 = 3662 : 3657
   L1863 = 3665 :
   L1864 = 3668 :
   L1865 = 3668 :
   L1866 = 3668 :
   L1867 = 3668 :
   L1868 = 3668 :
   L1869 = 3668 : 365F
    L187 = 21F2 :
   L1870 = 366B :
   L1871 = 366E :
   L1872 = 3670 :
   L1873 = 3672 :
   L1874 = 3674 :
   L1875 = 3677 :
   L1876 = 3679 :
   L1877 = 367C :
   L1878 = 367F : 3674
   L1879 = 3682 :
    L188 = 21F5 :
   L1880 = 3685 :
   L1881 = 3685 : 367C
   L1882 = 3688 :
   L1883 = 368B :
   L1884 = 368D :
   L1885 = 368F :
   L1886 = 3691 :
   L1887 = 3694 :
   L1888 = 3696 :
   L1889 = 3699 :
    L189 = 21F7 :
   L1890 = 369C : 3691
   L1891 = 369F :
   L1892 = 36A2 :
   L1893 = 36A2 : 3699
   L1894 = 36A5 :
   L1895 = 36A8 :
   L1896 = 36AA :
   L1897 = 36AC :
   L1898 = 36AE :
   L1899 = 36B1 :
     L19 = 2022 :
    L190 = 21F9 :
   L1900 = 36B3 :
   L1901 = 36B6 :
   L1902 = 36B9 : 36AE
   L1903 = 36BC :
   L1904 = 36BF :
   L1905 = 36BF :
   L1906 = 36BF : 36B6
   L1907 = 36C2 :
   L1908 = 36C6 :
   L1909 = 36CA :
    L191 = 21FB :
   L1910 = 36D5 :
   L1911 = 36DB :
   L1912 = 36DE :
   L1913 = 36E0 :
   L1914 = 36E3 :
   L1915 = 36E6 : 36DB
   L1916 = 36E9 :
   L1917 = 36EC :
   L1918 = 36EC : 36E3
   L1919 = 36EF :
    L192 = 21FE :
   L1920 = 36F3 :
   L1921 = 36F7 :
   L1922 = 3700 :
   L1923 = 3706 :
   L1924 = 3709 :
   L1925 = 370B :
   L1926 = 370E :
   L1927 = 3711 : 3706
   L1928 = 3714 :
   L1929 = 3717 :
    L193 = 2200 :
   L1930 = 3717 : 370E
   L1931 = 371A :
   L1932 = 371E :
   L1933 = 3722 :
   L1934 = 372D :
   L1935 = 3733 :
   L1936 = 3736 :
   L1937 = 3738 :
   L1938 = 373B :
   L1939 = 373E : 3733
    L194 = 2203 :
   L1940 = 3741 :
   L1941 = 3744 :
   L1942 = 3744 :
   L1943 = 3744 : 373B
   L1944 = 3747 :
   L1945 = 374A :
   L1946 = 374E :
   L1947 = 3754 :
   L1948 = 3756 :
   L1949 = 375D :
    L195 = 2206 : 21FB
   L1950 = 3760 :
   L1951 = 3762 :
   L1952 = 3765 :
   L1953 = 3768 : 375D
   L1954 = 376B :
   L1955 = 376E :
   L1956 = 376E : 3765
   L1957 = 3771 :
   L1958 = 3774 :
   L1959 = 3778 :
    L196 = 2209 :
   L1960 = 377A :
   L1961 = 3780 :
   L1962 = 3783 :
   L1963 = 3785 :
   L1964 = 3788 :
   L1965 = 378B : 3780
   L1966 = 378E :
   L1967 = 3791 :
   L1968 = 3791 : 3788
   L1969 = 3794 :
    L197 = 220C :
   L1970 = 3797 :
   L1971 = 379B :
   L1972 = 379D :
   L1973 = 37A3 :
   L1974 = 37A6 :
   L1975 = 37A8 :
   L1976 = 37AB :
   L1977 = 37AE : 37A3
   L1978 = 37B1 :
   L1979 = 37B4 :
    L198 = 220C : 2203
   L1980 = 37B4 :
   L1981 = 37B4 : 37AB
   L1982 = 37B7 :
   L1983 = 37B9 :
   L1984 = 37BB :
   L1985 = 37C1 :
   L1986 = 37C3 :
   L1987 = 37CA :
   L1988 = 37CD :
   L1989 = 37CF :
    L199 = 220E :
   L1990 = 37D2 :
   L1991 = 37D5 : 37CA
   L1992 = 37D8 :
   L1993 = 37DB :
   L1994 = 37DB : 37D2
   L1995 = 37DE :
   L1996 = 37E0 :
   L1997 = 37E2 :
   L1998 = 37E4 :
   L1999 = 37EA :
      L2 = 2009 :
     L20 = 2022 :
    L200 = 2211 :
   L2000 = 37ED :
   L2001 = 37EF :
   L2002 = 37F2 :
   L2003 = 37F5 : 37EA
   L2004 = 37F8 :
   L2005 = 37FB :
   L2006 = 37FB : 37F2
   L2007 = 37FE :
   L2008 = 3800 :
   L2009 = 3802 :
    L201 = 2213 :
   L2010 = 3804 :
   L2011 = 380A :
   L2012 = 380D :
   L2013 = 380F :
   L2014 = 3812 :
   L2015 = 3815 : 380A
   L2016 = 3818 :
   L2017 = 381B :
   L2018 = 381B :
   L2019 = 381B :
    L202 = 2215 :
   L2020 = 381B :
   L2021 = 381B :
   L2022 = 381B : 3812
   L2023 = 381E :
   L2024 = 3823 :
   L2025 = 3825 :
   L2026 = 3828 :
   L2027 = 382A :
   L2028 = 382D :
   L2029 = 3830 : 3825
    L203 = 2217 :
   L2030 = 3833 :
   L2031 = 3836 :
   L2032 = 3836 : 382D
   L2033 = 3839 :
   L2034 = 383E :
   L2035 = 3840 :
   L2036 = 3843 :
   L2037 = 3845 :
   L2038 = 3848 :
   L2039 = 384B : 3840
    L204 = 221A :
   L2040 = 384E :
   L2041 = 3851 :
   L2042 = 3851 : 3848
   L2043 = 3854 :
   L2044 = 3859 :
   L2045 = 385B :
   L2046 = 385E :
   L2047 = 3860 :
   L2048 = 3863 :
   L2049 = 3866 : 385B
    L205 = 221C :
   L2050 = 3869 :
   L2051 = 386C :
   L2052 = 386C :
   L2053 = 386C : 3863
   L2054 = 386F :
   L2055 = 387D :
   L2056 = 3883 :
   L2057 = 3886 :
   L2058 = 3888 :
   L2059 = 388B :
    L206 = 221F :
   L2060 = 388E : 3883
   L2061 = 3891 :
   L2062 = 3894 :
   L2063 = 3894 : 388B
   L2064 = 3897 :
   L2065 = 38A3 :
   L2066 = 38A9 :
   L2067 = 38AC :
   L2068 = 38AE :
   L2069 = 38B1 :
    L207 = 2222 : 2217
   L2070 = 38B4 : 38A9
   L2071 = 38B7 :
   L2072 = 38BA :
   L2073 = 38BA : 38B1
   L2074 = 38BD :
   L2075 = 38CB :
   L2076 = 38D1 :
   L2077 = 38D4 :
   L2078 = 38D6 :
   L2079 = 38D9 :
    L208 = 2225 :
   L2080 = 38DC : 38D1
   L2081 = 38DF :
   L2082 = 38E2 :
   L2083 = 38E2 :
   L2084 = 38E2 : 38D9
   L2085 = 38E5 :
   L2086 = 38E8 :
   L2087 = 38F6 :
   L2088 = 38F8 :
   L2089 = 38FF :
    L209 = 2228 :
   L2090 = 3902 :
   L2091 = 3904 :
   L2092 = 3907 :
   L2093 = 390A : 38FF
   L2094 = 390D :
   L2095 = 3910 :
   L2096 = 3910 : 3907
   L2097 = 3913 :
   L2098 = 3916 :
   L2099 = 3922 :
     L21 = 2022 :
    L210 = 2228 :
   L2100 = 3928 :
   L2101 = 392B :
   L2102 = 392D :
   L2103 = 3930 :
   L2104 = 3933 : 3928
   L2105 = 3936 :
   L2106 = 3939 :
   L2107 = 3939 : 3930
   L2108 = 393C :
   L2109 = 393F :
    L211 = 2228 : 221F
   L2110 = 394D :
   L2111 = 3953 :
   L2112 = 3956 :
   L2113 = 3958 :
   L2114 = 395B :
   L2115 = 395E : 3953
   L2116 = 3961 :
   L2117 = 3964 :
   L2118 = 3964 :
   L2119 = 3964 : 395B
    L212 = 222B :
   L2120 = 3967 :
   L2121 = 3970 :
   L2122 = 3972 :
   L2123 = 3979 :
   L2124 = 397C :
   L2125 = 397E :
   L2126 = 3981 :
   L2127 = 3984 : 3979
   L2128 = 3987 :
   L2129 = 398A :
    L213 = 222F :
   L2130 = 398A : 3981
   L2131 = 398D :
   L2132 = 3994 :
   L2133 = 399A :
   L2134 = 399D :
   L2135 = 399F :
   L2136 = 39A2 :
   L2137 = 39A5 : 399A
   L2138 = 39A8 :
   L2139 = 39AB :
    L214 = 2233 :
   L2140 = 39AB : 39A2
   L2141 = 39AE :
   L2142 = 39B5 :
   L2143 = 39BB :
   L2144 = 39BE :
   L2145 = 39C0 :
   L2146 = 39C3 :
   L2147 = 39C6 : 39BB
   L2148 = 39C9 :
   L2149 = 39CC :
    L215 = 223E :
   L2150 = 39CC :
   L2151 = 39CC :
   L2152 = 39CC :
   L2153 = 39CC :
   L2154 = 39CC : 39C3
   L2155 = 39CE :
   L2156 = 39D0 :
   L2157 = 39D2 :
   L2158 = 39D5 :
   L2159 = 39D7 :
    L216 = 2244 :
   L2160 = 39DA :
   L2161 = 39DD : 39D2
   L2162 = 39E0 :
   L2163 = 39E3 :
   L2164 = 39E3 : 39DA
   L2165 = 39E5 :
   L2166 = 39E7 :
   L2167 = 39E9 :
   L2168 = 39EC :
   L2169 = 39EE :
    L217 = 2247 :
   L2170 = 39F1 :
   L2171 = 39F4 : 39E9
   L2172 = 39F7 :
   L2173 = 39FA :
   L2174 = 39FA : 39F1
   L2175 = 39FC :
   L2176 = 39FE :
   L2177 = 3A00 :
   L2178 = 3A03 :
   L2179 = 3A05 :
    L218 = 2249 :
   L2180 = 3A08 :
   L2181 = 3A0B : 3A00
   L2182 = 3A0E :
   L2183 = 3A11 :
   L2184 = 3A11 :
   L2185 = 3A11 : 3A08
   L2186 = 3A14 :
   L2187 = 3A21 :
   L2188 = 3A27 :
   L2189 = 3A2A :
    L219 = 224C :
   L2190 = 3A2C :
   L2191 = 3A2F :
   L2192 = 3A32 : 3A27
   L2193 = 3A35 :
   L2194 = 3A38 :
   L2195 = 3A38 : 3A2F
   L2196 = 3A3B :
   L2197 = 3A46 :
   L2198 = 3A4C :
   L2199 = 3A4F :
     L22 = 2022 :
    L220 = 224F : 2244
   L2200 = 3A51 :
   L2201 = 3A54 :
   L2202 = 3A57 : 3A4C
   L2203 = 3A5A :
   L2204 = 3A5D :
   L2205 = 3A5D : 3A54
   L2206 = 3A60 :
   L2207 = 3A6D :
   L2208 = 3A73 :
   L2209 = 3A76 :
    L221 = 2252 :
   L2210 = 3A78 :
   L2211 = 3A7B :
   L2212 = 3A7E : 3A73
   L2213 = 3A81 :
   L2214 = 3A84 :
   L2215 = 3A84 :
   L2216 = 3A84 : 3A7B
   L2217 = 3A86 :
   L2218 = 3A89 :
   L2219 = 3A96 :
    L222 = 2255 :
   L2220 = 3A98 :
   L2221 = 3A9F :
   L2222 = 3AA2 :
   L2223 = 3AA4 :
   L2224 = 3AA7 :
   L2225 = 3AAA : 3A9F
   L2226 = 3AAD :
   L2227 = 3AB0 :
   L2228 = 3AB0 : 3AA7
   L2229 = 3AB2 :
    L223 = 2255 : 224C
   L2230 = 3AB5 :
   L2231 = 3AC0 :
   L2232 = 3AC6 :
   L2233 = 3AC9 :
   L2234 = 3ACB :
   L2235 = 3ACE :
   L2236 = 3AD1 : 3AC6
   L2237 = 3AD4 :
   L2238 = 3AD7 :
   L2239 = 3AD7 : 3ACE
    L224 = 2258 :
   L2240 = 3AD9 :
   L2241 = 3ADC :
   L2242 = 3AE9 :
   L2243 = 3AEF :
   L2244 = 3AF2 :
   L2245 = 3AF4 :
   L2246 = 3AF7 :
   L2247 = 3AFA : 3AEF
   L2248 = 3AFD :
   L2249 = 3B00 :
    L225 = 225C :
   L2250 = 3B00 :
   L2251 = 3B00 : 3AF7
   L2252 = 3B03 :
   L2253 = 3B0B :
   L2254 = 3B0D :
   L2255 = 3B14 :
   L2256 = 3B17 :
   L2257 = 3B19 :
   L2258 = 3B1C :
   L2259 = 3B1F : 3B14
    L226 = 2260 :
   L2260 = 3B22 :
   L2261 = 3B25 :
   L2262 = 3B25 : 3B1C
   L2263 = 3B28 :
   L2264 = 3B33 :
   L2265 = 3B39 :
   L2266 = 3B3C :
   L2267 = 3B3E :
   L2268 = 3B41 :
   L2269 = 3B44 : 3B39
    L227 = 2269 :
   L2270 = 3B47 :
   L2271 = 3B4A :
   L2272 = 3B4A : 3B41
   L2273 = 3B4D :
   L2274 = 3B5A :
   L2275 = 3B60 :
   L2276 = 3B63 :
   L2277 = 3B65 :
   L2278 = 3B68 :
   L2279 = 3B6B : 3B60
    L228 = 226F :
   L2280 = 3B6E :
   L2281 = 3B71 :
   L2282 = 3B71 :
   L2283 = 3B71 : 3B68
   L2284 = 3B74 :
   L2285 = 3B77 :
   L2286 = 3B77 :
   L2287 = 3B79 :
   L2288 = 3B7B :
   L2289 = 3B7C :
    L229 = 2272 :
   L2290 = 3B7C : 3B71
     L23 = 2022 :
    L230 = 2274 :
    L231 = 2277 :
    L232 = 227A : 226F
    L233 = 227D :
    L234 = 2280 :
    L235 = 2280 : 2277
    L236 = 2283 :
    L237 = 2287 :
    L238 = 228B :
    L239 = 2296 :
     L24 = 2022 : 201F
    L240 = 229C :
    L241 = 229F :
    L242 = 22A1 :
    L243 = 22A4 :
    L244 = 22A7 : 229C
    L245 = 22AA :
    L246 = 22AD :
    L247 = 22AD :
    L248 = 22AD : 22A4
    L249 = 22AF :
     L25 = 2022 :
    L250 = 22B2 :
    L251 = 22B6 :
    L252 = 22BC :
    L253 = 22BE :
    L254 = 22C5 :
    L255 = 22C8 :
    L256 = 22CA :
    L257 = 22CD :
    L258 = 22D0 : 22C5
    L259 = 22D3 :
     L26 = 2024 :
    L260 = 22D6 :
    L261 = 22D6 : 22CD
    L262 = 22D8 :
    L263 = 22DB :
    L264 = 22DF :
    L265 = 22E1 :
    L266 = 22E7 :
    L267 = 22EA :
    L268 = 22EC :
    L269 = 22EF :
     L27 = 202A :
    L270 = 22F2 : 22E7
    L271 = 22F5 :
    L272 = 22F8 :
    L273 = 22F8 : 22EF
    L274 = 22FA :
    L275 = 22FD :
    L276 = 2301 :
    L277 = 2303 :
    L278 = 2309 :
    L279 = 230C :
     L28 = 202A :
    L280 = 230E :
    L281 = 2311 :
    L282 = 2314 : 2309
    L283 = 2317 :
    L284 = 231A :
    L285 = 231A :
    L286 = 231A : 2311
    L287 = 231D :
    L288 = 231F :
    L289 = 2321 :
     L29 = 202A :
    L290 = 2327 :
    L291 = 2329 :
    L292 = 2330 :
    L293 = 2333 :
    L294 = 2335 :
    L295 = 2338 :
    L296 = 233B : 2330
    L297 = 233E :
    L298 = 2341 :
    L299 = 2341 : 2338
      L3 = 2009 :
     L30 = 202C :
    L300 = 2344 :
    L301 = 2346 :
    L302 = 2348 :
    L303 = 234A :
    L304 = 2350 :
    L305 = 2353 :
    L306 = 2355 :
    L307 = 2358 :
    L308 = 235B : 2350
    L309 = 235E :
     L31 = 202F :
    L310 = 2361 :
    L311 = 2361 : 2358
    L312 = 2364 :
    L313 = 2366 :
    L314 = 2368 :
    L315 = 236A :
    L316 = 2370 :
    L317 = 2373 :
    L318 = 2375 :
    L319 = 2378 :
     L32 = 202F :
    L320 = 237B : 2370
    L321 = 237E :
    L322 = 2381 :
    L323 = 2381 :
    L324 = 2381 :
    L325 = 2381 :
    L326 = 2381 :
    L327 = 2381 : 2378
    L328 = 2383 :
    L329 = 2388 :
     L33 = 202F :
    L330 = 238A :
    L331 = 238D :
    L332 = 238F :
    L333 = 2392 :
    L334 = 2395 : 238A
    L335 = 2398 :
    L336 = 239B :
    L337 = 239B : 2392
    L338 = 239D :
    L339 = 23A2 :
     L34 = 202F :
    L340 = 23A4 :
    L341 = 23A7 :
    L342 = 23A9 :
    L343 = 23AC :
    L344 = 23AF : 23A4
    L345 = 23B2 :
    L346 = 23B5 :
    L347 = 23B5 : 23AC
    L348 = 23B7 :
    L349 = 23BC :
     L35 = 202F :
    L350 = 23BE :
    L351 = 23C1 :
    L352 = 23C3 :
    L353 = 23C6 :
    L354 = 23C9 : 23BE
    L355 = 23CC :
    L356 = 23CF :
    L357 = 23CF :
    L358 = 23CF : 23C6
    L359 = 23D2 :
     L36 = 202F :
    L360 = 23E0 :
    L361 = 23E6 :
    L362 = 23E9 :
    L363 = 23EB :
    L364 = 23EE :
    L365 = 23F1 : 23E6
    L366 = 23F4 :
    L367 = 23F7 :
    L368 = 23F7 : 23EE
    L369 = 23FA :
     L37 = 202F :
    L370 = 2406 :
    L371 = 240C :
    L372 = 240F :
    L373 = 2411 :
    L374 = 2414 :
    L375 = 2417 : 240C
    L376 = 241A :
    L377 = 241D :
    L378 = 241D : 2414
    L379 = 2420 :
     L38 = 202F :
    L380 = 242E :
    L381 = 2434 :
    L382 = 2437 :
    L383 = 2439 :
    L384 = 243C :
    L385 = 243F : 2434
    L386 = 2442 :
    L387 = 2445 :
    L388 = 2445 :
    L389 = 2445 : 243C
     L39 = 202F :
    L390 = 2447 :
    L391 = 244A :
    L392 = 2458 :
    L393 = 245A :
    L394 = 2461 :
    L395 = 2464 :
    L396 = 2466 :
    L397 = 2469 :
    L398 = 246C : 2461
    L399 = 246F :
      L4 = 2009 :
     L40 = 2031 :
    L400 = 2472 :
    L401 = 2472 : 2469
    L402 = 2474 :
    L403 = 2477 :
    L404 = 2483 :
    L405 = 2489 :
    L406 = 248C :
    L407 = 248E :
    L408 = 2491 :
    L409 = 2494 : 2489
     L41 = 2033 :
    L410 = 2497 :
    L411 = 249A :
    L412 = 249A : 2491
    L413 = 249C :
    L414 = 249F :
    L415 = 24AD :
    L416 = 24B3 :
    L417 = 24B6 :
    L418 = 24B8 :
    L419 = 24BB :
     L42 = 2035 :
    L420 = 24BE : 24B3
    L421 = 24C1 :
    L422 = 24C4 :
    L423 = 24C4 :
    L424 = 24C4 : 24BB
    L425 = 24C7 :
    L426 = 24D0 :
    L427 = 24D2 :
    L428 = 24D9 :
    L429 = 24DC :
     L43 = 2038 :
    L430 = 24DE :
    L431 = 24E1 :
    L432 = 24E4 : 24D9
    L433 = 24E7 :
    L434 = 24EA :
    L435 = 24EA : 24E1
    L436 = 24ED :
    L437 = 24F4 :
    L438 = 24FA :
    L439 = 24FD :
     L44 = 203A :
    L440 = 24FF :
    L441 = 2502 :
    L442 = 2505 : 24FA
    L443 = 2508 :
    L444 = 250B :
    L445 = 250B : 2502
    L446 = 250E :
    L447 = 2515 :
    L448 = 251B :
    L449 = 251E :
     L45 = 203D :
    L450 = 2520 :
    L451 = 2523 :
    L452 = 2526 : 251B
    L453 = 2529 :
    L454 = 252C :
    L455 = 252C :
    L456 = 252C :
    L457 = 252C :
    L458 = 252C :
    L459 = 252C : 2523
     L46 = 2040 : 2035
    L460 = 252E :
    L461 = 2530 :
    L462 = 2532 :
    L463 = 2535 :
    L464 = 2537 :
    L465 = 253A :
    L466 = 253D : 2532
    L467 = 2540 :
    L468 = 2543 :
    L469 = 2543 : 253A
     L47 = 2043 :
    L470 = 2545 :
    L471 = 2547 :
    L472 = 2549 :
    L473 = 254C :
    L474 = 254E :
    L475 = 2551 :
    L476 = 2554 : 2549
    L477 = 2557 :
    L478 = 255A :
    L479 = 255A : 2551
     L48 = 2046 :
    L480 = 255C :
    L481 = 255E :
    L482 = 2560 :
    L483 = 2563 :
    L484 = 2565 :
    L485 = 2568 :
    L486 = 256B : 2560
    L487 = 256E :
    L488 = 2571 :
    L489 = 2571 :
     L49 = 2046 : 203D
    L490 = 2571 : 2568
    L491 = 2574 :
    L492 = 2581 :
    L493 = 2587 :
    L494 = 258A :
    L495 = 258C :
    L496 = 258F :
    L497 = 2592 : 2587
    L498 = 2595 :
    L499 = 2598 :
      L5 = 2009 :
     L50 = 2048 :
    L500 = 2598 : 258F
    L501 = 259B :
    L502 = 25A6 :
    L503 = 25AC :
    L504 = 25AF :
    L505 = 25B1 :
    L506 = 25B4 :
    L507 = 25B7 : 25AC
    L508 = 25BA :
    L509 = 25BD :
     L51 = 204A :
    L510 = 25BD : 25B4
    L511 = 25C0 :
    L512 = 25CD :
    L513 = 25D3 :
    L514 = 25D6 :
    L515 = 25D8 :
    L516 = 25DB :
    L517 = 25DE : 25D3
    L518 = 25E1 :
    L519 = 25E4 :
     L52 = 204C :
    L520 = 25E4 :
    L521 = 25E4 : 25DB
    L522 = 25E6 :
    L523 = 25E9 :
    L524 = 25F6 :
    L525 = 25F8 :
    L526 = 25FF :
    L527 = 2602 :
    L528 = 2604 :
    L529 = 2607 :
     L53 = 204F :
    L530 = 260A : 25FF
    L531 = 260D :
    L532 = 2610 :
    L533 = 2610 : 2607
    L534 = 2612 :
    L535 = 2615 :
    L536 = 2620 :
    L537 = 2626 :
    L538 = 2629 :
    L539 = 262B :
     L54 = 2051 :
    L540 = 262E :
    L541 = 2631 : 2626
    L542 = 2634 :
    L543 = 2637 :
    L544 = 2637 : 262E
    L545 = 2639 :
    L546 = 263C :
    L547 = 2649 :
    L548 = 264F :
    L549 = 2652 :
     L55 = 2054 :
    L550 = 2654 :
    L551 = 2657 :
    L552 = 265A : 264F
    L553 = 265D :
    L554 = 2660 :
    L555 = 2660 :
    L556 = 2660 : 2657
    L557 = 2663 :
    L558 = 266B :
    L559 = 266D :
     L56 = 2057 : 204C
    L560 = 2674 :
    L561 = 2677 :
    L562 = 2679 :
    L563 = 267C :
    L564 = 267F : 2674
    L565 = 2682 :
    L566 = 2685 :
    L567 = 2685 : 267C
    L568 = 2688 :
    L569 = 2693 :
     L57 = 205A :
    L570 = 2699 :
    L571 = 269C :
    L572 = 269E :
    L573 = 26A1 :
    L574 = 26A4 : 2699
    L575 = 26A7 :
    L576 = 26AA :
    L577 = 26AA : 26A1
    L578 = 26AD :
    L579 = 26BA :
     L58 = 205D :
    L580 = 26C0 :
    L581 = 26C3 :
    L582 = 26C5 :
    L583 = 26C8 :
    L584 = 26CB : 26C0
    L585 = 26CE :
    L586 = 26D1 :
    L587 = 26D1 :
    L588 = 26D1 :
    L589 = 26D1 :
     L59 = 205D : 2054
    L590 = 26D1 :
    L591 = 26D1 : 26C8
    L592 = 26D3 :
    L593 = 26D5 :
    L594 = 26D7 :
    L595 = 26D9 :
    L596 = 26DC :
    L597 = 26DE :
    L598 = 26E1 :
    L599 = 26E4 : 26D9
      L6 = 2009 : 2003
     L60 = 205F :
    L600 = 26E7 :
    L601 = 26EA :
    L602 = 26EA : 26E1
    L603 = 26EC :
    L604 = 26EE :
    L605 = 26F0 :
    L606 = 26F2 :
    L607 = 26F5 :
    L608 = 26F7 :
    L609 = 26FA :
     L61 = 2061 :
    L610 = 26FD : 26F2
    L611 = 2700 :
    L612 = 2703 :
    L613 = 2703 : 26FA
    L614 = 2705 :
    L615 = 2707 :
    L616 = 2709 :
    L617 = 270B :
    L618 = 270E :
    L619 = 2710 :
     L62 = 2063 :
    L620 = 2713 :
    L621 = 2716 : 270B
    L622 = 2719 :
    L623 = 271C :
    L624 = 271C :
    L625 = 271C : 2713
    L626 = 271F :
    L627 = 2723 :
    L628 = 2730 :
    L629 = 2736 :
     L63 = 2066 :
    L630 = 2739 :
    L631 = 273B :
    L632 = 273E :
    L633 = 2741 : 2736
    L634 = 2744 :
    L635 = 2747 :
    L636 = 2747 : 273E
    L637 = 274A :
    L638 = 274E :
    L639 = 2759 :
     L64 = 2068 :
    L640 = 275F :
    L641 = 2762 :
    L642 = 2764 :
    L643 = 2767 :
    L644 = 276A : 275F
    L645 = 276D :
    L646 = 2770 :
    L647 = 2770 : 2767
    L648 = 2773 :
    L649 = 2777 :
     L65 = 206B :
    L650 = 2784 :
    L651 = 278A :
    L652 = 278D :
    L653 = 278F :
    L654 = 2792 :
    L655 = 2795 : 278A
    L656 = 2798 :
    L657 = 279B :
    L658 = 279B :
    L659 = 279B : 2792
     L66 = 206E : 2063
    L660 = 279D :
    L661 = 279F :
    L662 = 27A2 :
    L663 = 27AF :
    L664 = 27B1 :
    L665 = 27B8 :
    L666 = 27BB :
    L667 = 27BD :
    L668 = 27C0 :
    L669 = 27C3 : 27B8
     L67 = 2071 :
    L670 = 27C6 :
    L671 = 27C9 :
    L672 = 27C9 : 27C0
    L673 = 27CB :
    L674 = 27CD :
    L675 = 27D0 :
    L676 = 27DB :
    L677 = 27E1 :
    L678 = 27E4 :
    L679 = 27E6 :
     L68 = 2074 :
    L680 = 27E9 :
    L681 = 27EC : 27E1
    L682 = 27EF :
    L683 = 27F2 :
    L684 = 27F2 : 27E9
    L685 = 27F4 :
    L686 = 27F6 :
    L687 = 27F9 :
    L688 = 2806 :
    L689 = 280C :
     L69 = 2074 :
    L690 = 280F :
    L691 = 2811 :
    L692 = 2814 :
    L693 = 2817 : 280C
    L694 = 281A :
    L695 = 281D :
    L696 = 281D :
    L697 = 281D : 2814
    L698 = 2820 :
    L699 = 2824 :
      L7 = 200B :
     L70 = 2074 : 206B
    L700 = 282C :
    L701 = 282E :
    L702 = 2835 :
    L703 = 2838 :
    L704 = 283A :
    L705 = 283D :
    L706 = 2840 : 2835
    L707 = 2843 :
    L708 = 2846 :
    L709 = 2846 : 283D
     L71 = 2077 :
    L710 = 2849 :
    L711 = 284D :
    L712 = 2858 :
    L713 = 285E :
    L714 = 2861 :
    L715 = 2863 :
    L716 = 2866 :
    L717 = 2869 : 285E
    L718 = 286C :
    L719 = 286F :
     L72 = 2084 :
    L720 = 286F : 2866
    L721 = 2872 :
    L722 = 2876 :
    L723 = 2883 :
    L724 = 2889 :
    L725 = 288C :
    L726 = 288E :
    L727 = 2891 :
    L728 = 2894 : 2889
    L729 = 2897 :
     L73 = 208A :
    L730 = 289A :
    L731 = 289A :
    L732 = 289A :
    L733 = 289A :
    L734 = 289A :
    L735 = 289A : 2891
    L736 = 289C :
    L737 = 289E :
    L738 = 28A1 :
    L739 = 28A3 :
     L74 = 208D :
    L740 = 28A5 :
    L741 = 28A7 :
    L742 = 28AA :
    L743 = 28AC :
    L744 = 28AF :
    L745 = 28B2 : 28A7
    L746 = 28B5 :
    L747 = 28B8 :
    L748 = 28B8 : 28AF
    L749 = 28BA :
     L75 = 208F :
    L750 = 28BC :
    L751 = 28BF :
    L752 = 28C1 :
    L753 = 28C3 :
    L754 = 28C5 :
    L755 = 28C8 :
    L756 = 28CA :
    L757 = 28CD :
    L758 = 28D0 : 28C5
    L759 = 28D3 :
     L76 = 2092 :
    L760 = 28D6 :
    L761 = 28D6 : 28CD
    L762 = 28D8 :
    L763 = 28DA :
    L764 = 28DD :
    L765 = 28DF :
    L766 = 28E1 :
    L767 = 28E3 :
    L768 = 28E6 :
    L769 = 28E8 :
     L77 = 2095 : 208A
    L770 = 28EB :
    L771 = 28EE : 28E3
    L772 = 28F1 :
    L773 = 28F4 :
    L774 = 28F4 :
    L775 = 28F4 : 28EB
    L776 = 28F7 :
    L777 = 28FB :
    L778 = 28FF :
    L779 = 2903 :
     L78 = 2098 :
    L780 = 290E :
    L781 = 2914 :
    L782 = 2917 :
    L783 = 2919 :
    L784 = 291C :
    L785 = 291F : 2914
    L786 = 2922 :
    L787 = 2925 :
    L788 = 2925 : 291C
    L789 = 2928 :
     L79 = 209B :
    L790 = 292C :
    L791 = 2930 :
    L792 = 2934 :
    L793 = 293D :
    L794 = 2943 :
    L795 = 2946 :
    L796 = 2948 :
    L797 = 294B :
    L798 = 294E : 2943
    L799 = 2951 :
      L8 = 200E :
     L80 = 209B :
    L800 = 2954 :
    L801 = 2954 : 294B
    L802 = 2957 :
    L803 = 295B :
    L804 = 295F :
    L805 = 2963 :
    L806 = 296E :
    L807 = 2974 :
    L808 = 2977 :
    L809 = 2979 :
     L81 = 209B : 2092
    L810 = 297C :
    L811 = 297F : 2974
    L812 = 2982 :
    L813 = 2985 :
    L814 = 2985 :
    L815 = 2985 : 297C
    L816 = 2987 :
    L817 = 2989 :
    L818 = 298C :
    L819 = 2990 :
     L82 = 209E :
    L820 = 2996 :
    L821 = 2998 :
    L822 = 299F :
    L823 = 29A2 :
    L824 = 29A4 :
    L825 = 29A7 :
    L826 = 29AA : 299F
    L827 = 29AD :
    L828 = 29B0 :
    L829 = 29B0 : 29A7
     L83 = 20A9 :
    L830 = 29B2 :
    L831 = 29B4 :
    L832 = 29B7 :
    L833 = 29BB :
    L834 = 29BD :
    L835 = 29C3 :
    L836 = 29C6 :
    L837 = 29C8 :
    L838 = 29CB :
    L839 = 29CE : 29C3
     L84 = 20AF :
    L840 = 29D1 :
    L841 = 29D4 :
    L842 = 29D4 : 29CB
    L843 = 29D6 :
    L844 = 29D8 :
    L845 = 29DB :
    L846 = 29DF :
    L847 = 29E1 :
    L848 = 29E7 :
    L849 = 29EA :
     L85 = 20B2 :
    L850 = 29EC :
    L851 = 29EF :
    L852 = 29F2 : 29E7
    L853 = 29F5 :
    L854 = 29F8 :
    L855 = 29F8 :
    L856 = 29F8 : 29EF
    L857 = 29FB :
    L858 = 29FF :
    L859 = 2A01 :
     L86 = 20B4 :
    L860 = 2A03 :
    L861 = 2A09 :
    L862 = 2A0B :
    L863 = 2A12 :
    L864 = 2A15 :
    L865 = 2A17 :
    L866 = 2A1A :
    L867 = 2A1D : 2A12
    L868 = 2A20 :
    L869 = 2A23 :
     L87 = 20B7 :
    L870 = 2A23 : 2A1A
    L871 = 2A26 :
    L872 = 2A2A :
    L873 = 2A2C :
    L874 = 2A2E :
    L875 = 2A30 :
    L876 = 2A36 :
    L877 = 2A39 :
    L878 = 2A3B :
    L879 = 2A3E :
     L88 = 20BA : 20AF
    L880 = 2A41 : 2A36
    L881 = 2A44 :
    L882 = 2A47 :
    L883 = 2A47 : 2A3E
    L884 = 2A4A :
    L885 = 2A4E :
    L886 = 2A50 :
    L887 = 2A52 :
    L888 = 2A54 :
    L889 = 2A5A :
     L89 = 20BD :
    L890 = 2A5D :
    L891 = 2A5F :
    L892 = 2A62 :
    L893 = 2A65 : 2A5A
    L894 = 2A68 :
    L895 = 2A6B :
    L896 = 2A6B :
    L897 = 2A6B :
    L898 = 2A6B :
    L899 = 2A6B :
      L9 = 200E :
     L90 = 20C0 :
    L900 = 2A6B : 2A62
    L901 = 2A6D :
    L902 = 2A6F :
    L903 = 2A74 :
    L904 = 2A76 :
    L905 = 2A79 :
    L906 = 2A7B :
    L907 = 2A7E :
    L908 = 2A81 : 2A76
    L909 = 2A84 :
     L91 = 20C0 :
    L910 = 2A87 :
    L911 = 2A87 : 2A7E
    L912 = 2A89 :
    L913 = 2A8B :
    L914 = 2A90 :
    L915 = 2A92 :
    L916 = 2A95 :
    L917 = 2A97 :
    L918 = 2A9A :
    L919 = 2A9D : 2A92
     L92 = 20C0 : 20B7
    L920 = 2AA0 :
    L921 = 2AA3 :
    L922 = 2AA3 : 2A9A
    L923 = 2AA5 :
    L924 = 2AA7 :
    L925 = 2AAC :
    L926 = 2AAE :
    L927 = 2AB1 :
    L928 = 2AB3 :
    L929 = 2AB6 :
     L93 = 20C3 :
    L930 = 2AB9 : 2AAE
    L931 = 2ABC :
    L932 = 2ABF :
    L933 = 2ABF :
    L934 = 2ABF : 2AB6
    L935 = 2AC2 :
    L936 = 2AC6 :
    L937 = 2AD4 :
    L938 = 2ADA :
    L939 = 2ADD :
     L94 = 20D0 :
    L940 = 2ADF :
    L941 = 2AE2 :
    L942 = 2AE5 : 2ADA
    L943 = 2AE8 :
    L944 = 2AEB :
    L945 = 2AEB : 2AE2
    L946 = 2AEE :
    L947 = 2AF2 :
    L948 = 2AFE :
    L949 = 2B04 :
     L95 = 20D6 :
    L950 = 2B07 :
    L951 = 2B09 :
    L952 = 2B0C :
    L953 = 2B0F : 2B04
    L954 = 2B12 :
    L955 = 2B15 :
    L956 = 2B15 : 2B0C
    L957 = 2B18 :
    L958 = 2B1C :
    L959 = 2B2A :
     L96 = 20D9 :
    L960 = 2B30 :
    L961 = 2B33 :
    L962 = 2B35 :
    L963 = 2B38 :
    L964 = 2B3B : 2B30
    L965 = 2B3E :
    L966 = 2B41 :
    L967 = 2B41 :
    L968 = 2B41 : 2B38
    L969 = 2B43 :
     L97 = 20DB :
    L970 = 2B45 :
    L971 = 2B48 :
    L972 = 2B56 :
    L973 = 2B58 :
    L974 = 2B5F :
    L975 = 2B62 :
    L976 = 2B64 :
    L977 = 2B67 :
    L978 = 2B6A : 2B5F
    L979 = 2B6D :
     L98 = 20DE :
    L980 = 2B70 :
    L981 = 2B70 : 2B67
    L982 = 2B72 :
    L983 = 2B74 :
    L984 = 2B77 :
    L985 = 2B83 :
    L986 = 2B89 :
    L987 = 2B8C :
    L988 = 2B8E :
    L989 = 2B91 :
     L99 = 20E1 : 20D6
    L990 = 2B94 : 2B89
    L991 = 2B97 :
    L992 = 2B9A :
    L993 = 2B9A : 2B91
    L994 = 2B9C :
    L995 = 2B9E :
    L996 = 2BA1 :
    L997 = 2BAF :
    L998 = 2BB5 :
    L999 = 2BB8 :
   div16 = 3C80 :
 div16_1 = 3C89 : 3C98
 div16_2 = 3C97 : 3C92
 div16_3 = 3C98 : 3C95
 div16_8 = 3CA0 : 3D07
div16_82 = 3CA5 : 3CAD
div16_83 = 3CAD : 3CA9
    div8 = 3CB1 : 3CD4
  div8_1 = 3CB9 : 3CC4
 div8_16 = 3CCB :
div8_161 = 3CD2 : 3CCE
  div8_2 = 3CC4 : 3CC0
 getChar = 3B82 : 3CDC
getChar1 = 3B90 : 3B87
   mul16 = 3C04 :
 mul1632 = 3C33 :
mul16321 = 3C55 : 3C52
mul16322 = 3C5C : 3C59
  mul16S = 3C66 :
 mul16S1 = 3C6F : 3C7B
 mul16S2 = 3C7A : 3C74 3C77
mul16_10 = 3C1D : 3CE5
 mul16_8 = 3C26 :
 putBell = 3BDC :
 putCRLF = 3BC3 : 3BA3 3CF6 3D1E
 putChar = 3BB6 : 3BAD 3BC6 3BCB 3BD2 3BDA 3BDE 3BFF 3D13
putChar1 = 3BB7 : 3BBC
putErase = 3BD0 :
 putHexA = 3BEB : 3BE2 3BE6
putHexA1 = 3BF4 : 3BF0
putHexA2 = 3BFF : 3BFB
putHexHL = 3BE0 :
  putMsg = 3B9A :
putSpace = 3BB4 : 3BD5
 putStr1 = 3BA8 : 3BB0
 putStr2 = 3BB2 : 3BAB
    read = 3CD8 :
   read1 = 3CDC : 3CDF 3CEC 3CEF
   read2 = 3CF1 : 3CE3
   start = 2000 :
  writeA = 3D22 : 3D1B
 writeHL = 3CFA : 3CF3 3D26
writeHL1 = 3D05 : 3D00 3D0E
writeHL2 = 3D10 : 3D16
writeHL3 = 3D11 : 3D03
writeLineA = 3D1B : 202C 203A 2051 2068 208F 20B4 20DB 2107 212E 2157 217C 21A1
                : 21C8 21E4 2200 221C 2249 2274 22A1 22CA 22EC 230E 2335 2355
                : 2375 238F 23A9 23C3 23EB 2411 2439 2466 248E 24B8 24DE 24FF
                : 2520 2537 254E 2565 258C 25B1 25D8 2604 262B 2654 2679 269E
                : 26C5 26DE 26F7 2710 273B 2764 278F 27BD 27E6 2811 283A 2863
                : 288E 28AC 28CA 28E8 2919 2948 2979 29A4 29C8 29EC 2A17 2A3B
                : 2A5F 2A7B 2A97 2AB3 2ADF 2B09 2B35 2B64 2B8E 2BBA 2BE4 2C09
                : 2C2E 2C47 2C60 2C79 2CA4 2CCD 2CF8 2D26 2D4F 2D7A 2DA3 2DCC
                : 2DF7 2E0F 2E27 2E3F 2E66 2E8B 2EB2 2EDF 2F07 2F31 2F56 2F7B
                : 2FA2 2FBF 2FDC 2FF9 3026 3051 307E 30A8 30CB 30EE 3115 3135
                : 3155 3170 318B 31A6 31CE 31F4 321C 324A 3273 329E 32C4 32E5
                : 3306 331E 3336 334E 3375 339A 33C1 33EE 3416 3440 3465 348A
                : 34B1 34C9 34E1 34F9 3520 3545 356C 3599 35C1 35EB 3610 3635
                : 365C 3679 3696 36B3 36E0 370B 3738 3762 3785 37A8 37CF 37EF
                : 380F 382A 3845 3860 3888 38AE 38D6 3904 392D 3958 397E 399F
                : 39C0 39D7 39EE 3A05 3A2C 3A51 3A78 3AA4 3ACB 3AF4 3B19 3B3E
                : 3B65
writeLineHL = 3CF3 : 2043 205A 2071 2098 20BD 20E4 2110 2137 2160 2185 21AA 21D1
                : 21ED 2209 2225 2252 227D 22AA 22D3 22F5 2317 233E 235E 237E
                : 2398 23B2 23CC 23F4 241A 2442 246F 2497 24C1 24E7 2508 2529
                : 2540 2557 256E 2595 25BA 25E1 260D 2634 265D 2682 26A7 26CE
                : 26E7 2700 2719 2744 276D 2798 27C6 27EF 281A 2843 286C 2897
                : 28B5 28D3 28F1 2922 2951 2982 29AD 29D1 29F5 2A20 2A44 2A68
                : 2A84 2AA0 2ABC 2AE8 2B12 2B3E 2B6D 2B97 2BC3 2BED 2C12 2C37
                : 2C50 2C69 2C82 2CAD 2CD6 2D01 2D2F 2D58 2D83 2DAC 2DD5 2E00
                : 2E18 2E30 2E48 2E6F 2E94 2EBB 2EE8 2F10 2F3A 2F5F 2F84 2FAB
                : 2FC8 2FE5 3002 302F 305A 3087 30B1 30D4 30F7 311E 313E 315E
                : 3179 3194 31AF 31D7 31FD 3225 3253 327C 32A7 32CD 32EE 330F
                : 3327 333F 3357 337E 33A3 33CA 33F7 341F 3449 346E 3493 34BA
                : 34D2 34EA 3502 3529 354E 3575 35A2 35CA 35F4 3619 363E 3665
                : 3682 369F 36BC 36E9 3714 3741 376B 378E 37B1 37D8 37F8 3818
                : 3833 384E 3869 3891 38B7 38DF 390D 3936 3961 3987 39A8 39C9
                : 39E0 39F7 3A0E 3A35 3A5A 3A81 3AAD 3AD4 3AFD 3B22 3B47 3B6E
                :
writeLineStr = 3BA0 : 3B74
writeStr = 3BA7 : 3B9B 3BA0
