2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testBitwiseOperators.j(0) /* Program to test bitwise operators and, or and xor. */
2009             L3:
2009                     ;;testBitwiseOperators.j(1) class TestBitwiseOperators {
2009             L4:
2009                     ;class TestBitwiseOperators []
2009             L5:
2009                     ;;testBitwiseOperators.j(2)   private static byte b1 = 0x1C;
2009             L6:
2009 3E 1C               LD    A,28
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testBitwiseOperators.j(3)   private static byte b2 = 0x07;
200E             L9:
200E 3E 07               LD    A,7
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testBitwiseOperators.j(4)   private static word w1 = 0x032C;
2013             L12:
2013 21 2C 03            LD    HL,812
2016             L13:
2016 22 02 50            LD    (05002H),HL
2019             L14:
2019                     ;;testBitwiseOperators.j(5)   private static word w2 = 0x1234;
2019             L15:
2019 21 34 12            LD    HL,4660
201C             L16:
201C 22 04 50            LD    (05004H),HL
201F             L17:
201F C3 22 20            JP    L24
2022             L18:
2022                     ;;testBitwiseOperators.j(6)   private static final byte fb1 = 0x1C;
2022             L19:
2022                     ;;testBitwiseOperators.j(7)   private static final byte fb2 = 0x07;
2022             L20:
2022                     ;;testBitwiseOperators.j(8)   private static final word fw1 = 0x032C;
2022             L21:
2022                     ;;testBitwiseOperators.j(9)   private static final word fw2 = 0x1234;
2022             L22:
2022                     ;;testBitwiseOperators.j(10) 
2022             L23:
2022                     ;;testBitwiseOperators.j(11)   public static void main() {
2022             L24:
2022                     ;method TestBitwiseOperators.main [public, static] void ()
2022             L25:
2022 DD E5               PUSH  IX
2024             L26:
2024 DD 21 00 00         LD    IX,0x0000
2028 DD 39               ADD   IX,SP
202A             L27:
202A             L28:
202A                     ;;testBitwiseOperators.j(12)     println(0);
202A             L29:
202A 3E 00               LD    A,0
202C             L30:
202C CD 77 3D            CALL  writeLineA
202F             L31:
202F                     ;;testBitwiseOperators.j(13)     
202F             L32:
202F                     ;;testBitwiseOperators.j(14)     // Possible operand types: constant, acc, var, final var, stack8, stack16.
202F             L33:
202F                     ;;testBitwiseOperators.j(15)     // Possible data types: byte, word.
202F             L34:
202F                     ;;testBitwiseOperators.j(16)   
202F             L35:
202F                     ;;testBitwiseOperators.j(17)     //constant/constant
202F             L36:
202F                     ;;testBitwiseOperators.j(18)     //*****************
202F             L37:
202F                     ;;testBitwiseOperators.j(19)     //constant byte/constant byte
202F             L38:
202F                     ;;testBitwiseOperators.j(20)     if (0x07 & 0x1C == 0x04) println (1); else println (999); //0000.0111 & 0001.1100 = 0000.0100
202F             L39:
202F 3E 07               LD    A,7
2031             L40:
2031 E6 1C               AND   A,28
2033             L41:
2033 D6 04               SUB   A,4
2035             L42:
2035 C2 40 20            JP    NZ,L46
2038             L43:
2038 3E 01               LD    A,1
203A             L44:
203A CD 77 3D            CALL  writeLineA
203D             L45:
203D C3 46 20            JP    L49
2040             L46:
2040 21 E7 03            LD    HL,999
2043             L47:
2043 CD 4F 3D            CALL  writeLineHL
2046             L48:
2046                     ;;testBitwiseOperators.j(21)     if (0x07 | 0x1C == 0x1F) println (2); else println (999); //0000.0111 | 0001.1100 = 0001.1111
2046             L49:
2046 3E 07               LD    A,7
2048             L50:
2048 F6 1C               OR    A,28
204A             L51:
204A D6 1F               SUB   A,31
204C             L52:
204C C2 57 20            JP    NZ,L56
204F             L53:
204F 3E 02               LD    A,2
2051             L54:
2051 CD 77 3D            CALL  writeLineA
2054             L55:
2054 C3 5D 20            JP    L59
2057             L56:
2057 21 E7 03            LD    HL,999
205A             L57:
205A CD 4F 3D            CALL  writeLineHL
205D             L58:
205D                     ;;testBitwiseOperators.j(22)     if (0x07 ^ 0x1C == 0x1B) println (3); else println (999); //0000.0111 ^ 0001.1100 = 0001.1011
205D             L59:
205D 3E 07               LD    A,7
205F             L60:
205F EE 1C               XOR   A,28
2061             L61:
2061 D6 1B               SUB   A,27
2063             L62:
2063 C2 6E 20            JP    NZ,L66
2066             L63:
2066 3E 03               LD    A,3
2068             L64:
2068 CD 77 3D            CALL  writeLineA
206B             L65:
206B C3 74 20            JP    L70
206E             L66:
206E 21 E7 03            LD    HL,999
2071             L67:
2071 CD 4F 3D            CALL  writeLineHL
2074             L68:
2074                     ;;testBitwiseOperators.j(23)     //constant word/constant word
2074             L69:
2074                     ;;testBitwiseOperators.j(24)     if (0x1234 & 0x032C == 0x0224) println (4); else println (999);
2074             L70:
2074 21 34 12            LD    HL,4660
2077             L71:
2077 11 2C 03            LD    DE,812
207A C5                  PUSH  BC
207B 47                  LD    B,A
207C 7C                  LD    A,H
207D A2                  AND   A,D
207E 67                  LD    H,A
207F 7D                  LD    A,L
2080 A3                  AND   A,E
2081 6F                  LD    L,A
2082 78                  LD    A,B
2083 C1                  POP   BC
2084             L72:
2084 11 24 02            LD    DE,548
2087 B7                  OR    A
2088 ED 52               SBC   HL,DE
208A             L73:
208A C2 95 20            JP    NZ,L77
208D             L74:
208D 3E 04               LD    A,4
208F             L75:
208F CD 77 3D            CALL  writeLineA
2092             L76:
2092 C3 9B 20            JP    L81
2095             L77:
2095 21 E7 03            LD    HL,999
2098             L78:
2098 CD 4F 3D            CALL  writeLineHL
209B             L79:
209B                     ;;testBitwiseOperators.j(25)     //0001.0010.0011.0100 & 0000.0011.0010.1100 = 0000.0010.0010.0100
209B             L80:
209B                     ;;testBitwiseOperators.j(26)     if (0x1234 | 0x032C == 0x133C) println (5); else println (999);
209B             L81:
209B 21 34 12            LD    HL,4660
209E             L82:
209E 11 2C 03            LD    DE,812
20A1 47                  LD    B,A
20A2 7C                  LD    A,H
20A3 B2                  OR    A,D
20A4 67                  LD    H,A
20A5 7D                  LD    A,L
20A6 B3                  OR    A,E
20A7 6F                  LD    L,A
20A8 78                  LD    A,B
20A9             L83:
20A9 11 3C 13            LD    DE,4924
20AC B7                  OR    A
20AD ED 52               SBC   HL,DE
20AF             L84:
20AF C2 BA 20            JP    NZ,L88
20B2             L85:
20B2 3E 05               LD    A,5
20B4             L86:
20B4 CD 77 3D            CALL  writeLineA
20B7             L87:
20B7 C3 C0 20            JP    L92
20BA             L88:
20BA 21 E7 03            LD    HL,999
20BD             L89:
20BD CD 4F 3D            CALL  writeLineHL
20C0             L90:
20C0                     ;;testBitwiseOperators.j(27)     //0001.0010.0011.0100 | 0000.0011.0010.1100 = 0001.0011.0011.1100
20C0             L91:
20C0                     ;;testBitwiseOperators.j(28)     if (0x1234 ^ 0x032C == 0x1118) println (6); else println (999);
20C0             L92:
20C0 21 34 12            LD    HL,4660
20C3             L93:
20C3 11 2C 03            LD    DE,812
20C6 C5                  PUSH  BC
20C7 47                  LD    B,A
20C8 7C                  LD    A,H
20C9 AA                  XOR   A,D
20CA 67                  LD    H,A
20CB 7D                  LD    A,L
20CC AB                  XOR   A,E
20CD 6F                  LD    L,A
20CE 78                  LD    A,B
20CF C1                  POP   BC
20D0             L94:
20D0 11 18 11            LD    DE,4376
20D3 B7                  OR    A
20D4 ED 52               SBC   HL,DE
20D6             L95:
20D6 C2 E1 20            JP    NZ,L99
20D9             L96:
20D9 3E 06               LD    A,6
20DB             L97:
20DB CD 77 3D            CALL  writeLineA
20DE             L98:
20DE C3 E7 20            JP    L104
20E1             L99:
20E1 21 E7 03            LD    HL,999
20E4             L100:
20E4 CD 4F 3D            CALL  writeLineHL
20E7             L101:
20E7                     ;;testBitwiseOperators.j(29)     //0001.0010.0011.0100 ^ 0000.0011.0010.1100 = 0001.0001.0001.1000
20E7             L102:
20E7                     ;;testBitwiseOperators.j(30)     //constant byte/constant word
20E7             L103:
20E7                     ;;testBitwiseOperators.j(31)     if (0x1C & 0x1234 == 0x0014) println (7); else println (999); //0001.1100 & 0001.0010.0011.0100 = 0000.0000.0001.0100
20E7             L104:
20E7 3E 1C               LD    A,28
20E9             L105:
20E9 6F                  LD    L,A
20EA 26 00               LD    H,0
20EC             L106:
20EC 11 34 12            LD    DE,4660
20EF C5                  PUSH  BC
20F0 47                  LD    B,A
20F1 7C                  LD    A,H
20F2 A2                  AND   A,D
20F3 67                  LD    H,A
20F4 7D                  LD    A,L
20F5 A3                  AND   A,E
20F6 6F                  LD    L,A
20F7 78                  LD    A,B
20F8 C1                  POP   BC
20F9             L107:
20F9 3E 14               LD    A,20
20FB             L108:
20FB 5F                  LD    E,A
20FC 16 00               LD    D,0
20FE EB                  EX    DE,HL
20FF B7                  OR    A
2100 ED 52               SBC   HL,DE
2102             L109:
2102 C2 0D 21            JP    NZ,L113
2105             L110:
2105 3E 07               LD    A,7
2107             L111:
2107 CD 77 3D            CALL  writeLineA
210A             L112:
210A C3 13 21            JP    L116
210D             L113:
210D 21 E7 03            LD    HL,999
2110             L114:
2110 CD 4F 3D            CALL  writeLineHL
2113             L115:
2113                     ;;testBitwiseOperators.j(32)     if (0x1C | 0x1234 == 0x123C) println (8); else println (999); //0001.1100 | 0001.0010.0011.0100 = 0001.0010.0011.1100
2113             L116:
2113 3E 1C               LD    A,28
2115             L117:
2115 6F                  LD    L,A
2116 26 00               LD    H,0
2118             L118:
2118 11 34 12            LD    DE,4660
211B 47                  LD    B,A
211C 7C                  LD    A,H
211D B2                  OR    A,D
211E 67                  LD    H,A
211F 7D                  LD    A,L
2120 B3                  OR    A,E
2121 6F                  LD    L,A
2122 78                  LD    A,B
2123             L119:
2123 11 3C 12            LD    DE,4668
2126 B7                  OR    A
2127 ED 52               SBC   HL,DE
2129             L120:
2129 C2 34 21            JP    NZ,L124
212C             L121:
212C 3E 08               LD    A,8
212E             L122:
212E CD 77 3D            CALL  writeLineA
2131             L123:
2131 C3 3A 21            JP    L127
2134             L124:
2134 21 E7 03            LD    HL,999
2137             L125:
2137 CD 4F 3D            CALL  writeLineHL
213A             L126:
213A                     ;;testBitwiseOperators.j(33)     if (0x1C ^ 0x1234 == 0x1228) println (9); else println (999); //0001.1100 ^ 0001.0010.0011.0100 = 0001.0010.0010.1000
213A             L127:
213A 3E 1C               LD    A,28
213C             L128:
213C 6F                  LD    L,A
213D 26 00               LD    H,0
213F             L129:
213F 11 34 12            LD    DE,4660
2142 C5                  PUSH  BC
2143 47                  LD    B,A
2144 7C                  LD    A,H
2145 AA                  XOR   A,D
2146 67                  LD    H,A
2147 7D                  LD    A,L
2148 AB                  XOR   A,E
2149 6F                  LD    L,A
214A 78                  LD    A,B
214B C1                  POP   BC
214C             L130:
214C 11 28 12            LD    DE,4648
214F B7                  OR    A
2150 ED 52               SBC   HL,DE
2152             L131:
2152 C2 5D 21            JP    NZ,L135
2155             L132:
2155 3E 09               LD    A,9
2157             L133:
2157 CD 77 3D            CALL  writeLineA
215A             L134:
215A C3 63 21            JP    L139
215D             L135:
215D 21 E7 03            LD    HL,999
2160             L136:
2160 CD 4F 3D            CALL  writeLineHL
2163             L137:
2163                     ;;testBitwiseOperators.j(34)     //constant word/constant byte
2163             L138:
2163                     ;;testBitwiseOperators.j(35)     if (0x1234 & 0x1C == 0x0014) println (10); else println (999); //0001.0010.0011.0100 & 0001.1100 = 0000.0000.0001.0100
2163             L139:
2163 21 34 12            LD    HL,4660
2166             L140:
2166 11 1C 00            LD    DE,28
2169 C5                  PUSH  BC
216A 47                  LD    B,A
216B 7C                  LD    A,H
216C A2                  AND   A,D
216D 67                  LD    H,A
216E 7D                  LD    A,L
216F A3                  AND   A,E
2170 6F                  LD    L,A
2171 78                  LD    A,B
2172 C1                  POP   BC
2173             L141:
2173 3E 14               LD    A,20
2175             L142:
2175 5F                  LD    E,A
2176 16 00               LD    D,0
2178 EB                  EX    DE,HL
2179 B7                  OR    A
217A ED 52               SBC   HL,DE
217C             L143:
217C C2 87 21            JP    NZ,L147
217F             L144:
217F 3E 0A               LD    A,10
2181             L145:
2181 CD 77 3D            CALL  writeLineA
2184             L146:
2184 C3 8D 21            JP    L150
2187             L147:
2187 21 E7 03            LD    HL,999
218A             L148:
218A CD 4F 3D            CALL  writeLineHL
218D             L149:
218D                     ;;testBitwiseOperators.j(36)     if (0x1234 | 0x1C == 0x123C) println (11); else println (999); //0001.0010.0011.0100 | 0001.1100 = 0001.0010.0011.1100
218D             L150:
218D 21 34 12            LD    HL,4660
2190             L151:
2190 11 1C 00            LD    DE,28
2193 47                  LD    B,A
2194 7C                  LD    A,H
2195 B2                  OR    A,D
2196 67                  LD    H,A
2197 7D                  LD    A,L
2198 B3                  OR    A,E
2199 6F                  LD    L,A
219A 78                  LD    A,B
219B             L152:
219B 11 3C 12            LD    DE,4668
219E B7                  OR    A
219F ED 52               SBC   HL,DE
21A1             L153:
21A1 C2 AC 21            JP    NZ,L157
21A4             L154:
21A4 3E 0B               LD    A,11
21A6             L155:
21A6 CD 77 3D            CALL  writeLineA
21A9             L156:
21A9 C3 B2 21            JP    L160
21AC             L157:
21AC 21 E7 03            LD    HL,999
21AF             L158:
21AF CD 4F 3D            CALL  writeLineHL
21B2             L159:
21B2                     ;;testBitwiseOperators.j(37)     if (0x1234 ^ 0x1C == 0x1228) println (12); else println (999); //0001.0010.0011.0100 ^ 0001.1100 = 0001.0010.0010.1000
21B2             L160:
21B2 21 34 12            LD    HL,4660
21B5             L161:
21B5 11 1C 00            LD    DE,28
21B8 C5                  PUSH  BC
21B9 47                  LD    B,A
21BA 7C                  LD    A,H
21BB AA                  XOR   A,D
21BC 67                  LD    H,A
21BD 7D                  LD    A,L
21BE AB                  XOR   A,E
21BF 6F                  LD    L,A
21C0 78                  LD    A,B
21C1 C1                  POP   BC
21C2             L162:
21C2 11 28 12            LD    DE,4648
21C5 B7                  OR    A
21C6 ED 52               SBC   HL,DE
21C8             L163:
21C8 C2 D3 21            JP    NZ,L167
21CB             L164:
21CB 3E 0C               LD    A,12
21CD             L165:
21CD CD 77 3D            CALL  writeLineA
21D0             L166:
21D0 C3 D9 21            JP    L174
21D3             L167:
21D3 21 E7 03            LD    HL,999
21D6             L168:
21D6 CD 4F 3D            CALL  writeLineHL
21D9             L169:
21D9                     ;;testBitwiseOperators.j(38)   
21D9             L170:
21D9                     ;;testBitwiseOperators.j(39)     //constant/acc
21D9             L171:
21D9                     ;;testBitwiseOperators.j(40)     //************
21D9             L172:
21D9                     ;;testBitwiseOperators.j(41)     //constant byte/acc byte
21D9             L173:
21D9                     ;;testBitwiseOperators.j(42)     if (0x07 & (0x10 + 0x0C) == 0x04) println (13); else println (999);
21D9             L174:
21D9 3E 07               LD    A,7
21DB             L175:
21DB F5                  PUSH  AF
21DC 3E 10               LD    A,16
21DE             L176:
21DE C6 0C               ADD   A,12
21E0             L177:
21E0 C1                  POP   BC
21E1 A0                  AND   A,B
21E2             L178:
21E2 D6 04               SUB   A,4
21E4             L179:
21E4 C2 EF 21            JP    NZ,L183
21E7             L180:
21E7 3E 0D               LD    A,13
21E9             L181:
21E9 CD 77 3D            CALL  writeLineA
21EC             L182:
21EC C3 F5 21            JP    L186
21EF             L183:
21EF 21 E7 03            LD    HL,999
21F2             L184:
21F2 CD 4F 3D            CALL  writeLineHL
21F5             L185:
21F5                     ;;testBitwiseOperators.j(43)     if (0x07 | (0x10 + 0x0C) == 0x1F) println (14); else println (999);
21F5             L186:
21F5 3E 07               LD    A,7
21F7             L187:
21F7 F5                  PUSH  AF
21F8 3E 10               LD    A,16
21FA             L188:
21FA C6 0C               ADD   A,12
21FC             L189:
21FC C1                  POP   BC
21FD B0                  OR    A,B
21FE             L190:
21FE D6 1F               SUB   A,31
2200             L191:
2200 C2 0B 22            JP    NZ,L195
2203             L192:
2203 3E 0E               LD    A,14
2205             L193:
2205 CD 77 3D            CALL  writeLineA
2208             L194:
2208 C3 11 22            JP    L198
220B             L195:
220B 21 E7 03            LD    HL,999
220E             L196:
220E CD 4F 3D            CALL  writeLineHL
2211             L197:
2211                     ;;testBitwiseOperators.j(44)     if (0x07 ^ (0x10 + 0x0C) == 0x1B) println (15); else println (999);
2211             L198:
2211 3E 07               LD    A,7
2213             L199:
2213 F5                  PUSH  AF
2214 3E 10               LD    A,16
2216             L200:
2216 C6 0C               ADD   A,12
2218             L201:
2218 C1                  POP   BC
2219 A8                  XOR   A,B
221A             L202:
221A D6 1B               SUB   A,27
221C             L203:
221C C2 27 22            JP    NZ,L207
221F             L204:
221F 3E 0F               LD    A,15
2221             L205:
2221 CD 77 3D            CALL  writeLineA
2224             L206:
2224 C3 2D 22            JP    L211
2227             L207:
2227 21 E7 03            LD    HL,999
222A             L208:
222A CD 4F 3D            CALL  writeLineHL
222D             L209:
222D                     ;;testBitwiseOperators.j(45)     //constant word/acc word
222D             L210:
222D                     ;;testBitwiseOperators.j(46)     if (0x1234 & 0x0100 + 0x022C == 0x0224) println (16); else println (999);
222D             L211:
222D 21 34 12            LD    HL,4660
2230             L212:
2230 E5                  PUSH  HL
2231 21 00 01            LD    HL,256
2234             L213:
2234 11 2C 02            LD    DE,556
2237 19                  ADD   HL,DE
2238             L214:
2238 D1                  POP   DE
2239 C5                  PUSH  BC
223A 47                  LD    B,A
223B 7C                  LD    A,H
223C A2                  AND   A,D
223D 67                  LD    H,A
223E 7D                  LD    A,L
223F A3                  AND   A,E
2240 6F                  LD    L,A
2241 78                  LD    A,B
2242 C1                  POP   BC
2243             L215:
2243 11 24 02            LD    DE,548
2246 B7                  OR    A
2247 ED 52               SBC   HL,DE
2249             L216:
2249 C2 54 22            JP    NZ,L220
224C             L217:
224C 3E 10               LD    A,16
224E             L218:
224E CD 77 3D            CALL  writeLineA
2251             L219:
2251 C3 5A 22            JP    L223
2254             L220:
2254 21 E7 03            LD    HL,999
2257             L221:
2257 CD 4F 3D            CALL  writeLineHL
225A             L222:
225A                     ;;testBitwiseOperators.j(47)     if (0x1234 | 0x0100 + 0x022C == 0x133C) println (17); else println (999);
225A             L223:
225A 21 34 12            LD    HL,4660
225D             L224:
225D E5                  PUSH  HL
225E 21 00 01            LD    HL,256
2261             L225:
2261 11 2C 02            LD    DE,556
2264 19                  ADD   HL,DE
2265             L226:
2265 D1                  POP   DE
2266 47                  LD    B,A
2267 7C                  LD    A,H
2268 B2                  OR    A,D
2269 67                  LD    H,A
226A 7D                  LD    A,L
226B B3                  OR    A,E
226C 6F                  LD    L,A
226D 78                  LD    A,B
226E             L227:
226E 11 3C 13            LD    DE,4924
2271 B7                  OR    A
2272 ED 52               SBC   HL,DE
2274             L228:
2274 C2 7F 22            JP    NZ,L232
2277             L229:
2277 3E 11               LD    A,17
2279             L230:
2279 CD 77 3D            CALL  writeLineA
227C             L231:
227C C3 85 22            JP    L235
227F             L232:
227F 21 E7 03            LD    HL,999
2282             L233:
2282 CD 4F 3D            CALL  writeLineHL
2285             L234:
2285                     ;;testBitwiseOperators.j(48)     if (0x1234 ^ 0x0100 + 0x022C == 0x1118) println (18); else println (999);
2285             L235:
2285 21 34 12            LD    HL,4660
2288             L236:
2288 E5                  PUSH  HL
2289 21 00 01            LD    HL,256
228C             L237:
228C 11 2C 02            LD    DE,556
228F 19                  ADD   HL,DE
2290             L238:
2290 D1                  POP   DE
2291 C5                  PUSH  BC
2292 47                  LD    B,A
2293 7C                  LD    A,H
2294 AA                  XOR   A,D
2295 67                  LD    H,A
2296 7D                  LD    A,L
2297 AB                  XOR   A,E
2298 6F                  LD    L,A
2299 78                  LD    A,B
229A C1                  POP   BC
229B             L239:
229B 11 18 11            LD    DE,4376
229E B7                  OR    A
229F ED 52               SBC   HL,DE
22A1             L240:
22A1 C2 AC 22            JP    NZ,L244
22A4             L241:
22A4 3E 12               LD    A,18
22A6             L242:
22A6 CD 77 3D            CALL  writeLineA
22A9             L243:
22A9 C3 B2 22            JP    L248
22AC             L244:
22AC 21 E7 03            LD    HL,999
22AF             L245:
22AF CD 4F 3D            CALL  writeLineHL
22B2             L246:
22B2                     ;;testBitwiseOperators.j(49)     //constant byte/acc word
22B2             L247:
22B2                     ;;testBitwiseOperators.j(50)     if (0x1C & 0x1000 + 0x0234 == 0x0014) println (19); else println (999);
22B2             L248:
22B2 3E 1C               LD    A,28
22B4             L249:
22B4 21 00 10            LD    HL,4096
22B7             L250:
22B7 11 34 02            LD    DE,564
22BA 19                  ADD   HL,DE
22BB             L251:
22BB A5                  AND   A,L
22BC 6F                  LD    L,A
22BD 26 00               LD    H,0
22BF             L252:
22BF 3E 14               LD    A,20
22C1             L253:
22C1 5F                  LD    E,A
22C2 16 00               LD    D,0
22C4 EB                  EX    DE,HL
22C5 B7                  OR    A
22C6 ED 52               SBC   HL,DE
22C8             L254:
22C8 C2 D3 22            JP    NZ,L258
22CB             L255:
22CB 3E 13               LD    A,19
22CD             L256:
22CD CD 77 3D            CALL  writeLineA
22D0             L257:
22D0 C3 D9 22            JP    L261
22D3             L258:
22D3 21 E7 03            LD    HL,999
22D6             L259:
22D6 CD 4F 3D            CALL  writeLineHL
22D9             L260:
22D9                     ;;testBitwiseOperators.j(51)     if (0x1C | 0x1000 + 0x0234 == 0x123C) println (20); else println (999);
22D9             L261:
22D9 3E 1C               LD    A,28
22DB             L262:
22DB 21 00 10            LD    HL,4096
22DE             L263:
22DE 11 34 02            LD    DE,564
22E1 19                  ADD   HL,DE
22E2             L264:
22E2 B5                  OR    A,L
22E3 6F                  LD    L,A
22E4             L265:
22E4 11 3C 12            LD    DE,4668
22E7 B7                  OR    A
22E8 ED 52               SBC   HL,DE
22EA             L266:
22EA C2 F5 22            JP    NZ,L270
22ED             L267:
22ED 3E 14               LD    A,20
22EF             L268:
22EF CD 77 3D            CALL  writeLineA
22F2             L269:
22F2 C3 FB 22            JP    L273
22F5             L270:
22F5 21 E7 03            LD    HL,999
22F8             L271:
22F8 CD 4F 3D            CALL  writeLineHL
22FB             L272:
22FB                     ;;testBitwiseOperators.j(52)     if (0x1C ^ 0x1000 + 0x0234 == 0x1228) println (21); else println (999);
22FB             L273:
22FB 3E 1C               LD    A,28
22FD             L274:
22FD 21 00 10            LD    HL,4096
2300             L275:
2300 11 34 02            LD    DE,564
2303 19                  ADD   HL,DE
2304             L276:
2304 AD                  XOR   A,L
2305 6F                  LD    L,A
2306             L277:
2306 11 28 12            LD    DE,4648
2309 B7                  OR    A
230A ED 52               SBC   HL,DE
230C             L278:
230C C2 17 23            JP    NZ,L282
230F             L279:
230F 3E 15               LD    A,21
2311             L280:
2311 CD 77 3D            CALL  writeLineA
2314             L281:
2314 C3 1D 23            JP    L286
2317             L282:
2317 21 E7 03            LD    HL,999
231A             L283:
231A CD 4F 3D            CALL  writeLineHL
231D             L284:
231D                     ;;testBitwiseOperators.j(53)     //constant word/acc byte
231D             L285:
231D                     ;;testBitwiseOperators.j(54)     if (0x1234 & 0x10 + 0x0C == 0x0014) println (22); else println (999);
231D             L286:
231D 21 34 12            LD    HL,4660
2320             L287:
2320 3E 10               LD    A,16
2322             L288:
2322 C6 0C               ADD   A,12
2324             L289:
2324 A5                  AND   A,L
2325 6F                  LD    L,A
2326 26 00               LD    H,0
2328             L290:
2328 3E 14               LD    A,20
232A             L291:
232A 5F                  LD    E,A
232B 16 00               LD    D,0
232D EB                  EX    DE,HL
232E B7                  OR    A
232F ED 52               SBC   HL,DE
2331             L292:
2331 C2 3C 23            JP    NZ,L296
2334             L293:
2334 3E 16               LD    A,22
2336             L294:
2336 CD 77 3D            CALL  writeLineA
2339             L295:
2339 C3 42 23            JP    L299
233C             L296:
233C 21 E7 03            LD    HL,999
233F             L297:
233F CD 4F 3D            CALL  writeLineHL
2342             L298:
2342                     ;;testBitwiseOperators.j(55)     if (0x1234 | 0x10 + 0x0C == 0x123C) println (23); else println (999);
2342             L299:
2342 21 34 12            LD    HL,4660
2345             L300:
2345 3E 10               LD    A,16
2347             L301:
2347 C6 0C               ADD   A,12
2349             L302:
2349 B5                  OR    A,L
234A 6F                  LD    L,A
234B             L303:
234B 11 3C 12            LD    DE,4668
234E B7                  OR    A
234F ED 52               SBC   HL,DE
2351             L304:
2351 C2 5C 23            JP    NZ,L308
2354             L305:
2354 3E 17               LD    A,23
2356             L306:
2356 CD 77 3D            CALL  writeLineA
2359             L307:
2359 C3 62 23            JP    L311
235C             L308:
235C 21 E7 03            LD    HL,999
235F             L309:
235F CD 4F 3D            CALL  writeLineHL
2362             L310:
2362                     ;;testBitwiseOperators.j(56)     if (0x1234 ^ 0x10 + 0x0C == 0x1228) println (24); else println (999);
2362             L311:
2362 21 34 12            LD    HL,4660
2365             L312:
2365 3E 10               LD    A,16
2367             L313:
2367 C6 0C               ADD   A,12
2369             L314:
2369 AD                  XOR   A,L
236A 6F                  LD    L,A
236B             L315:
236B 11 28 12            LD    DE,4648
236E B7                  OR    A
236F ED 52               SBC   HL,DE
2371             L316:
2371 C2 7C 23            JP    NZ,L320
2374             L317:
2374 3E 18               LD    A,24
2376             L318:
2376 CD 77 3D            CALL  writeLineA
2379             L319:
2379 C3 82 23            JP    L327
237C             L320:
237C 21 E7 03            LD    HL,999
237F             L321:
237F CD 4F 3D            CALL  writeLineHL
2382             L322:
2382                     ;;testBitwiseOperators.j(57)   
2382             L323:
2382                     ;;testBitwiseOperators.j(58)     //constant/var
2382             L324:
2382                     ;;testBitwiseOperators.j(59)     //*****************
2382             L325:
2382                     ;;testBitwiseOperators.j(60)     //constant byte/var byte
2382             L326:
2382                     ;;testBitwiseOperators.j(61)     if (0x07 & b1 == 0x04) println (25); else println (999);
2382             L327:
2382 3E 07               LD    A,7
2384             L328:
2384 47                  LD    B,A
2385 3A 00 50            LD    A,(05000H)
2388 A0                  AND   A,B
2389             L329:
2389 D6 04               SUB   A,4
238B             L330:
238B C2 96 23            JP    NZ,L334
238E             L331:
238E 3E 19               LD    A,25
2390             L332:
2390 CD 77 3D            CALL  writeLineA
2393             L333:
2393 C3 9C 23            JP    L337
2396             L334:
2396 21 E7 03            LD    HL,999
2399             L335:
2399 CD 4F 3D            CALL  writeLineHL
239C             L336:
239C                     ;;testBitwiseOperators.j(62)     if (0x07 | b1 == 0x1F) println (26); else println (999);
239C             L337:
239C 3E 07               LD    A,7
239E             L338:
239E 47                  LD    B,A
239F 3A 00 50            LD    A,(05000H)
23A2 B0                  OR    A,B
23A3             L339:
23A3 D6 1F               SUB   A,31
23A5             L340:
23A5 C2 B0 23            JP    NZ,L344
23A8             L341:
23A8 3E 1A               LD    A,26
23AA             L342:
23AA CD 77 3D            CALL  writeLineA
23AD             L343:
23AD C3 B6 23            JP    L347
23B0             L344:
23B0 21 E7 03            LD    HL,999
23B3             L345:
23B3 CD 4F 3D            CALL  writeLineHL
23B6             L346:
23B6                     ;;testBitwiseOperators.j(63)     if (0x07 ^ b1 == 0x1B) println (27); else println (999);
23B6             L347:
23B6 3E 07               LD    A,7
23B8             L348:
23B8 47                  LD    B,A
23B9 3A 00 50            LD    A,(05000H)
23BC A8                  XOR   A,B
23BD             L349:
23BD D6 1B               SUB   A,27
23BF             L350:
23BF C2 CA 23            JP    NZ,L354
23C2             L351:
23C2 3E 1B               LD    A,27
23C4             L352:
23C4 CD 77 3D            CALL  writeLineA
23C7             L353:
23C7 C3 D0 23            JP    L358
23CA             L354:
23CA 21 E7 03            LD    HL,999
23CD             L355:
23CD CD 4F 3D            CALL  writeLineHL
23D0             L356:
23D0                     ;;testBitwiseOperators.j(64)     //constant word/var word
23D0             L357:
23D0                     ;;testBitwiseOperators.j(65)     if (0x1234 & w1 == 0x0224) println (28); else println (999);
23D0             L358:
23D0 21 34 12            LD    HL,4660
23D3             L359:
23D3 ED 5B 02 50         LD    DE,(05002H)
23D7 C5                  PUSH  BC
23D8 47                  LD    B,A
23D9 7C                  LD    A,H
23DA A2                  AND   A,D
23DB 67                  LD    H,A
23DC 7D                  LD    A,L
23DD A3                  AND   A,E
23DE 6F                  LD    L,A
23DF 78                  LD    A,B
23E0 C1                  POP   BC
23E1             L360:
23E1 11 24 02            LD    DE,548
23E4 B7                  OR    A
23E5 ED 52               SBC   HL,DE
23E7             L361:
23E7 C2 F2 23            JP    NZ,L365
23EA             L362:
23EA 3E 1C               LD    A,28
23EC             L363:
23EC CD 77 3D            CALL  writeLineA
23EF             L364:
23EF C3 F8 23            JP    L368
23F2             L365:
23F2 21 E7 03            LD    HL,999
23F5             L366:
23F5 CD 4F 3D            CALL  writeLineHL
23F8             L367:
23F8                     ;;testBitwiseOperators.j(66)     if (0x1234 | w1 == 0x133C) println (29); else println (999);
23F8             L368:
23F8 21 34 12            LD    HL,4660
23FB             L369:
23FB ED 5B 02 50         LD    DE,(05002H)
23FF 47                  LD    B,A
2400 7C                  LD    A,H
2401 B2                  OR    A,D
2402 67                  LD    H,A
2403 7D                  LD    A,L
2404 B3                  OR    A,E
2405 6F                  LD    L,A
2406 78                  LD    A,B
2407             L370:
2407 11 3C 13            LD    DE,4924
240A B7                  OR    A
240B ED 52               SBC   HL,DE
240D             L371:
240D C2 18 24            JP    NZ,L375
2410             L372:
2410 3E 1D               LD    A,29
2412             L373:
2412 CD 77 3D            CALL  writeLineA
2415             L374:
2415 C3 1E 24            JP    L378
2418             L375:
2418 21 E7 03            LD    HL,999
241B             L376:
241B CD 4F 3D            CALL  writeLineHL
241E             L377:
241E                     ;;testBitwiseOperators.j(67)     if (0x1234 ^ w1 == 0x1118) println (30); else println (999);
241E             L378:
241E 21 34 12            LD    HL,4660
2421             L379:
2421 ED 5B 02 50         LD    DE,(05002H)
2425 C5                  PUSH  BC
2426 47                  LD    B,A
2427 7C                  LD    A,H
2428 AA                  XOR   A,D
2429 67                  LD    H,A
242A 7D                  LD    A,L
242B AB                  XOR   A,E
242C 6F                  LD    L,A
242D 78                  LD    A,B
242E C1                  POP   BC
242F             L380:
242F 11 18 11            LD    DE,4376
2432 B7                  OR    A
2433 ED 52               SBC   HL,DE
2435             L381:
2435 C2 40 24            JP    NZ,L385
2438             L382:
2438 3E 1E               LD    A,30
243A             L383:
243A CD 77 3D            CALL  writeLineA
243D             L384:
243D C3 46 24            JP    L389
2440             L385:
2440 21 E7 03            LD    HL,999
2443             L386:
2443 CD 4F 3D            CALL  writeLineHL
2446             L387:
2446                     ;;testBitwiseOperators.j(68)     //constant byte/var word
2446             L388:
2446                     ;;testBitwiseOperators.j(69)     if (0x1C & w2 == 0x0014) println (31); else println (999);
2446             L389:
2446 3E 1C               LD    A,28
2448             L390:
2448 6F                  LD    L,A
2449 26 00               LD    H,0
244B             L391:
244B ED 5B 04 50         LD    DE,(05004H)
244F C5                  PUSH  BC
2450 47                  LD    B,A
2451 7C                  LD    A,H
2452 A2                  AND   A,D
2453 67                  LD    H,A
2454 7D                  LD    A,L
2455 A3                  AND   A,E
2456 6F                  LD    L,A
2457 78                  LD    A,B
2458 C1                  POP   BC
2459             L392:
2459 3E 14               LD    A,20
245B             L393:
245B 5F                  LD    E,A
245C 16 00               LD    D,0
245E EB                  EX    DE,HL
245F B7                  OR    A
2460 ED 52               SBC   HL,DE
2462             L394:
2462 C2 6D 24            JP    NZ,L398
2465             L395:
2465 3E 1F               LD    A,31
2467             L396:
2467 CD 77 3D            CALL  writeLineA
246A             L397:
246A C3 73 24            JP    L401
246D             L398:
246D 21 E7 03            LD    HL,999
2470             L399:
2470 CD 4F 3D            CALL  writeLineHL
2473             L400:
2473                     ;;testBitwiseOperators.j(70)     if (0x1C | w2 == 0x123C) println (32); else println (999);
2473             L401:
2473 3E 1C               LD    A,28
2475             L402:
2475 6F                  LD    L,A
2476 26 00               LD    H,0
2478             L403:
2478 ED 5B 04 50         LD    DE,(05004H)
247C 47                  LD    B,A
247D 7C                  LD    A,H
247E B2                  OR    A,D
247F 67                  LD    H,A
2480 7D                  LD    A,L
2481 B3                  OR    A,E
2482 6F                  LD    L,A
2483 78                  LD    A,B
2484             L404:
2484 11 3C 12            LD    DE,4668
2487 B7                  OR    A
2488 ED 52               SBC   HL,DE
248A             L405:
248A C2 95 24            JP    NZ,L409
248D             L406:
248D 3E 20               LD    A,32
248F             L407:
248F CD 77 3D            CALL  writeLineA
2492             L408:
2492 C3 9B 24            JP    L412
2495             L409:
2495 21 E7 03            LD    HL,999
2498             L410:
2498 CD 4F 3D            CALL  writeLineHL
249B             L411:
249B                     ;;testBitwiseOperators.j(71)     if (0x1C ^ w2 == 0x1228) println (33); else println (999);
249B             L412:
249B 3E 1C               LD    A,28
249D             L413:
249D 6F                  LD    L,A
249E 26 00               LD    H,0
24A0             L414:
24A0 ED 5B 04 50         LD    DE,(05004H)
24A4 C5                  PUSH  BC
24A5 47                  LD    B,A
24A6 7C                  LD    A,H
24A7 AA                  XOR   A,D
24A8 67                  LD    H,A
24A9 7D                  LD    A,L
24AA AB                  XOR   A,E
24AB 6F                  LD    L,A
24AC 78                  LD    A,B
24AD C1                  POP   BC
24AE             L415:
24AE 11 28 12            LD    DE,4648
24B1 B7                  OR    A
24B2 ED 52               SBC   HL,DE
24B4             L416:
24B4 C2 BF 24            JP    NZ,L420
24B7             L417:
24B7 3E 21               LD    A,33
24B9             L418:
24B9 CD 77 3D            CALL  writeLineA
24BC             L419:
24BC C3 C5 24            JP    L424
24BF             L420:
24BF 21 E7 03            LD    HL,999
24C2             L421:
24C2 CD 4F 3D            CALL  writeLineHL
24C5             L422:
24C5                     ;;testBitwiseOperators.j(72)     //constant word/var byte
24C5             L423:
24C5                     ;;testBitwiseOperators.j(73)     if (0x1234 & b1 == 0x0014) println (34); else println (999);
24C5             L424:
24C5 21 34 12            LD    HL,4660
24C8             L425:
24C8 ED 5B 00 50         LD    DE,(05000H)
24CC C5                  PUSH  BC
24CD 47                  LD    B,A
24CE 7C                  LD    A,H
24CF A2                  AND   A,D
24D0 67                  LD    H,A
24D1 7D                  LD    A,L
24D2 A3                  AND   A,E
24D3 6F                  LD    L,A
24D4 78                  LD    A,B
24D5 C1                  POP   BC
24D6             L426:
24D6 3E 14               LD    A,20
24D8             L427:
24D8 5F                  LD    E,A
24D9 16 00               LD    D,0
24DB EB                  EX    DE,HL
24DC B7                  OR    A
24DD ED 52               SBC   HL,DE
24DF             L428:
24DF C2 EA 24            JP    NZ,L432
24E2             L429:
24E2 3E 22               LD    A,34
24E4             L430:
24E4 CD 77 3D            CALL  writeLineA
24E7             L431:
24E7 C3 F0 24            JP    L435
24EA             L432:
24EA 21 E7 03            LD    HL,999
24ED             L433:
24ED CD 4F 3D            CALL  writeLineHL
24F0             L434:
24F0                     ;;testBitwiseOperators.j(74)     if (0x1234 | b1 == 0x123C) println (35); else println (999);
24F0             L435:
24F0 21 34 12            LD    HL,4660
24F3             L436:
24F3 ED 5B 00 50         LD    DE,(05000H)
24F7 47                  LD    B,A
24F8 7C                  LD    A,H
24F9 B2                  OR    A,D
24FA 67                  LD    H,A
24FB 7D                  LD    A,L
24FC B3                  OR    A,E
24FD 6F                  LD    L,A
24FE 78                  LD    A,B
24FF             L437:
24FF 11 3C 12            LD    DE,4668
2502 B7                  OR    A
2503 ED 52               SBC   HL,DE
2505             L438:
2505 C2 10 25            JP    NZ,L442
2508             L439:
2508 3E 23               LD    A,35
250A             L440:
250A CD 77 3D            CALL  writeLineA
250D             L441:
250D C3 16 25            JP    L445
2510             L442:
2510 21 E7 03            LD    HL,999
2513             L443:
2513 CD 4F 3D            CALL  writeLineHL
2516             L444:
2516                     ;;testBitwiseOperators.j(75)     if (0x1234 ^ b1 == 0x1228) println (36); else println (999);
2516             L445:
2516 21 34 12            LD    HL,4660
2519             L446:
2519 ED 5B 00 50         LD    DE,(05000H)
251D C5                  PUSH  BC
251E 47                  LD    B,A
251F 7C                  LD    A,H
2520 AA                  XOR   A,D
2521 67                  LD    H,A
2522 7D                  LD    A,L
2523 AB                  XOR   A,E
2524 6F                  LD    L,A
2525 78                  LD    A,B
2526 C1                  POP   BC
2527             L447:
2527 11 28 12            LD    DE,4648
252A B7                  OR    A
252B ED 52               SBC   HL,DE
252D             L448:
252D C2 38 25            JP    NZ,L452
2530             L449:
2530 3E 24               LD    A,36
2532             L450:
2532 CD 77 3D            CALL  writeLineA
2535             L451:
2535 C3 3E 25            JP    L459
2538             L452:
2538 21 E7 03            LD    HL,999
253B             L453:
253B CD 4F 3D            CALL  writeLineHL
253E             L454:
253E                     ;;testBitwiseOperators.j(76)   
253E             L455:
253E                     ;;testBitwiseOperators.j(77)     //constant/final var
253E             L456:
253E                     ;;testBitwiseOperators.j(78)     //*****************
253E             L457:
253E                     ;;testBitwiseOperators.j(79)     //constant byte/final var byte
253E             L458:
253E                     ;;testBitwiseOperators.j(80)     if (0x07 & fb1 == 0x04) println (37); else println (999);
253E             L459:
253E 3E 07               LD    A,7
2540             L460:
2540 E6 1C               AND   A,28
2542             L461:
2542 D6 04               SUB   A,4
2544             L462:
2544 C2 4F 25            JP    NZ,L466
2547             L463:
2547 3E 25               LD    A,37
2549             L464:
2549 CD 77 3D            CALL  writeLineA
254C             L465:
254C C3 55 25            JP    L469
254F             L466:
254F 21 E7 03            LD    HL,999
2552             L467:
2552 CD 4F 3D            CALL  writeLineHL
2555             L468:
2555                     ;;testBitwiseOperators.j(81)     if (0x07 | fb1 == 0x1F) println (38); else println (999);
2555             L469:
2555 3E 07               LD    A,7
2557             L470:
2557 F6 1C               OR    A,28
2559             L471:
2559 D6 1F               SUB   A,31
255B             L472:
255B C2 66 25            JP    NZ,L476
255E             L473:
255E 3E 26               LD    A,38
2560             L474:
2560 CD 77 3D            CALL  writeLineA
2563             L475:
2563 C3 6C 25            JP    L479
2566             L476:
2566 21 E7 03            LD    HL,999
2569             L477:
2569 CD 4F 3D            CALL  writeLineHL
256C             L478:
256C                     ;;testBitwiseOperators.j(82)     if (0x07 ^ fb1 == 0x1B) println (39); else println (999);
256C             L479:
256C 3E 07               LD    A,7
256E             L480:
256E EE 1C               XOR   A,28
2570             L481:
2570 D6 1B               SUB   A,27
2572             L482:
2572 C2 7D 25            JP    NZ,L486
2575             L483:
2575 3E 27               LD    A,39
2577             L484:
2577 CD 77 3D            CALL  writeLineA
257A             L485:
257A C3 83 25            JP    L490
257D             L486:
257D 21 E7 03            LD    HL,999
2580             L487:
2580 CD 4F 3D            CALL  writeLineHL
2583             L488:
2583                     ;;testBitwiseOperators.j(83)     //constant word/final var word
2583             L489:
2583                     ;;testBitwiseOperators.j(84)     if (0x1234 & fw1 == 0x0224) println (40); else println (999);
2583             L490:
2583 21 34 12            LD    HL,4660
2586             L491:
2586 11 2C 03            LD    DE,812
2589 C5                  PUSH  BC
258A 47                  LD    B,A
258B 7C                  LD    A,H
258C A2                  AND   A,D
258D 67                  LD    H,A
258E 7D                  LD    A,L
258F A3                  AND   A,E
2590 6F                  LD    L,A
2591 78                  LD    A,B
2592 C1                  POP   BC
2593             L492:
2593 11 24 02            LD    DE,548
2596 B7                  OR    A
2597 ED 52               SBC   HL,DE
2599             L493:
2599 C2 A4 25            JP    NZ,L497
259C             L494:
259C 3E 28               LD    A,40
259E             L495:
259E CD 77 3D            CALL  writeLineA
25A1             L496:
25A1 C3 AA 25            JP    L500
25A4             L497:
25A4 21 E7 03            LD    HL,999
25A7             L498:
25A7 CD 4F 3D            CALL  writeLineHL
25AA             L499:
25AA                     ;;testBitwiseOperators.j(85)     if (0x1234 | fw1 == 0x133C) println (41); else println (999);
25AA             L500:
25AA 21 34 12            LD    HL,4660
25AD             L501:
25AD 11 2C 03            LD    DE,812
25B0 47                  LD    B,A
25B1 7C                  LD    A,H
25B2 B2                  OR    A,D
25B3 67                  LD    H,A
25B4 7D                  LD    A,L
25B5 B3                  OR    A,E
25B6 6F                  LD    L,A
25B7 78                  LD    A,B
25B8             L502:
25B8 11 3C 13            LD    DE,4924
25BB B7                  OR    A
25BC ED 52               SBC   HL,DE
25BE             L503:
25BE C2 C9 25            JP    NZ,L507
25C1             L504:
25C1 3E 29               LD    A,41
25C3             L505:
25C3 CD 77 3D            CALL  writeLineA
25C6             L506:
25C6 C3 CF 25            JP    L510
25C9             L507:
25C9 21 E7 03            LD    HL,999
25CC             L508:
25CC CD 4F 3D            CALL  writeLineHL
25CF             L509:
25CF                     ;;testBitwiseOperators.j(86)     if (0x1234 ^ fw1 == 0x1118) println (42); else println (999);
25CF             L510:
25CF 21 34 12            LD    HL,4660
25D2             L511:
25D2 11 2C 03            LD    DE,812
25D5 C5                  PUSH  BC
25D6 47                  LD    B,A
25D7 7C                  LD    A,H
25D8 AA                  XOR   A,D
25D9 67                  LD    H,A
25DA 7D                  LD    A,L
25DB AB                  XOR   A,E
25DC 6F                  LD    L,A
25DD 78                  LD    A,B
25DE C1                  POP   BC
25DF             L512:
25DF 11 18 11            LD    DE,4376
25E2 B7                  OR    A
25E3 ED 52               SBC   HL,DE
25E5             L513:
25E5 C2 F0 25            JP    NZ,L517
25E8             L514:
25E8 3E 2A               LD    A,42
25EA             L515:
25EA CD 77 3D            CALL  writeLineA
25ED             L516:
25ED C3 F6 25            JP    L521
25F0             L517:
25F0 21 E7 03            LD    HL,999
25F3             L518:
25F3 CD 4F 3D            CALL  writeLineHL
25F6             L519:
25F6                     ;;testBitwiseOperators.j(87)     //constant byte/final var word
25F6             L520:
25F6                     ;;testBitwiseOperators.j(88)     if (0x1C & fw2 == 0x0014) println (43); else println (999);
25F6             L521:
25F6 3E 1C               LD    A,28
25F8             L522:
25F8 6F                  LD    L,A
25F9 26 00               LD    H,0
25FB             L523:
25FB 11 34 12            LD    DE,4660
25FE C5                  PUSH  BC
25FF 47                  LD    B,A
2600 7C                  LD    A,H
2601 A2                  AND   A,D
2602 67                  LD    H,A
2603 7D                  LD    A,L
2604 A3                  AND   A,E
2605 6F                  LD    L,A
2606 78                  LD    A,B
2607 C1                  POP   BC
2608             L524:
2608 3E 14               LD    A,20
260A             L525:
260A 5F                  LD    E,A
260B 16 00               LD    D,0
260D EB                  EX    DE,HL
260E B7                  OR    A
260F ED 52               SBC   HL,DE
2611             L526:
2611 C2 1C 26            JP    NZ,L530
2614             L527:
2614 3E 2B               LD    A,43
2616             L528:
2616 CD 77 3D            CALL  writeLineA
2619             L529:
2619 C3 22 26            JP    L533
261C             L530:
261C 21 E7 03            LD    HL,999
261F             L531:
261F CD 4F 3D            CALL  writeLineHL
2622             L532:
2622                     ;;testBitwiseOperators.j(89)     if (0x1C | fw2 == 0x123C) println (44); else println (999);
2622             L533:
2622 3E 1C               LD    A,28
2624             L534:
2624 6F                  LD    L,A
2625 26 00               LD    H,0
2627             L535:
2627 11 34 12            LD    DE,4660
262A 47                  LD    B,A
262B 7C                  LD    A,H
262C B2                  OR    A,D
262D 67                  LD    H,A
262E 7D                  LD    A,L
262F B3                  OR    A,E
2630 6F                  LD    L,A
2631 78                  LD    A,B
2632             L536:
2632 11 3C 12            LD    DE,4668
2635 B7                  OR    A
2636 ED 52               SBC   HL,DE
2638             L537:
2638 C2 43 26            JP    NZ,L541
263B             L538:
263B 3E 2C               LD    A,44
263D             L539:
263D CD 77 3D            CALL  writeLineA
2640             L540:
2640 C3 49 26            JP    L544
2643             L541:
2643 21 E7 03            LD    HL,999
2646             L542:
2646 CD 4F 3D            CALL  writeLineHL
2649             L543:
2649                     ;;testBitwiseOperators.j(90)     if (0x1C ^ fw2 == 0x1228) println (45); else println (999);
2649             L544:
2649 3E 1C               LD    A,28
264B             L545:
264B 6F                  LD    L,A
264C 26 00               LD    H,0
264E             L546:
264E 11 34 12            LD    DE,4660
2651 C5                  PUSH  BC
2652 47                  LD    B,A
2653 7C                  LD    A,H
2654 AA                  XOR   A,D
2655 67                  LD    H,A
2656 7D                  LD    A,L
2657 AB                  XOR   A,E
2658 6F                  LD    L,A
2659 78                  LD    A,B
265A C1                  POP   BC
265B             L547:
265B 11 28 12            LD    DE,4648
265E B7                  OR    A
265F ED 52               SBC   HL,DE
2661             L548:
2661 C2 6C 26            JP    NZ,L552
2664             L549:
2664 3E 2D               LD    A,45
2666             L550:
2666 CD 77 3D            CALL  writeLineA
2669             L551:
2669 C3 72 26            JP    L556
266C             L552:
266C 21 E7 03            LD    HL,999
266F             L553:
266F CD 4F 3D            CALL  writeLineHL
2672             L554:
2672                     ;;testBitwiseOperators.j(91)     //constant word/final var byte
2672             L555:
2672                     ;;testBitwiseOperators.j(92)     if (0x1234 & fb1 == 0x0014) println (46); else println (999);
2672             L556:
2672 21 34 12            LD    HL,4660
2675             L557:
2675 11 1C 00            LD    DE,28
2678 C5                  PUSH  BC
2679 47                  LD    B,A
267A 7C                  LD    A,H
267B A2                  AND   A,D
267C 67                  LD    H,A
267D 7D                  LD    A,L
267E A3                  AND   A,E
267F 6F                  LD    L,A
2680 78                  LD    A,B
2681 C1                  POP   BC
2682             L558:
2682 3E 14               LD    A,20
2684             L559:
2684 5F                  LD    E,A
2685 16 00               LD    D,0
2687 EB                  EX    DE,HL
2688 B7                  OR    A
2689 ED 52               SBC   HL,DE
268B             L560:
268B C2 96 26            JP    NZ,L564
268E             L561:
268E 3E 2E               LD    A,46
2690             L562:
2690 CD 77 3D            CALL  writeLineA
2693             L563:
2693 C3 9C 26            JP    L567
2696             L564:
2696 21 E7 03            LD    HL,999
2699             L565:
2699 CD 4F 3D            CALL  writeLineHL
269C             L566:
269C                     ;;testBitwiseOperators.j(93)     if (0x1234 | fb1 == 0x123C) println (47); else println (999);
269C             L567:
269C 21 34 12            LD    HL,4660
269F             L568:
269F 11 1C 00            LD    DE,28
26A2 47                  LD    B,A
26A3 7C                  LD    A,H
26A4 B2                  OR    A,D
26A5 67                  LD    H,A
26A6 7D                  LD    A,L
26A7 B3                  OR    A,E
26A8 6F                  LD    L,A
26A9 78                  LD    A,B
26AA             L569:
26AA 11 3C 12            LD    DE,4668
26AD B7                  OR    A
26AE ED 52               SBC   HL,DE
26B0             L570:
26B0 C2 BB 26            JP    NZ,L574
26B3             L571:
26B3 3E 2F               LD    A,47
26B5             L572:
26B5 CD 77 3D            CALL  writeLineA
26B8             L573:
26B8 C3 C1 26            JP    L577
26BB             L574:
26BB 21 E7 03            LD    HL,999
26BE             L575:
26BE CD 4F 3D            CALL  writeLineHL
26C1             L576:
26C1                     ;;testBitwiseOperators.j(94)     if (0x1234 ^ fb1 == 0x1228) println (48); else println (999);
26C1             L577:
26C1 21 34 12            LD    HL,4660
26C4             L578:
26C4 11 1C 00            LD    DE,28
26C7 C5                  PUSH  BC
26C8 47                  LD    B,A
26C9 7C                  LD    A,H
26CA AA                  XOR   A,D
26CB 67                  LD    H,A
26CC 7D                  LD    A,L
26CD AB                  XOR   A,E
26CE 6F                  LD    L,A
26CF 78                  LD    A,B
26D0 C1                  POP   BC
26D1             L579:
26D1 11 28 12            LD    DE,4648
26D4 B7                  OR    A
26D5 ED 52               SBC   HL,DE
26D7             L580:
26D7 C2 E2 26            JP    NZ,L584
26DA             L581:
26DA 3E 30               LD    A,48
26DC             L582:
26DC CD 77 3D            CALL  writeLineA
26DF             L583:
26DF C3 E8 26            JP    L591
26E2             L584:
26E2 21 E7 03            LD    HL,999
26E5             L585:
26E5 CD 4F 3D            CALL  writeLineHL
26E8             L586:
26E8                     ;;testBitwiseOperators.j(95)   
26E8             L587:
26E8                     ;;testBitwiseOperators.j(96)     //acc/constant
26E8             L588:
26E8                     ;;testBitwiseOperators.j(97)     //************
26E8             L589:
26E8                     ;;testBitwiseOperators.j(98)     //acc byte/constant byte
26E8             L590:
26E8                     ;;testBitwiseOperators.j(99)     if ((0x04 + 0x03) & 0x1C == 0x04) println (49); else println (999);
26E8             L591:
26E8 3E 04               LD    A,4
26EA             L592:
26EA C6 03               ADD   A,3
26EC             L593:
26EC E6 1C               AND   A,28
26EE             L594:
26EE D6 04               SUB   A,4
26F0             L595:
26F0 C2 FB 26            JP    NZ,L599
26F3             L596:
26F3 3E 31               LD    A,49
26F5             L597:
26F5 CD 77 3D            CALL  writeLineA
26F8             L598:
26F8 C3 01 27            JP    L602
26FB             L599:
26FB 21 E7 03            LD    HL,999
26FE             L600:
26FE CD 4F 3D            CALL  writeLineHL
2701             L601:
2701                     ;;testBitwiseOperators.j(100)     if ((0x04 + 0x03) | 0x1C == 0x1F) println (50); else println (999);
2701             L602:
2701 3E 04               LD    A,4
2703             L603:
2703 C6 03               ADD   A,3
2705             L604:
2705 F6 1C               OR    A,28
2707             L605:
2707 D6 1F               SUB   A,31
2709             L606:
2709 C2 14 27            JP    NZ,L610
270C             L607:
270C 3E 32               LD    A,50
270E             L608:
270E CD 77 3D            CALL  writeLineA
2711             L609:
2711 C3 1A 27            JP    L613
2714             L610:
2714 21 E7 03            LD    HL,999
2717             L611:
2717 CD 4F 3D            CALL  writeLineHL
271A             L612:
271A                     ;;testBitwiseOperators.j(101)     if ((0x04 + 0x03) ^ 0x1C == 0x1B) println (51); else println (999);
271A             L613:
271A 3E 04               LD    A,4
271C             L614:
271C C6 03               ADD   A,3
271E             L615:
271E EE 1C               XOR   A,28
2720             L616:
2720 D6 1B               SUB   A,27
2722             L617:
2722 C2 2D 27            JP    NZ,L621
2725             L618:
2725 3E 33               LD    A,51
2727             L619:
2727 CD 77 3D            CALL  writeLineA
272A             L620:
272A C3 33 27            JP    L625
272D             L621:
272D 21 E7 03            LD    HL,999
2730             L622:
2730 CD 4F 3D            CALL  writeLineHL
2733             L623:
2733                     ;;testBitwiseOperators.j(102)     //acc word/constant word
2733             L624:
2733                     ;;testBitwiseOperators.j(103)     if (0x1000 + 0x0234 & 0x032C == 0x0224) println (52); else println (999);
2733             L625:
2733 21 00 10            LD    HL,4096
2736             L626:
2736 11 34 02            LD    DE,564
2739 19                  ADD   HL,DE
273A             L627:
273A 11 2C 03            LD    DE,812
273D C5                  PUSH  BC
273E 47                  LD    B,A
273F 7C                  LD    A,H
2740 A2                  AND   A,D
2741 67                  LD    H,A
2742 7D                  LD    A,L
2743 A3                  AND   A,E
2744 6F                  LD    L,A
2745 78                  LD    A,B
2746 C1                  POP   BC
2747             L628:
2747 11 24 02            LD    DE,548
274A B7                  OR    A
274B ED 52               SBC   HL,DE
274D             L629:
274D C2 58 27            JP    NZ,L633
2750             L630:
2750 3E 34               LD    A,52
2752             L631:
2752 CD 77 3D            CALL  writeLineA
2755             L632:
2755 C3 5E 27            JP    L636
2758             L633:
2758 21 E7 03            LD    HL,999
275B             L634:
275B CD 4F 3D            CALL  writeLineHL
275E             L635:
275E                     ;;testBitwiseOperators.j(104)     if (0x1000 + 0x0234 | 0x032C == 0x133C) println (53); else println (999);
275E             L636:
275E 21 00 10            LD    HL,4096
2761             L637:
2761 11 34 02            LD    DE,564
2764 19                  ADD   HL,DE
2765             L638:
2765 11 2C 03            LD    DE,812
2768 47                  LD    B,A
2769 7C                  LD    A,H
276A B2                  OR    A,D
276B 67                  LD    H,A
276C 7D                  LD    A,L
276D B3                  OR    A,E
276E 6F                  LD    L,A
276F 78                  LD    A,B
2770             L639:
2770 11 3C 13            LD    DE,4924
2773 B7                  OR    A
2774 ED 52               SBC   HL,DE
2776             L640:
2776 C2 81 27            JP    NZ,L644
2779             L641:
2779 3E 35               LD    A,53
277B             L642:
277B CD 77 3D            CALL  writeLineA
277E             L643:
277E C3 87 27            JP    L647
2781             L644:
2781 21 E7 03            LD    HL,999
2784             L645:
2784 CD 4F 3D            CALL  writeLineHL
2787             L646:
2787                     ;;testBitwiseOperators.j(105)     if (0x1000 + 0x0234 ^ 0x032C == 0x1118) println (54); else println (999);
2787             L647:
2787 21 00 10            LD    HL,4096
278A             L648:
278A 11 34 02            LD    DE,564
278D 19                  ADD   HL,DE
278E             L649:
278E 11 2C 03            LD    DE,812
2791 C5                  PUSH  BC
2792 47                  LD    B,A
2793 7C                  LD    A,H
2794 AA                  XOR   A,D
2795 67                  LD    H,A
2796 7D                  LD    A,L
2797 AB                  XOR   A,E
2798 6F                  LD    L,A
2799 78                  LD    A,B
279A C1                  POP   BC
279B             L650:
279B 11 18 11            LD    DE,4376
279E B7                  OR    A
279F ED 52               SBC   HL,DE
27A1             L651:
27A1 C2 AC 27            JP    NZ,L655
27A4             L652:
27A4 3E 36               LD    A,54
27A6             L653:
27A6 CD 77 3D            CALL  writeLineA
27A9             L654:
27A9 C3 B2 27            JP    L659
27AC             L655:
27AC 21 E7 03            LD    HL,999
27AF             L656:
27AF CD 4F 3D            CALL  writeLineHL
27B2             L657:
27B2                     ;;testBitwiseOperators.j(106)     //acc byte/constant word
27B2             L658:
27B2                     ;;testBitwiseOperators.j(107)     if (0x10 + 0x0C & 0x1234 == 0x0014) println (55); else println (999);
27B2             L659:
27B2 3E 10               LD    A,16
27B4             L660:
27B4 C6 0C               ADD   A,12
27B6             L661:
27B6 6F                  LD    L,A
27B7 26 00               LD    H,0
27B9             L662:
27B9 11 34 12            LD    DE,4660
27BC C5                  PUSH  BC
27BD 47                  LD    B,A
27BE 7C                  LD    A,H
27BF A2                  AND   A,D
27C0 67                  LD    H,A
27C1 7D                  LD    A,L
27C2 A3                  AND   A,E
27C3 6F                  LD    L,A
27C4 78                  LD    A,B
27C5 C1                  POP   BC
27C6             L663:
27C6 3E 14               LD    A,20
27C8             L664:
27C8 5F                  LD    E,A
27C9 16 00               LD    D,0
27CB EB                  EX    DE,HL
27CC B7                  OR    A
27CD ED 52               SBC   HL,DE
27CF             L665:
27CF C2 DA 27            JP    NZ,L669
27D2             L666:
27D2 3E 37               LD    A,55
27D4             L667:
27D4 CD 77 3D            CALL  writeLineA
27D7             L668:
27D7 C3 E0 27            JP    L672
27DA             L669:
27DA 21 E7 03            LD    HL,999
27DD             L670:
27DD CD 4F 3D            CALL  writeLineHL
27E0             L671:
27E0                     ;;testBitwiseOperators.j(108)     if (0x10 + 0x0C | 0x1234 == 0x123C) println (56); else println (999);
27E0             L672:
27E0 3E 10               LD    A,16
27E2             L673:
27E2 C6 0C               ADD   A,12
27E4             L674:
27E4 6F                  LD    L,A
27E5 26 00               LD    H,0
27E7             L675:
27E7 11 34 12            LD    DE,4660
27EA 47                  LD    B,A
27EB 7C                  LD    A,H
27EC B2                  OR    A,D
27ED 67                  LD    H,A
27EE 7D                  LD    A,L
27EF B3                  OR    A,E
27F0 6F                  LD    L,A
27F1 78                  LD    A,B
27F2             L676:
27F2 11 3C 12            LD    DE,4668
27F5 B7                  OR    A
27F6 ED 52               SBC   HL,DE
27F8             L677:
27F8 C2 03 28            JP    NZ,L681
27FB             L678:
27FB 3E 38               LD    A,56
27FD             L679:
27FD CD 77 3D            CALL  writeLineA
2800             L680:
2800 C3 09 28            JP    L684
2803             L681:
2803 21 E7 03            LD    HL,999
2806             L682:
2806 CD 4F 3D            CALL  writeLineHL
2809             L683:
2809                     ;;testBitwiseOperators.j(109)     if (0x10 + 0x0C ^ 0x1234 == 0x1228) println (57); else println (999);
2809             L684:
2809 3E 10               LD    A,16
280B             L685:
280B C6 0C               ADD   A,12
280D             L686:
280D 6F                  LD    L,A
280E 26 00               LD    H,0
2810             L687:
2810 11 34 12            LD    DE,4660
2813 C5                  PUSH  BC
2814 47                  LD    B,A
2815 7C                  LD    A,H
2816 AA                  XOR   A,D
2817 67                  LD    H,A
2818 7D                  LD    A,L
2819 AB                  XOR   A,E
281A 6F                  LD    L,A
281B 78                  LD    A,B
281C C1                  POP   BC
281D             L688:
281D 11 28 12            LD    DE,4648
2820 B7                  OR    A
2821 ED 52               SBC   HL,DE
2823             L689:
2823 C2 2E 28            JP    NZ,L693
2826             L690:
2826 3E 39               LD    A,57
2828             L691:
2828 CD 77 3D            CALL  writeLineA
282B             L692:
282B C3 34 28            JP    L697
282E             L693:
282E 21 E7 03            LD    HL,999
2831             L694:
2831 CD 4F 3D            CALL  writeLineHL
2834             L695:
2834                     ;;testBitwiseOperators.j(110)     //acc word/constant byte
2834             L696:
2834                     ;;testBitwiseOperators.j(111)     if (0x1000 + 0x0234 & 0x1C == 0x0014) println (58); else println (999);
2834             L697:
2834 21 00 10            LD    HL,4096
2837             L698:
2837 11 34 02            LD    DE,564
283A 19                  ADD   HL,DE
283B             L699:
283B 11 1C 00            LD    DE,28
283E C5                  PUSH  BC
283F 47                  LD    B,A
2840 7C                  LD    A,H
2841 A2                  AND   A,D
2842 67                  LD    H,A
2843 7D                  LD    A,L
2844 A3                  AND   A,E
2845 6F                  LD    L,A
2846 78                  LD    A,B
2847 C1                  POP   BC
2848             L700:
2848 3E 14               LD    A,20
284A             L701:
284A 5F                  LD    E,A
284B 16 00               LD    D,0
284D EB                  EX    DE,HL
284E B7                  OR    A
284F ED 52               SBC   HL,DE
2851             L702:
2851 C2 5C 28            JP    NZ,L706
2854             L703:
2854 3E 3A               LD    A,58
2856             L704:
2856 CD 77 3D            CALL  writeLineA
2859             L705:
2859 C3 62 28            JP    L709
285C             L706:
285C 21 E7 03            LD    HL,999
285F             L707:
285F CD 4F 3D            CALL  writeLineHL
2862             L708:
2862                     ;;testBitwiseOperators.j(112)     if (0x1000 + 0x0234 | 0x1C == 0x123C) println (59); else println (999);
2862             L709:
2862 21 00 10            LD    HL,4096
2865             L710:
2865 11 34 02            LD    DE,564
2868 19                  ADD   HL,DE
2869             L711:
2869 11 1C 00            LD    DE,28
286C 47                  LD    B,A
286D 7C                  LD    A,H
286E B2                  OR    A,D
286F 67                  LD    H,A
2870 7D                  LD    A,L
2871 B3                  OR    A,E
2872 6F                  LD    L,A
2873 78                  LD    A,B
2874             L712:
2874 11 3C 12            LD    DE,4668
2877 B7                  OR    A
2878 ED 52               SBC   HL,DE
287A             L713:
287A C2 85 28            JP    NZ,L717
287D             L714:
287D 3E 3B               LD    A,59
287F             L715:
287F CD 77 3D            CALL  writeLineA
2882             L716:
2882 C3 8B 28            JP    L720
2885             L717:
2885 21 E7 03            LD    HL,999
2888             L718:
2888 CD 4F 3D            CALL  writeLineHL
288B             L719:
288B                     ;;testBitwiseOperators.j(113)     if (0x1000 + 0x0234 ^ 0x1C == 0x1228) println (60); else println (999);
288B             L720:
288B 21 00 10            LD    HL,4096
288E             L721:
288E 11 34 02            LD    DE,564
2891 19                  ADD   HL,DE
2892             L722:
2892 11 1C 00            LD    DE,28
2895 C5                  PUSH  BC
2896 47                  LD    B,A
2897 7C                  LD    A,H
2898 AA                  XOR   A,D
2899 67                  LD    H,A
289A 7D                  LD    A,L
289B AB                  XOR   A,E
289C 6F                  LD    L,A
289D 78                  LD    A,B
289E C1                  POP   BC
289F             L723:
289F 11 28 12            LD    DE,4648
28A2 B7                  OR    A
28A3 ED 52               SBC   HL,DE
28A5             L724:
28A5 C2 B0 28            JP    NZ,L728
28A8             L725:
28A8 3E 3C               LD    A,60
28AA             L726:
28AA CD 77 3D            CALL  writeLineA
28AD             L727:
28AD C3 B6 28            JP    L735
28B0             L728:
28B0 21 E7 03            LD    HL,999
28B3             L729:
28B3 CD 4F 3D            CALL  writeLineHL
28B6             L730:
28B6                     ;;testBitwiseOperators.j(114)   
28B6             L731:
28B6                     ;;testBitwiseOperators.j(115)     //acc/acc
28B6             L732:
28B6                     ;;testBitwiseOperators.j(116)     //*******
28B6             L733:
28B6                     ;;testBitwiseOperators.j(117)     //acc byte/acc byte
28B6             L734:
28B6                     ;;testBitwiseOperators.j(118)     if (0x04 + 0x03 & 0x10 + 0x0C == 0x04) println (61); else println (999);
28B6             L735:
28B6 3E 04               LD    A,4
28B8             L736:
28B8 C6 03               ADD   A,3
28BA             L737:
28BA F5                  PUSH  AF
28BB 3E 10               LD    A,16
28BD             L738:
28BD C6 0C               ADD   A,12
28BF             L739:
28BF C1                  POP   BC
28C0 A0                  AND   A,B
28C1             L740:
28C1 D6 04               SUB   A,4
28C3             L741:
28C3 C2 CE 28            JP    NZ,L745
28C6             L742:
28C6 3E 3D               LD    A,61
28C8             L743:
28C8 CD 77 3D            CALL  writeLineA
28CB             L744:
28CB C3 D4 28            JP    L748
28CE             L745:
28CE 21 E7 03            LD    HL,999
28D1             L746:
28D1 CD 4F 3D            CALL  writeLineHL
28D4             L747:
28D4                     ;;testBitwiseOperators.j(119)     if (0x04 + 0x03 | 0x10 + 0x0C == 0x1F) println (62); else println (999);
28D4             L748:
28D4 3E 04               LD    A,4
28D6             L749:
28D6 C6 03               ADD   A,3
28D8             L750:
28D8 F5                  PUSH  AF
28D9 3E 10               LD    A,16
28DB             L751:
28DB C6 0C               ADD   A,12
28DD             L752:
28DD C1                  POP   BC
28DE B0                  OR    A,B
28DF             L753:
28DF D6 1F               SUB   A,31
28E1             L754:
28E1 C2 EC 28            JP    NZ,L758
28E4             L755:
28E4 3E 3E               LD    A,62
28E6             L756:
28E6 CD 77 3D            CALL  writeLineA
28E9             L757:
28E9 C3 F2 28            JP    L761
28EC             L758:
28EC 21 E7 03            LD    HL,999
28EF             L759:
28EF CD 4F 3D            CALL  writeLineHL
28F2             L760:
28F2                     ;;testBitwiseOperators.j(120)     if (0x04 + 0x03 ^ 0x10 + 0x0C == 0x1B) println (63); else println (999);
28F2             L761:
28F2 3E 04               LD    A,4
28F4             L762:
28F4 C6 03               ADD   A,3
28F6             L763:
28F6 F5                  PUSH  AF
28F7 3E 10               LD    A,16
28F9             L764:
28F9 C6 0C               ADD   A,12
28FB             L765:
28FB C1                  POP   BC
28FC A8                  XOR   A,B
28FD             L766:
28FD D6 1B               SUB   A,27
28FF             L767:
28FF C2 0A 29            JP    NZ,L771
2902             L768:
2902 3E 3F               LD    A,63
2904             L769:
2904 CD 77 3D            CALL  writeLineA
2907             L770:
2907 C3 10 29            JP    L775
290A             L771:
290A 21 E7 03            LD    HL,999
290D             L772:
290D CD 4F 3D            CALL  writeLineHL
2910             L773:
2910                     ;;testBitwiseOperators.j(121)     //acc word/acc word
2910             L774:
2910                     ;;testBitwiseOperators.j(122)     if (0x1000 + 0x0234 & 0x0100 + 0x022C == 0x0224) println (64); else println (999);
2910             L775:
2910 21 00 10            LD    HL,4096
2913             L776:
2913 11 34 02            LD    DE,564
2916 19                  ADD   HL,DE
2917             L777:
2917 E5                  PUSH  HL
2918 21 00 01            LD    HL,256
291B             L778:
291B 11 2C 02            LD    DE,556
291E 19                  ADD   HL,DE
291F             L779:
291F D1                  POP   DE
2920 C5                  PUSH  BC
2921 47                  LD    B,A
2922 7C                  LD    A,H
2923 A2                  AND   A,D
2924 67                  LD    H,A
2925 7D                  LD    A,L
2926 A3                  AND   A,E
2927 6F                  LD    L,A
2928 78                  LD    A,B
2929 C1                  POP   BC
292A             L780:
292A 11 24 02            LD    DE,548
292D B7                  OR    A
292E ED 52               SBC   HL,DE
2930             L781:
2930 C2 3B 29            JP    NZ,L785
2933             L782:
2933 3E 40               LD    A,64
2935             L783:
2935 CD 77 3D            CALL  writeLineA
2938             L784:
2938 C3 41 29            JP    L788
293B             L785:
293B 21 E7 03            LD    HL,999
293E             L786:
293E CD 4F 3D            CALL  writeLineHL
2941             L787:
2941                     ;;testBitwiseOperators.j(123)     if (0x1000 + 0x0234 | 0x0100 + 0x022C == 0x133C) println (65); else println (999);
2941             L788:
2941 21 00 10            LD    HL,4096
2944             L789:
2944 11 34 02            LD    DE,564
2947 19                  ADD   HL,DE
2948             L790:
2948 E5                  PUSH  HL
2949 21 00 01            LD    HL,256
294C             L791:
294C 11 2C 02            LD    DE,556
294F 19                  ADD   HL,DE
2950             L792:
2950 D1                  POP   DE
2951 47                  LD    B,A
2952 7C                  LD    A,H
2953 B2                  OR    A,D
2954 67                  LD    H,A
2955 7D                  LD    A,L
2956 B3                  OR    A,E
2957 6F                  LD    L,A
2958 78                  LD    A,B
2959             L793:
2959 11 3C 13            LD    DE,4924
295C B7                  OR    A
295D ED 52               SBC   HL,DE
295F             L794:
295F C2 6A 29            JP    NZ,L798
2962             L795:
2962 3E 41               LD    A,65
2964             L796:
2964 CD 77 3D            CALL  writeLineA
2967             L797:
2967 C3 70 29            JP    L801
296A             L798:
296A 21 E7 03            LD    HL,999
296D             L799:
296D CD 4F 3D            CALL  writeLineHL
2970             L800:
2970                     ;;testBitwiseOperators.j(124)     if (0x1000 + 0x0234 ^ 0x0100 + 0x022C == 0x1118) println (66); else println (999);
2970             L801:
2970 21 00 10            LD    HL,4096
2973             L802:
2973 11 34 02            LD    DE,564
2976 19                  ADD   HL,DE
2977             L803:
2977 E5                  PUSH  HL
2978 21 00 01            LD    HL,256
297B             L804:
297B 11 2C 02            LD    DE,556
297E 19                  ADD   HL,DE
297F             L805:
297F D1                  POP   DE
2980 C5                  PUSH  BC
2981 47                  LD    B,A
2982 7C                  LD    A,H
2983 AA                  XOR   A,D
2984 67                  LD    H,A
2985 7D                  LD    A,L
2986 AB                  XOR   A,E
2987 6F                  LD    L,A
2988 78                  LD    A,B
2989 C1                  POP   BC
298A             L806:
298A 11 18 11            LD    DE,4376
298D B7                  OR    A
298E ED 52               SBC   HL,DE
2990             L807:
2990 C2 9B 29            JP    NZ,L811
2993             L808:
2993 3E 42               LD    A,66
2995             L809:
2995 CD 77 3D            CALL  writeLineA
2998             L810:
2998 C3 A1 29            JP    L815
299B             L811:
299B 21 E7 03            LD    HL,999
299E             L812:
299E CD 4F 3D            CALL  writeLineHL
29A1             L813:
29A1                     ;;testBitwiseOperators.j(125)     //acc byte/acc word
29A1             L814:
29A1                     ;;testBitwiseOperators.j(126)     if (0x10 + 0x0C & 0x1000 + 0x0234 == 0x0014) println (67); else println (999);
29A1             L815:
29A1 3E 10               LD    A,16
29A3             L816:
29A3 C6 0C               ADD   A,12
29A5             L817:
29A5 21 00 10            LD    HL,4096
29A8             L818:
29A8 11 34 02            LD    DE,564
29AB 19                  ADD   HL,DE
29AC             L819:
29AC A5                  AND   A,L
29AD 6F                  LD    L,A
29AE 26 00               LD    H,0
29B0             L820:
29B0 3E 14               LD    A,20
29B2             L821:
29B2 5F                  LD    E,A
29B3 16 00               LD    D,0
29B5 EB                  EX    DE,HL
29B6 B7                  OR    A
29B7 ED 52               SBC   HL,DE
29B9             L822:
29B9 C2 C4 29            JP    NZ,L826
29BC             L823:
29BC 3E 43               LD    A,67
29BE             L824:
29BE CD 77 3D            CALL  writeLineA
29C1             L825:
29C1 C3 CA 29            JP    L829
29C4             L826:
29C4 21 E7 03            LD    HL,999
29C7             L827:
29C7 CD 4F 3D            CALL  writeLineHL
29CA             L828:
29CA                     ;;testBitwiseOperators.j(127)     if (0x10 + 0x0C | 0x1000 + 0x0234 == 0x123C) println (68); else println (999);
29CA             L829:
29CA 3E 10               LD    A,16
29CC             L830:
29CC C6 0C               ADD   A,12
29CE             L831:
29CE 21 00 10            LD    HL,4096
29D1             L832:
29D1 11 34 02            LD    DE,564
29D4 19                  ADD   HL,DE
29D5             L833:
29D5 B5                  OR    A,L
29D6 6F                  LD    L,A
29D7             L834:
29D7 11 3C 12            LD    DE,4668
29DA B7                  OR    A
29DB ED 52               SBC   HL,DE
29DD             L835:
29DD C2 E8 29            JP    NZ,L839
29E0             L836:
29E0 3E 44               LD    A,68
29E2             L837:
29E2 CD 77 3D            CALL  writeLineA
29E5             L838:
29E5 C3 EE 29            JP    L842
29E8             L839:
29E8 21 E7 03            LD    HL,999
29EB             L840:
29EB CD 4F 3D            CALL  writeLineHL
29EE             L841:
29EE                     ;;testBitwiseOperators.j(128)     if (0x10 + 0x0C ^ 0x1000 + 0x0234 == 0x1228) println (69); else println (999);
29EE             L842:
29EE 3E 10               LD    A,16
29F0             L843:
29F0 C6 0C               ADD   A,12
29F2             L844:
29F2 21 00 10            LD    HL,4096
29F5             L845:
29F5 11 34 02            LD    DE,564
29F8 19                  ADD   HL,DE
29F9             L846:
29F9 AD                  XOR   A,L
29FA 6F                  LD    L,A
29FB             L847:
29FB 11 28 12            LD    DE,4648
29FE B7                  OR    A
29FF ED 52               SBC   HL,DE
2A01             L848:
2A01 C2 0C 2A            JP    NZ,L852
2A04             L849:
2A04 3E 45               LD    A,69
2A06             L850:
2A06 CD 77 3D            CALL  writeLineA
2A09             L851:
2A09 C3 12 2A            JP    L856
2A0C             L852:
2A0C 21 E7 03            LD    HL,999
2A0F             L853:
2A0F CD 4F 3D            CALL  writeLineHL
2A12             L854:
2A12                     ;;testBitwiseOperators.j(129)     //acc word/acc byte
2A12             L855:
2A12                     ;;testBitwiseOperators.j(130)     if (0x1000 + 0x0234 & 0x10 + 0x0C == 0x0014) println (70); else println (999);
2A12             L856:
2A12 21 00 10            LD    HL,4096
2A15             L857:
2A15 11 34 02            LD    DE,564
2A18 19                  ADD   HL,DE
2A19             L858:
2A19 3E 10               LD    A,16
2A1B             L859:
2A1B C6 0C               ADD   A,12
2A1D             L860:
2A1D A5                  AND   A,L
2A1E 6F                  LD    L,A
2A1F 26 00               LD    H,0
2A21             L861:
2A21 3E 14               LD    A,20
2A23             L862:
2A23 5F                  LD    E,A
2A24 16 00               LD    D,0
2A26 EB                  EX    DE,HL
2A27 B7                  OR    A
2A28 ED 52               SBC   HL,DE
2A2A             L863:
2A2A C2 35 2A            JP    NZ,L867
2A2D             L864:
2A2D 3E 46               LD    A,70
2A2F             L865:
2A2F CD 77 3D            CALL  writeLineA
2A32             L866:
2A32 C3 3B 2A            JP    L870
2A35             L867:
2A35 21 E7 03            LD    HL,999
2A38             L868:
2A38 CD 4F 3D            CALL  writeLineHL
2A3B             L869:
2A3B                     ;;testBitwiseOperators.j(131)     if (0x1000 + 0x0234 | 0x10 + 0x0C == 0x123C) println (71); else println (999);
2A3B             L870:
2A3B 21 00 10            LD    HL,4096
2A3E             L871:
2A3E 11 34 02            LD    DE,564
2A41 19                  ADD   HL,DE
2A42             L872:
2A42 3E 10               LD    A,16
2A44             L873:
2A44 C6 0C               ADD   A,12
2A46             L874:
2A46 B5                  OR    A,L
2A47 6F                  LD    L,A
2A48             L875:
2A48 11 3C 12            LD    DE,4668
2A4B B7                  OR    A
2A4C ED 52               SBC   HL,DE
2A4E             L876:
2A4E C2 59 2A            JP    NZ,L880
2A51             L877:
2A51 3E 47               LD    A,71
2A53             L878:
2A53 CD 77 3D            CALL  writeLineA
2A56             L879:
2A56 C3 5F 2A            JP    L883
2A59             L880:
2A59 21 E7 03            LD    HL,999
2A5C             L881:
2A5C CD 4F 3D            CALL  writeLineHL
2A5F             L882:
2A5F                     ;;testBitwiseOperators.j(132)     if (0x1000 + 0x0234 ^ 0x10 + 0x0C == 0x1228) println (72); else println (999);
2A5F             L883:
2A5F 21 00 10            LD    HL,4096
2A62             L884:
2A62 11 34 02            LD    DE,564
2A65 19                  ADD   HL,DE
2A66             L885:
2A66 3E 10               LD    A,16
2A68             L886:
2A68 C6 0C               ADD   A,12
2A6A             L887:
2A6A AD                  XOR   A,L
2A6B 6F                  LD    L,A
2A6C             L888:
2A6C 11 28 12            LD    DE,4648
2A6F B7                  OR    A
2A70 ED 52               SBC   HL,DE
2A72             L889:
2A72 C2 7D 2A            JP    NZ,L893
2A75             L890:
2A75 3E 48               LD    A,72
2A77             L891:
2A77 CD 77 3D            CALL  writeLineA
2A7A             L892:
2A7A C3 83 2A            JP    L900
2A7D             L893:
2A7D 21 E7 03            LD    HL,999
2A80             L894:
2A80 CD 4F 3D            CALL  writeLineHL
2A83             L895:
2A83                     ;;testBitwiseOperators.j(133)   
2A83             L896:
2A83                     ;;testBitwiseOperators.j(134)     //acc/var
2A83             L897:
2A83                     ;;testBitwiseOperators.j(135)     //*******
2A83             L898:
2A83                     ;;testBitwiseOperators.j(136)     //acc byte/var byte
2A83             L899:
2A83                     ;;testBitwiseOperators.j(137)     if (0x04 + 0x03 & b1 == 0x04) println (73); else println (999);
2A83             L900:
2A83 3E 04               LD    A,4
2A85             L901:
2A85 C6 03               ADD   A,3
2A87             L902:
2A87 47                  LD    B,A
2A88 3A 00 50            LD    A,(05000H)
2A8B A0                  AND   A,B
2A8C             L903:
2A8C D6 04               SUB   A,4
2A8E             L904:
2A8E C2 99 2A            JP    NZ,L908
2A91             L905:
2A91 3E 49               LD    A,73
2A93             L906:
2A93 CD 77 3D            CALL  writeLineA
2A96             L907:
2A96 C3 9F 2A            JP    L911
2A99             L908:
2A99 21 E7 03            LD    HL,999
2A9C             L909:
2A9C CD 4F 3D            CALL  writeLineHL
2A9F             L910:
2A9F                     ;;testBitwiseOperators.j(138)     if (0x04 + 0x03 | b1 == 0x1F) println (74); else println (999);
2A9F             L911:
2A9F 3E 04               LD    A,4
2AA1             L912:
2AA1 C6 03               ADD   A,3
2AA3             L913:
2AA3 47                  LD    B,A
2AA4 3A 00 50            LD    A,(05000H)
2AA7 B0                  OR    A,B
2AA8             L914:
2AA8 D6 1F               SUB   A,31
2AAA             L915:
2AAA C2 B5 2A            JP    NZ,L919
2AAD             L916:
2AAD 3E 4A               LD    A,74
2AAF             L917:
2AAF CD 77 3D            CALL  writeLineA
2AB2             L918:
2AB2 C3 BB 2A            JP    L922
2AB5             L919:
2AB5 21 E7 03            LD    HL,999
2AB8             L920:
2AB8 CD 4F 3D            CALL  writeLineHL
2ABB             L921:
2ABB                     ;;testBitwiseOperators.j(139)     if (0x04 + 0x03 ^ b1 == 0x1B) println (75); else println (999);
2ABB             L922:
2ABB 3E 04               LD    A,4
2ABD             L923:
2ABD C6 03               ADD   A,3
2ABF             L924:
2ABF 47                  LD    B,A
2AC0 3A 00 50            LD    A,(05000H)
2AC3 A8                  XOR   A,B
2AC4             L925:
2AC4 D6 1B               SUB   A,27
2AC6             L926:
2AC6 C2 D1 2A            JP    NZ,L930
2AC9             L927:
2AC9 3E 4B               LD    A,75
2ACB             L928:
2ACB CD 77 3D            CALL  writeLineA
2ACE             L929:
2ACE C3 D7 2A            JP    L934
2AD1             L930:
2AD1 21 E7 03            LD    HL,999
2AD4             L931:
2AD4 CD 4F 3D            CALL  writeLineHL
2AD7             L932:
2AD7                     ;;testBitwiseOperators.j(140)     //acc word/var word
2AD7             L933:
2AD7                     ;;testBitwiseOperators.j(141)     if (0x1000 + 0x0234 & w1 == 0x0224) println (76); else println (999);
2AD7             L934:
2AD7 21 00 10            LD    HL,4096
2ADA             L935:
2ADA 11 34 02            LD    DE,564
2ADD 19                  ADD   HL,DE
2ADE             L936:
2ADE ED 5B 02 50         LD    DE,(05002H)
2AE2 C5                  PUSH  BC
2AE3 47                  LD    B,A
2AE4 7C                  LD    A,H
2AE5 A2                  AND   A,D
2AE6 67                  LD    H,A
2AE7 7D                  LD    A,L
2AE8 A3                  AND   A,E
2AE9 6F                  LD    L,A
2AEA 78                  LD    A,B
2AEB C1                  POP   BC
2AEC             L937:
2AEC 11 24 02            LD    DE,548
2AEF B7                  OR    A
2AF0 ED 52               SBC   HL,DE
2AF2             L938:
2AF2 C2 FD 2A            JP    NZ,L942
2AF5             L939:
2AF5 3E 4C               LD    A,76
2AF7             L940:
2AF7 CD 77 3D            CALL  writeLineA
2AFA             L941:
2AFA C3 03 2B            JP    L945
2AFD             L942:
2AFD 21 E7 03            LD    HL,999
2B00             L943:
2B00 CD 4F 3D            CALL  writeLineHL
2B03             L944:
2B03                     ;;testBitwiseOperators.j(142)     if (0x1000 + 0x0234 | w1 == 0x133C) println (77); else println (999);
2B03             L945:
2B03 21 00 10            LD    HL,4096
2B06             L946:
2B06 11 34 02            LD    DE,564
2B09 19                  ADD   HL,DE
2B0A             L947:
2B0A ED 5B 02 50         LD    DE,(05002H)
2B0E 47                  LD    B,A
2B0F 7C                  LD    A,H
2B10 B2                  OR    A,D
2B11 67                  LD    H,A
2B12 7D                  LD    A,L
2B13 B3                  OR    A,E
2B14 6F                  LD    L,A
2B15 78                  LD    A,B
2B16             L948:
2B16 11 3C 13            LD    DE,4924
2B19 B7                  OR    A
2B1A ED 52               SBC   HL,DE
2B1C             L949:
2B1C C2 27 2B            JP    NZ,L953
2B1F             L950:
2B1F 3E 4D               LD    A,77
2B21             L951:
2B21 CD 77 3D            CALL  writeLineA
2B24             L952:
2B24 C3 2D 2B            JP    L956
2B27             L953:
2B27 21 E7 03            LD    HL,999
2B2A             L954:
2B2A CD 4F 3D            CALL  writeLineHL
2B2D             L955:
2B2D                     ;;testBitwiseOperators.j(143)     if (0x1000 + 0x0234 ^ w1 == 0x1118) println (78); else println (999);
2B2D             L956:
2B2D 21 00 10            LD    HL,4096
2B30             L957:
2B30 11 34 02            LD    DE,564
2B33 19                  ADD   HL,DE
2B34             L958:
2B34 ED 5B 02 50         LD    DE,(05002H)
2B38 C5                  PUSH  BC
2B39 47                  LD    B,A
2B3A 7C                  LD    A,H
2B3B AA                  XOR   A,D
2B3C 67                  LD    H,A
2B3D 7D                  LD    A,L
2B3E AB                  XOR   A,E
2B3F 6F                  LD    L,A
2B40 78                  LD    A,B
2B41 C1                  POP   BC
2B42             L959:
2B42 11 18 11            LD    DE,4376
2B45 B7                  OR    A
2B46 ED 52               SBC   HL,DE
2B48             L960:
2B48 C2 53 2B            JP    NZ,L964
2B4B             L961:
2B4B 3E 4E               LD    A,78
2B4D             L962:
2B4D CD 77 3D            CALL  writeLineA
2B50             L963:
2B50 C3 59 2B            JP    L968
2B53             L964:
2B53 21 E7 03            LD    HL,999
2B56             L965:
2B56 CD 4F 3D            CALL  writeLineHL
2B59             L966:
2B59                     ;;testBitwiseOperators.j(144)     //acc byte/var word
2B59             L967:
2B59                     ;;testBitwiseOperators.j(145)     if (0x10 + 0x0C & w2 == 0x0014) println (79); else println (999);
2B59             L968:
2B59 3E 10               LD    A,16
2B5B             L969:
2B5B C6 0C               ADD   A,12
2B5D             L970:
2B5D 6F                  LD    L,A
2B5E 26 00               LD    H,0
2B60             L971:
2B60 ED 5B 04 50         LD    DE,(05004H)
2B64 C5                  PUSH  BC
2B65 47                  LD    B,A
2B66 7C                  LD    A,H
2B67 A2                  AND   A,D
2B68 67                  LD    H,A
2B69 7D                  LD    A,L
2B6A A3                  AND   A,E
2B6B 6F                  LD    L,A
2B6C 78                  LD    A,B
2B6D C1                  POP   BC
2B6E             L972:
2B6E 3E 14               LD    A,20
2B70             L973:
2B70 5F                  LD    E,A
2B71 16 00               LD    D,0
2B73 EB                  EX    DE,HL
2B74 B7                  OR    A
2B75 ED 52               SBC   HL,DE
2B77             L974:
2B77 C2 82 2B            JP    NZ,L978
2B7A             L975:
2B7A 3E 4F               LD    A,79
2B7C             L976:
2B7C CD 77 3D            CALL  writeLineA
2B7F             L977:
2B7F C3 88 2B            JP    L981
2B82             L978:
2B82 21 E7 03            LD    HL,999
2B85             L979:
2B85 CD 4F 3D            CALL  writeLineHL
2B88             L980:
2B88                     ;;testBitwiseOperators.j(146)     if (0x10 + 0x0C | w2 == 0x123C) println (80); else println (999);
2B88             L981:
2B88 3E 10               LD    A,16
2B8A             L982:
2B8A C6 0C               ADD   A,12
2B8C             L983:
2B8C 6F                  LD    L,A
2B8D 26 00               LD    H,0
2B8F             L984:
2B8F ED 5B 04 50         LD    DE,(05004H)
2B93 47                  LD    B,A
2B94 7C                  LD    A,H
2B95 B2                  OR    A,D
2B96 67                  LD    H,A
2B97 7D                  LD    A,L
2B98 B3                  OR    A,E
2B99 6F                  LD    L,A
2B9A 78                  LD    A,B
2B9B             L985:
2B9B 11 3C 12            LD    DE,4668
2B9E B7                  OR    A
2B9F ED 52               SBC   HL,DE
2BA1             L986:
2BA1 C2 AC 2B            JP    NZ,L990
2BA4             L987:
2BA4 3E 50               LD    A,80
2BA6             L988:
2BA6 CD 77 3D            CALL  writeLineA
2BA9             L989:
2BA9 C3 B2 2B            JP    L993
2BAC             L990:
2BAC 21 E7 03            LD    HL,999
2BAF             L991:
2BAF CD 4F 3D            CALL  writeLineHL
2BB2             L992:
2BB2                     ;;testBitwiseOperators.j(147)     if (0x10 + 0x0C ^ w2 == 0x1228) println (81); else println (999);
2BB2             L993:
2BB2 3E 10               LD    A,16
2BB4             L994:
2BB4 C6 0C               ADD   A,12
2BB6             L995:
2BB6 6F                  LD    L,A
2BB7 26 00               LD    H,0
2BB9             L996:
2BB9 ED 5B 04 50         LD    DE,(05004H)
2BBD C5                  PUSH  BC
2BBE 47                  LD    B,A
2BBF 7C                  LD    A,H
2BC0 AA                  XOR   A,D
2BC1 67                  LD    H,A
2BC2 7D                  LD    A,L
2BC3 AB                  XOR   A,E
2BC4 6F                  LD    L,A
2BC5 78                  LD    A,B
2BC6 C1                  POP   BC
2BC7             L997:
2BC7 11 28 12            LD    DE,4648
2BCA B7                  OR    A
2BCB ED 52               SBC   HL,DE
2BCD             L998:
2BCD C2 D8 2B            JP    NZ,L1002
2BD0             L999:
2BD0 3E 51               LD    A,81
2BD2             L1000:
2BD2 CD 77 3D            CALL  writeLineA
2BD5             L1001:
2BD5 C3 DE 2B            JP    L1006
2BD8             L1002:
2BD8 21 E7 03            LD    HL,999
2BDB             L1003:
2BDB CD 4F 3D            CALL  writeLineHL
2BDE             L1004:
2BDE                     ;;testBitwiseOperators.j(148)     //acc word/var byte
2BDE             L1005:
2BDE                     ;;testBitwiseOperators.j(149)     if (0x1000 + 0x0234 & b1 == 0x0014) println (82); else println (999);
2BDE             L1006:
2BDE 21 00 10            LD    HL,4096
2BE1             L1007:
2BE1 11 34 02            LD    DE,564
2BE4 19                  ADD   HL,DE
2BE5             L1008:
2BE5 ED 5B 00 50         LD    DE,(05000H)
2BE9 C5                  PUSH  BC
2BEA 47                  LD    B,A
2BEB 7C                  LD    A,H
2BEC A2                  AND   A,D
2BED 67                  LD    H,A
2BEE 7D                  LD    A,L
2BEF A3                  AND   A,E
2BF0 6F                  LD    L,A
2BF1 78                  LD    A,B
2BF2 C1                  POP   BC
2BF3             L1009:
2BF3 3E 14               LD    A,20
2BF5             L1010:
2BF5 5F                  LD    E,A
2BF6 16 00               LD    D,0
2BF8 EB                  EX    DE,HL
2BF9 B7                  OR    A
2BFA ED 52               SBC   HL,DE
2BFC             L1011:
2BFC C2 07 2C            JP    NZ,L1015
2BFF             L1012:
2BFF 3E 52               LD    A,82
2C01             L1013:
2C01 CD 77 3D            CALL  writeLineA
2C04             L1014:
2C04 C3 0D 2C            JP    L1018
2C07             L1015:
2C07 21 E7 03            LD    HL,999
2C0A             L1016:
2C0A CD 4F 3D            CALL  writeLineHL
2C0D             L1017:
2C0D                     ;;testBitwiseOperators.j(150)     if (0x1000 + 0x0234 | b1 == 0x123C) println (83); else println (999);
2C0D             L1018:
2C0D 21 00 10            LD    HL,4096
2C10             L1019:
2C10 11 34 02            LD    DE,564
2C13 19                  ADD   HL,DE
2C14             L1020:
2C14 ED 5B 00 50         LD    DE,(05000H)
2C18 47                  LD    B,A
2C19 7C                  LD    A,H
2C1A B2                  OR    A,D
2C1B 67                  LD    H,A
2C1C 7D                  LD    A,L
2C1D B3                  OR    A,E
2C1E 6F                  LD    L,A
2C1F 78                  LD    A,B
2C20             L1021:
2C20 11 3C 12            LD    DE,4668
2C23 B7                  OR    A
2C24 ED 52               SBC   HL,DE
2C26             L1022:
2C26 C2 31 2C            JP    NZ,L1026
2C29             L1023:
2C29 3E 53               LD    A,83
2C2B             L1024:
2C2B CD 77 3D            CALL  writeLineA
2C2E             L1025:
2C2E C3 37 2C            JP    L1029
2C31             L1026:
2C31 21 E7 03            LD    HL,999
2C34             L1027:
2C34 CD 4F 3D            CALL  writeLineHL
2C37             L1028:
2C37                     ;;testBitwiseOperators.j(151)     if (0x1000 + 0x0234 ^ b1 == 0x1228) println (84); else println (999);
2C37             L1029:
2C37 21 00 10            LD    HL,4096
2C3A             L1030:
2C3A 11 34 02            LD    DE,564
2C3D 19                  ADD   HL,DE
2C3E             L1031:
2C3E ED 5B 00 50         LD    DE,(05000H)
2C42 C5                  PUSH  BC
2C43 47                  LD    B,A
2C44 7C                  LD    A,H
2C45 AA                  XOR   A,D
2C46 67                  LD    H,A
2C47 7D                  LD    A,L
2C48 AB                  XOR   A,E
2C49 6F                  LD    L,A
2C4A 78                  LD    A,B
2C4B C1                  POP   BC
2C4C             L1032:
2C4C 11 28 12            LD    DE,4648
2C4F B7                  OR    A
2C50 ED 52               SBC   HL,DE
2C52             L1033:
2C52 C2 5D 2C            JP    NZ,L1037
2C55             L1034:
2C55 3E 54               LD    A,84
2C57             L1035:
2C57 CD 77 3D            CALL  writeLineA
2C5A             L1036:
2C5A C3 63 2C            JP    L1044
2C5D             L1037:
2C5D 21 E7 03            LD    HL,999
2C60             L1038:
2C60 CD 4F 3D            CALL  writeLineHL
2C63             L1039:
2C63                     ;;testBitwiseOperators.j(152)   
2C63             L1040:
2C63                     ;;testBitwiseOperators.j(153)     //acc/final var
2C63             L1041:
2C63                     ;;testBitwiseOperators.j(154)     //*************
2C63             L1042:
2C63                     ;;testBitwiseOperators.j(155)     //acc byte/final var byte
2C63             L1043:
2C63                     ;;testBitwiseOperators.j(156)     if (0x04 + 0x03 & fb1 == 0x04) println (85); else println (999);
2C63             L1044:
2C63 3E 04               LD    A,4
2C65             L1045:
2C65 C6 03               ADD   A,3
2C67             L1046:
2C67 E6 1C               AND   A,28
2C69             L1047:
2C69 D6 04               SUB   A,4
2C6B             L1048:
2C6B C2 76 2C            JP    NZ,L1052
2C6E             L1049:
2C6E 3E 55               LD    A,85
2C70             L1050:
2C70 CD 77 3D            CALL  writeLineA
2C73             L1051:
2C73 C3 7C 2C            JP    L1055
2C76             L1052:
2C76 21 E7 03            LD    HL,999
2C79             L1053:
2C79 CD 4F 3D            CALL  writeLineHL
2C7C             L1054:
2C7C                     ;;testBitwiseOperators.j(157)     if (0x04 + 0x03 | fb1 == 0x1F) println (86); else println (999);
2C7C             L1055:
2C7C 3E 04               LD    A,4
2C7E             L1056:
2C7E C6 03               ADD   A,3
2C80             L1057:
2C80 F6 1C               OR    A,28
2C82             L1058:
2C82 D6 1F               SUB   A,31
2C84             L1059:
2C84 C2 8F 2C            JP    NZ,L1063
2C87             L1060:
2C87 3E 56               LD    A,86
2C89             L1061:
2C89 CD 77 3D            CALL  writeLineA
2C8C             L1062:
2C8C C3 95 2C            JP    L1066
2C8F             L1063:
2C8F 21 E7 03            LD    HL,999
2C92             L1064:
2C92 CD 4F 3D            CALL  writeLineHL
2C95             L1065:
2C95                     ;;testBitwiseOperators.j(158)     if (0x04 + 0x03 ^ fb1 == 0x1B) println (87); else println (999);
2C95             L1066:
2C95 3E 04               LD    A,4
2C97             L1067:
2C97 C6 03               ADD   A,3
2C99             L1068:
2C99 EE 1C               XOR   A,28
2C9B             L1069:
2C9B D6 1B               SUB   A,27
2C9D             L1070:
2C9D C2 A8 2C            JP    NZ,L1074
2CA0             L1071:
2CA0 3E 57               LD    A,87
2CA2             L1072:
2CA2 CD 77 3D            CALL  writeLineA
2CA5             L1073:
2CA5 C3 AE 2C            JP    L1078
2CA8             L1074:
2CA8 21 E7 03            LD    HL,999
2CAB             L1075:
2CAB CD 4F 3D            CALL  writeLineHL
2CAE             L1076:
2CAE                     ;;testBitwiseOperators.j(159)     //acc word/final var word
2CAE             L1077:
2CAE                     ;;testBitwiseOperators.j(160)     if (0x1000 + 0x0234 & fw1 == 0x0224) println (88); else println (999);
2CAE             L1078:
2CAE 21 00 10            LD    HL,4096
2CB1             L1079:
2CB1 11 34 02            LD    DE,564
2CB4 19                  ADD   HL,DE
2CB5             L1080:
2CB5 11 2C 03            LD    DE,812
2CB8 C5                  PUSH  BC
2CB9 47                  LD    B,A
2CBA 7C                  LD    A,H
2CBB A2                  AND   A,D
2CBC 67                  LD    H,A
2CBD 7D                  LD    A,L
2CBE A3                  AND   A,E
2CBF 6F                  LD    L,A
2CC0 78                  LD    A,B
2CC1 C1                  POP   BC
2CC2             L1081:
2CC2 11 24 02            LD    DE,548
2CC5 B7                  OR    A
2CC6 ED 52               SBC   HL,DE
2CC8             L1082:
2CC8 C2 D3 2C            JP    NZ,L1086
2CCB             L1083:
2CCB 3E 58               LD    A,88
2CCD             L1084:
2CCD CD 77 3D            CALL  writeLineA
2CD0             L1085:
2CD0 C3 D9 2C            JP    L1089
2CD3             L1086:
2CD3 21 E7 03            LD    HL,999
2CD6             L1087:
2CD6 CD 4F 3D            CALL  writeLineHL
2CD9             L1088:
2CD9                     ;;testBitwiseOperators.j(161)     if (0x1000 + 0x0234 | fw1 == 0x133C) println (89); else println (999);
2CD9             L1089:
2CD9 21 00 10            LD    HL,4096
2CDC             L1090:
2CDC 11 34 02            LD    DE,564
2CDF 19                  ADD   HL,DE
2CE0             L1091:
2CE0 11 2C 03            LD    DE,812
2CE3 47                  LD    B,A
2CE4 7C                  LD    A,H
2CE5 B2                  OR    A,D
2CE6 67                  LD    H,A
2CE7 7D                  LD    A,L
2CE8 B3                  OR    A,E
2CE9 6F                  LD    L,A
2CEA 78                  LD    A,B
2CEB             L1092:
2CEB 11 3C 13            LD    DE,4924
2CEE B7                  OR    A
2CEF ED 52               SBC   HL,DE
2CF1             L1093:
2CF1 C2 FC 2C            JP    NZ,L1097
2CF4             L1094:
2CF4 3E 59               LD    A,89
2CF6             L1095:
2CF6 CD 77 3D            CALL  writeLineA
2CF9             L1096:
2CF9 C3 02 2D            JP    L1100
2CFC             L1097:
2CFC 21 E7 03            LD    HL,999
2CFF             L1098:
2CFF CD 4F 3D            CALL  writeLineHL
2D02             L1099:
2D02                     ;;testBitwiseOperators.j(162)     if (0x1000 + 0x0234 ^ fw1 == 0x1118) println (90); else println (999);
2D02             L1100:
2D02 21 00 10            LD    HL,4096
2D05             L1101:
2D05 11 34 02            LD    DE,564
2D08 19                  ADD   HL,DE
2D09             L1102:
2D09 11 2C 03            LD    DE,812
2D0C C5                  PUSH  BC
2D0D 47                  LD    B,A
2D0E 7C                  LD    A,H
2D0F AA                  XOR   A,D
2D10 67                  LD    H,A
2D11 7D                  LD    A,L
2D12 AB                  XOR   A,E
2D13 6F                  LD    L,A
2D14 78                  LD    A,B
2D15 C1                  POP   BC
2D16             L1103:
2D16 11 18 11            LD    DE,4376
2D19 B7                  OR    A
2D1A ED 52               SBC   HL,DE
2D1C             L1104:
2D1C C2 27 2D            JP    NZ,L1108
2D1F             L1105:
2D1F 3E 5A               LD    A,90
2D21             L1106:
2D21 CD 77 3D            CALL  writeLineA
2D24             L1107:
2D24 C3 2D 2D            JP    L1112
2D27             L1108:
2D27 21 E7 03            LD    HL,999
2D2A             L1109:
2D2A CD 4F 3D            CALL  writeLineHL
2D2D             L1110:
2D2D                     ;;testBitwiseOperators.j(163)     //acc byte/final var word
2D2D             L1111:
2D2D                     ;;testBitwiseOperators.j(164)     if (0x10 + 0x0C & fw2 == 0x0014) println (91); else println (999);
2D2D             L1112:
2D2D 3E 10               LD    A,16
2D2F             L1113:
2D2F C6 0C               ADD   A,12
2D31             L1114:
2D31 6F                  LD    L,A
2D32 26 00               LD    H,0
2D34             L1115:
2D34 11 34 12            LD    DE,4660
2D37 C5                  PUSH  BC
2D38 47                  LD    B,A
2D39 7C                  LD    A,H
2D3A A2                  AND   A,D
2D3B 67                  LD    H,A
2D3C 7D                  LD    A,L
2D3D A3                  AND   A,E
2D3E 6F                  LD    L,A
2D3F 78                  LD    A,B
2D40 C1                  POP   BC
2D41             L1116:
2D41 3E 14               LD    A,20
2D43             L1117:
2D43 5F                  LD    E,A
2D44 16 00               LD    D,0
2D46 EB                  EX    DE,HL
2D47 B7                  OR    A
2D48 ED 52               SBC   HL,DE
2D4A             L1118:
2D4A C2 55 2D            JP    NZ,L1122
2D4D             L1119:
2D4D 3E 5B               LD    A,91
2D4F             L1120:
2D4F CD 77 3D            CALL  writeLineA
2D52             L1121:
2D52 C3 5B 2D            JP    L1125
2D55             L1122:
2D55 21 E7 03            LD    HL,999
2D58             L1123:
2D58 CD 4F 3D            CALL  writeLineHL
2D5B             L1124:
2D5B                     ;;testBitwiseOperators.j(165)     if (0x10 + 0x0C | fw2 == 0x123C) println (92); else println (999);
2D5B             L1125:
2D5B 3E 10               LD    A,16
2D5D             L1126:
2D5D C6 0C               ADD   A,12
2D5F             L1127:
2D5F 6F                  LD    L,A
2D60 26 00               LD    H,0
2D62             L1128:
2D62 11 34 12            LD    DE,4660
2D65 47                  LD    B,A
2D66 7C                  LD    A,H
2D67 B2                  OR    A,D
2D68 67                  LD    H,A
2D69 7D                  LD    A,L
2D6A B3                  OR    A,E
2D6B 6F                  LD    L,A
2D6C 78                  LD    A,B
2D6D             L1129:
2D6D 11 3C 12            LD    DE,4668
2D70 B7                  OR    A
2D71 ED 52               SBC   HL,DE
2D73             L1130:
2D73 C2 7E 2D            JP    NZ,L1134
2D76             L1131:
2D76 3E 5C               LD    A,92
2D78             L1132:
2D78 CD 77 3D            CALL  writeLineA
2D7B             L1133:
2D7B C3 84 2D            JP    L1137
2D7E             L1134:
2D7E 21 E7 03            LD    HL,999
2D81             L1135:
2D81 CD 4F 3D            CALL  writeLineHL
2D84             L1136:
2D84                     ;;testBitwiseOperators.j(166)     if (0x10 + 0x0C ^ fw2 == 0x1228) println (93); else println (999);
2D84             L1137:
2D84 3E 10               LD    A,16
2D86             L1138:
2D86 C6 0C               ADD   A,12
2D88             L1139:
2D88 6F                  LD    L,A
2D89 26 00               LD    H,0
2D8B             L1140:
2D8B 11 34 12            LD    DE,4660
2D8E C5                  PUSH  BC
2D8F 47                  LD    B,A
2D90 7C                  LD    A,H
2D91 AA                  XOR   A,D
2D92 67                  LD    H,A
2D93 7D                  LD    A,L
2D94 AB                  XOR   A,E
2D95 6F                  LD    L,A
2D96 78                  LD    A,B
2D97 C1                  POP   BC
2D98             L1141:
2D98 11 28 12            LD    DE,4648
2D9B B7                  OR    A
2D9C ED 52               SBC   HL,DE
2D9E             L1142:
2D9E C2 A9 2D            JP    NZ,L1146
2DA1             L1143:
2DA1 3E 5D               LD    A,93
2DA3             L1144:
2DA3 CD 77 3D            CALL  writeLineA
2DA6             L1145:
2DA6 C3 AF 2D            JP    L1150
2DA9             L1146:
2DA9 21 E7 03            LD    HL,999
2DAC             L1147:
2DAC CD 4F 3D            CALL  writeLineHL
2DAF             L1148:
2DAF                     ;;testBitwiseOperators.j(167)     //acc word/final var byte
2DAF             L1149:
2DAF                     ;;testBitwiseOperators.j(168)     if (0x1000 + 0x0234 & fb1 == 0x0014) println (94); else println (999);
2DAF             L1150:
2DAF 21 00 10            LD    HL,4096
2DB2             L1151:
2DB2 11 34 02            LD    DE,564
2DB5 19                  ADD   HL,DE
2DB6             L1152:
2DB6 11 1C 00            LD    DE,28
2DB9 C5                  PUSH  BC
2DBA 47                  LD    B,A
2DBB 7C                  LD    A,H
2DBC A2                  AND   A,D
2DBD 67                  LD    H,A
2DBE 7D                  LD    A,L
2DBF A3                  AND   A,E
2DC0 6F                  LD    L,A
2DC1 78                  LD    A,B
2DC2 C1                  POP   BC
2DC3             L1153:
2DC3 3E 14               LD    A,20
2DC5             L1154:
2DC5 5F                  LD    E,A
2DC6 16 00               LD    D,0
2DC8 EB                  EX    DE,HL
2DC9 B7                  OR    A
2DCA ED 52               SBC   HL,DE
2DCC             L1155:
2DCC C2 D7 2D            JP    NZ,L1159
2DCF             L1156:
2DCF 3E 5E               LD    A,94
2DD1             L1157:
2DD1 CD 77 3D            CALL  writeLineA
2DD4             L1158:
2DD4 C3 DD 2D            JP    L1162
2DD7             L1159:
2DD7 21 E7 03            LD    HL,999
2DDA             L1160:
2DDA CD 4F 3D            CALL  writeLineHL
2DDD             L1161:
2DDD                     ;;testBitwiseOperators.j(169)     if (0x1000 + 0x0234 | fb1 == 0x123C) println (95); else println (999);
2DDD             L1162:
2DDD 21 00 10            LD    HL,4096
2DE0             L1163:
2DE0 11 34 02            LD    DE,564
2DE3 19                  ADD   HL,DE
2DE4             L1164:
2DE4 11 1C 00            LD    DE,28
2DE7 47                  LD    B,A
2DE8 7C                  LD    A,H
2DE9 B2                  OR    A,D
2DEA 67                  LD    H,A
2DEB 7D                  LD    A,L
2DEC B3                  OR    A,E
2DED 6F                  LD    L,A
2DEE 78                  LD    A,B
2DEF             L1165:
2DEF 11 3C 12            LD    DE,4668
2DF2 B7                  OR    A
2DF3 ED 52               SBC   HL,DE
2DF5             L1166:
2DF5 C2 00 2E            JP    NZ,L1170
2DF8             L1167:
2DF8 3E 5F               LD    A,95
2DFA             L1168:
2DFA CD 77 3D            CALL  writeLineA
2DFD             L1169:
2DFD C3 06 2E            JP    L1173
2E00             L1170:
2E00 21 E7 03            LD    HL,999
2E03             L1171:
2E03 CD 4F 3D            CALL  writeLineHL
2E06             L1172:
2E06                     ;;testBitwiseOperators.j(170)     if (0x1000 + 0x0234 ^ fb1 == 0x1228) println (96); else println (999);
2E06             L1173:
2E06 21 00 10            LD    HL,4096
2E09             L1174:
2E09 11 34 02            LD    DE,564
2E0C 19                  ADD   HL,DE
2E0D             L1175:
2E0D 11 1C 00            LD    DE,28
2E10 C5                  PUSH  BC
2E11 47                  LD    B,A
2E12 7C                  LD    A,H
2E13 AA                  XOR   A,D
2E14 67                  LD    H,A
2E15 7D                  LD    A,L
2E16 AB                  XOR   A,E
2E17 6F                  LD    L,A
2E18 78                  LD    A,B
2E19 C1                  POP   BC
2E1A             L1176:
2E1A 11 28 12            LD    DE,4648
2E1D B7                  OR    A
2E1E ED 52               SBC   HL,DE
2E20             L1177:
2E20 C2 2B 2E            JP    NZ,L1181
2E23             L1178:
2E23 3E 60               LD    A,96
2E25             L1179:
2E25 CD 77 3D            CALL  writeLineA
2E28             L1180:
2E28 C3 31 2E            JP    L1188
2E2B             L1181:
2E2B 21 E7 03            LD    HL,999
2E2E             L1182:
2E2E CD 4F 3D            CALL  writeLineHL
2E31             L1183:
2E31                     ;;testBitwiseOperators.j(171)   
2E31             L1184:
2E31                     ;;testBitwiseOperators.j(172)     //var/constant
2E31             L1185:
2E31                     ;;testBitwiseOperators.j(173)     //************
2E31             L1186:
2E31                     ;;testBitwiseOperators.j(174)     //var byte/constant byte
2E31             L1187:
2E31                     ;;testBitwiseOperators.j(175)     if (b2 & 0x1C == 0x04) println (97); else println (999);
2E31             L1188:
2E31 3A 01 50            LD    A,(05001H)
2E34             L1189:
2E34 E6 1C               AND   A,28
2E36             L1190:
2E36 D6 04               SUB   A,4
2E38             L1191:
2E38 C2 43 2E            JP    NZ,L1195
2E3B             L1192:
2E3B 3E 61               LD    A,97
2E3D             L1193:
2E3D CD 77 3D            CALL  writeLineA
2E40             L1194:
2E40 C3 49 2E            JP    L1198
2E43             L1195:
2E43 21 E7 03            LD    HL,999
2E46             L1196:
2E46 CD 4F 3D            CALL  writeLineHL
2E49             L1197:
2E49                     ;;testBitwiseOperators.j(176)     if (b2 | 0x1C == 0x1F) println (98); else println (999);
2E49             L1198:
2E49 3A 01 50            LD    A,(05001H)
2E4C             L1199:
2E4C F6 1C               OR    A,28
2E4E             L1200:
2E4E D6 1F               SUB   A,31
2E50             L1201:
2E50 C2 5B 2E            JP    NZ,L1205
2E53             L1202:
2E53 3E 62               LD    A,98
2E55             L1203:
2E55 CD 77 3D            CALL  writeLineA
2E58             L1204:
2E58 C3 61 2E            JP    L1208
2E5B             L1205:
2E5B 21 E7 03            LD    HL,999
2E5E             L1206:
2E5E CD 4F 3D            CALL  writeLineHL
2E61             L1207:
2E61                     ;;testBitwiseOperators.j(177)     if (b2 ^ 0x1C == 0x1B) println (99); else println (999);
2E61             L1208:
2E61 3A 01 50            LD    A,(05001H)
2E64             L1209:
2E64 EE 1C               XOR   A,28
2E66             L1210:
2E66 D6 1B               SUB   A,27
2E68             L1211:
2E68 C2 73 2E            JP    NZ,L1215
2E6B             L1212:
2E6B 3E 63               LD    A,99
2E6D             L1213:
2E6D CD 77 3D            CALL  writeLineA
2E70             L1214:
2E70 C3 79 2E            JP    L1219
2E73             L1215:
2E73 21 E7 03            LD    HL,999
2E76             L1216:
2E76 CD 4F 3D            CALL  writeLineHL
2E79             L1217:
2E79                     ;;testBitwiseOperators.j(178)     //var word/constant word
2E79             L1218:
2E79                     ;;testBitwiseOperators.j(179)     if (w2 & 0x032C == 0x0224) println (100); else println (999);
2E79             L1219:
2E79 2A 04 50            LD    HL,(05004H)
2E7C             L1220:
2E7C 11 2C 03            LD    DE,812
2E7F C5                  PUSH  BC
2E80 47                  LD    B,A
2E81 7C                  LD    A,H
2E82 A2                  AND   A,D
2E83 67                  LD    H,A
2E84 7D                  LD    A,L
2E85 A3                  AND   A,E
2E86 6F                  LD    L,A
2E87 78                  LD    A,B
2E88 C1                  POP   BC
2E89             L1221:
2E89 11 24 02            LD    DE,548
2E8C B7                  OR    A
2E8D ED 52               SBC   HL,DE
2E8F             L1222:
2E8F C2 9A 2E            JP    NZ,L1226
2E92             L1223:
2E92 3E 64               LD    A,100
2E94             L1224:
2E94 CD 77 3D            CALL  writeLineA
2E97             L1225:
2E97 C3 A0 2E            JP    L1229
2E9A             L1226:
2E9A 21 E7 03            LD    HL,999
2E9D             L1227:
2E9D CD 4F 3D            CALL  writeLineHL
2EA0             L1228:
2EA0                     ;;testBitwiseOperators.j(180)     if (w2 | 0x032C == 0x133C) println (101); else println (999);
2EA0             L1229:
2EA0 2A 04 50            LD    HL,(05004H)
2EA3             L1230:
2EA3 11 2C 03            LD    DE,812
2EA6 47                  LD    B,A
2EA7 7C                  LD    A,H
2EA8 B2                  OR    A,D
2EA9 67                  LD    H,A
2EAA 7D                  LD    A,L
2EAB B3                  OR    A,E
2EAC 6F                  LD    L,A
2EAD 78                  LD    A,B
2EAE             L1231:
2EAE 11 3C 13            LD    DE,4924
2EB1 B7                  OR    A
2EB2 ED 52               SBC   HL,DE
2EB4             L1232:
2EB4 C2 BF 2E            JP    NZ,L1236
2EB7             L1233:
2EB7 3E 65               LD    A,101
2EB9             L1234:
2EB9 CD 77 3D            CALL  writeLineA
2EBC             L1235:
2EBC C3 C5 2E            JP    L1239
2EBF             L1236:
2EBF 21 E7 03            LD    HL,999
2EC2             L1237:
2EC2 CD 4F 3D            CALL  writeLineHL
2EC5             L1238:
2EC5                     ;;testBitwiseOperators.j(181)     if (w2 ^ 0x032C == 0x1118) println (102); else println (999);
2EC5             L1239:
2EC5 2A 04 50            LD    HL,(05004H)
2EC8             L1240:
2EC8 11 2C 03            LD    DE,812
2ECB C5                  PUSH  BC
2ECC 47                  LD    B,A
2ECD 7C                  LD    A,H
2ECE AA                  XOR   A,D
2ECF 67                  LD    H,A
2ED0 7D                  LD    A,L
2ED1 AB                  XOR   A,E
2ED2 6F                  LD    L,A
2ED3 78                  LD    A,B
2ED4 C1                  POP   BC
2ED5             L1241:
2ED5 11 18 11            LD    DE,4376
2ED8 B7                  OR    A
2ED9 ED 52               SBC   HL,DE
2EDB             L1242:
2EDB C2 E6 2E            JP    NZ,L1246
2EDE             L1243:
2EDE 3E 66               LD    A,102
2EE0             L1244:
2EE0 CD 77 3D            CALL  writeLineA
2EE3             L1245:
2EE3 C3 EC 2E            JP    L1250
2EE6             L1246:
2EE6 21 E7 03            LD    HL,999
2EE9             L1247:
2EE9 CD 4F 3D            CALL  writeLineHL
2EEC             L1248:
2EEC                     ;;testBitwiseOperators.j(182)     //var byte/constant word
2EEC             L1249:
2EEC                     ;;testBitwiseOperators.j(183)     if (b1 & 0x1234 == 0x0014) println (103); else println (999);
2EEC             L1250:
2EEC 3A 00 50            LD    A,(05000H)
2EEF             L1251:
2EEF 6F                  LD    L,A
2EF0 26 00               LD    H,0
2EF2             L1252:
2EF2 11 34 12            LD    DE,4660
2EF5 C5                  PUSH  BC
2EF6 47                  LD    B,A
2EF7 7C                  LD    A,H
2EF8 A2                  AND   A,D
2EF9 67                  LD    H,A
2EFA 7D                  LD    A,L
2EFB A3                  AND   A,E
2EFC 6F                  LD    L,A
2EFD 78                  LD    A,B
2EFE C1                  POP   BC
2EFF             L1253:
2EFF 3E 14               LD    A,20
2F01             L1254:
2F01 5F                  LD    E,A
2F02 16 00               LD    D,0
2F04 EB                  EX    DE,HL
2F05 B7                  OR    A
2F06 ED 52               SBC   HL,DE
2F08             L1255:
2F08 C2 13 2F            JP    NZ,L1259
2F0B             L1256:
2F0B 3E 67               LD    A,103
2F0D             L1257:
2F0D CD 77 3D            CALL  writeLineA
2F10             L1258:
2F10 C3 19 2F            JP    L1262
2F13             L1259:
2F13 21 E7 03            LD    HL,999
2F16             L1260:
2F16 CD 4F 3D            CALL  writeLineHL
2F19             L1261:
2F19                     ;;testBitwiseOperators.j(184)     if (b1 | 0x1234 == 0x123C) println (104); else println (999);
2F19             L1262:
2F19 3A 00 50            LD    A,(05000H)
2F1C             L1263:
2F1C 6F                  LD    L,A
2F1D 26 00               LD    H,0
2F1F             L1264:
2F1F 11 34 12            LD    DE,4660
2F22 47                  LD    B,A
2F23 7C                  LD    A,H
2F24 B2                  OR    A,D
2F25 67                  LD    H,A
2F26 7D                  LD    A,L
2F27 B3                  OR    A,E
2F28 6F                  LD    L,A
2F29 78                  LD    A,B
2F2A             L1265:
2F2A 11 3C 12            LD    DE,4668
2F2D B7                  OR    A
2F2E ED 52               SBC   HL,DE
2F30             L1266:
2F30 C2 3B 2F            JP    NZ,L1270
2F33             L1267:
2F33 3E 68               LD    A,104
2F35             L1268:
2F35 CD 77 3D            CALL  writeLineA
2F38             L1269:
2F38 C3 41 2F            JP    L1273
2F3B             L1270:
2F3B 21 E7 03            LD    HL,999
2F3E             L1271:
2F3E CD 4F 3D            CALL  writeLineHL
2F41             L1272:
2F41                     ;;testBitwiseOperators.j(185)     if (b1 ^ 0x1234 == 0x1228) println (105); else println (999);
2F41             L1273:
2F41 3A 00 50            LD    A,(05000H)
2F44             L1274:
2F44 6F                  LD    L,A
2F45 26 00               LD    H,0
2F47             L1275:
2F47 11 34 12            LD    DE,4660
2F4A C5                  PUSH  BC
2F4B 47                  LD    B,A
2F4C 7C                  LD    A,H
2F4D AA                  XOR   A,D
2F4E 67                  LD    H,A
2F4F 7D                  LD    A,L
2F50 AB                  XOR   A,E
2F51 6F                  LD    L,A
2F52 78                  LD    A,B
2F53 C1                  POP   BC
2F54             L1276:
2F54 11 28 12            LD    DE,4648
2F57 B7                  OR    A
2F58 ED 52               SBC   HL,DE
2F5A             L1277:
2F5A C2 65 2F            JP    NZ,L1281
2F5D             L1278:
2F5D 3E 69               LD    A,105
2F5F             L1279:
2F5F CD 77 3D            CALL  writeLineA
2F62             L1280:
2F62 C3 6B 2F            JP    L1285
2F65             L1281:
2F65 21 E7 03            LD    HL,999
2F68             L1282:
2F68 CD 4F 3D            CALL  writeLineHL
2F6B             L1283:
2F6B                     ;;testBitwiseOperators.j(186)     //var word/constant byte
2F6B             L1284:
2F6B                     ;;testBitwiseOperators.j(187)     if (w2 & 0x1C == 0x0014) println (106); else println (999);
2F6B             L1285:
2F6B 2A 04 50            LD    HL,(05004H)
2F6E             L1286:
2F6E 11 1C 00            LD    DE,28
2F71 C5                  PUSH  BC
2F72 47                  LD    B,A
2F73 7C                  LD    A,H
2F74 A2                  AND   A,D
2F75 67                  LD    H,A
2F76 7D                  LD    A,L
2F77 A3                  AND   A,E
2F78 6F                  LD    L,A
2F79 78                  LD    A,B
2F7A C1                  POP   BC
2F7B             L1287:
2F7B 3E 14               LD    A,20
2F7D             L1288:
2F7D 5F                  LD    E,A
2F7E 16 00               LD    D,0
2F80 EB                  EX    DE,HL
2F81 B7                  OR    A
2F82 ED 52               SBC   HL,DE
2F84             L1289:
2F84 C2 8F 2F            JP    NZ,L1293
2F87             L1290:
2F87 3E 6A               LD    A,106
2F89             L1291:
2F89 CD 77 3D            CALL  writeLineA
2F8C             L1292:
2F8C C3 95 2F            JP    L1296
2F8F             L1293:
2F8F 21 E7 03            LD    HL,999
2F92             L1294:
2F92 CD 4F 3D            CALL  writeLineHL
2F95             L1295:
2F95                     ;;testBitwiseOperators.j(188)     if (w2 | 0x1C == 0x123C) println (107); else println (999);
2F95             L1296:
2F95 2A 04 50            LD    HL,(05004H)
2F98             L1297:
2F98 11 1C 00            LD    DE,28
2F9B 47                  LD    B,A
2F9C 7C                  LD    A,H
2F9D B2                  OR    A,D
2F9E 67                  LD    H,A
2F9F 7D                  LD    A,L
2FA0 B3                  OR    A,E
2FA1 6F                  LD    L,A
2FA2 78                  LD    A,B
2FA3             L1298:
2FA3 11 3C 12            LD    DE,4668
2FA6 B7                  OR    A
2FA7 ED 52               SBC   HL,DE
2FA9             L1299:
2FA9 C2 B4 2F            JP    NZ,L1303
2FAC             L1300:
2FAC 3E 6B               LD    A,107
2FAE             L1301:
2FAE CD 77 3D            CALL  writeLineA
2FB1             L1302:
2FB1 C3 BA 2F            JP    L1306
2FB4             L1303:
2FB4 21 E7 03            LD    HL,999
2FB7             L1304:
2FB7 CD 4F 3D            CALL  writeLineHL
2FBA             L1305:
2FBA                     ;;testBitwiseOperators.j(189)     if (w2 ^ 0x1C == 0x1228) println (108); else println (999);
2FBA             L1306:
2FBA 2A 04 50            LD    HL,(05004H)
2FBD             L1307:
2FBD 11 1C 00            LD    DE,28
2FC0 C5                  PUSH  BC
2FC1 47                  LD    B,A
2FC2 7C                  LD    A,H
2FC3 AA                  XOR   A,D
2FC4 67                  LD    H,A
2FC5 7D                  LD    A,L
2FC6 AB                  XOR   A,E
2FC7 6F                  LD    L,A
2FC8 78                  LD    A,B
2FC9 C1                  POP   BC
2FCA             L1308:
2FCA 11 28 12            LD    DE,4648
2FCD B7                  OR    A
2FCE ED 52               SBC   HL,DE
2FD0             L1309:
2FD0 C2 DB 2F            JP    NZ,L1313
2FD3             L1310:
2FD3 3E 6C               LD    A,108
2FD5             L1311:
2FD5 CD 77 3D            CALL  writeLineA
2FD8             L1312:
2FD8 C3 E1 2F            JP    L1320
2FDB             L1313:
2FDB 21 E7 03            LD    HL,999
2FDE             L1314:
2FDE CD 4F 3D            CALL  writeLineHL
2FE1             L1315:
2FE1                     ;;testBitwiseOperators.j(190)   
2FE1             L1316:
2FE1                     ;;testBitwiseOperators.j(191)     //var/acc
2FE1             L1317:
2FE1                     ;;testBitwiseOperators.j(192)     //*******
2FE1             L1318:
2FE1                     ;;testBitwiseOperators.j(193)     //var byte/acc byte
2FE1             L1319:
2FE1                     ;;testBitwiseOperators.j(194)     if (b2 & (0x10 + 0x0C) == 0x04) println (109); else println (999);
2FE1             L1320:
2FE1 3A 01 50            LD    A,(05001H)
2FE4             L1321:
2FE4 F5                  PUSH  AF
2FE5 3E 10               LD    A,16
2FE7             L1322:
2FE7 C6 0C               ADD   A,12
2FE9             L1323:
2FE9 C1                  POP   BC
2FEA A0                  AND   A,B
2FEB             L1324:
2FEB D6 04               SUB   A,4
2FED             L1325:
2FED C2 F8 2F            JP    NZ,L1329
2FF0             L1326:
2FF0 3E 6D               LD    A,109
2FF2             L1327:
2FF2 CD 77 3D            CALL  writeLineA
2FF5             L1328:
2FF5 C3 FE 2F            JP    L1332
2FF8             L1329:
2FF8 21 E7 03            LD    HL,999
2FFB             L1330:
2FFB CD 4F 3D            CALL  writeLineHL
2FFE             L1331:
2FFE                     ;;testBitwiseOperators.j(195)     if (b2 | (0x10 + 0x0C) == 0x1F) println (110); else println (999);
2FFE             L1332:
2FFE 3A 01 50            LD    A,(05001H)
3001             L1333:
3001 F5                  PUSH  AF
3002 3E 10               LD    A,16
3004             L1334:
3004 C6 0C               ADD   A,12
3006             L1335:
3006 C1                  POP   BC
3007 B0                  OR    A,B
3008             L1336:
3008 D6 1F               SUB   A,31
300A             L1337:
300A C2 15 30            JP    NZ,L1341
300D             L1338:
300D 3E 6E               LD    A,110
300F             L1339:
300F CD 77 3D            CALL  writeLineA
3012             L1340:
3012 C3 1B 30            JP    L1344
3015             L1341:
3015 21 E7 03            LD    HL,999
3018             L1342:
3018 CD 4F 3D            CALL  writeLineHL
301B             L1343:
301B                     ;;testBitwiseOperators.j(196)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (111); else println (999);
301B             L1344:
301B 3A 01 50            LD    A,(05001H)
301E             L1345:
301E F5                  PUSH  AF
301F 3E 10               LD    A,16
3021             L1346:
3021 C6 0C               ADD   A,12
3023             L1347:
3023 C1                  POP   BC
3024 A8                  XOR   A,B
3025             L1348:
3025 D6 1B               SUB   A,27
3027             L1349:
3027 C2 32 30            JP    NZ,L1353
302A             L1350:
302A 3E 6F               LD    A,111
302C             L1351:
302C CD 77 3D            CALL  writeLineA
302F             L1352:
302F C3 38 30            JP    L1357
3032             L1353:
3032 21 E7 03            LD    HL,999
3035             L1354:
3035 CD 4F 3D            CALL  writeLineHL
3038             L1355:
3038                     ;;testBitwiseOperators.j(197)     //var word/acc word
3038             L1356:
3038                     ;;testBitwiseOperators.j(198)     if (w2 & 0x0100 + 0x022C == 0x0224) println (112); else println (999);
3038             L1357:
3038 2A 04 50            LD    HL,(05004H)
303B             L1358:
303B E5                  PUSH  HL
303C 21 00 01            LD    HL,256
303F             L1359:
303F 11 2C 02            LD    DE,556
3042 19                  ADD   HL,DE
3043             L1360:
3043 D1                  POP   DE
3044 C5                  PUSH  BC
3045 47                  LD    B,A
3046 7C                  LD    A,H
3047 A2                  AND   A,D
3048 67                  LD    H,A
3049 7D                  LD    A,L
304A A3                  AND   A,E
304B 6F                  LD    L,A
304C 78                  LD    A,B
304D C1                  POP   BC
304E             L1361:
304E 11 24 02            LD    DE,548
3051 B7                  OR    A
3052 ED 52               SBC   HL,DE
3054             L1362:
3054 C2 5F 30            JP    NZ,L1366
3057             L1363:
3057 3E 70               LD    A,112
3059             L1364:
3059 CD 77 3D            CALL  writeLineA
305C             L1365:
305C C3 65 30            JP    L1369
305F             L1366:
305F 21 E7 03            LD    HL,999
3062             L1367:
3062 CD 4F 3D            CALL  writeLineHL
3065             L1368:
3065                     ;;testBitwiseOperators.j(199)     if (w2 | 0x0100 + 0x022C == 0x133C) println (113); else println (999);
3065             L1369:
3065 2A 04 50            LD    HL,(05004H)
3068             L1370:
3068 E5                  PUSH  HL
3069 21 00 01            LD    HL,256
306C             L1371:
306C 11 2C 02            LD    DE,556
306F 19                  ADD   HL,DE
3070             L1372:
3070 D1                  POP   DE
3071 47                  LD    B,A
3072 7C                  LD    A,H
3073 B2                  OR    A,D
3074 67                  LD    H,A
3075 7D                  LD    A,L
3076 B3                  OR    A,E
3077 6F                  LD    L,A
3078 78                  LD    A,B
3079             L1373:
3079 11 3C 13            LD    DE,4924
307C B7                  OR    A
307D ED 52               SBC   HL,DE
307F             L1374:
307F C2 8A 30            JP    NZ,L1378
3082             L1375:
3082 3E 71               LD    A,113
3084             L1376:
3084 CD 77 3D            CALL  writeLineA
3087             L1377:
3087 C3 90 30            JP    L1381
308A             L1378:
308A 21 E7 03            LD    HL,999
308D             L1379:
308D CD 4F 3D            CALL  writeLineHL
3090             L1380:
3090                     ;;testBitwiseOperators.j(200)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (114); else println (999);
3090             L1381:
3090 2A 04 50            LD    HL,(05004H)
3093             L1382:
3093 E5                  PUSH  HL
3094 21 00 01            LD    HL,256
3097             L1383:
3097 11 2C 02            LD    DE,556
309A 19                  ADD   HL,DE
309B             L1384:
309B D1                  POP   DE
309C C5                  PUSH  BC
309D 47                  LD    B,A
309E 7C                  LD    A,H
309F AA                  XOR   A,D
30A0 67                  LD    H,A
30A1 7D                  LD    A,L
30A2 AB                  XOR   A,E
30A3 6F                  LD    L,A
30A4 78                  LD    A,B
30A5 C1                  POP   BC
30A6             L1385:
30A6 11 18 11            LD    DE,4376
30A9 B7                  OR    A
30AA ED 52               SBC   HL,DE
30AC             L1386:
30AC C2 B7 30            JP    NZ,L1390
30AF             L1387:
30AF 3E 72               LD    A,114
30B1             L1388:
30B1 CD 77 3D            CALL  writeLineA
30B4             L1389:
30B4 C3 BD 30            JP    L1394
30B7             L1390:
30B7 21 E7 03            LD    HL,999
30BA             L1391:
30BA CD 4F 3D            CALL  writeLineHL
30BD             L1392:
30BD                     ;;testBitwiseOperators.j(201)     //var byte/acc word
30BD             L1393:
30BD                     ;;testBitwiseOperators.j(202)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (115); else println (999);
30BD             L1394:
30BD 3A 00 50            LD    A,(05000H)
30C0             L1395:
30C0 21 00 10            LD    HL,4096
30C3             L1396:
30C3 11 34 02            LD    DE,564
30C6 19                  ADD   HL,DE
30C7             L1397:
30C7 A5                  AND   A,L
30C8 6F                  LD    L,A
30C9 26 00               LD    H,0
30CB             L1398:
30CB 3E 14               LD    A,20
30CD             L1399:
30CD 5F                  LD    E,A
30CE 16 00               LD    D,0
30D0 EB                  EX    DE,HL
30D1 B7                  OR    A
30D2 ED 52               SBC   HL,DE
30D4             L1400:
30D4 C2 DF 30            JP    NZ,L1404
30D7             L1401:
30D7 3E 73               LD    A,115
30D9             L1402:
30D9 CD 77 3D            CALL  writeLineA
30DC             L1403:
30DC C3 E5 30            JP    L1407
30DF             L1404:
30DF 21 E7 03            LD    HL,999
30E2             L1405:
30E2 CD 4F 3D            CALL  writeLineHL
30E5             L1406:
30E5                     ;;testBitwiseOperators.j(203)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (116); else println (999);
30E5             L1407:
30E5 3A 00 50            LD    A,(05000H)
30E8             L1408:
30E8 21 00 10            LD    HL,4096
30EB             L1409:
30EB 11 34 02            LD    DE,564
30EE 19                  ADD   HL,DE
30EF             L1410:
30EF B5                  OR    A,L
30F0 6F                  LD    L,A
30F1             L1411:
30F1 11 3C 12            LD    DE,4668
30F4 B7                  OR    A
30F5 ED 52               SBC   HL,DE
30F7             L1412:
30F7 C2 02 31            JP    NZ,L1416
30FA             L1413:
30FA 3E 74               LD    A,116
30FC             L1414:
30FC CD 77 3D            CALL  writeLineA
30FF             L1415:
30FF C3 08 31            JP    L1419
3102             L1416:
3102 21 E7 03            LD    HL,999
3105             L1417:
3105 CD 4F 3D            CALL  writeLineHL
3108             L1418:
3108                     ;;testBitwiseOperators.j(204)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (117); else println (999);
3108             L1419:
3108 3A 00 50            LD    A,(05000H)
310B             L1420:
310B 21 00 10            LD    HL,4096
310E             L1421:
310E 11 34 02            LD    DE,564
3111 19                  ADD   HL,DE
3112             L1422:
3112 AD                  XOR   A,L
3113 6F                  LD    L,A
3114             L1423:
3114 11 28 12            LD    DE,4648
3117 B7                  OR    A
3118 ED 52               SBC   HL,DE
311A             L1424:
311A C2 25 31            JP    NZ,L1428
311D             L1425:
311D 3E 75               LD    A,117
311F             L1426:
311F CD 77 3D            CALL  writeLineA
3122             L1427:
3122 C3 2B 31            JP    L1432
3125             L1428:
3125 21 E7 03            LD    HL,999
3128             L1429:
3128 CD 4F 3D            CALL  writeLineHL
312B             L1430:
312B                     ;;testBitwiseOperators.j(205)     //var word/acc byte
312B             L1431:
312B                     ;;testBitwiseOperators.j(206)     if (w2 & 0x10 + 0x0C == 0x0014) println (118); else println (999);
312B             L1432:
312B 2A 04 50            LD    HL,(05004H)
312E             L1433:
312E 3E 10               LD    A,16
3130             L1434:
3130 C6 0C               ADD   A,12
3132             L1435:
3132 A5                  AND   A,L
3133 6F                  LD    L,A
3134 26 00               LD    H,0
3136             L1436:
3136 3E 14               LD    A,20
3138             L1437:
3138 5F                  LD    E,A
3139 16 00               LD    D,0
313B EB                  EX    DE,HL
313C B7                  OR    A
313D ED 52               SBC   HL,DE
313F             L1438:
313F C2 4A 31            JP    NZ,L1442
3142             L1439:
3142 3E 76               LD    A,118
3144             L1440:
3144 CD 77 3D            CALL  writeLineA
3147             L1441:
3147 C3 50 31            JP    L1445
314A             L1442:
314A 21 E7 03            LD    HL,999
314D             L1443:
314D CD 4F 3D            CALL  writeLineHL
3150             L1444:
3150                     ;;testBitwiseOperators.j(207)     if (w2 | 0x10 + 0x0C == 0x123C) println (119); else println (999);
3150             L1445:
3150 2A 04 50            LD    HL,(05004H)
3153             L1446:
3153 3E 10               LD    A,16
3155             L1447:
3155 C6 0C               ADD   A,12
3157             L1448:
3157 B5                  OR    A,L
3158 6F                  LD    L,A
3159             L1449:
3159 11 3C 12            LD    DE,4668
315C B7                  OR    A
315D ED 52               SBC   HL,DE
315F             L1450:
315F C2 6A 31            JP    NZ,L1454
3162             L1451:
3162 3E 77               LD    A,119
3164             L1452:
3164 CD 77 3D            CALL  writeLineA
3167             L1453:
3167 C3 70 31            JP    L1457
316A             L1454:
316A 21 E7 03            LD    HL,999
316D             L1455:
316D CD 4F 3D            CALL  writeLineHL
3170             L1456:
3170                     ;;testBitwiseOperators.j(208)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (120); else println (999);
3170             L1457:
3170 2A 04 50            LD    HL,(05004H)
3173             L1458:
3173 3E 10               LD    A,16
3175             L1459:
3175 C6 0C               ADD   A,12
3177             L1460:
3177 AD                  XOR   A,L
3178 6F                  LD    L,A
3179             L1461:
3179 11 28 12            LD    DE,4648
317C B7                  OR    A
317D ED 52               SBC   HL,DE
317F             L1462:
317F C2 8A 31            JP    NZ,L1466
3182             L1463:
3182 3E 78               LD    A,120
3184             L1464:
3184 CD 77 3D            CALL  writeLineA
3187             L1465:
3187 C3 90 31            JP    L1473
318A             L1466:
318A 21 E7 03            LD    HL,999
318D             L1467:
318D CD 4F 3D            CALL  writeLineHL
3190             L1468:
3190                     ;;testBitwiseOperators.j(209)   
3190             L1469:
3190                     ;;testBitwiseOperators.j(210)     //var/var
3190             L1470:
3190                     ;;testBitwiseOperators.j(211)     //*******
3190             L1471:
3190                     ;;testBitwiseOperators.j(212)     //var byte/var byte
3190             L1472:
3190                     ;;testBitwiseOperators.j(213)     if (b2 & b1 == 0x04) println (121); else println (999);
3190             L1473:
3190 3A 01 50            LD    A,(05001H)
3193             L1474:
3193 47                  LD    B,A
3194 3A 00 50            LD    A,(05000H)
3197 A0                  AND   A,B
3198             L1475:
3198 D6 04               SUB   A,4
319A             L1476:
319A C2 A5 31            JP    NZ,L1480
319D             L1477:
319D 3E 79               LD    A,121
319F             L1478:
319F CD 77 3D            CALL  writeLineA
31A2             L1479:
31A2 C3 AB 31            JP    L1483
31A5             L1480:
31A5 21 E7 03            LD    HL,999
31A8             L1481:
31A8 CD 4F 3D            CALL  writeLineHL
31AB             L1482:
31AB                     ;;testBitwiseOperators.j(214)     if (b2 | b1 == 0x1F) println (122); else println (999);
31AB             L1483:
31AB 3A 01 50            LD    A,(05001H)
31AE             L1484:
31AE 47                  LD    B,A
31AF 3A 00 50            LD    A,(05000H)
31B2 B0                  OR    A,B
31B3             L1485:
31B3 D6 1F               SUB   A,31
31B5             L1486:
31B5 C2 C0 31            JP    NZ,L1490
31B8             L1487:
31B8 3E 7A               LD    A,122
31BA             L1488:
31BA CD 77 3D            CALL  writeLineA
31BD             L1489:
31BD C3 C6 31            JP    L1493
31C0             L1490:
31C0 21 E7 03            LD    HL,999
31C3             L1491:
31C3 CD 4F 3D            CALL  writeLineHL
31C6             L1492:
31C6                     ;;testBitwiseOperators.j(215)     if (b2 ^ b1 == 0x1B) println (123); else println (999);
31C6             L1493:
31C6 3A 01 50            LD    A,(05001H)
31C9             L1494:
31C9 47                  LD    B,A
31CA 3A 00 50            LD    A,(05000H)
31CD A8                  XOR   A,B
31CE             L1495:
31CE D6 1B               SUB   A,27
31D0             L1496:
31D0 C2 DB 31            JP    NZ,L1500
31D3             L1497:
31D3 3E 7B               LD    A,123
31D5             L1498:
31D5 CD 77 3D            CALL  writeLineA
31D8             L1499:
31D8 C3 E1 31            JP    L1504
31DB             L1500:
31DB 21 E7 03            LD    HL,999
31DE             L1501:
31DE CD 4F 3D            CALL  writeLineHL
31E1             L1502:
31E1                     ;;testBitwiseOperators.j(216)     //var word/var word
31E1             L1503:
31E1                     ;;testBitwiseOperators.j(217)     if (w2 & w1 == 0x0224) println (124); else println (999);
31E1             L1504:
31E1 2A 04 50            LD    HL,(05004H)
31E4             L1505:
31E4 ED 5B 02 50         LD    DE,(05002H)
31E8 C5                  PUSH  BC
31E9 47                  LD    B,A
31EA 7C                  LD    A,H
31EB A2                  AND   A,D
31EC 67                  LD    H,A
31ED 7D                  LD    A,L
31EE A3                  AND   A,E
31EF 6F                  LD    L,A
31F0 78                  LD    A,B
31F1 C1                  POP   BC
31F2             L1506:
31F2 11 24 02            LD    DE,548
31F5 B7                  OR    A
31F6 ED 52               SBC   HL,DE
31F8             L1507:
31F8 C2 03 32            JP    NZ,L1511
31FB             L1508:
31FB 3E 7C               LD    A,124
31FD             L1509:
31FD CD 77 3D            CALL  writeLineA
3200             L1510:
3200 C3 09 32            JP    L1514
3203             L1511:
3203 21 E7 03            LD    HL,999
3206             L1512:
3206 CD 4F 3D            CALL  writeLineHL
3209             L1513:
3209                     ;;testBitwiseOperators.j(218)     if (w2 | w1 == 0x133C) println (125); else println (999);
3209             L1514:
3209 2A 04 50            LD    HL,(05004H)
320C             L1515:
320C ED 5B 02 50         LD    DE,(05002H)
3210 47                  LD    B,A
3211 7C                  LD    A,H
3212 B2                  OR    A,D
3213 67                  LD    H,A
3214 7D                  LD    A,L
3215 B3                  OR    A,E
3216 6F                  LD    L,A
3217 78                  LD    A,B
3218             L1516:
3218 11 3C 13            LD    DE,4924
321B B7                  OR    A
321C ED 52               SBC   HL,DE
321E             L1517:
321E C2 29 32            JP    NZ,L1521
3221             L1518:
3221 3E 7D               LD    A,125
3223             L1519:
3223 CD 77 3D            CALL  writeLineA
3226             L1520:
3226 C3 2F 32            JP    L1524
3229             L1521:
3229 21 E7 03            LD    HL,999
322C             L1522:
322C CD 4F 3D            CALL  writeLineHL
322F             L1523:
322F                     ;;testBitwiseOperators.j(219)     if (w2 ^ w1 == 0x1118) println (126); else println (999);
322F             L1524:
322F 2A 04 50            LD    HL,(05004H)
3232             L1525:
3232 ED 5B 02 50         LD    DE,(05002H)
3236 C5                  PUSH  BC
3237 47                  LD    B,A
3238 7C                  LD    A,H
3239 AA                  XOR   A,D
323A 67                  LD    H,A
323B 7D                  LD    A,L
323C AB                  XOR   A,E
323D 6F                  LD    L,A
323E 78                  LD    A,B
323F C1                  POP   BC
3240             L1526:
3240 11 18 11            LD    DE,4376
3243 B7                  OR    A
3244 ED 52               SBC   HL,DE
3246             L1527:
3246 C2 51 32            JP    NZ,L1531
3249             L1528:
3249 3E 7E               LD    A,126
324B             L1529:
324B CD 77 3D            CALL  writeLineA
324E             L1530:
324E C3 57 32            JP    L1535
3251             L1531:
3251 21 E7 03            LD    HL,999
3254             L1532:
3254 CD 4F 3D            CALL  writeLineHL
3257             L1533:
3257                     ;;testBitwiseOperators.j(220)     //var byte/var word
3257             L1534:
3257                     ;;testBitwiseOperators.j(221)     if (b1 & w2 == 0x0014) println (127); else println (999);
3257             L1535:
3257 3A 00 50            LD    A,(05000H)
325A             L1536:
325A 6F                  LD    L,A
325B 26 00               LD    H,0
325D             L1537:
325D ED 5B 04 50         LD    DE,(05004H)
3261 C5                  PUSH  BC
3262 47                  LD    B,A
3263 7C                  LD    A,H
3264 A2                  AND   A,D
3265 67                  LD    H,A
3266 7D                  LD    A,L
3267 A3                  AND   A,E
3268 6F                  LD    L,A
3269 78                  LD    A,B
326A C1                  POP   BC
326B             L1538:
326B 3E 14               LD    A,20
326D             L1539:
326D 5F                  LD    E,A
326E 16 00               LD    D,0
3270 EB                  EX    DE,HL
3271 B7                  OR    A
3272 ED 52               SBC   HL,DE
3274             L1540:
3274 C2 7F 32            JP    NZ,L1544
3277             L1541:
3277 3E 7F               LD    A,127
3279             L1542:
3279 CD 77 3D            CALL  writeLineA
327C             L1543:
327C C3 85 32            JP    L1547
327F             L1544:
327F 21 E7 03            LD    HL,999
3282             L1545:
3282 CD 4F 3D            CALL  writeLineHL
3285             L1546:
3285                     ;;testBitwiseOperators.j(222)     if (b1 | w2 == 0x123C) println (128); else println (999);
3285             L1547:
3285 3A 00 50            LD    A,(05000H)
3288             L1548:
3288 6F                  LD    L,A
3289 26 00               LD    H,0
328B             L1549:
328B ED 5B 04 50         LD    DE,(05004H)
328F 47                  LD    B,A
3290 7C                  LD    A,H
3291 B2                  OR    A,D
3292 67                  LD    H,A
3293 7D                  LD    A,L
3294 B3                  OR    A,E
3295 6F                  LD    L,A
3296 78                  LD    A,B
3297             L1550:
3297 11 3C 12            LD    DE,4668
329A B7                  OR    A
329B ED 52               SBC   HL,DE
329D             L1551:
329D C2 A8 32            JP    NZ,L1555
32A0             L1552:
32A0 3E 80               LD    A,128
32A2             L1553:
32A2 CD 77 3D            CALL  writeLineA
32A5             L1554:
32A5 C3 AE 32            JP    L1558
32A8             L1555:
32A8 21 E7 03            LD    HL,999
32AB             L1556:
32AB CD 4F 3D            CALL  writeLineHL
32AE             L1557:
32AE                     ;;testBitwiseOperators.j(223)     if (b1 ^ w2 == 0x1228) println (129); else println (999);
32AE             L1558:
32AE 3A 00 50            LD    A,(05000H)
32B1             L1559:
32B1 6F                  LD    L,A
32B2 26 00               LD    H,0
32B4             L1560:
32B4 ED 5B 04 50         LD    DE,(05004H)
32B8 C5                  PUSH  BC
32B9 47                  LD    B,A
32BA 7C                  LD    A,H
32BB AA                  XOR   A,D
32BC 67                  LD    H,A
32BD 7D                  LD    A,L
32BE AB                  XOR   A,E
32BF 6F                  LD    L,A
32C0 78                  LD    A,B
32C1 C1                  POP   BC
32C2             L1561:
32C2 11 28 12            LD    DE,4648
32C5 B7                  OR    A
32C6 ED 52               SBC   HL,DE
32C8             L1562:
32C8 C2 D3 32            JP    NZ,L1566
32CB             L1563:
32CB 3E 81               LD    A,129
32CD             L1564:
32CD CD 77 3D            CALL  writeLineA
32D0             L1565:
32D0 C3 D9 32            JP    L1570
32D3             L1566:
32D3 21 E7 03            LD    HL,999
32D6             L1567:
32D6 CD 4F 3D            CALL  writeLineHL
32D9             L1568:
32D9                     ;;testBitwiseOperators.j(224)     //var word/var byte
32D9             L1569:
32D9                     ;;testBitwiseOperators.j(225)     if (w2 & b1 == 0x0014) println (130); else println (999);
32D9             L1570:
32D9 2A 04 50            LD    HL,(05004H)
32DC             L1571:
32DC ED 5B 00 50         LD    DE,(05000H)
32E0 C5                  PUSH  BC
32E1 47                  LD    B,A
32E2 7C                  LD    A,H
32E3 A2                  AND   A,D
32E4 67                  LD    H,A
32E5 7D                  LD    A,L
32E6 A3                  AND   A,E
32E7 6F                  LD    L,A
32E8 78                  LD    A,B
32E9 C1                  POP   BC
32EA             L1572:
32EA 3E 14               LD    A,20
32EC             L1573:
32EC 5F                  LD    E,A
32ED 16 00               LD    D,0
32EF EB                  EX    DE,HL
32F0 B7                  OR    A
32F1 ED 52               SBC   HL,DE
32F3             L1574:
32F3 C2 FE 32            JP    NZ,L1578
32F6             L1575:
32F6 3E 82               LD    A,130
32F8             L1576:
32F8 CD 77 3D            CALL  writeLineA
32FB             L1577:
32FB C3 04 33            JP    L1581
32FE             L1578:
32FE 21 E7 03            LD    HL,999
3301             L1579:
3301 CD 4F 3D            CALL  writeLineHL
3304             L1580:
3304                     ;;testBitwiseOperators.j(226)     if (w2 | b1 == 0x123C) println (131); else println (999);
3304             L1581:
3304 2A 04 50            LD    HL,(05004H)
3307             L1582:
3307 ED 5B 00 50         LD    DE,(05000H)
330B 47                  LD    B,A
330C 7C                  LD    A,H
330D B2                  OR    A,D
330E 67                  LD    H,A
330F 7D                  LD    A,L
3310 B3                  OR    A,E
3311 6F                  LD    L,A
3312 78                  LD    A,B
3313             L1583:
3313 11 3C 12            LD    DE,4668
3316 B7                  OR    A
3317 ED 52               SBC   HL,DE
3319             L1584:
3319 C2 24 33            JP    NZ,L1588
331C             L1585:
331C 3E 83               LD    A,131
331E             L1586:
331E CD 77 3D            CALL  writeLineA
3321             L1587:
3321 C3 2A 33            JP    L1591
3324             L1588:
3324 21 E7 03            LD    HL,999
3327             L1589:
3327 CD 4F 3D            CALL  writeLineHL
332A             L1590:
332A                     ;;testBitwiseOperators.j(227)     if (w2 ^ b1 == 0x1228) println (132); else println (999);
332A             L1591:
332A 2A 04 50            LD    HL,(05004H)
332D             L1592:
332D ED 5B 00 50         LD    DE,(05000H)
3331 C5                  PUSH  BC
3332 47                  LD    B,A
3333 7C                  LD    A,H
3334 AA                  XOR   A,D
3335 67                  LD    H,A
3336 7D                  LD    A,L
3337 AB                  XOR   A,E
3338 6F                  LD    L,A
3339 78                  LD    A,B
333A C1                  POP   BC
333B             L1593:
333B 11 28 12            LD    DE,4648
333E B7                  OR    A
333F ED 52               SBC   HL,DE
3341             L1594:
3341 C2 4C 33            JP    NZ,L1598
3344             L1595:
3344 3E 84               LD    A,132
3346             L1596:
3346 CD 77 3D            CALL  writeLineA
3349             L1597:
3349 C3 52 33            JP    L1605
334C             L1598:
334C 21 E7 03            LD    HL,999
334F             L1599:
334F CD 4F 3D            CALL  writeLineHL
3352             L1600:
3352                     ;;testBitwiseOperators.j(228)   
3352             L1601:
3352                     ;;testBitwiseOperators.j(229)     //var/final var
3352             L1602:
3352                     ;;testBitwiseOperators.j(230)     //*************
3352             L1603:
3352                     ;;testBitwiseOperators.j(231)     //var byte/final var byte
3352             L1604:
3352                     ;;testBitwiseOperators.j(232)     if (b2 & fb1 == 0x04) println (133); else println (999);
3352             L1605:
3352 3A 01 50            LD    A,(05001H)
3355             L1606:
3355 E6 1C               AND   A,28
3357             L1607:
3357 D6 04               SUB   A,4
3359             L1608:
3359 C2 64 33            JP    NZ,L1612
335C             L1609:
335C 3E 85               LD    A,133
335E             L1610:
335E CD 77 3D            CALL  writeLineA
3361             L1611:
3361 C3 6A 33            JP    L1615
3364             L1612:
3364 21 E7 03            LD    HL,999
3367             L1613:
3367 CD 4F 3D            CALL  writeLineHL
336A             L1614:
336A                     ;;testBitwiseOperators.j(233)     if (b2 | fb1 == 0x1F) println (134); else println (999);
336A             L1615:
336A 3A 01 50            LD    A,(05001H)
336D             L1616:
336D F6 1C               OR    A,28
336F             L1617:
336F D6 1F               SUB   A,31
3371             L1618:
3371 C2 7C 33            JP    NZ,L1622
3374             L1619:
3374 3E 86               LD    A,134
3376             L1620:
3376 CD 77 3D            CALL  writeLineA
3379             L1621:
3379 C3 82 33            JP    L1625
337C             L1622:
337C 21 E7 03            LD    HL,999
337F             L1623:
337F CD 4F 3D            CALL  writeLineHL
3382             L1624:
3382                     ;;testBitwiseOperators.j(234)     if (b2 ^ fb1 == 0x1B) println (135); else println (999);
3382             L1625:
3382 3A 01 50            LD    A,(05001H)
3385             L1626:
3385 EE 1C               XOR   A,28
3387             L1627:
3387 D6 1B               SUB   A,27
3389             L1628:
3389 C2 94 33            JP    NZ,L1632
338C             L1629:
338C 3E 87               LD    A,135
338E             L1630:
338E CD 77 3D            CALL  writeLineA
3391             L1631:
3391 C3 9A 33            JP    L1636
3394             L1632:
3394 21 E7 03            LD    HL,999
3397             L1633:
3397 CD 4F 3D            CALL  writeLineHL
339A             L1634:
339A                     ;;testBitwiseOperators.j(235)     //var word/final var word
339A             L1635:
339A                     ;;testBitwiseOperators.j(236)     if (w2 & fw1 == 0x0224) println (136); else println (999);
339A             L1636:
339A 2A 04 50            LD    HL,(05004H)
339D             L1637:
339D 11 2C 03            LD    DE,812
33A0 C5                  PUSH  BC
33A1 47                  LD    B,A
33A2 7C                  LD    A,H
33A3 A2                  AND   A,D
33A4 67                  LD    H,A
33A5 7D                  LD    A,L
33A6 A3                  AND   A,E
33A7 6F                  LD    L,A
33A8 78                  LD    A,B
33A9 C1                  POP   BC
33AA             L1638:
33AA 11 24 02            LD    DE,548
33AD B7                  OR    A
33AE ED 52               SBC   HL,DE
33B0             L1639:
33B0 C2 BB 33            JP    NZ,L1643
33B3             L1640:
33B3 3E 88               LD    A,136
33B5             L1641:
33B5 CD 77 3D            CALL  writeLineA
33B8             L1642:
33B8 C3 C1 33            JP    L1646
33BB             L1643:
33BB 21 E7 03            LD    HL,999
33BE             L1644:
33BE CD 4F 3D            CALL  writeLineHL
33C1             L1645:
33C1                     ;;testBitwiseOperators.j(237)     if (w2 | fw1 == 0x133C) println (137); else println (999);
33C1             L1646:
33C1 2A 04 50            LD    HL,(05004H)
33C4             L1647:
33C4 11 2C 03            LD    DE,812
33C7 47                  LD    B,A
33C8 7C                  LD    A,H
33C9 B2                  OR    A,D
33CA 67                  LD    H,A
33CB 7D                  LD    A,L
33CC B3                  OR    A,E
33CD 6F                  LD    L,A
33CE 78                  LD    A,B
33CF             L1648:
33CF 11 3C 13            LD    DE,4924
33D2 B7                  OR    A
33D3 ED 52               SBC   HL,DE
33D5             L1649:
33D5 C2 E0 33            JP    NZ,L1653
33D8             L1650:
33D8 3E 89               LD    A,137
33DA             L1651:
33DA CD 77 3D            CALL  writeLineA
33DD             L1652:
33DD C3 E6 33            JP    L1656
33E0             L1653:
33E0 21 E7 03            LD    HL,999
33E3             L1654:
33E3 CD 4F 3D            CALL  writeLineHL
33E6             L1655:
33E6                     ;;testBitwiseOperators.j(238)     if (w2 ^ fw1 == 0x1118) println (138); else println (999);
33E6             L1656:
33E6 2A 04 50            LD    HL,(05004H)
33E9             L1657:
33E9 11 2C 03            LD    DE,812
33EC C5                  PUSH  BC
33ED 47                  LD    B,A
33EE 7C                  LD    A,H
33EF AA                  XOR   A,D
33F0 67                  LD    H,A
33F1 7D                  LD    A,L
33F2 AB                  XOR   A,E
33F3 6F                  LD    L,A
33F4 78                  LD    A,B
33F5 C1                  POP   BC
33F6             L1658:
33F6 11 18 11            LD    DE,4376
33F9 B7                  OR    A
33FA ED 52               SBC   HL,DE
33FC             L1659:
33FC C2 07 34            JP    NZ,L1663
33FF             L1660:
33FF 3E 8A               LD    A,138
3401             L1661:
3401 CD 77 3D            CALL  writeLineA
3404             L1662:
3404 C3 0D 34            JP    L1667
3407             L1663:
3407 21 E7 03            LD    HL,999
340A             L1664:
340A CD 4F 3D            CALL  writeLineHL
340D             L1665:
340D                     ;;testBitwiseOperators.j(239)     //var byte/final var word
340D             L1666:
340D                     ;;testBitwiseOperators.j(240)     if (b1 & fw2 == 0x0014) println (139); else println (999);
340D             L1667:
340D 3A 00 50            LD    A,(05000H)
3410             L1668:
3410 6F                  LD    L,A
3411 26 00               LD    H,0
3413             L1669:
3413 11 34 12            LD    DE,4660
3416 C5                  PUSH  BC
3417 47                  LD    B,A
3418 7C                  LD    A,H
3419 A2                  AND   A,D
341A 67                  LD    H,A
341B 7D                  LD    A,L
341C A3                  AND   A,E
341D 6F                  LD    L,A
341E 78                  LD    A,B
341F C1                  POP   BC
3420             L1670:
3420 3E 14               LD    A,20
3422             L1671:
3422 5F                  LD    E,A
3423 16 00               LD    D,0
3425 EB                  EX    DE,HL
3426 B7                  OR    A
3427 ED 52               SBC   HL,DE
3429             L1672:
3429 C2 34 34            JP    NZ,L1676
342C             L1673:
342C 3E 8B               LD    A,139
342E             L1674:
342E CD 77 3D            CALL  writeLineA
3431             L1675:
3431 C3 3A 34            JP    L1679
3434             L1676:
3434 21 E7 03            LD    HL,999
3437             L1677:
3437 CD 4F 3D            CALL  writeLineHL
343A             L1678:
343A                     ;;testBitwiseOperators.j(241)     if (b1 | fw2 == 0x123C) println (140); else println (999);
343A             L1679:
343A 3A 00 50            LD    A,(05000H)
343D             L1680:
343D 6F                  LD    L,A
343E 26 00               LD    H,0
3440             L1681:
3440 11 34 12            LD    DE,4660
3443 47                  LD    B,A
3444 7C                  LD    A,H
3445 B2                  OR    A,D
3446 67                  LD    H,A
3447 7D                  LD    A,L
3448 B3                  OR    A,E
3449 6F                  LD    L,A
344A 78                  LD    A,B
344B             L1682:
344B 11 3C 12            LD    DE,4668
344E B7                  OR    A
344F ED 52               SBC   HL,DE
3451             L1683:
3451 C2 5C 34            JP    NZ,L1687
3454             L1684:
3454 3E 8C               LD    A,140
3456             L1685:
3456 CD 77 3D            CALL  writeLineA
3459             L1686:
3459 C3 62 34            JP    L1690
345C             L1687:
345C 21 E7 03            LD    HL,999
345F             L1688:
345F CD 4F 3D            CALL  writeLineHL
3462             L1689:
3462                     ;;testBitwiseOperators.j(242)     if (b1 ^ fw2 == 0x1228) println (141); else println (999);
3462             L1690:
3462 3A 00 50            LD    A,(05000H)
3465             L1691:
3465 6F                  LD    L,A
3466 26 00               LD    H,0
3468             L1692:
3468 11 34 12            LD    DE,4660
346B C5                  PUSH  BC
346C 47                  LD    B,A
346D 7C                  LD    A,H
346E AA                  XOR   A,D
346F 67                  LD    H,A
3470 7D                  LD    A,L
3471 AB                  XOR   A,E
3472 6F                  LD    L,A
3473 78                  LD    A,B
3474 C1                  POP   BC
3475             L1693:
3475 11 28 12            LD    DE,4648
3478 B7                  OR    A
3479 ED 52               SBC   HL,DE
347B             L1694:
347B C2 86 34            JP    NZ,L1698
347E             L1695:
347E 3E 8D               LD    A,141
3480             L1696:
3480 CD 77 3D            CALL  writeLineA
3483             L1697:
3483 C3 8C 34            JP    L1702
3486             L1698:
3486 21 E7 03            LD    HL,999
3489             L1699:
3489 CD 4F 3D            CALL  writeLineHL
348C             L1700:
348C                     ;;testBitwiseOperators.j(243)     //var word/final var byte
348C             L1701:
348C                     ;;testBitwiseOperators.j(244)     if (w2 & fb1 == 0x0014) println (142); else println (999);
348C             L1702:
348C 2A 04 50            LD    HL,(05004H)
348F             L1703:
348F 11 1C 00            LD    DE,28
3492 C5                  PUSH  BC
3493 47                  LD    B,A
3494 7C                  LD    A,H
3495 A2                  AND   A,D
3496 67                  LD    H,A
3497 7D                  LD    A,L
3498 A3                  AND   A,E
3499 6F                  LD    L,A
349A 78                  LD    A,B
349B C1                  POP   BC
349C             L1704:
349C 3E 14               LD    A,20
349E             L1705:
349E 5F                  LD    E,A
349F 16 00               LD    D,0
34A1 EB                  EX    DE,HL
34A2 B7                  OR    A
34A3 ED 52               SBC   HL,DE
34A5             L1706:
34A5 C2 B0 34            JP    NZ,L1710
34A8             L1707:
34A8 3E 8E               LD    A,142
34AA             L1708:
34AA CD 77 3D            CALL  writeLineA
34AD             L1709:
34AD C3 B6 34            JP    L1713
34B0             L1710:
34B0 21 E7 03            LD    HL,999
34B3             L1711:
34B3 CD 4F 3D            CALL  writeLineHL
34B6             L1712:
34B6                     ;;testBitwiseOperators.j(245)     if (w2 | fb1 == 0x123C) println (143); else println (999);
34B6             L1713:
34B6 2A 04 50            LD    HL,(05004H)
34B9             L1714:
34B9 11 1C 00            LD    DE,28
34BC 47                  LD    B,A
34BD 7C                  LD    A,H
34BE B2                  OR    A,D
34BF 67                  LD    H,A
34C0 7D                  LD    A,L
34C1 B3                  OR    A,E
34C2 6F                  LD    L,A
34C3 78                  LD    A,B
34C4             L1715:
34C4 11 3C 12            LD    DE,4668
34C7 B7                  OR    A
34C8 ED 52               SBC   HL,DE
34CA             L1716:
34CA C2 D5 34            JP    NZ,L1720
34CD             L1717:
34CD 3E 8F               LD    A,143
34CF             L1718:
34CF CD 77 3D            CALL  writeLineA
34D2             L1719:
34D2 C3 DB 34            JP    L1723
34D5             L1720:
34D5 21 E7 03            LD    HL,999
34D8             L1721:
34D8 CD 4F 3D            CALL  writeLineHL
34DB             L1722:
34DB                     ;;testBitwiseOperators.j(246)     if (w2 ^ fb1 == 0x1228) println (144); else println (999);
34DB             L1723:
34DB 2A 04 50            LD    HL,(05004H)
34DE             L1724:
34DE 11 1C 00            LD    DE,28
34E1 C5                  PUSH  BC
34E2 47                  LD    B,A
34E3 7C                  LD    A,H
34E4 AA                  XOR   A,D
34E5 67                  LD    H,A
34E6 7D                  LD    A,L
34E7 AB                  XOR   A,E
34E8 6F                  LD    L,A
34E9 78                  LD    A,B
34EA C1                  POP   BC
34EB             L1725:
34EB 11 28 12            LD    DE,4648
34EE B7                  OR    A
34EF ED 52               SBC   HL,DE
34F1             L1726:
34F1 C2 FC 34            JP    NZ,L1730
34F4             L1727:
34F4 3E 90               LD    A,144
34F6             L1728:
34F6 CD 77 3D            CALL  writeLineA
34F9             L1729:
34F9 C3 02 35            JP    L1737
34FC             L1730:
34FC 21 E7 03            LD    HL,999
34FF             L1731:
34FF CD 4F 3D            CALL  writeLineHL
3502             L1732:
3502                     ;;testBitwiseOperators.j(247)   
3502             L1733:
3502                     ;;testBitwiseOperators.j(248)     //final var/constant
3502             L1734:
3502                     ;;testBitwiseOperators.j(249)     //******************
3502             L1735:
3502                     ;;testBitwiseOperators.j(250)     //final var byte/constant byte
3502             L1736:
3502                     ;;testBitwiseOperators.j(251)     if (b2 & 0x1C == 0x04) println (145); else println (999);
3502             L1737:
3502 3A 01 50            LD    A,(05001H)
3505             L1738:
3505 E6 1C               AND   A,28
3507             L1739:
3507 D6 04               SUB   A,4
3509             L1740:
3509 C2 14 35            JP    NZ,L1744
350C             L1741:
350C 3E 91               LD    A,145
350E             L1742:
350E CD 77 3D            CALL  writeLineA
3511             L1743:
3511 C3 1A 35            JP    L1747
3514             L1744:
3514 21 E7 03            LD    HL,999
3517             L1745:
3517 CD 4F 3D            CALL  writeLineHL
351A             L1746:
351A                     ;;testBitwiseOperators.j(252)     if (b2 | 0x1C == 0x1F) println (146); else println (999);
351A             L1747:
351A 3A 01 50            LD    A,(05001H)
351D             L1748:
351D F6 1C               OR    A,28
351F             L1749:
351F D6 1F               SUB   A,31
3521             L1750:
3521 C2 2C 35            JP    NZ,L1754
3524             L1751:
3524 3E 92               LD    A,146
3526             L1752:
3526 CD 77 3D            CALL  writeLineA
3529             L1753:
3529 C3 32 35            JP    L1757
352C             L1754:
352C 21 E7 03            LD    HL,999
352F             L1755:
352F CD 4F 3D            CALL  writeLineHL
3532             L1756:
3532                     ;;testBitwiseOperators.j(253)     if (b2 ^ 0x1C == 0x1B) println (147); else println (999);
3532             L1757:
3532 3A 01 50            LD    A,(05001H)
3535             L1758:
3535 EE 1C               XOR   A,28
3537             L1759:
3537 D6 1B               SUB   A,27
3539             L1760:
3539 C2 44 35            JP    NZ,L1764
353C             L1761:
353C 3E 93               LD    A,147
353E             L1762:
353E CD 77 3D            CALL  writeLineA
3541             L1763:
3541 C3 4A 35            JP    L1768
3544             L1764:
3544 21 E7 03            LD    HL,999
3547             L1765:
3547 CD 4F 3D            CALL  writeLineHL
354A             L1766:
354A                     ;;testBitwiseOperators.j(254)     //final var word/constant word
354A             L1767:
354A                     ;;testBitwiseOperators.j(255)     if (w2 & 0x032C == 0x0224) println (148); else println (999);
354A             L1768:
354A 2A 04 50            LD    HL,(05004H)
354D             L1769:
354D 11 2C 03            LD    DE,812
3550 C5                  PUSH  BC
3551 47                  LD    B,A
3552 7C                  LD    A,H
3553 A2                  AND   A,D
3554 67                  LD    H,A
3555 7D                  LD    A,L
3556 A3                  AND   A,E
3557 6F                  LD    L,A
3558 78                  LD    A,B
3559 C1                  POP   BC
355A             L1770:
355A 11 24 02            LD    DE,548
355D B7                  OR    A
355E ED 52               SBC   HL,DE
3560             L1771:
3560 C2 6B 35            JP    NZ,L1775
3563             L1772:
3563 3E 94               LD    A,148
3565             L1773:
3565 CD 77 3D            CALL  writeLineA
3568             L1774:
3568 C3 71 35            JP    L1778
356B             L1775:
356B 21 E7 03            LD    HL,999
356E             L1776:
356E CD 4F 3D            CALL  writeLineHL
3571             L1777:
3571                     ;;testBitwiseOperators.j(256)     if (w2 | 0x032C == 0x133C) println (149); else println (999);
3571             L1778:
3571 2A 04 50            LD    HL,(05004H)
3574             L1779:
3574 11 2C 03            LD    DE,812
3577 47                  LD    B,A
3578 7C                  LD    A,H
3579 B2                  OR    A,D
357A 67                  LD    H,A
357B 7D                  LD    A,L
357C B3                  OR    A,E
357D 6F                  LD    L,A
357E 78                  LD    A,B
357F             L1780:
357F 11 3C 13            LD    DE,4924
3582 B7                  OR    A
3583 ED 52               SBC   HL,DE
3585             L1781:
3585 C2 90 35            JP    NZ,L1785
3588             L1782:
3588 3E 95               LD    A,149
358A             L1783:
358A CD 77 3D            CALL  writeLineA
358D             L1784:
358D C3 96 35            JP    L1788
3590             L1785:
3590 21 E7 03            LD    HL,999
3593             L1786:
3593 CD 4F 3D            CALL  writeLineHL
3596             L1787:
3596                     ;;testBitwiseOperators.j(257)     if (w2 ^ 0x032C == 0x1118) println (150); else println (999);
3596             L1788:
3596 2A 04 50            LD    HL,(05004H)
3599             L1789:
3599 11 2C 03            LD    DE,812
359C C5                  PUSH  BC
359D 47                  LD    B,A
359E 7C                  LD    A,H
359F AA                  XOR   A,D
35A0 67                  LD    H,A
35A1 7D                  LD    A,L
35A2 AB                  XOR   A,E
35A3 6F                  LD    L,A
35A4 78                  LD    A,B
35A5 C1                  POP   BC
35A6             L1790:
35A6 11 18 11            LD    DE,4376
35A9 B7                  OR    A
35AA ED 52               SBC   HL,DE
35AC             L1791:
35AC C2 B7 35            JP    NZ,L1795
35AF             L1792:
35AF 3E 96               LD    A,150
35B1             L1793:
35B1 CD 77 3D            CALL  writeLineA
35B4             L1794:
35B4 C3 BD 35            JP    L1799
35B7             L1795:
35B7 21 E7 03            LD    HL,999
35BA             L1796:
35BA CD 4F 3D            CALL  writeLineHL
35BD             L1797:
35BD                     ;;testBitwiseOperators.j(258)     //final var byte/constant word
35BD             L1798:
35BD                     ;;testBitwiseOperators.j(259)     if (b1 & 0x1234 == 0x0014) println (151); else println (999);
35BD             L1799:
35BD 3A 00 50            LD    A,(05000H)
35C0             L1800:
35C0 6F                  LD    L,A
35C1 26 00               LD    H,0
35C3             L1801:
35C3 11 34 12            LD    DE,4660
35C6 C5                  PUSH  BC
35C7 47                  LD    B,A
35C8 7C                  LD    A,H
35C9 A2                  AND   A,D
35CA 67                  LD    H,A
35CB 7D                  LD    A,L
35CC A3                  AND   A,E
35CD 6F                  LD    L,A
35CE 78                  LD    A,B
35CF C1                  POP   BC
35D0             L1802:
35D0 3E 14               LD    A,20
35D2             L1803:
35D2 5F                  LD    E,A
35D3 16 00               LD    D,0
35D5 EB                  EX    DE,HL
35D6 B7                  OR    A
35D7 ED 52               SBC   HL,DE
35D9             L1804:
35D9 C2 E4 35            JP    NZ,L1808
35DC             L1805:
35DC 3E 97               LD    A,151
35DE             L1806:
35DE CD 77 3D            CALL  writeLineA
35E1             L1807:
35E1 C3 EA 35            JP    L1811
35E4             L1808:
35E4 21 E7 03            LD    HL,999
35E7             L1809:
35E7 CD 4F 3D            CALL  writeLineHL
35EA             L1810:
35EA                     ;;testBitwiseOperators.j(260)     if (b1 | 0x1234 == 0x123C) println (152); else println (999);
35EA             L1811:
35EA 3A 00 50            LD    A,(05000H)
35ED             L1812:
35ED 6F                  LD    L,A
35EE 26 00               LD    H,0
35F0             L1813:
35F0 11 34 12            LD    DE,4660
35F3 47                  LD    B,A
35F4 7C                  LD    A,H
35F5 B2                  OR    A,D
35F6 67                  LD    H,A
35F7 7D                  LD    A,L
35F8 B3                  OR    A,E
35F9 6F                  LD    L,A
35FA 78                  LD    A,B
35FB             L1814:
35FB 11 3C 12            LD    DE,4668
35FE B7                  OR    A
35FF ED 52               SBC   HL,DE
3601             L1815:
3601 C2 0C 36            JP    NZ,L1819
3604             L1816:
3604 3E 98               LD    A,152
3606             L1817:
3606 CD 77 3D            CALL  writeLineA
3609             L1818:
3609 C3 12 36            JP    L1822
360C             L1819:
360C 21 E7 03            LD    HL,999
360F             L1820:
360F CD 4F 3D            CALL  writeLineHL
3612             L1821:
3612                     ;;testBitwiseOperators.j(261)     if (b1 ^ 0x1234 == 0x1228) println (153); else println (999);
3612             L1822:
3612 3A 00 50            LD    A,(05000H)
3615             L1823:
3615 6F                  LD    L,A
3616 26 00               LD    H,0
3618             L1824:
3618 11 34 12            LD    DE,4660
361B C5                  PUSH  BC
361C 47                  LD    B,A
361D 7C                  LD    A,H
361E AA                  XOR   A,D
361F 67                  LD    H,A
3620 7D                  LD    A,L
3621 AB                  XOR   A,E
3622 6F                  LD    L,A
3623 78                  LD    A,B
3624 C1                  POP   BC
3625             L1825:
3625 11 28 12            LD    DE,4648
3628 B7                  OR    A
3629 ED 52               SBC   HL,DE
362B             L1826:
362B C2 36 36            JP    NZ,L1830
362E             L1827:
362E 3E 99               LD    A,153
3630             L1828:
3630 CD 77 3D            CALL  writeLineA
3633             L1829:
3633 C3 3C 36            JP    L1834
3636             L1830:
3636 21 E7 03            LD    HL,999
3639             L1831:
3639 CD 4F 3D            CALL  writeLineHL
363C             L1832:
363C                     ;;testBitwiseOperators.j(262)     //final var word/constant byte
363C             L1833:
363C                     ;;testBitwiseOperators.j(263)     if (w2 & 0x1C == 0x0014) println (154); else println (999);
363C             L1834:
363C 2A 04 50            LD    HL,(05004H)
363F             L1835:
363F 11 1C 00            LD    DE,28
3642 C5                  PUSH  BC
3643 47                  LD    B,A
3644 7C                  LD    A,H
3645 A2                  AND   A,D
3646 67                  LD    H,A
3647 7D                  LD    A,L
3648 A3                  AND   A,E
3649 6F                  LD    L,A
364A 78                  LD    A,B
364B C1                  POP   BC
364C             L1836:
364C 3E 14               LD    A,20
364E             L1837:
364E 5F                  LD    E,A
364F 16 00               LD    D,0
3651 EB                  EX    DE,HL
3652 B7                  OR    A
3653 ED 52               SBC   HL,DE
3655             L1838:
3655 C2 60 36            JP    NZ,L1842
3658             L1839:
3658 3E 9A               LD    A,154
365A             L1840:
365A CD 77 3D            CALL  writeLineA
365D             L1841:
365D C3 66 36            JP    L1845
3660             L1842:
3660 21 E7 03            LD    HL,999
3663             L1843:
3663 CD 4F 3D            CALL  writeLineHL
3666             L1844:
3666                     ;;testBitwiseOperators.j(264)     if (w2 | 0x1C == 0x123C) println (155); else println (999);
3666             L1845:
3666 2A 04 50            LD    HL,(05004H)
3669             L1846:
3669 11 1C 00            LD    DE,28
366C 47                  LD    B,A
366D 7C                  LD    A,H
366E B2                  OR    A,D
366F 67                  LD    H,A
3670 7D                  LD    A,L
3671 B3                  OR    A,E
3672 6F                  LD    L,A
3673 78                  LD    A,B
3674             L1847:
3674 11 3C 12            LD    DE,4668
3677 B7                  OR    A
3678 ED 52               SBC   HL,DE
367A             L1848:
367A C2 85 36            JP    NZ,L1852
367D             L1849:
367D 3E 9B               LD    A,155
367F             L1850:
367F CD 77 3D            CALL  writeLineA
3682             L1851:
3682 C3 8B 36            JP    L1855
3685             L1852:
3685 21 E7 03            LD    HL,999
3688             L1853:
3688 CD 4F 3D            CALL  writeLineHL
368B             L1854:
368B                     ;;testBitwiseOperators.j(265)     if (w2 ^ 0x1C == 0x1228) println (156); else println (999);
368B             L1855:
368B 2A 04 50            LD    HL,(05004H)
368E             L1856:
368E 11 1C 00            LD    DE,28
3691 C5                  PUSH  BC
3692 47                  LD    B,A
3693 7C                  LD    A,H
3694 AA                  XOR   A,D
3695 67                  LD    H,A
3696 7D                  LD    A,L
3697 AB                  XOR   A,E
3698 6F                  LD    L,A
3699 78                  LD    A,B
369A C1                  POP   BC
369B             L1857:
369B 11 28 12            LD    DE,4648
369E B7                  OR    A
369F ED 52               SBC   HL,DE
36A1             L1858:
36A1 C2 AC 36            JP    NZ,L1862
36A4             L1859:
36A4 3E 9C               LD    A,156
36A6             L1860:
36A6 CD 77 3D            CALL  writeLineA
36A9             L1861:
36A9 C3 B2 36            JP    L1869
36AC             L1862:
36AC 21 E7 03            LD    HL,999
36AF             L1863:
36AF CD 4F 3D            CALL  writeLineHL
36B2             L1864:
36B2                     ;;testBitwiseOperators.j(266)   
36B2             L1865:
36B2                     ;;testBitwiseOperators.j(267)     //final var/acc
36B2             L1866:
36B2                     ;;testBitwiseOperators.j(268)     //*************
36B2             L1867:
36B2                     ;;testBitwiseOperators.j(269)     //final var byte/acc byte
36B2             L1868:
36B2                     ;;testBitwiseOperators.j(270)     if (b2 & (0x10 + 0x0C) == 0x04) println (157); else println (999);
36B2             L1869:
36B2 3A 01 50            LD    A,(05001H)
36B5             L1870:
36B5 F5                  PUSH  AF
36B6 3E 10               LD    A,16
36B8             L1871:
36B8 C6 0C               ADD   A,12
36BA             L1872:
36BA C1                  POP   BC
36BB A0                  AND   A,B
36BC             L1873:
36BC D6 04               SUB   A,4
36BE             L1874:
36BE C2 C9 36            JP    NZ,L1878
36C1             L1875:
36C1 3E 9D               LD    A,157
36C3             L1876:
36C3 CD 77 3D            CALL  writeLineA
36C6             L1877:
36C6 C3 CF 36            JP    L1881
36C9             L1878:
36C9 21 E7 03            LD    HL,999
36CC             L1879:
36CC CD 4F 3D            CALL  writeLineHL
36CF             L1880:
36CF                     ;;testBitwiseOperators.j(271)     if (b2 | (0x10 + 0x0C) == 0x1F) println (158); else println (999);
36CF             L1881:
36CF 3A 01 50            LD    A,(05001H)
36D2             L1882:
36D2 F5                  PUSH  AF
36D3 3E 10               LD    A,16
36D5             L1883:
36D5 C6 0C               ADD   A,12
36D7             L1884:
36D7 C1                  POP   BC
36D8 B0                  OR    A,B
36D9             L1885:
36D9 D6 1F               SUB   A,31
36DB             L1886:
36DB C2 E6 36            JP    NZ,L1890
36DE             L1887:
36DE 3E 9E               LD    A,158
36E0             L1888:
36E0 CD 77 3D            CALL  writeLineA
36E3             L1889:
36E3 C3 EC 36            JP    L1893
36E6             L1890:
36E6 21 E7 03            LD    HL,999
36E9             L1891:
36E9 CD 4F 3D            CALL  writeLineHL
36EC             L1892:
36EC                     ;;testBitwiseOperators.j(272)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (159); else println (999);
36EC             L1893:
36EC 3A 01 50            LD    A,(05001H)
36EF             L1894:
36EF F5                  PUSH  AF
36F0 3E 10               LD    A,16
36F2             L1895:
36F2 C6 0C               ADD   A,12
36F4             L1896:
36F4 C1                  POP   BC
36F5 A8                  XOR   A,B
36F6             L1897:
36F6 D6 1B               SUB   A,27
36F8             L1898:
36F8 C2 03 37            JP    NZ,L1902
36FB             L1899:
36FB 3E 9F               LD    A,159
36FD             L1900:
36FD CD 77 3D            CALL  writeLineA
3700             L1901:
3700 C3 09 37            JP    L1906
3703             L1902:
3703 21 E7 03            LD    HL,999
3706             L1903:
3706 CD 4F 3D            CALL  writeLineHL
3709             L1904:
3709                     ;;testBitwiseOperators.j(273)     //final var word/acc word
3709             L1905:
3709                     ;;testBitwiseOperators.j(274)     if (w2 & 0x0100 + 0x022C == 0x0224) println (160); else println (999);
3709             L1906:
3709 2A 04 50            LD    HL,(05004H)
370C             L1907:
370C E5                  PUSH  HL
370D 21 00 01            LD    HL,256
3710             L1908:
3710 11 2C 02            LD    DE,556
3713 19                  ADD   HL,DE
3714             L1909:
3714 D1                  POP   DE
3715 C5                  PUSH  BC
3716 47                  LD    B,A
3717 7C                  LD    A,H
3718 A2                  AND   A,D
3719 67                  LD    H,A
371A 7D                  LD    A,L
371B A3                  AND   A,E
371C 6F                  LD    L,A
371D 78                  LD    A,B
371E C1                  POP   BC
371F             L1910:
371F 11 24 02            LD    DE,548
3722 B7                  OR    A
3723 ED 52               SBC   HL,DE
3725             L1911:
3725 C2 30 37            JP    NZ,L1915
3728             L1912:
3728 3E A0               LD    A,160
372A             L1913:
372A CD 77 3D            CALL  writeLineA
372D             L1914:
372D C3 36 37            JP    L1918
3730             L1915:
3730 21 E7 03            LD    HL,999
3733             L1916:
3733 CD 4F 3D            CALL  writeLineHL
3736             L1917:
3736                     ;;testBitwiseOperators.j(275)     if (w2 | 0x0100 + 0x022C == 0x133C) println (161); else println (999);
3736             L1918:
3736 2A 04 50            LD    HL,(05004H)
3739             L1919:
3739 E5                  PUSH  HL
373A 21 00 01            LD    HL,256
373D             L1920:
373D 11 2C 02            LD    DE,556
3740 19                  ADD   HL,DE
3741             L1921:
3741 D1                  POP   DE
3742 47                  LD    B,A
3743 7C                  LD    A,H
3744 B2                  OR    A,D
3745 67                  LD    H,A
3746 7D                  LD    A,L
3747 B3                  OR    A,E
3748 6F                  LD    L,A
3749 78                  LD    A,B
374A             L1922:
374A 11 3C 13            LD    DE,4924
374D B7                  OR    A
374E ED 52               SBC   HL,DE
3750             L1923:
3750 C2 5B 37            JP    NZ,L1927
3753             L1924:
3753 3E A1               LD    A,161
3755             L1925:
3755 CD 77 3D            CALL  writeLineA
3758             L1926:
3758 C3 61 37            JP    L1930
375B             L1927:
375B 21 E7 03            LD    HL,999
375E             L1928:
375E CD 4F 3D            CALL  writeLineHL
3761             L1929:
3761                     ;;testBitwiseOperators.j(276)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (162); else println (999);
3761             L1930:
3761 2A 04 50            LD    HL,(05004H)
3764             L1931:
3764 E5                  PUSH  HL
3765 21 00 01            LD    HL,256
3768             L1932:
3768 11 2C 02            LD    DE,556
376B 19                  ADD   HL,DE
376C             L1933:
376C D1                  POP   DE
376D C5                  PUSH  BC
376E 47                  LD    B,A
376F 7C                  LD    A,H
3770 AA                  XOR   A,D
3771 67                  LD    H,A
3772 7D                  LD    A,L
3773 AB                  XOR   A,E
3774 6F                  LD    L,A
3775 78                  LD    A,B
3776 C1                  POP   BC
3777             L1934:
3777 11 18 11            LD    DE,4376
377A B7                  OR    A
377B ED 52               SBC   HL,DE
377D             L1935:
377D C2 88 37            JP    NZ,L1939
3780             L1936:
3780 3E A2               LD    A,162
3782             L1937:
3782 CD 77 3D            CALL  writeLineA
3785             L1938:
3785 C3 8E 37            JP    L1943
3788             L1939:
3788 21 E7 03            LD    HL,999
378B             L1940:
378B CD 4F 3D            CALL  writeLineHL
378E             L1941:
378E                     ;;testBitwiseOperators.j(277)     //final var byte/acc word
378E             L1942:
378E                     ;;testBitwiseOperators.j(278)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (163); else println (999);
378E             L1943:
378E 3A 00 50            LD    A,(05000H)
3791             L1944:
3791 21 00 10            LD    HL,4096
3794             L1945:
3794 11 34 02            LD    DE,564
3797 19                  ADD   HL,DE
3798             L1946:
3798 A5                  AND   A,L
3799 6F                  LD    L,A
379A 26 00               LD    H,0
379C             L1947:
379C 3E 14               LD    A,20
379E             L1948:
379E 5F                  LD    E,A
379F 16 00               LD    D,0
37A1 EB                  EX    DE,HL
37A2 B7                  OR    A
37A3 ED 52               SBC   HL,DE
37A5             L1949:
37A5 C2 B0 37            JP    NZ,L1953
37A8             L1950:
37A8 3E A3               LD    A,163
37AA             L1951:
37AA CD 77 3D            CALL  writeLineA
37AD             L1952:
37AD C3 B6 37            JP    L1956
37B0             L1953:
37B0 21 E7 03            LD    HL,999
37B3             L1954:
37B3 CD 4F 3D            CALL  writeLineHL
37B6             L1955:
37B6                     ;;testBitwiseOperators.j(279)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (164); else println (999);
37B6             L1956:
37B6 3A 00 50            LD    A,(05000H)
37B9             L1957:
37B9 21 00 10            LD    HL,4096
37BC             L1958:
37BC 11 34 02            LD    DE,564
37BF 19                  ADD   HL,DE
37C0             L1959:
37C0 B5                  OR    A,L
37C1 6F                  LD    L,A
37C2             L1960:
37C2 11 3C 12            LD    DE,4668
37C5 B7                  OR    A
37C6 ED 52               SBC   HL,DE
37C8             L1961:
37C8 C2 D3 37            JP    NZ,L1965
37CB             L1962:
37CB 3E A4               LD    A,164
37CD             L1963:
37CD CD 77 3D            CALL  writeLineA
37D0             L1964:
37D0 C3 D9 37            JP    L1968
37D3             L1965:
37D3 21 E7 03            LD    HL,999
37D6             L1966:
37D6 CD 4F 3D            CALL  writeLineHL
37D9             L1967:
37D9                     ;;testBitwiseOperators.j(280)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (165); else println (999);
37D9             L1968:
37D9 3A 00 50            LD    A,(05000H)
37DC             L1969:
37DC 21 00 10            LD    HL,4096
37DF             L1970:
37DF 11 34 02            LD    DE,564
37E2 19                  ADD   HL,DE
37E3             L1971:
37E3 AD                  XOR   A,L
37E4 6F                  LD    L,A
37E5             L1972:
37E5 11 28 12            LD    DE,4648
37E8 B7                  OR    A
37E9 ED 52               SBC   HL,DE
37EB             L1973:
37EB C2 F6 37            JP    NZ,L1977
37EE             L1974:
37EE 3E A5               LD    A,165
37F0             L1975:
37F0 CD 77 3D            CALL  writeLineA
37F3             L1976:
37F3 C3 FC 37            JP    L1981
37F6             L1977:
37F6 21 E7 03            LD    HL,999
37F9             L1978:
37F9 CD 4F 3D            CALL  writeLineHL
37FC             L1979:
37FC                     ;;testBitwiseOperators.j(281)     //final var word/acc byte
37FC             L1980:
37FC                     ;;testBitwiseOperators.j(282)     if (w2 & 0x10 + 0x0C == 0x0014) println (166); else println (999);
37FC             L1981:
37FC 2A 04 50            LD    HL,(05004H)
37FF             L1982:
37FF 3E 10               LD    A,16
3801             L1983:
3801 C6 0C               ADD   A,12
3803             L1984:
3803 A5                  AND   A,L
3804 6F                  LD    L,A
3805 26 00               LD    H,0
3807             L1985:
3807 3E 14               LD    A,20
3809             L1986:
3809 5F                  LD    E,A
380A 16 00               LD    D,0
380C EB                  EX    DE,HL
380D B7                  OR    A
380E ED 52               SBC   HL,DE
3810             L1987:
3810 C2 1B 38            JP    NZ,L1991
3813             L1988:
3813 3E A6               LD    A,166
3815             L1989:
3815 CD 77 3D            CALL  writeLineA
3818             L1990:
3818 C3 21 38            JP    L1994
381B             L1991:
381B 21 E7 03            LD    HL,999
381E             L1992:
381E CD 4F 3D            CALL  writeLineHL
3821             L1993:
3821                     ;;testBitwiseOperators.j(283)     if (w2 | 0x10 + 0x0C == 0x123C) println (167); else println (999);
3821             L1994:
3821 2A 04 50            LD    HL,(05004H)
3824             L1995:
3824 3E 10               LD    A,16
3826             L1996:
3826 C6 0C               ADD   A,12
3828             L1997:
3828 B5                  OR    A,L
3829 6F                  LD    L,A
382A             L1998:
382A 11 3C 12            LD    DE,4668
382D B7                  OR    A
382E ED 52               SBC   HL,DE
3830             L1999:
3830 C2 3B 38            JP    NZ,L2003
3833             L2000:
3833 3E A7               LD    A,167
3835             L2001:
3835 CD 77 3D            CALL  writeLineA
3838             L2002:
3838 C3 41 38            JP    L2006
383B             L2003:
383B 21 E7 03            LD    HL,999
383E             L2004:
383E CD 4F 3D            CALL  writeLineHL
3841             L2005:
3841                     ;;testBitwiseOperators.j(284)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (168); else println (999);
3841             L2006:
3841 2A 04 50            LD    HL,(05004H)
3844             L2007:
3844 3E 10               LD    A,16
3846             L2008:
3846 C6 0C               ADD   A,12
3848             L2009:
3848 AD                  XOR   A,L
3849 6F                  LD    L,A
384A             L2010:
384A 11 28 12            LD    DE,4648
384D B7                  OR    A
384E ED 52               SBC   HL,DE
3850             L2011:
3850 C2 5B 38            JP    NZ,L2015
3853             L2012:
3853 3E A8               LD    A,168
3855             L2013:
3855 CD 77 3D            CALL  writeLineA
3858             L2014:
3858 C3 61 38            JP    L2022
385B             L2015:
385B 21 E7 03            LD    HL,999
385E             L2016:
385E CD 4F 3D            CALL  writeLineHL
3861             L2017:
3861                     ;;testBitwiseOperators.j(285)   
3861             L2018:
3861                     ;;testBitwiseOperators.j(286)     //final var/var
3861             L2019:
3861                     ;;testBitwiseOperators.j(287)     //*************
3861             L2020:
3861                     ;;testBitwiseOperators.j(288)     //final var byte/var byte
3861             L2021:
3861                     ;;testBitwiseOperators.j(289)     if (b2 & b1 == 0x04) println (169); else println (999);
3861             L2022:
3861 3A 01 50            LD    A,(05001H)
3864             L2023:
3864 47                  LD    B,A
3865 3A 00 50            LD    A,(05000H)
3868 A0                  AND   A,B
3869             L2024:
3869 D6 04               SUB   A,4
386B             L2025:
386B C2 76 38            JP    NZ,L2029
386E             L2026:
386E 3E A9               LD    A,169
3870             L2027:
3870 CD 77 3D            CALL  writeLineA
3873             L2028:
3873 C3 7C 38            JP    L2032
3876             L2029:
3876 21 E7 03            LD    HL,999
3879             L2030:
3879 CD 4F 3D            CALL  writeLineHL
387C             L2031:
387C                     ;;testBitwiseOperators.j(290)     if (b2 | b1 == 0x1F) println (170); else println (999);
387C             L2032:
387C 3A 01 50            LD    A,(05001H)
387F             L2033:
387F 47                  LD    B,A
3880 3A 00 50            LD    A,(05000H)
3883 B0                  OR    A,B
3884             L2034:
3884 D6 1F               SUB   A,31
3886             L2035:
3886 C2 91 38            JP    NZ,L2039
3889             L2036:
3889 3E AA               LD    A,170
388B             L2037:
388B CD 77 3D            CALL  writeLineA
388E             L2038:
388E C3 97 38            JP    L2042
3891             L2039:
3891 21 E7 03            LD    HL,999
3894             L2040:
3894 CD 4F 3D            CALL  writeLineHL
3897             L2041:
3897                     ;;testBitwiseOperators.j(291)     if (b2 ^ b1 == 0x1B) println (171); else println (999);
3897             L2042:
3897 3A 01 50            LD    A,(05001H)
389A             L2043:
389A 47                  LD    B,A
389B 3A 00 50            LD    A,(05000H)
389E A8                  XOR   A,B
389F             L2044:
389F D6 1B               SUB   A,27
38A1             L2045:
38A1 C2 AC 38            JP    NZ,L2049
38A4             L2046:
38A4 3E AB               LD    A,171
38A6             L2047:
38A6 CD 77 3D            CALL  writeLineA
38A9             L2048:
38A9 C3 B2 38            JP    L2053
38AC             L2049:
38AC 21 E7 03            LD    HL,999
38AF             L2050:
38AF CD 4F 3D            CALL  writeLineHL
38B2             L2051:
38B2                     ;;testBitwiseOperators.j(292)     //final var word/var word
38B2             L2052:
38B2                     ;;testBitwiseOperators.j(293)     if (w2 & w1 == 0x0224) println (172); else println (999);
38B2             L2053:
38B2 2A 04 50            LD    HL,(05004H)
38B5             L2054:
38B5 ED 5B 02 50         LD    DE,(05002H)
38B9 C5                  PUSH  BC
38BA 47                  LD    B,A
38BB 7C                  LD    A,H
38BC A2                  AND   A,D
38BD 67                  LD    H,A
38BE 7D                  LD    A,L
38BF A3                  AND   A,E
38C0 6F                  LD    L,A
38C1 78                  LD    A,B
38C2 C1                  POP   BC
38C3             L2055:
38C3 11 24 02            LD    DE,548
38C6 B7                  OR    A
38C7 ED 52               SBC   HL,DE
38C9             L2056:
38C9 C2 D4 38            JP    NZ,L2060
38CC             L2057:
38CC 3E AC               LD    A,172
38CE             L2058:
38CE CD 77 3D            CALL  writeLineA
38D1             L2059:
38D1 C3 DA 38            JP    L2063
38D4             L2060:
38D4 21 E7 03            LD    HL,999
38D7             L2061:
38D7 CD 4F 3D            CALL  writeLineHL
38DA             L2062:
38DA                     ;;testBitwiseOperators.j(294)     if (w2 | w1 == 0x133C) println (173); else println (999);
38DA             L2063:
38DA 2A 04 50            LD    HL,(05004H)
38DD             L2064:
38DD ED 5B 02 50         LD    DE,(05002H)
38E1 47                  LD    B,A
38E2 7C                  LD    A,H
38E3 B2                  OR    A,D
38E4 67                  LD    H,A
38E5 7D                  LD    A,L
38E6 B3                  OR    A,E
38E7 6F                  LD    L,A
38E8 78                  LD    A,B
38E9             L2065:
38E9 11 3C 13            LD    DE,4924
38EC B7                  OR    A
38ED ED 52               SBC   HL,DE
38EF             L2066:
38EF C2 FA 38            JP    NZ,L2070
38F2             L2067:
38F2 3E AD               LD    A,173
38F4             L2068:
38F4 CD 77 3D            CALL  writeLineA
38F7             L2069:
38F7 C3 00 39            JP    L2073
38FA             L2070:
38FA 21 E7 03            LD    HL,999
38FD             L2071:
38FD CD 4F 3D            CALL  writeLineHL
3900             L2072:
3900                     ;;testBitwiseOperators.j(295)     if (w2 ^ w1 == 0x1118) println (174); else println (999);
3900             L2073:
3900 2A 04 50            LD    HL,(05004H)
3903             L2074:
3903 ED 5B 02 50         LD    DE,(05002H)
3907 C5                  PUSH  BC
3908 47                  LD    B,A
3909 7C                  LD    A,H
390A AA                  XOR   A,D
390B 67                  LD    H,A
390C 7D                  LD    A,L
390D AB                  XOR   A,E
390E 6F                  LD    L,A
390F 78                  LD    A,B
3910 C1                  POP   BC
3911             L2075:
3911 11 18 11            LD    DE,4376
3914 B7                  OR    A
3915 ED 52               SBC   HL,DE
3917             L2076:
3917 C2 22 39            JP    NZ,L2080
391A             L2077:
391A 3E AE               LD    A,174
391C             L2078:
391C CD 77 3D            CALL  writeLineA
391F             L2079:
391F C3 28 39            JP    L2084
3922             L2080:
3922 21 E7 03            LD    HL,999
3925             L2081:
3925 CD 4F 3D            CALL  writeLineHL
3928             L2082:
3928                     ;;testBitwiseOperators.j(296)     //final var byte/var word
3928             L2083:
3928                     ;;testBitwiseOperators.j(297)     if (b1 & w2 == 0x0014) println (175); else println (999);
3928             L2084:
3928 3A 00 50            LD    A,(05000H)
392B             L2085:
392B 6F                  LD    L,A
392C 26 00               LD    H,0
392E             L2086:
392E ED 5B 04 50         LD    DE,(05004H)
3932 C5                  PUSH  BC
3933 47                  LD    B,A
3934 7C                  LD    A,H
3935 A2                  AND   A,D
3936 67                  LD    H,A
3937 7D                  LD    A,L
3938 A3                  AND   A,E
3939 6F                  LD    L,A
393A 78                  LD    A,B
393B C1                  POP   BC
393C             L2087:
393C 3E 14               LD    A,20
393E             L2088:
393E 5F                  LD    E,A
393F 16 00               LD    D,0
3941 EB                  EX    DE,HL
3942 B7                  OR    A
3943 ED 52               SBC   HL,DE
3945             L2089:
3945 C2 50 39            JP    NZ,L2093
3948             L2090:
3948 3E AF               LD    A,175
394A             L2091:
394A CD 77 3D            CALL  writeLineA
394D             L2092:
394D C3 56 39            JP    L2096
3950             L2093:
3950 21 E7 03            LD    HL,999
3953             L2094:
3953 CD 4F 3D            CALL  writeLineHL
3956             L2095:
3956                     ;;testBitwiseOperators.j(298)     if (b1 | w2 == 0x123C) println (176); else println (999);
3956             L2096:
3956 3A 00 50            LD    A,(05000H)
3959             L2097:
3959 6F                  LD    L,A
395A 26 00               LD    H,0
395C             L2098:
395C ED 5B 04 50         LD    DE,(05004H)
3960 47                  LD    B,A
3961 7C                  LD    A,H
3962 B2                  OR    A,D
3963 67                  LD    H,A
3964 7D                  LD    A,L
3965 B3                  OR    A,E
3966 6F                  LD    L,A
3967 78                  LD    A,B
3968             L2099:
3968 11 3C 12            LD    DE,4668
396B B7                  OR    A
396C ED 52               SBC   HL,DE
396E             L2100:
396E C2 79 39            JP    NZ,L2104
3971             L2101:
3971 3E B0               LD    A,176
3973             L2102:
3973 CD 77 3D            CALL  writeLineA
3976             L2103:
3976 C3 7F 39            JP    L2107
3979             L2104:
3979 21 E7 03            LD    HL,999
397C             L2105:
397C CD 4F 3D            CALL  writeLineHL
397F             L2106:
397F                     ;;testBitwiseOperators.j(299)     if (b1 ^ w2 == 0x1228) println (177); else println (999);
397F             L2107:
397F 3A 00 50            LD    A,(05000H)
3982             L2108:
3982 6F                  LD    L,A
3983 26 00               LD    H,0
3985             L2109:
3985 ED 5B 04 50         LD    DE,(05004H)
3989 C5                  PUSH  BC
398A 47                  LD    B,A
398B 7C                  LD    A,H
398C AA                  XOR   A,D
398D 67                  LD    H,A
398E 7D                  LD    A,L
398F AB                  XOR   A,E
3990 6F                  LD    L,A
3991 78                  LD    A,B
3992 C1                  POP   BC
3993             L2110:
3993 11 28 12            LD    DE,4648
3996 B7                  OR    A
3997 ED 52               SBC   HL,DE
3999             L2111:
3999 C2 A4 39            JP    NZ,L2115
399C             L2112:
399C 3E B1               LD    A,177
399E             L2113:
399E CD 77 3D            CALL  writeLineA
39A1             L2114:
39A1 C3 AA 39            JP    L2119
39A4             L2115:
39A4 21 E7 03            LD    HL,999
39A7             L2116:
39A7 CD 4F 3D            CALL  writeLineHL
39AA             L2117:
39AA                     ;;testBitwiseOperators.j(300)     //final var word/var byte
39AA             L2118:
39AA                     ;;testBitwiseOperators.j(301)     if (w2 & b1 == 0x0014) println (178); else println (999);
39AA             L2119:
39AA 2A 04 50            LD    HL,(05004H)
39AD             L2120:
39AD ED 5B 00 50         LD    DE,(05000H)
39B1 C5                  PUSH  BC
39B2 47                  LD    B,A
39B3 7C                  LD    A,H
39B4 A2                  AND   A,D
39B5 67                  LD    H,A
39B6 7D                  LD    A,L
39B7 A3                  AND   A,E
39B8 6F                  LD    L,A
39B9 78                  LD    A,B
39BA C1                  POP   BC
39BB             L2121:
39BB 3E 14               LD    A,20
39BD             L2122:
39BD 5F                  LD    E,A
39BE 16 00               LD    D,0
39C0 EB                  EX    DE,HL
39C1 B7                  OR    A
39C2 ED 52               SBC   HL,DE
39C4             L2123:
39C4 C2 CF 39            JP    NZ,L2127
39C7             L2124:
39C7 3E B2               LD    A,178
39C9             L2125:
39C9 CD 77 3D            CALL  writeLineA
39CC             L2126:
39CC C3 D5 39            JP    L2130
39CF             L2127:
39CF 21 E7 03            LD    HL,999
39D2             L2128:
39D2 CD 4F 3D            CALL  writeLineHL
39D5             L2129:
39D5                     ;;testBitwiseOperators.j(302)     if (w2 | b1 == 0x123C) println (179); else println (999);
39D5             L2130:
39D5 2A 04 50            LD    HL,(05004H)
39D8             L2131:
39D8 ED 5B 00 50         LD    DE,(05000H)
39DC 47                  LD    B,A
39DD 7C                  LD    A,H
39DE B2                  OR    A,D
39DF 67                  LD    H,A
39E0 7D                  LD    A,L
39E1 B3                  OR    A,E
39E2 6F                  LD    L,A
39E3 78                  LD    A,B
39E4             L2132:
39E4 11 3C 12            LD    DE,4668
39E7 B7                  OR    A
39E8 ED 52               SBC   HL,DE
39EA             L2133:
39EA C2 F5 39            JP    NZ,L2137
39ED             L2134:
39ED 3E B3               LD    A,179
39EF             L2135:
39EF CD 77 3D            CALL  writeLineA
39F2             L2136:
39F2 C3 FB 39            JP    L2140
39F5             L2137:
39F5 21 E7 03            LD    HL,999
39F8             L2138:
39F8 CD 4F 3D            CALL  writeLineHL
39FB             L2139:
39FB                     ;;testBitwiseOperators.j(303)     if (w2 ^ b1 == 0x1228) println (180); else println (999);
39FB             L2140:
39FB 2A 04 50            LD    HL,(05004H)
39FE             L2141:
39FE ED 5B 00 50         LD    DE,(05000H)
3A02 C5                  PUSH  BC
3A03 47                  LD    B,A
3A04 7C                  LD    A,H
3A05 AA                  XOR   A,D
3A06 67                  LD    H,A
3A07 7D                  LD    A,L
3A08 AB                  XOR   A,E
3A09 6F                  LD    L,A
3A0A 78                  LD    A,B
3A0B C1                  POP   BC
3A0C             L2142:
3A0C 11 28 12            LD    DE,4648
3A0F B7                  OR    A
3A10 ED 52               SBC   HL,DE
3A12             L2143:
3A12 C2 1D 3A            JP    NZ,L2147
3A15             L2144:
3A15 3E B4               LD    A,180
3A17             L2145:
3A17 CD 77 3D            CALL  writeLineA
3A1A             L2146:
3A1A C3 23 3A            JP    L2154
3A1D             L2147:
3A1D 21 E7 03            LD    HL,999
3A20             L2148:
3A20 CD 4F 3D            CALL  writeLineHL
3A23             L2149:
3A23                     ;;testBitwiseOperators.j(304)   
3A23             L2150:
3A23                     ;;testBitwiseOperators.j(305)     //final var/final var
3A23             L2151:
3A23                     ;;testBitwiseOperators.j(306)     //*******************
3A23             L2152:
3A23                     ;;testBitwiseOperators.j(307)     //final var byte/final var byte
3A23             L2153:
3A23                     ;;testBitwiseOperators.j(308)     if (fb2 & fb1 == 0x04) println (181); else println (999);
3A23             L2154:
3A23 3E 07               LD    A,7
3A25             L2155:
3A25 E6 1C               AND   A,28
3A27             L2156:
3A27 D6 04               SUB   A,4
3A29             L2157:
3A29 C2 34 3A            JP    NZ,L2161
3A2C             L2158:
3A2C 3E B5               LD    A,181
3A2E             L2159:
3A2E CD 77 3D            CALL  writeLineA
3A31             L2160:
3A31 C3 3A 3A            JP    L2164
3A34             L2161:
3A34 21 E7 03            LD    HL,999
3A37             L2162:
3A37 CD 4F 3D            CALL  writeLineHL
3A3A             L2163:
3A3A                     ;;testBitwiseOperators.j(309)     if (fb2 | fb1 == 0x1F) println (182); else println (999);
3A3A             L2164:
3A3A 3E 07               LD    A,7
3A3C             L2165:
3A3C F6 1C               OR    A,28
3A3E             L2166:
3A3E D6 1F               SUB   A,31
3A40             L2167:
3A40 C2 4B 3A            JP    NZ,L2171
3A43             L2168:
3A43 3E B6               LD    A,182
3A45             L2169:
3A45 CD 77 3D            CALL  writeLineA
3A48             L2170:
3A48 C3 51 3A            JP    L2174
3A4B             L2171:
3A4B 21 E7 03            LD    HL,999
3A4E             L2172:
3A4E CD 4F 3D            CALL  writeLineHL
3A51             L2173:
3A51                     ;;testBitwiseOperators.j(310)     if (fb2 ^ fb1 == 0x1B) println (183); else println (999);
3A51             L2174:
3A51 3E 07               LD    A,7
3A53             L2175:
3A53 EE 1C               XOR   A,28
3A55             L2176:
3A55 D6 1B               SUB   A,27
3A57             L2177:
3A57 C2 62 3A            JP    NZ,L2181
3A5A             L2178:
3A5A 3E B7               LD    A,183
3A5C             L2179:
3A5C CD 77 3D            CALL  writeLineA
3A5F             L2180:
3A5F C3 68 3A            JP    L2185
3A62             L2181:
3A62 21 E7 03            LD    HL,999
3A65             L2182:
3A65 CD 4F 3D            CALL  writeLineHL
3A68             L2183:
3A68                     ;;testBitwiseOperators.j(311)     //final var word/final var word
3A68             L2184:
3A68                     ;;testBitwiseOperators.j(312)     if (fw2 & fw1 == 0x0224) println (184); else println (999);
3A68             L2185:
3A68 21 34 12            LD    HL,4660
3A6B             L2186:
3A6B 11 2C 03            LD    DE,812
3A6E C5                  PUSH  BC
3A6F 47                  LD    B,A
3A70 7C                  LD    A,H
3A71 A2                  AND   A,D
3A72 67                  LD    H,A
3A73 7D                  LD    A,L
3A74 A3                  AND   A,E
3A75 6F                  LD    L,A
3A76 78                  LD    A,B
3A77 C1                  POP   BC
3A78             L2187:
3A78 11 24 02            LD    DE,548
3A7B B7                  OR    A
3A7C ED 52               SBC   HL,DE
3A7E             L2188:
3A7E C2 89 3A            JP    NZ,L2192
3A81             L2189:
3A81 3E B8               LD    A,184
3A83             L2190:
3A83 CD 77 3D            CALL  writeLineA
3A86             L2191:
3A86 C3 8F 3A            JP    L2195
3A89             L2192:
3A89 21 E7 03            LD    HL,999
3A8C             L2193:
3A8C CD 4F 3D            CALL  writeLineHL
3A8F             L2194:
3A8F                     ;;testBitwiseOperators.j(313)     if (fw2 | fw1 == 0x133C) println (185); else println (999);
3A8F             L2195:
3A8F 21 34 12            LD    HL,4660
3A92             L2196:
3A92 11 2C 03            LD    DE,812
3A95 47                  LD    B,A
3A96 7C                  LD    A,H
3A97 B2                  OR    A,D
3A98 67                  LD    H,A
3A99 7D                  LD    A,L
3A9A B3                  OR    A,E
3A9B 6F                  LD    L,A
3A9C 78                  LD    A,B
3A9D             L2197:
3A9D 11 3C 13            LD    DE,4924
3AA0 B7                  OR    A
3AA1 ED 52               SBC   HL,DE
3AA3             L2198:
3AA3 C2 AE 3A            JP    NZ,L2202
3AA6             L2199:
3AA6 3E B9               LD    A,185
3AA8             L2200:
3AA8 CD 77 3D            CALL  writeLineA
3AAB             L2201:
3AAB C3 B4 3A            JP    L2205
3AAE             L2202:
3AAE 21 E7 03            LD    HL,999
3AB1             L2203:
3AB1 CD 4F 3D            CALL  writeLineHL
3AB4             L2204:
3AB4                     ;;testBitwiseOperators.j(314)     if (fw2 ^ fw1 == 0x1118) println (186); else println (999);
3AB4             L2205:
3AB4 21 34 12            LD    HL,4660
3AB7             L2206:
3AB7 11 2C 03            LD    DE,812
3ABA C5                  PUSH  BC
3ABB 47                  LD    B,A
3ABC 7C                  LD    A,H
3ABD AA                  XOR   A,D
3ABE 67                  LD    H,A
3ABF 7D                  LD    A,L
3AC0 AB                  XOR   A,E
3AC1 6F                  LD    L,A
3AC2 78                  LD    A,B
3AC3 C1                  POP   BC
3AC4             L2207:
3AC4 11 18 11            LD    DE,4376
3AC7 B7                  OR    A
3AC8 ED 52               SBC   HL,DE
3ACA             L2208:
3ACA C2 D5 3A            JP    NZ,L2212
3ACD             L2209:
3ACD 3E BA               LD    A,186
3ACF             L2210:
3ACF CD 77 3D            CALL  writeLineA
3AD2             L2211:
3AD2 C3 DB 3A            JP    L2216
3AD5             L2212:
3AD5 21 E7 03            LD    HL,999
3AD8             L2213:
3AD8 CD 4F 3D            CALL  writeLineHL
3ADB             L2214:
3ADB                     ;;testBitwiseOperators.j(315)     //final var byte/final var word
3ADB             L2215:
3ADB                     ;;testBitwiseOperators.j(316)     if (fb1 & fw2 == 0x0014) println (187); else println (999);
3ADB             L2216:
3ADB 3E 1C               LD    A,28
3ADD             L2217:
3ADD 6F                  LD    L,A
3ADE 26 00               LD    H,0
3AE0             L2218:
3AE0 11 34 12            LD    DE,4660
3AE3 C5                  PUSH  BC
3AE4 47                  LD    B,A
3AE5 7C                  LD    A,H
3AE6 A2                  AND   A,D
3AE7 67                  LD    H,A
3AE8 7D                  LD    A,L
3AE9 A3                  AND   A,E
3AEA 6F                  LD    L,A
3AEB 78                  LD    A,B
3AEC C1                  POP   BC
3AED             L2219:
3AED 3E 14               LD    A,20
3AEF             L2220:
3AEF 5F                  LD    E,A
3AF0 16 00               LD    D,0
3AF2 EB                  EX    DE,HL
3AF3 B7                  OR    A
3AF4 ED 52               SBC   HL,DE
3AF6             L2221:
3AF6 C2 01 3B            JP    NZ,L2225
3AF9             L2222:
3AF9 3E BB               LD    A,187
3AFB             L2223:
3AFB CD 77 3D            CALL  writeLineA
3AFE             L2224:
3AFE C3 07 3B            JP    L2228
3B01             L2225:
3B01 21 E7 03            LD    HL,999
3B04             L2226:
3B04 CD 4F 3D            CALL  writeLineHL
3B07             L2227:
3B07                     ;;testBitwiseOperators.j(317)     if (fb1 | fw2 == 0x123C) println (188); else println (999);
3B07             L2228:
3B07 3E 1C               LD    A,28
3B09             L2229:
3B09 6F                  LD    L,A
3B0A 26 00               LD    H,0
3B0C             L2230:
3B0C 11 34 12            LD    DE,4660
3B0F 47                  LD    B,A
3B10 7C                  LD    A,H
3B11 B2                  OR    A,D
3B12 67                  LD    H,A
3B13 7D                  LD    A,L
3B14 B3                  OR    A,E
3B15 6F                  LD    L,A
3B16 78                  LD    A,B
3B17             L2231:
3B17 11 3C 12            LD    DE,4668
3B1A B7                  OR    A
3B1B ED 52               SBC   HL,DE
3B1D             L2232:
3B1D C2 28 3B            JP    NZ,L2236
3B20             L2233:
3B20 3E BC               LD    A,188
3B22             L2234:
3B22 CD 77 3D            CALL  writeLineA
3B25             L2235:
3B25 C3 2E 3B            JP    L2239
3B28             L2236:
3B28 21 E7 03            LD    HL,999
3B2B             L2237:
3B2B CD 4F 3D            CALL  writeLineHL
3B2E             L2238:
3B2E                     ;;testBitwiseOperators.j(318)     if (fb1 ^ fw2 == 0x1228) println (189); else println (999);
3B2E             L2239:
3B2E 3E 1C               LD    A,28
3B30             L2240:
3B30 6F                  LD    L,A
3B31 26 00               LD    H,0
3B33             L2241:
3B33 11 34 12            LD    DE,4660
3B36 C5                  PUSH  BC
3B37 47                  LD    B,A
3B38 7C                  LD    A,H
3B39 AA                  XOR   A,D
3B3A 67                  LD    H,A
3B3B 7D                  LD    A,L
3B3C AB                  XOR   A,E
3B3D 6F                  LD    L,A
3B3E 78                  LD    A,B
3B3F C1                  POP   BC
3B40             L2242:
3B40 11 28 12            LD    DE,4648
3B43 B7                  OR    A
3B44 ED 52               SBC   HL,DE
3B46             L2243:
3B46 C2 51 3B            JP    NZ,L2247
3B49             L2244:
3B49 3E BD               LD    A,189
3B4B             L2245:
3B4B CD 77 3D            CALL  writeLineA
3B4E             L2246:
3B4E C3 57 3B            JP    L2251
3B51             L2247:
3B51 21 E7 03            LD    HL,999
3B54             L2248:
3B54 CD 4F 3D            CALL  writeLineHL
3B57             L2249:
3B57                     ;;testBitwiseOperators.j(319)     //final var word/final var byte
3B57             L2250:
3B57                     ;;testBitwiseOperators.j(320)     if (fw2 & fb1 == 0x0014) println (190); else println (999);
3B57             L2251:
3B57 21 34 12            LD    HL,4660
3B5A             L2252:
3B5A 11 1C 00            LD    DE,28
3B5D C5                  PUSH  BC
3B5E 47                  LD    B,A
3B5F 7C                  LD    A,H
3B60 A2                  AND   A,D
3B61 67                  LD    H,A
3B62 7D                  LD    A,L
3B63 A3                  AND   A,E
3B64 6F                  LD    L,A
3B65 78                  LD    A,B
3B66 C1                  POP   BC
3B67             L2253:
3B67 3E 14               LD    A,20
3B69             L2254:
3B69 5F                  LD    E,A
3B6A 16 00               LD    D,0
3B6C EB                  EX    DE,HL
3B6D B7                  OR    A
3B6E ED 52               SBC   HL,DE
3B70             L2255:
3B70 C2 7B 3B            JP    NZ,L2259
3B73             L2256:
3B73 3E BE               LD    A,190
3B75             L2257:
3B75 CD 77 3D            CALL  writeLineA
3B78             L2258:
3B78 C3 81 3B            JP    L2262
3B7B             L2259:
3B7B 21 E7 03            LD    HL,999
3B7E             L2260:
3B7E CD 4F 3D            CALL  writeLineHL
3B81             L2261:
3B81                     ;;testBitwiseOperators.j(321)     if (fw2 | fb1 == 0x123C) println (191); else println (999);
3B81             L2262:
3B81 21 34 12            LD    HL,4660
3B84             L2263:
3B84 11 1C 00            LD    DE,28
3B87 47                  LD    B,A
3B88 7C                  LD    A,H
3B89 B2                  OR    A,D
3B8A 67                  LD    H,A
3B8B 7D                  LD    A,L
3B8C B3                  OR    A,E
3B8D 6F                  LD    L,A
3B8E 78                  LD    A,B
3B8F             L2264:
3B8F 11 3C 12            LD    DE,4668
3B92 B7                  OR    A
3B93 ED 52               SBC   HL,DE
3B95             L2265:
3B95 C2 A0 3B            JP    NZ,L2269
3B98             L2266:
3B98 3E BF               LD    A,191
3B9A             L2267:
3B9A CD 77 3D            CALL  writeLineA
3B9D             L2268:
3B9D C3 A6 3B            JP    L2272
3BA0             L2269:
3BA0 21 E7 03            LD    HL,999
3BA3             L2270:
3BA3 CD 4F 3D            CALL  writeLineHL
3BA6             L2271:
3BA6                     ;;testBitwiseOperators.j(322)     if (fw2 ^ fb1 == 0x1228) println (192); else println (999);
3BA6             L2272:
3BA6 21 34 12            LD    HL,4660
3BA9             L2273:
3BA9 11 1C 00            LD    DE,28
3BAC C5                  PUSH  BC
3BAD 47                  LD    B,A
3BAE 7C                  LD    A,H
3BAF AA                  XOR   A,D
3BB0 67                  LD    H,A
3BB1 7D                  LD    A,L
3BB2 AB                  XOR   A,E
3BB3 6F                  LD    L,A
3BB4 78                  LD    A,B
3BB5 C1                  POP   BC
3BB6             L2274:
3BB6 11 28 12            LD    DE,4648
3BB9 B7                  OR    A
3BBA ED 52               SBC   HL,DE
3BBC             L2275:
3BBC C2 C7 3B            JP    NZ,L2279
3BBF             L2276:
3BBF 3E C0               LD    A,192
3BC1             L2277:
3BC1 CD 77 3D            CALL  writeLineA
3BC4             L2278:
3BC4 C3 CD 3B            JP    L2283
3BC7             L2279:
3BC7 21 E7 03            LD    HL,999
3BCA             L2280:
3BCA CD 4F 3D            CALL  writeLineHL
3BCD             L2281:
3BCD                     ;;testBitwiseOperators.j(323)   
3BCD             L2282:
3BCD                     ;;testBitwiseOperators.j(324)     println("Klaar");
3BCD             L2283:
3BCD 21 D8 3B            LD    HL,L2290
3BD0             L2284:
3BD0 CD FC 3B            CALL  writeLineStr
3BD3             L2285:
3BD3                     ;;testBitwiseOperators.j(325)   }
3BD3             L2286:
3BD3 DD F9               LD    SP,IX
3BD5             L2287:
3BD5 DD E1               POP   IX
3BD7             L2288:
3BD7 C9                  return
3BD8             L2289:
3BD8                     ;;testBitwiseOperators.j(326) }
3BD8             L2290:
3BD8 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
3BDE             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
3BDE             STAT0   equ 004H          ;147 ASCI0 Status register.
3BDE             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
3BDE             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
3BDE             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
3BDE             TDRE    equ 1             ;STAT0->Tx data register empty bit.
3BDE             OVERRUN equ 6             ;STAT0->OVERRUN bit.
3BDE             RDRF    equ 7             ;STAT0->Rx data register full bit.
3BDE             ;****************
3BDE             ;getChar
3BDE             ;Check if an input character from ASCI0 is available.
3BDE             ;  IN:  none
3BDE             ;  OUT: F: ZERO flag set if no character is available.
3BDE             ;          ZERO flag reset if a character is available.
3BDE             ;       A : character from ASCI0, if available.
3BDE             ;  USES:AF
3BDE             ;****************
3BDE             getChar:
3BDE ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
3BE1 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
3BE3 20 07               JR    NZ,getChar1 ;-yes: reset error flags
3BE5 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
3BE7 C8                  RET   Z           ;-no: return without a character
3BE8 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
3BEB C9                  RET
3BEC             getChar1:
3BEC ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
3BEF CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
3BF1 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
3BF4 AF                  XOR   A,A
3BF5 C9                  RET               ;return without a character
3BF6             ;****************
3BF6             ;putMsg
3BF6             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
3BF6             ;  IN:  none.
3BF6             ;  OUT: none.
3BF6             ;  USES:none.
3BF6             ;****************
3BF6             putMsg:
3BF6 E3                  EX    (SP),HL     ;save HL and load return address into HL.
3BF7 CD 03 3C            CALL  writeStr
3BFA E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
3BFB C9                  RET
3BFC             ;****************
3BFC             ;writeLineStr
3BFC             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
3BFC             ;  IN:  HL:address of zero terminated string to be printed.
3BFC             ;  OUT: none.
3BFC             ;  USES:HL (point to byte after zero terminated string)
3BFC             ;****************
3BFC             writeLineStr:
3BFC CD 03 3C            CALL  writeStr
3BFF CD 1F 3C            CALL  putCRLF
3C02 C9                  RET
3C03             ;****************
3C03             ;writeStr
3C03             ;Print via ASCI0 a zero terminated string, pointed to by HL.
3C03             ;  IN:  HL:address of zero terminated string to be printed.
3C03             ;  OUT: none.
3C03             ;  USES:HL (point to byte after zero terminated string)
3C03             ;****************
3C03             writeStr:
3C03 F5                  PUSH  AF          ;save registers
3C04             putStr1:
3C04 7E                  LD    A,(HL)      ;get next character
3C05 23                  INC   HL
3C06 B7                  OR    A,A         ;is it zer0?
3C07 28 05               JR    Z,putStr2   ;yes ->return
3C09 CD 12 3C            CALL  putChar     ;no->put it to ASCI0
3C0C 18 F6               JR    putStr1
3C0E             putStr2:
3C0E F1                  POP   AF
3C0F C9                  RET
3C10             ;****************
3C10             ;putSpace
3C10             ;Send a space character to ASCI0
3C10             ;  IN:  none.
3C10             ;  OUT: none.
3C10             ;  USES:AF
3C10             ;****************
3C10             putSpace:
3C10 3E 20               LD    A,' '       ;load space and continue with putChar.
3C12             ;****************
3C12             ;putChar
3C12             ;Send one character to ASCI0.
3C12             ;  IN:  A = character
3C12             ;  OUT: none.
3C12             ;  USES:none.
3C12             ;****************
3C12             putChar:
3C12 F5                  PUSH  AF          ;send the character via ASCI0
3C13             putChar1:
3C13 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
3C16 CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
3C18 28 F9               JR    Z,putChar1
3C1A F1                  POP   AF          ;restore AF registers
3C1B ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
3C1E C9                  RET
3C1F             ;****************
3C1F             ;putCRLF
3C1F             ;Send CR and LF to ASCI0
3C1F             ;  IN:  none.
3C1F             ;  OUT: none.
3C1F             ;  USES:none.
3C1F             ;****************
3C1F             putCRLF:
3C1F F5                  PUSH  AF
3C20 3E 0D               LD    A,'\r'       ;print carriage return
3C22 CD 12 3C            CALL  putChar
3C25 3E 0A               LD    A,'\n'       ;print line feed
3C27 CD 12 3C            CALL  putChar
3C2A F1                  POP   AF
3C2B C9                  RET
3C2C             ;****************
3C2C             ;putErase
3C2C             ;Erase the latest character at ASCI0
3C2C             ;  IN:  none.
3C2C             ;  OUT: none.
3C2C             ;  USES:AF
3C2C             ;****************
3C2C             putErase:
3C2C 3E 08               LD    A,'\b'       ;print backspace
3C2E CD 12 3C            CALL  putChar
3C31 CD 10 3C            CALL  putSpace    ;print space (erase character)
3C34 3E 08               LD    A,'\b'      ;print backspace
3C36 18 DA               JR    putChar
3C38             ;****************
3C38             ;putBell
3C38             ;Send a Bell character to ASCI0
3C38             ;  IN:  none.
3C38             ;  OUT: none.
3C38             ;  USES:AF
3C38             ;****************
3C38             putBell:
3C38 3E 07               LD    A,07        ;ring the bell at ASCI0
3C3A 18 D6               JR    putChar
3C3C             ;****************
3C3C             ;putHexHL
3C3C             ;Print HL register pair as 4 hex digits
3C3C             ;  IN:  HL = word to be printed.
3C3C             ;  OUT: none.
3C3C             ;  USES:none.
3C3C             ;****************
3C3C             putHexHL:
3C3C F5                  PUSH  AF          ;save used registers
3C3D 7C                  LD    A,H         ;print H as 2 hex digits
3C3E CD 47 3C            CALL  putHexA
3C41 7D                  LD    A,L         ;print L as 2 hex digits
3C42 CD 47 3C            CALL  putHexA
3C45 F1                  POP   AF          ;restore used registers
3C46 C9                  RET
3C47             ;****************
3C47             ;putHexA
3C47             ;Print A register as 2 hex digits
3C47             ;  IN:  A = byte to be printed
3C47             ;  OUT: none.
3C47             ;  USES:none.
3C47             ;****************
3C47             putHexA:
3C47 F5                  PUSH  AF          ;save input
3C48 1F                  RRA               ;shift upper nibble to the right
3C49 1F                  RRA
3C4A 1F                  RRA
3C4B 1F                  RRA
3C4C CD 50 3C            CALL  putHexA1    ;print upper nibble
3C4F F1                  POP   AF          ;restore input & print lower nibble
3C50             putHexA1:
3C50 F5                  PUSH  AF          ;save input
3C51 E6 0F               AND   A,00FH      ;mask lower nibble
3C53 C6 30               ADD   A,'0'       ;convert to hex digit
3C55 FE 3A               CP    A,'9'+1
3C57 38 02               JR    C,putHexA2
3C59 C6 07               ADD   A,07
3C5B             putHexA2:
3C5B CD 12 3C            CALL  putChar
3C5E F1                  POP   AF          ;restore input
3C5F C9                  RET               ;and return
3C60             ;****************
3C60             ;mul16
3C60             ;16 by 16 bit unsigned multiplication with 16 bit result.
3C60             ;  IN:  HL = operand 1
3C60             ;       DE = operand 2
3C60             ;  OUT: HL = HL * DE low part
3C60             ;  USES:DE
3C60             ;  Size   25 bytes
3C60             ;  Time  160 cycles
3C60             ;****************
3C60             mul16:
3C60                     ;HL = HL * DE
3C60                     ;        H  L
3C60                     ;        D  E
3C60                     ;    --------*
3C60                     ;          EL
3C60                     ;       EH  0
3C60                     ;       DL  0
3C60                     ; -----------+
3C60                     ;        R  S
3C60                     ;S = ELlow
3C60                     ;R = ELhigh+EHlow+DLlow
3C60 C5                  PUSH  BC          ;11  11 save BC
3C61 44                  LD    B,H         ; 4  15 copy HL to BC
3C62 4D                  LD    C,L         ; 4  19
3C63 63                  LD    H,E         ; 4  23 HL contains EL
3C64 ED 6C               MLT   HL          ;17  40
3C66 E5                  PUSH  HL          ;11  51
3C67 63                  LD    H,E         ; 4  55 HL contains EH aka EB
3C68 68                  LD    L,B         ; 4  59
3C69 ED 6C               MLT   HL          ;17  76
3C6B 45                  LD    B,L         ; 4  80 save EHlow in B
3C6C 62                  LD    H,D         ; 4  84 HL contains DL aka DC
3C6D 69                  LD    L,C         ; 4  88
3C6E ED 6C               MLT   HL          ;17 105
3C70 55                  LD    D,L         ; 4 109 DLlow into DE
3C71 1E 00               LD    E,0         ; 6 115
3C73 E1                  POP   HL          ; 9 124 add EL+DElow
3C74 19                  ADD   HL,DE       ; 7 131
3C75 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
3C76 19                  ADD   HL,DE       ; 7 142
3C77 C1                  POP   BC          ; 9 151 restore BC
3C78 C9                  RET               ; 9 160
3C79             ;****************
3C79             ;mul16_10
3C79             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
3C79             ;  IN:  HL = operand
3C79             ;  OUT: HL = HL * 10; low part
3C79             ;  USES:Flags
3C79             ;  Size   9 bytes
3C79             ;  Time   65 cycles
3C79             ;****************
3C79             mul16_10:
3C79 D5                  PUSH  DE          ;11 11
3C7A 54                  LD    D,H         ; 4 15
3C7B 5D                  LD    E,L         ; 4 19
3C7C 29                  ADD   HL,HL       ; 7 26 times 2
3C7D 29                  ADD   HL,HL       ; 7 33 times 4
3C7E 19                  ADD   HL,DE       ; 7 40 times 5
3C7F 29                  ADD   HL,HL       ; 7 47 times 10
3C80 D1                  POP   DE          ; 9 56
3C81 C9                  RET               ; 9 65
3C82             ;****************
3C82             ;mul16_8
3C82             ;16 by 8 bit unsigned multiplication with 16 bit result.
3C82             ;  IN:  HL = operand 1
3C82             ;        A = operand 2
3C82             ;  OUT: HL = HL * A low part
3C82             ;  USES:AF
3C82             ;  Size   .. bytes
3C82             ;  Time  ... cycles
3C82             ;****************
3C82             mul16_8:
3C82                     ;HL = HL * A
3C82                     ;        H  L
3C82                     ;           A
3C82                     ;    --------*
3C82                     ;          AL
3C82                     ;       AH  0
3C82                     ; -----------+
3C82                     ;        R  S
3C82                     ;S = ALlow
3C82                     ;R = ALhigh+AHlow
3C82 C5                  PUSH  BC          ;11  11 save BC
3C83 44                  LD    B,H         ; 4  15
3C84 4F                  LD    C,A         ; 4  19
3C85 67                  LD    H,A         ; 4  23
3C86 ED 6C               MLT   HL          ;17  40 HL = AL
3C88 ED 4C               MLT   BC          ;17  57 BC = AH
3C8A 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
3C8B 81                  ADD   A,C         ; 4  65
3C8C 67                  LD    H,A         ; 4  69
3C8D C1                  POP   BC          ; 9  78 | 289 restore BC
3C8E C9                  RET               ; 9  87 | 307
3C8F             ;****************
3C8F             ;mul1632
3C8F             ;16 by 16 bit unsigned multiplication with 32 bit result.
3C8F             ;  IN:  HL = operand 1
3C8F             ;       DE = operand 2
3C8F             ;  OUT: HL = HL * DE low part
3C8F             ;       DE = HL * DE high part
3C8F             ;  USES:-
3C8F             ;  Size 49 bytes
3C8F             ;  Time between 303 en 307 cycles
3C8F             ;****************
3C8F             mul1632:
3C8F                     ;HL = HL * DE
3C8F                     ;        H  L
3C8F                     ;        D  E
3C8F                     ;    --------*
3C8F                     ;          EL
3C8F                     ;       EH  0
3C8F                     ;       DL  0
3C8F                     ;    DH  0  0
3C8F                     ; -----------+
3C8F                     ;  P  Q  R  S
3C8F                     ;S = ELlow
3C8F                     ;R = ELhigh+EHlow+DLlow
3C8F                     ;Q = DHlow+EHhigh+DLhigh
3C8F                     ;P = DHhigh
3C8F F5                  PUSH  AF          ;11  11 save AF
3C90 C5                  PUSH  BC          ;11  22 save BC
3C91 44                  LD    B,H         ; 4  26
3C92 4D                  LD    C,L         ; 4  30
3C93 62                  LD    H,D         ; 4  34 HL contains DH aka DB
3C94 68                  LD    L,B         ; 4  38
3C95 ED 6C               MLT   HL          ;17  55
3C97 E5                  PUSH  HL          ;11  66
3C98 62                  LD    H,D         ; 4  70 HL contains DL aka DC
3C99 69                  LD    L,C         ; 4  74
3C9A ED 6C               MLT   HL          ;17  91
3C9C E5                  PUSH  HL          ;11 102
3C9D 63                  LD    H,E         ; 4 106 HL contains EH aka EB
3C9E 68                  LD    L,B         ; 4 110
3C9F ED 6C               MLT   HL          ;17 127
3CA1 E5                  PUSH  HL          ;11 138
3CA2 63                  LD    H,E         ; 4 142 HL contains EL aka EC
3CA3 69                  LD    L,C         ; 4 146
3CA4 ED 6C               MLT   HL          ;17 163
3CA6 D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
3CA7 06 00               LD    B,0         ; 6 178
3CA9 4A                  LD    C,D         ; 4 182 ..C=EHhigh
3CAA 53                  LD    D,E         ; 4 186 ..D=EHlow
3CAB 1E 00               LD    E,0         ; 6 192
3CAD 19                  ADD   HL,DE       ; 7 199
3CAE 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
3CB0 03                  INC   BC          ;         4 209
3CB1             mul16321:
3CB1 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
3CB2 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
3CB3 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
3CB4 19                  ADD   HL,DE       ; 7 231 | 233
3CB5 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
3CB7 03                  INC   BC          ;         4 243
3CB8             mul16322:
3CB8                                       ;HL=RS=EL+EH0+DL0
3CB8                                       ;C=EHhigh
3CB8                                       ;A=DLhigh
3CB8                                       ;E=0
3CB8 EB                  EX    DE,HL       ; 3 242 | 246
3CB9 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
3CBA 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
3CBB 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
3CBC C1                  POP   BC          ; 9 266 | 270
3CBD 09                  ADD   HL,BC       ; 7 273 | 277
3CBE EB                  EX    DE,HL       ; 3 276 | 280
3CBF                                       ;D=P=DHhigh
3CBF                                       ;E=Q=DHlow+EHhigh+DLhigh
3CBF                                       ;H=R=ELhigh+EHlow+DLlow
3CBF                                       ;L=S=ELlow
3CBF C1                  POP   BC          ; 9 285 | 289 restore BC
3CC0 F1                  POP   AF          ; 9 294 | 298 restore AF
3CC1 C9                  RET               ; 9 303 | 307
3CC2             ;****************
3CC2             ;mul16S
3CC2             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
3CC2             ;  IN:  HL = operand 1
3CC2             ;       DE = operand 2
3CC2             ;  OUT: DE = HL * DE high part
3CC2             ;       HL = HL * DE low part
3CC2             ;  USES:none.
3CC2             ;  Size 26 bytes
3CC2             ;  Time between 726 en 998 cycles
3CC2             ;****************
3CC2             mul16S:
3CC2 F5                  PUSH  AF          ;11  11 save AF
3CC3 C5                  PUSH  BC          ;11  22 save BC
3CC4 44                  LD    B,H         ; 4  26
3CC5 4D                  LD    C,L         ; 4  30
3CC6 21 00 00            LD    HL,0        ; 9  39
3CC9 3E 10               LD    A,16        ; 6  45
3CCB             mul16S1:
3CCB 29                  ADD   HL,HL       ;16*7=112 157
3CCC CB 13               RL    E           ;16*7=112 269
3CCE CB 12               RL    D           ;16*7=112 381
3CD0 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
3CD2 09                  ADD   HL,BC       ;             16*7=112 589
3CD3 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
3CD5 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
3CD6             mul16S2:
3CD6 3D                  DEC   A           ;16*4=64    573 | 845 | 813
3CD7 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
3CD9 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
3CDA F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
3CDB C9                  RET               ; 9         726 | 998 | 966
3CDC             ;****************
3CDC             ;div16
3CDC             ;16 by 16 bit unsigned division.
3CDC             ;  IN:  HL = dividend
3CDC             ;       DE = divisor
3CDC             ;  OUT: HL = quotient
3CDC             ;       DE = remainder
3CDC             ;  USES:-
3CDC             ;  Size   32 bytes
3CDC             ;  Time   between 1073 en 1121 cycles
3CDC             ;pseudo code:
3CDC             ;T = AC = dividend
3CDC             ;D = DE = divisor
3CDC             ;Q = AC = quotient = 0
3CDC             ;R = HL = remainder = 0
3CDC             ;invariante betrekking:
3CDC             ; D/T\Q     
3CDC             ;   R       
3CDC             ; T = QD + R
3CDC             ; T <= 2^N  
3CDC             ;
3CDC             ; D/T'.RT\Q'      
3CDC             ;   R'             
3CDC             ; RT <= 2^N        
3CDC             ; 0<=k<=N          
3CDC             ; RT = T % 2^k     
3CDC             ; T' = (T-RT) / 2^k
3CDC             ; Q' = T' / D      
3CDC             ; R' = T' % D      
3CDC             ;
3CDC             ;for (i=16; i>0; i--) {
3CDC             ;  T = T * 2 (remember MSB in carry)
3CDC             ;  R = R * 2 + carry
3CDC             ;  Q = Q * 2
3CDC             ;  if (R >= D) {
3CDC             ;    R = R - D;
3CDC             ;    Q++;
3CDC             ;  }
3CDC             ;}
3CDC             ;return Q (in HL) and R (in DE)
3CDC             ;****************
3CDC             div16:
3CDC F5                  PUSH  AF          ;11  11 save registers used
3CDD C5                  PUSH  BC          ;11  22
3CDE 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
3CDF 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
3CE0 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
3CE3 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
3CE5             div16_1:
3CE5 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
3CE7 CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
3CE9 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
3CEB B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
3CEC ED 52               SBC   HL,DE       ;16*10=160 653
3CEE 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
3CF0 0C                  INC   C           ;              16*4= 64 813   Q++
3CF1 18 01               JR    div16_3     ;              16*8=128 941
3CF3             div16_2:
3CF3 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
3CF4             div16_3:
3CF4 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
3CF6 EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
3CF7 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
3CF8 69                  LD    L,C         ; 4 1046 | 1094
3CF9 C1                  POP   BC          ; 9 1055 | 1103
3CFA F1                  POP   AF          ; 9 1064 | 1112
3CFB C9                  RET               ; 9 1073 | 1121
3CFC             ;****************
3CFC             ;div16_8
3CFC             ;16 by 8 bit unsigned division.
3CFC             ;  IN:  HL = dividend
3CFC             ;       A  = divisor
3CFC             ;  OUT: HL = quotient
3CFC             ;       A  = remainder
3CFC             ;  USES:F(lags)
3CFC             ;  Size 18 bytes
3CFC             ;  Time between 601 en 697 cycles
3CFC             ;****************
3CFC             div16_8:
3CFC C5                  PUSH  BC          ;11 11 save registers used
3CFD 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
3CFF 4F                  LD    C,A         ; 4 21 move divisor to C
3D00 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
3D01             div16_82:
3D01 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
3D02 CB 17               RL    A           ;16*7=112 249
3D04 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
3D05 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
3D07 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
3D08 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
3D09             div16_83:
3D09 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
3D0B C1                  POP   BC          ;9 592 688
3D0C C9                  RET               ;9 601 697
3D0D             ;****************
3D0D             ;div8
3D0D             ;8 by 8 bit unsigned division.
3D0D             ;  IN:  A = dividend
3D0D             ;       C = divisor
3D0D             ;  OUT: A = quotient
3D0D             ;       C = remainder
3D0D             ;  USES:F(lags)
3D0D             ;  Size 26 bytes
3D0D             ;  Time between 411 and 459 cycles
3D0D             ;****************
3D0D             ;pseudo code:
3D0D             ;T = dividend
3D0D             ;D = divisor
3D0D             ;Q = quotient = 0
3D0D             ;R = remainder = 0
3D0D             ;invariante betrekking:
3D0D             ; T = QD + R
3D0D             ; T <= 2^8  
3D0D             ;
3D0D             ; D/T'.RT\Q'      
3D0D             ;   R'             
3D0D             ; RT <= 2^8        
3D0D             ; 0<=k<=8          
3D0D             ; RT = T % 2^k     
3D0D             ; T' = (T-RT) / 2^k
3D0D             ; Q' = T' / D      
3D0D             ; R' = T' % D      
3D0D             ;
3D0D             ;for (i=8; i>0; i--) {
3D0D             ;  T = T * 2 (remember MSB in carry)
3D0D             ;  R = R * 2 + carry
3D0D             ;  Q = Q * 2
3D0D             ;  if (R >= D) {
3D0D             ;    R = R - D;
3D0D             ;    Q++;
3D0D             ;  }
3D0D             ;}
3D0D             ;return Q (in A) and R (in C)
3D0D             ;****************
3D0D             ;E = T = dividend
3D0D             ;C = D = divisor
3D0D             ;D = Q = quotient
3D0D             ;A = R = remainder
3D0D             ;****************
3D0D             ;  IN:  A = dividend
3D0D             ;       C  = divisor
3D0D             div8:
3D0D D5                  PUSH  DE          ;11 11 save registers used
3D0E C5                  PUSH  BC          ;11 22 save registers used
3D0F 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
3D11 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
3D13 5F                  LD    E,A         ; 4 38 E = T = dividend
3D14 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
3D15             div8_1:
3D15 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
3D17 CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
3D19 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
3D1B B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
3D1C 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
3D1E 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
3D1F 14                  INC   D           ;           8*4=32 354   Q[D]++;
3D20             div8_2:           ;                      }
3D20 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
3D22 C1                  POP   BC          ;9        385 433
3D23 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
3D24 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
3D25 D1                  POP   DE          ;9        402 450
3D26 C9                  RET               ;9        411 459
3D27             ;****************
3D27             ;div8_16
3D27             ;8 by 16 bit unsigned division.
3D27             ;  IN:  A = dividend
3D27             ;       HL = divisor
3D27             ;  OUT: A = quotient
3D27             ;       C = remainder
3D27             ;  USES:F(lags)
3D27             ;  Size 13 bytes (plus dependency on div8)
3D27             ;  Time 31 or between 436 and 484 cycles
3D27             ;****************
3D27             ;invariante betrekking:
3D27             ; T = dividend
3D27             ; D = divisor
3D27             ; Q = quotient
3D27             ; R = remainder
3D27             ; T = QD + R
3D27             ;pseudo code:
3D27             ; if D >= 256 {
3D27             ;   R = T
3D27             ;   Q = 0
3D27             ; } else {
3D27             ;   R = T/D (using div8)
3D27             ;   Q = T%D (using div8)
3D27             ; }
3D27             ;****************
3D27             
3D27             
3D27             div8_16:
3D27 4F                  LD    C,A         ;  4  4         save dividend(A) in C
3D28 7C                  LD    A,H         ;  4  8         if D >= 256 {
3D29 B7                  OR    A,A         ;  4 12
3D2A 28 02               JR    Z,div8_161  ;  6 18  8  20
3D2C AF                  XOR   A,A         ;  4 22           R = T;
3D2D C9                  RET               ;  9 31           Q = 0;
3D2E             div8_161:                     ;               } else {
3D2E 79                  LD    A,C         ;        4  24    restore dividend into A
3D2F 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
3D30 CD 0D 3D            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
3D33 C9                  RET               ; 9  436/484    }
3D34             ;****************
3D34             ;read
3D34             ;read a 16 bit unsigned number from the input
3D34             ;  IN:  none
3D34             ;  OUT: HL = 16 bit unsigned number
3D34             ;  USES:-
3D34             ;****************
3D34             read:
3D34 F5                  PUSH  AF
3D35 21 00 00            LD    HL,0        ;result = 0;
3D38             read1:
3D38 CD DE 3B            CALL  getChar     ;check if a character is available.
3D3B 28 FB               JR    Z,read1     ;-no: wait for it.
3D3D FE 0D               CP    A,'\r'      ;return if char == Carriage Return
3D3F 28 0C               JR    Z,read2
3D41 CD 79 3C            CALL  mul16_10    ;result *= 10;
3D44 D6 30               SUB   A,'0'       ;digit = char - '0';
3D46 85                  ADD   A,L         ;result += digit;
3D47 6F                  LD    L,A
3D48 30 EE               JR    NC,read1     ;get next character
3D4A 24                  INC   H
3D4B 18 EB               JR    read1        ;get next character
3D4D             read2:
3D4D F1                  POP   AF
3D4E C9                  RET
3D4F             ;****************
3D4F             ;writeLineHL
3D4F             ;write a 16 bit unsigned number to the output, followed by a carriage return
3D4F             ;  IN:  HL = 16 bit unsigned number
3D4F             ;  OUT: none
3D4F             ;  USES:HL
3D4F             ;****************
3D4F             writeLineHL:
3D4F CD 56 3D            CALL  writeHL
3D52 CD 1F 3C            CALL  putCRLF
3D55 C9                  RET
3D56             ;****************
3D56             ;writeHL
3D56             ;write a 16 bit unsigned number to the output
3D56             ;  IN:  HL = 16 bit unsigned number
3D56             ;  OUT: none
3D56             ;  USES:HL
3D56             ;****************
3D56             writeHL:
3D56 C5                  PUSH  BC          ;save registers used
3D57 F5                  PUSH  AF
3D58 06 00               LD    B,0         ;number of digits on stack
3D5A 7C                  LD    A,H         ;is HL=0?
3D5B B5                  OR    A,L
3D5C 20 03               JR    NZ,writeHL1
3D5E 04                  INC   B           ;write a single digit 0
3D5F 18 0C               JR    writeHL3
3D61             writeHL1:
3D61 3E 0A               LD    A,10        ;divide HL by 10
3D63 CD FC 3C            CALL  div16_8
3D66 F5                  PUSH  AF          ;put remainder on stack
3D67 04                  INC   B
3D68 7C                  LD    A,H         ;is quotient 0?
3D69 B5                  OR    A,L
3D6A 20 F5               JR    NZ,writeHL1
3D6C             writeHL2:
3D6C F1                  POP   AF          ;write digit
3D6D             writeHL3:
3D6D C6 30               ADD   A,'0'
3D6F CD 12 3C            CALL  putChar
3D72 10 F8               DJNZ  writeHL2
3D74 F1                  POP   AF          ;restore registers used
3D75 C1                  POP   BC
3D76 C9                  RET
3D77             ;****************
3D77             ;writeLineA
3D77             ;write an 8-bit unsigned number to the output, followed by a carriage return
3D77             ;  IN:  A = 8-bit unsigned number
3D77             ;  OUT: none
3D77             ;  USES:none
3D77             ;****************
3D77             writeLineA:
3D77 CD 7E 3D            CALL  writeA
3D7A CD 1F 3C            CALL  putCRLF
3D7D C9                  RET
3D7E             ;****************
3D7E             ;writeA
3D7E             ;write an 8-bit unsigned number to the output
3D7E             ;  IN:  A = 8-bit unsigned number
3D7E             ;  OUT: none
3D7E             ;  USES:none
3D7E             ;****************
3D7E             writeA:
3D7E E5                  PUSH  HL          ;save registers used
3D7F 26 00               LD    H,0
3D81 6F                  LD    L,A
3D82 CD 56 3D            CALL  writeHL
3D85 E1                  POP   HL
3D86 C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20E4 :
   L1000 = 2BD2 :
   L1001 = 2BD5 :
   L1002 = 2BD8 : 2BCD
   L1003 = 2BDB :
   L1004 = 2BDE :
   L1005 = 2BDE :
   L1006 = 2BDE : 2BD5
   L1007 = 2BE1 :
   L1008 = 2BE5 :
   L1009 = 2BF3 :
    L101 = 20E7 :
   L1010 = 2BF5 :
   L1011 = 2BFC :
   L1012 = 2BFF :
   L1013 = 2C01 :
   L1014 = 2C04 :
   L1015 = 2C07 : 2BFC
   L1016 = 2C0A :
   L1017 = 2C0D :
   L1018 = 2C0D : 2C04
   L1019 = 2C10 :
    L102 = 20E7 :
   L1020 = 2C14 :
   L1021 = 2C20 :
   L1022 = 2C26 :
   L1023 = 2C29 :
   L1024 = 2C2B :
   L1025 = 2C2E :
   L1026 = 2C31 : 2C26
   L1027 = 2C34 :
   L1028 = 2C37 :
   L1029 = 2C37 : 2C2E
    L103 = 20E7 :
   L1030 = 2C3A :
   L1031 = 2C3E :
   L1032 = 2C4C :
   L1033 = 2C52 :
   L1034 = 2C55 :
   L1035 = 2C57 :
   L1036 = 2C5A :
   L1037 = 2C5D : 2C52
   L1038 = 2C60 :
   L1039 = 2C63 :
    L104 = 20E7 : 20DE
   L1040 = 2C63 :
   L1041 = 2C63 :
   L1042 = 2C63 :
   L1043 = 2C63 :
   L1044 = 2C63 : 2C5A
   L1045 = 2C65 :
   L1046 = 2C67 :
   L1047 = 2C69 :
   L1048 = 2C6B :
   L1049 = 2C6E :
    L105 = 20E9 :
   L1050 = 2C70 :
   L1051 = 2C73 :
   L1052 = 2C76 : 2C6B
   L1053 = 2C79 :
   L1054 = 2C7C :
   L1055 = 2C7C : 2C73
   L1056 = 2C7E :
   L1057 = 2C80 :
   L1058 = 2C82 :
   L1059 = 2C84 :
    L106 = 20EC :
   L1060 = 2C87 :
   L1061 = 2C89 :
   L1062 = 2C8C :
   L1063 = 2C8F : 2C84
   L1064 = 2C92 :
   L1065 = 2C95 :
   L1066 = 2C95 : 2C8C
   L1067 = 2C97 :
   L1068 = 2C99 :
   L1069 = 2C9B :
    L107 = 20F9 :
   L1070 = 2C9D :
   L1071 = 2CA0 :
   L1072 = 2CA2 :
   L1073 = 2CA5 :
   L1074 = 2CA8 : 2C9D
   L1075 = 2CAB :
   L1076 = 2CAE :
   L1077 = 2CAE :
   L1078 = 2CAE : 2CA5
   L1079 = 2CB1 :
    L108 = 20FB :
   L1080 = 2CB5 :
   L1081 = 2CC2 :
   L1082 = 2CC8 :
   L1083 = 2CCB :
   L1084 = 2CCD :
   L1085 = 2CD0 :
   L1086 = 2CD3 : 2CC8
   L1087 = 2CD6 :
   L1088 = 2CD9 :
   L1089 = 2CD9 : 2CD0
    L109 = 2102 :
   L1090 = 2CDC :
   L1091 = 2CE0 :
   L1092 = 2CEB :
   L1093 = 2CF1 :
   L1094 = 2CF4 :
   L1095 = 2CF6 :
   L1096 = 2CF9 :
   L1097 = 2CFC : 2CF1
   L1098 = 2CFF :
   L1099 = 2D02 :
     L11 = 2013 :
    L110 = 2105 :
   L1100 = 2D02 : 2CF9
   L1101 = 2D05 :
   L1102 = 2D09 :
   L1103 = 2D16 :
   L1104 = 2D1C :
   L1105 = 2D1F :
   L1106 = 2D21 :
   L1107 = 2D24 :
   L1108 = 2D27 : 2D1C
   L1109 = 2D2A :
    L111 = 2107 :
   L1110 = 2D2D :
   L1111 = 2D2D :
   L1112 = 2D2D : 2D24
   L1113 = 2D2F :
   L1114 = 2D31 :
   L1115 = 2D34 :
   L1116 = 2D41 :
   L1117 = 2D43 :
   L1118 = 2D4A :
   L1119 = 2D4D :
    L112 = 210A :
   L1120 = 2D4F :
   L1121 = 2D52 :
   L1122 = 2D55 : 2D4A
   L1123 = 2D58 :
   L1124 = 2D5B :
   L1125 = 2D5B : 2D52
   L1126 = 2D5D :
   L1127 = 2D5F :
   L1128 = 2D62 :
   L1129 = 2D6D :
    L113 = 210D : 2102
   L1130 = 2D73 :
   L1131 = 2D76 :
   L1132 = 2D78 :
   L1133 = 2D7B :
   L1134 = 2D7E : 2D73
   L1135 = 2D81 :
   L1136 = 2D84 :
   L1137 = 2D84 : 2D7B
   L1138 = 2D86 :
   L1139 = 2D88 :
    L114 = 2110 :
   L1140 = 2D8B :
   L1141 = 2D98 :
   L1142 = 2D9E :
   L1143 = 2DA1 :
   L1144 = 2DA3 :
   L1145 = 2DA6 :
   L1146 = 2DA9 : 2D9E
   L1147 = 2DAC :
   L1148 = 2DAF :
   L1149 = 2DAF :
    L115 = 2113 :
   L1150 = 2DAF : 2DA6
   L1151 = 2DB2 :
   L1152 = 2DB6 :
   L1153 = 2DC3 :
   L1154 = 2DC5 :
   L1155 = 2DCC :
   L1156 = 2DCF :
   L1157 = 2DD1 :
   L1158 = 2DD4 :
   L1159 = 2DD7 : 2DCC
    L116 = 2113 : 210A
   L1160 = 2DDA :
   L1161 = 2DDD :
   L1162 = 2DDD : 2DD4
   L1163 = 2DE0 :
   L1164 = 2DE4 :
   L1165 = 2DEF :
   L1166 = 2DF5 :
   L1167 = 2DF8 :
   L1168 = 2DFA :
   L1169 = 2DFD :
    L117 = 2115 :
   L1170 = 2E00 : 2DF5
   L1171 = 2E03 :
   L1172 = 2E06 :
   L1173 = 2E06 : 2DFD
   L1174 = 2E09 :
   L1175 = 2E0D :
   L1176 = 2E1A :
   L1177 = 2E20 :
   L1178 = 2E23 :
   L1179 = 2E25 :
    L118 = 2118 :
   L1180 = 2E28 :
   L1181 = 2E2B : 2E20
   L1182 = 2E2E :
   L1183 = 2E31 :
   L1184 = 2E31 :
   L1185 = 2E31 :
   L1186 = 2E31 :
   L1187 = 2E31 :
   L1188 = 2E31 : 2E28
   L1189 = 2E34 :
    L119 = 2123 :
   L1190 = 2E36 :
   L1191 = 2E38 :
   L1192 = 2E3B :
   L1193 = 2E3D :
   L1194 = 2E40 :
   L1195 = 2E43 : 2E38
   L1196 = 2E46 :
   L1197 = 2E49 :
   L1198 = 2E49 : 2E40
   L1199 = 2E4C :
     L12 = 2013 :
    L120 = 2129 :
   L1200 = 2E4E :
   L1201 = 2E50 :
   L1202 = 2E53 :
   L1203 = 2E55 :
   L1204 = 2E58 :
   L1205 = 2E5B : 2E50
   L1206 = 2E5E :
   L1207 = 2E61 :
   L1208 = 2E61 : 2E58
   L1209 = 2E64 :
    L121 = 212C :
   L1210 = 2E66 :
   L1211 = 2E68 :
   L1212 = 2E6B :
   L1213 = 2E6D :
   L1214 = 2E70 :
   L1215 = 2E73 : 2E68
   L1216 = 2E76 :
   L1217 = 2E79 :
   L1218 = 2E79 :
   L1219 = 2E79 : 2E70
    L122 = 212E :
   L1220 = 2E7C :
   L1221 = 2E89 :
   L1222 = 2E8F :
   L1223 = 2E92 :
   L1224 = 2E94 :
   L1225 = 2E97 :
   L1226 = 2E9A : 2E8F
   L1227 = 2E9D :
   L1228 = 2EA0 :
   L1229 = 2EA0 : 2E97
    L123 = 2131 :
   L1230 = 2EA3 :
   L1231 = 2EAE :
   L1232 = 2EB4 :
   L1233 = 2EB7 :
   L1234 = 2EB9 :
   L1235 = 2EBC :
   L1236 = 2EBF : 2EB4
   L1237 = 2EC2 :
   L1238 = 2EC5 :
   L1239 = 2EC5 : 2EBC
    L124 = 2134 : 2129
   L1240 = 2EC8 :
   L1241 = 2ED5 :
   L1242 = 2EDB :
   L1243 = 2EDE :
   L1244 = 2EE0 :
   L1245 = 2EE3 :
   L1246 = 2EE6 : 2EDB
   L1247 = 2EE9 :
   L1248 = 2EEC :
   L1249 = 2EEC :
    L125 = 2137 :
   L1250 = 2EEC : 2EE3
   L1251 = 2EEF :
   L1252 = 2EF2 :
   L1253 = 2EFF :
   L1254 = 2F01 :
   L1255 = 2F08 :
   L1256 = 2F0B :
   L1257 = 2F0D :
   L1258 = 2F10 :
   L1259 = 2F13 : 2F08
    L126 = 213A :
   L1260 = 2F16 :
   L1261 = 2F19 :
   L1262 = 2F19 : 2F10
   L1263 = 2F1C :
   L1264 = 2F1F :
   L1265 = 2F2A :
   L1266 = 2F30 :
   L1267 = 2F33 :
   L1268 = 2F35 :
   L1269 = 2F38 :
    L127 = 213A : 2131
   L1270 = 2F3B : 2F30
   L1271 = 2F3E :
   L1272 = 2F41 :
   L1273 = 2F41 : 2F38
   L1274 = 2F44 :
   L1275 = 2F47 :
   L1276 = 2F54 :
   L1277 = 2F5A :
   L1278 = 2F5D :
   L1279 = 2F5F :
    L128 = 213C :
   L1280 = 2F62 :
   L1281 = 2F65 : 2F5A
   L1282 = 2F68 :
   L1283 = 2F6B :
   L1284 = 2F6B :
   L1285 = 2F6B : 2F62
   L1286 = 2F6E :
   L1287 = 2F7B :
   L1288 = 2F7D :
   L1289 = 2F84 :
    L129 = 213F :
   L1290 = 2F87 :
   L1291 = 2F89 :
   L1292 = 2F8C :
   L1293 = 2F8F : 2F84
   L1294 = 2F92 :
   L1295 = 2F95 :
   L1296 = 2F95 : 2F8C
   L1297 = 2F98 :
   L1298 = 2FA3 :
   L1299 = 2FA9 :
     L13 = 2016 :
    L130 = 214C :
   L1300 = 2FAC :
   L1301 = 2FAE :
   L1302 = 2FB1 :
   L1303 = 2FB4 : 2FA9
   L1304 = 2FB7 :
   L1305 = 2FBA :
   L1306 = 2FBA : 2FB1
   L1307 = 2FBD :
   L1308 = 2FCA :
   L1309 = 2FD0 :
    L131 = 2152 :
   L1310 = 2FD3 :
   L1311 = 2FD5 :
   L1312 = 2FD8 :
   L1313 = 2FDB : 2FD0
   L1314 = 2FDE :
   L1315 = 2FE1 :
   L1316 = 2FE1 :
   L1317 = 2FE1 :
   L1318 = 2FE1 :
   L1319 = 2FE1 :
    L132 = 2155 :
   L1320 = 2FE1 : 2FD8
   L1321 = 2FE4 :
   L1322 = 2FE7 :
   L1323 = 2FE9 :
   L1324 = 2FEB :
   L1325 = 2FED :
   L1326 = 2FF0 :
   L1327 = 2FF2 :
   L1328 = 2FF5 :
   L1329 = 2FF8 : 2FED
    L133 = 2157 :
   L1330 = 2FFB :
   L1331 = 2FFE :
   L1332 = 2FFE : 2FF5
   L1333 = 3001 :
   L1334 = 3004 :
   L1335 = 3006 :
   L1336 = 3008 :
   L1337 = 300A :
   L1338 = 300D :
   L1339 = 300F :
    L134 = 215A :
   L1340 = 3012 :
   L1341 = 3015 : 300A
   L1342 = 3018 :
   L1343 = 301B :
   L1344 = 301B : 3012
   L1345 = 301E :
   L1346 = 3021 :
   L1347 = 3023 :
   L1348 = 3025 :
   L1349 = 3027 :
    L135 = 215D : 2152
   L1350 = 302A :
   L1351 = 302C :
   L1352 = 302F :
   L1353 = 3032 : 3027
   L1354 = 3035 :
   L1355 = 3038 :
   L1356 = 3038 :
   L1357 = 3038 : 302F
   L1358 = 303B :
   L1359 = 303F :
    L136 = 2160 :
   L1360 = 3043 :
   L1361 = 304E :
   L1362 = 3054 :
   L1363 = 3057 :
   L1364 = 3059 :
   L1365 = 305C :
   L1366 = 305F : 3054
   L1367 = 3062 :
   L1368 = 3065 :
   L1369 = 3065 : 305C
    L137 = 2163 :
   L1370 = 3068 :
   L1371 = 306C :
   L1372 = 3070 :
   L1373 = 3079 :
   L1374 = 307F :
   L1375 = 3082 :
   L1376 = 3084 :
   L1377 = 3087 :
   L1378 = 308A : 307F
   L1379 = 308D :
    L138 = 2163 :
   L1380 = 3090 :
   L1381 = 3090 : 3087
   L1382 = 3093 :
   L1383 = 3097 :
   L1384 = 309B :
   L1385 = 30A6 :
   L1386 = 30AC :
   L1387 = 30AF :
   L1388 = 30B1 :
   L1389 = 30B4 :
    L139 = 2163 : 215A
   L1390 = 30B7 : 30AC
   L1391 = 30BA :
   L1392 = 30BD :
   L1393 = 30BD :
   L1394 = 30BD : 30B4
   L1395 = 30C0 :
   L1396 = 30C3 :
   L1397 = 30C7 :
   L1398 = 30CB :
   L1399 = 30CD :
     L14 = 2019 :
    L140 = 2166 :
   L1400 = 30D4 :
   L1401 = 30D7 :
   L1402 = 30D9 :
   L1403 = 30DC :
   L1404 = 30DF : 30D4
   L1405 = 30E2 :
   L1406 = 30E5 :
   L1407 = 30E5 : 30DC
   L1408 = 30E8 :
   L1409 = 30EB :
    L141 = 2173 :
   L1410 = 30EF :
   L1411 = 30F1 :
   L1412 = 30F7 :
   L1413 = 30FA :
   L1414 = 30FC :
   L1415 = 30FF :
   L1416 = 3102 : 30F7
   L1417 = 3105 :
   L1418 = 3108 :
   L1419 = 3108 : 30FF
    L142 = 2175 :
   L1420 = 310B :
   L1421 = 310E :
   L1422 = 3112 :
   L1423 = 3114 :
   L1424 = 311A :
   L1425 = 311D :
   L1426 = 311F :
   L1427 = 3122 :
   L1428 = 3125 : 311A
   L1429 = 3128 :
    L143 = 217C :
   L1430 = 312B :
   L1431 = 312B :
   L1432 = 312B : 3122
   L1433 = 312E :
   L1434 = 3130 :
   L1435 = 3132 :
   L1436 = 3136 :
   L1437 = 3138 :
   L1438 = 313F :
   L1439 = 3142 :
    L144 = 217F :
   L1440 = 3144 :
   L1441 = 3147 :
   L1442 = 314A : 313F
   L1443 = 314D :
   L1444 = 3150 :
   L1445 = 3150 : 3147
   L1446 = 3153 :
   L1447 = 3155 :
   L1448 = 3157 :
   L1449 = 3159 :
    L145 = 2181 :
   L1450 = 315F :
   L1451 = 3162 :
   L1452 = 3164 :
   L1453 = 3167 :
   L1454 = 316A : 315F
   L1455 = 316D :
   L1456 = 3170 :
   L1457 = 3170 : 3167
   L1458 = 3173 :
   L1459 = 3175 :
    L146 = 2184 :
   L1460 = 3177 :
   L1461 = 3179 :
   L1462 = 317F :
   L1463 = 3182 :
   L1464 = 3184 :
   L1465 = 3187 :
   L1466 = 318A : 317F
   L1467 = 318D :
   L1468 = 3190 :
   L1469 = 3190 :
    L147 = 2187 : 217C
   L1470 = 3190 :
   L1471 = 3190 :
   L1472 = 3190 :
   L1473 = 3190 : 3187
   L1474 = 3193 :
   L1475 = 3198 :
   L1476 = 319A :
   L1477 = 319D :
   L1478 = 319F :
   L1479 = 31A2 :
    L148 = 218A :
   L1480 = 31A5 : 319A
   L1481 = 31A8 :
   L1482 = 31AB :
   L1483 = 31AB : 31A2
   L1484 = 31AE :
   L1485 = 31B3 :
   L1486 = 31B5 :
   L1487 = 31B8 :
   L1488 = 31BA :
   L1489 = 31BD :
    L149 = 218D :
   L1490 = 31C0 : 31B5
   L1491 = 31C3 :
   L1492 = 31C6 :
   L1493 = 31C6 : 31BD
   L1494 = 31C9 :
   L1495 = 31CE :
   L1496 = 31D0 :
   L1497 = 31D3 :
   L1498 = 31D5 :
   L1499 = 31D8 :
     L15 = 2019 :
    L150 = 218D : 2184
   L1500 = 31DB : 31D0
   L1501 = 31DE :
   L1502 = 31E1 :
   L1503 = 31E1 :
   L1504 = 31E1 : 31D8
   L1505 = 31E4 :
   L1506 = 31F2 :
   L1507 = 31F8 :
   L1508 = 31FB :
   L1509 = 31FD :
    L151 = 2190 :
   L1510 = 3200 :
   L1511 = 3203 : 31F8
   L1512 = 3206 :
   L1513 = 3209 :
   L1514 = 3209 : 3200
   L1515 = 320C :
   L1516 = 3218 :
   L1517 = 321E :
   L1518 = 3221 :
   L1519 = 3223 :
    L152 = 219B :
   L1520 = 3226 :
   L1521 = 3229 : 321E
   L1522 = 322C :
   L1523 = 322F :
   L1524 = 322F : 3226
   L1525 = 3232 :
   L1526 = 3240 :
   L1527 = 3246 :
   L1528 = 3249 :
   L1529 = 324B :
    L153 = 21A1 :
   L1530 = 324E :
   L1531 = 3251 : 3246
   L1532 = 3254 :
   L1533 = 3257 :
   L1534 = 3257 :
   L1535 = 3257 : 324E
   L1536 = 325A :
   L1537 = 325D :
   L1538 = 326B :
   L1539 = 326D :
    L154 = 21A4 :
   L1540 = 3274 :
   L1541 = 3277 :
   L1542 = 3279 :
   L1543 = 327C :
   L1544 = 327F : 3274
   L1545 = 3282 :
   L1546 = 3285 :
   L1547 = 3285 : 327C
   L1548 = 3288 :
   L1549 = 328B :
    L155 = 21A6 :
   L1550 = 3297 :
   L1551 = 329D :
   L1552 = 32A0 :
   L1553 = 32A2 :
   L1554 = 32A5 :
   L1555 = 32A8 : 329D
   L1556 = 32AB :
   L1557 = 32AE :
   L1558 = 32AE : 32A5
   L1559 = 32B1 :
    L156 = 21A9 :
   L1560 = 32B4 :
   L1561 = 32C2 :
   L1562 = 32C8 :
   L1563 = 32CB :
   L1564 = 32CD :
   L1565 = 32D0 :
   L1566 = 32D3 : 32C8
   L1567 = 32D6 :
   L1568 = 32D9 :
   L1569 = 32D9 :
    L157 = 21AC : 21A1
   L1570 = 32D9 : 32D0
   L1571 = 32DC :
   L1572 = 32EA :
   L1573 = 32EC :
   L1574 = 32F3 :
   L1575 = 32F6 :
   L1576 = 32F8 :
   L1577 = 32FB :
   L1578 = 32FE : 32F3
   L1579 = 3301 :
    L158 = 21AF :
   L1580 = 3304 :
   L1581 = 3304 : 32FB
   L1582 = 3307 :
   L1583 = 3313 :
   L1584 = 3319 :
   L1585 = 331C :
   L1586 = 331E :
   L1587 = 3321 :
   L1588 = 3324 : 3319
   L1589 = 3327 :
    L159 = 21B2 :
   L1590 = 332A :
   L1591 = 332A : 3321
   L1592 = 332D :
   L1593 = 333B :
   L1594 = 3341 :
   L1595 = 3344 :
   L1596 = 3346 :
   L1597 = 3349 :
   L1598 = 334C : 3341
   L1599 = 334F :
     L16 = 201C :
    L160 = 21B2 : 21A9
   L1600 = 3352 :
   L1601 = 3352 :
   L1602 = 3352 :
   L1603 = 3352 :
   L1604 = 3352 :
   L1605 = 3352 : 3349
   L1606 = 3355 :
   L1607 = 3357 :
   L1608 = 3359 :
   L1609 = 335C :
    L161 = 21B5 :
   L1610 = 335E :
   L1611 = 3361 :
   L1612 = 3364 : 3359
   L1613 = 3367 :
   L1614 = 336A :
   L1615 = 336A : 3361
   L1616 = 336D :
   L1617 = 336F :
   L1618 = 3371 :
   L1619 = 3374 :
    L162 = 21C2 :
   L1620 = 3376 :
   L1621 = 3379 :
   L1622 = 337C : 3371
   L1623 = 337F :
   L1624 = 3382 :
   L1625 = 3382 : 3379
   L1626 = 3385 :
   L1627 = 3387 :
   L1628 = 3389 :
   L1629 = 338C :
    L163 = 21C8 :
   L1630 = 338E :
   L1631 = 3391 :
   L1632 = 3394 : 3389
   L1633 = 3397 :
   L1634 = 339A :
   L1635 = 339A :
   L1636 = 339A : 3391
   L1637 = 339D :
   L1638 = 33AA :
   L1639 = 33B0 :
    L164 = 21CB :
   L1640 = 33B3 :
   L1641 = 33B5 :
   L1642 = 33B8 :
   L1643 = 33BB : 33B0
   L1644 = 33BE :
   L1645 = 33C1 :
   L1646 = 33C1 : 33B8
   L1647 = 33C4 :
   L1648 = 33CF :
   L1649 = 33D5 :
    L165 = 21CD :
   L1650 = 33D8 :
   L1651 = 33DA :
   L1652 = 33DD :
   L1653 = 33E0 : 33D5
   L1654 = 33E3 :
   L1655 = 33E6 :
   L1656 = 33E6 : 33DD
   L1657 = 33E9 :
   L1658 = 33F6 :
   L1659 = 33FC :
    L166 = 21D0 :
   L1660 = 33FF :
   L1661 = 3401 :
   L1662 = 3404 :
   L1663 = 3407 : 33FC
   L1664 = 340A :
   L1665 = 340D :
   L1666 = 340D :
   L1667 = 340D : 3404
   L1668 = 3410 :
   L1669 = 3413 :
    L167 = 21D3 : 21C8
   L1670 = 3420 :
   L1671 = 3422 :
   L1672 = 3429 :
   L1673 = 342C :
   L1674 = 342E :
   L1675 = 3431 :
   L1676 = 3434 : 3429
   L1677 = 3437 :
   L1678 = 343A :
   L1679 = 343A : 3431
    L168 = 21D6 :
   L1680 = 343D :
   L1681 = 3440 :
   L1682 = 344B :
   L1683 = 3451 :
   L1684 = 3454 :
   L1685 = 3456 :
   L1686 = 3459 :
   L1687 = 345C : 3451
   L1688 = 345F :
   L1689 = 3462 :
    L169 = 21D9 :
   L1690 = 3462 : 3459
   L1691 = 3465 :
   L1692 = 3468 :
   L1693 = 3475 :
   L1694 = 347B :
   L1695 = 347E :
   L1696 = 3480 :
   L1697 = 3483 :
   L1698 = 3486 : 347B
   L1699 = 3489 :
     L17 = 201F :
    L170 = 21D9 :
   L1700 = 348C :
   L1701 = 348C :
   L1702 = 348C : 3483
   L1703 = 348F :
   L1704 = 349C :
   L1705 = 349E :
   L1706 = 34A5 :
   L1707 = 34A8 :
   L1708 = 34AA :
   L1709 = 34AD :
    L171 = 21D9 :
   L1710 = 34B0 : 34A5
   L1711 = 34B3 :
   L1712 = 34B6 :
   L1713 = 34B6 : 34AD
   L1714 = 34B9 :
   L1715 = 34C4 :
   L1716 = 34CA :
   L1717 = 34CD :
   L1718 = 34CF :
   L1719 = 34D2 :
    L172 = 21D9 :
   L1720 = 34D5 : 34CA
   L1721 = 34D8 :
   L1722 = 34DB :
   L1723 = 34DB : 34D2
   L1724 = 34DE :
   L1725 = 34EB :
   L1726 = 34F1 :
   L1727 = 34F4 :
   L1728 = 34F6 :
   L1729 = 34F9 :
    L173 = 21D9 :
   L1730 = 34FC : 34F1
   L1731 = 34FF :
   L1732 = 3502 :
   L1733 = 3502 :
   L1734 = 3502 :
   L1735 = 3502 :
   L1736 = 3502 :
   L1737 = 3502 : 34F9
   L1738 = 3505 :
   L1739 = 3507 :
    L174 = 21D9 : 21D0
   L1740 = 3509 :
   L1741 = 350C :
   L1742 = 350E :
   L1743 = 3511 :
   L1744 = 3514 : 3509
   L1745 = 3517 :
   L1746 = 351A :
   L1747 = 351A : 3511
   L1748 = 351D :
   L1749 = 351F :
    L175 = 21DB :
   L1750 = 3521 :
   L1751 = 3524 :
   L1752 = 3526 :
   L1753 = 3529 :
   L1754 = 352C : 3521
   L1755 = 352F :
   L1756 = 3532 :
   L1757 = 3532 : 3529
   L1758 = 3535 :
   L1759 = 3537 :
    L176 = 21DE :
   L1760 = 3539 :
   L1761 = 353C :
   L1762 = 353E :
   L1763 = 3541 :
   L1764 = 3544 : 3539
   L1765 = 3547 :
   L1766 = 354A :
   L1767 = 354A :
   L1768 = 354A : 3541
   L1769 = 354D :
    L177 = 21E0 :
   L1770 = 355A :
   L1771 = 3560 :
   L1772 = 3563 :
   L1773 = 3565 :
   L1774 = 3568 :
   L1775 = 356B : 3560
   L1776 = 356E :
   L1777 = 3571 :
   L1778 = 3571 : 3568
   L1779 = 3574 :
    L178 = 21E2 :
   L1780 = 357F :
   L1781 = 3585 :
   L1782 = 3588 :
   L1783 = 358A :
   L1784 = 358D :
   L1785 = 3590 : 3585
   L1786 = 3593 :
   L1787 = 3596 :
   L1788 = 3596 : 358D
   L1789 = 3599 :
    L179 = 21E4 :
   L1790 = 35A6 :
   L1791 = 35AC :
   L1792 = 35AF :
   L1793 = 35B1 :
   L1794 = 35B4 :
   L1795 = 35B7 : 35AC
   L1796 = 35BA :
   L1797 = 35BD :
   L1798 = 35BD :
   L1799 = 35BD : 35B4
     L18 = 2022 :
    L180 = 21E7 :
   L1800 = 35C0 :
   L1801 = 35C3 :
   L1802 = 35D0 :
   L1803 = 35D2 :
   L1804 = 35D9 :
   L1805 = 35DC :
   L1806 = 35DE :
   L1807 = 35E1 :
   L1808 = 35E4 : 35D9
   L1809 = 35E7 :
    L181 = 21E9 :
   L1810 = 35EA :
   L1811 = 35EA : 35E1
   L1812 = 35ED :
   L1813 = 35F0 :
   L1814 = 35FB :
   L1815 = 3601 :
   L1816 = 3604 :
   L1817 = 3606 :
   L1818 = 3609 :
   L1819 = 360C : 3601
    L182 = 21EC :
   L1820 = 360F :
   L1821 = 3612 :
   L1822 = 3612 : 3609
   L1823 = 3615 :
   L1824 = 3618 :
   L1825 = 3625 :
   L1826 = 362B :
   L1827 = 362E :
   L1828 = 3630 :
   L1829 = 3633 :
    L183 = 21EF : 21E4
   L1830 = 3636 : 362B
   L1831 = 3639 :
   L1832 = 363C :
   L1833 = 363C :
   L1834 = 363C : 3633
   L1835 = 363F :
   L1836 = 364C :
   L1837 = 364E :
   L1838 = 3655 :
   L1839 = 3658 :
    L184 = 21F2 :
   L1840 = 365A :
   L1841 = 365D :
   L1842 = 3660 : 3655
   L1843 = 3663 :
   L1844 = 3666 :
   L1845 = 3666 : 365D
   L1846 = 3669 :
   L1847 = 3674 :
   L1848 = 367A :
   L1849 = 367D :
    L185 = 21F5 :
   L1850 = 367F :
   L1851 = 3682 :
   L1852 = 3685 : 367A
   L1853 = 3688 :
   L1854 = 368B :
   L1855 = 368B : 3682
   L1856 = 368E :
   L1857 = 369B :
   L1858 = 36A1 :
   L1859 = 36A4 :
    L186 = 21F5 : 21EC
   L1860 = 36A6 :
   L1861 = 36A9 :
   L1862 = 36AC : 36A1
   L1863 = 36AF :
   L1864 = 36B2 :
   L1865 = 36B2 :
   L1866 = 36B2 :
   L1867 = 36B2 :
   L1868 = 36B2 :
   L1869 = 36B2 : 36A9
    L187 = 21F7 :
   L1870 = 36B5 :
   L1871 = 36B8 :
   L1872 = 36BA :
   L1873 = 36BC :
   L1874 = 36BE :
   L1875 = 36C1 :
   L1876 = 36C3 :
   L1877 = 36C6 :
   L1878 = 36C9 : 36BE
   L1879 = 36CC :
    L188 = 21FA :
   L1880 = 36CF :
   L1881 = 36CF : 36C6
   L1882 = 36D2 :
   L1883 = 36D5 :
   L1884 = 36D7 :
   L1885 = 36D9 :
   L1886 = 36DB :
   L1887 = 36DE :
   L1888 = 36E0 :
   L1889 = 36E3 :
    L189 = 21FC :
   L1890 = 36E6 : 36DB
   L1891 = 36E9 :
   L1892 = 36EC :
   L1893 = 36EC : 36E3
   L1894 = 36EF :
   L1895 = 36F2 :
   L1896 = 36F4 :
   L1897 = 36F6 :
   L1898 = 36F8 :
   L1899 = 36FB :
     L19 = 2022 :
    L190 = 21FE :
   L1900 = 36FD :
   L1901 = 3700 :
   L1902 = 3703 : 36F8
   L1903 = 3706 :
   L1904 = 3709 :
   L1905 = 3709 :
   L1906 = 3709 : 3700
   L1907 = 370C :
   L1908 = 3710 :
   L1909 = 3714 :
    L191 = 2200 :
   L1910 = 371F :
   L1911 = 3725 :
   L1912 = 3728 :
   L1913 = 372A :
   L1914 = 372D :
   L1915 = 3730 : 3725
   L1916 = 3733 :
   L1917 = 3736 :
   L1918 = 3736 : 372D
   L1919 = 3739 :
    L192 = 2203 :
   L1920 = 373D :
   L1921 = 3741 :
   L1922 = 374A :
   L1923 = 3750 :
   L1924 = 3753 :
   L1925 = 3755 :
   L1926 = 3758 :
   L1927 = 375B : 3750
   L1928 = 375E :
   L1929 = 3761 :
    L193 = 2205 :
   L1930 = 3761 : 3758
   L1931 = 3764 :
   L1932 = 3768 :
   L1933 = 376C :
   L1934 = 3777 :
   L1935 = 377D :
   L1936 = 3780 :
   L1937 = 3782 :
   L1938 = 3785 :
   L1939 = 3788 : 377D
    L194 = 2208 :
   L1940 = 378B :
   L1941 = 378E :
   L1942 = 378E :
   L1943 = 378E : 3785
   L1944 = 3791 :
   L1945 = 3794 :
   L1946 = 3798 :
   L1947 = 379C :
   L1948 = 379E :
   L1949 = 37A5 :
    L195 = 220B : 2200
   L1950 = 37A8 :
   L1951 = 37AA :
   L1952 = 37AD :
   L1953 = 37B0 : 37A5
   L1954 = 37B3 :
   L1955 = 37B6 :
   L1956 = 37B6 : 37AD
   L1957 = 37B9 :
   L1958 = 37BC :
   L1959 = 37C0 :
    L196 = 220E :
   L1960 = 37C2 :
   L1961 = 37C8 :
   L1962 = 37CB :
   L1963 = 37CD :
   L1964 = 37D0 :
   L1965 = 37D3 : 37C8
   L1966 = 37D6 :
   L1967 = 37D9 :
   L1968 = 37D9 : 37D0
   L1969 = 37DC :
    L197 = 2211 :
   L1970 = 37DF :
   L1971 = 37E3 :
   L1972 = 37E5 :
   L1973 = 37EB :
   L1974 = 37EE :
   L1975 = 37F0 :
   L1976 = 37F3 :
   L1977 = 37F6 : 37EB
   L1978 = 37F9 :
   L1979 = 37FC :
    L198 = 2211 : 2208
   L1980 = 37FC :
   L1981 = 37FC : 37F3
   L1982 = 37FF :
   L1983 = 3801 :
   L1984 = 3803 :
   L1985 = 3807 :
   L1986 = 3809 :
   L1987 = 3810 :
   L1988 = 3813 :
   L1989 = 3815 :
    L199 = 2213 :
   L1990 = 3818 :
   L1991 = 381B : 3810
   L1992 = 381E :
   L1993 = 3821 :
   L1994 = 3821 : 3818
   L1995 = 3824 :
   L1996 = 3826 :
   L1997 = 3828 :
   L1998 = 382A :
   L1999 = 3830 :
      L2 = 2009 :
     L20 = 2022 :
    L200 = 2216 :
   L2000 = 3833 :
   L2001 = 3835 :
   L2002 = 3838 :
   L2003 = 383B : 3830
   L2004 = 383E :
   L2005 = 3841 :
   L2006 = 3841 : 3838
   L2007 = 3844 :
   L2008 = 3846 :
   L2009 = 3848 :
    L201 = 2218 :
   L2010 = 384A :
   L2011 = 3850 :
   L2012 = 3853 :
   L2013 = 3855 :
   L2014 = 3858 :
   L2015 = 385B : 3850
   L2016 = 385E :
   L2017 = 3861 :
   L2018 = 3861 :
   L2019 = 3861 :
    L202 = 221A :
   L2020 = 3861 :
   L2021 = 3861 :
   L2022 = 3861 : 3858
   L2023 = 3864 :
   L2024 = 3869 :
   L2025 = 386B :
   L2026 = 386E :
   L2027 = 3870 :
   L2028 = 3873 :
   L2029 = 3876 : 386B
    L203 = 221C :
   L2030 = 3879 :
   L2031 = 387C :
   L2032 = 387C : 3873
   L2033 = 387F :
   L2034 = 3884 :
   L2035 = 3886 :
   L2036 = 3889 :
   L2037 = 388B :
   L2038 = 388E :
   L2039 = 3891 : 3886
    L204 = 221F :
   L2040 = 3894 :
   L2041 = 3897 :
   L2042 = 3897 : 388E
   L2043 = 389A :
   L2044 = 389F :
   L2045 = 38A1 :
   L2046 = 38A4 :
   L2047 = 38A6 :
   L2048 = 38A9 :
   L2049 = 38AC : 38A1
    L205 = 2221 :
   L2050 = 38AF :
   L2051 = 38B2 :
   L2052 = 38B2 :
   L2053 = 38B2 : 38A9
   L2054 = 38B5 :
   L2055 = 38C3 :
   L2056 = 38C9 :
   L2057 = 38CC :
   L2058 = 38CE :
   L2059 = 38D1 :
    L206 = 2224 :
   L2060 = 38D4 : 38C9
   L2061 = 38D7 :
   L2062 = 38DA :
   L2063 = 38DA : 38D1
   L2064 = 38DD :
   L2065 = 38E9 :
   L2066 = 38EF :
   L2067 = 38F2 :
   L2068 = 38F4 :
   L2069 = 38F7 :
    L207 = 2227 : 221C
   L2070 = 38FA : 38EF
   L2071 = 38FD :
   L2072 = 3900 :
   L2073 = 3900 : 38F7
   L2074 = 3903 :
   L2075 = 3911 :
   L2076 = 3917 :
   L2077 = 391A :
   L2078 = 391C :
   L2079 = 391F :
    L208 = 222A :
   L2080 = 3922 : 3917
   L2081 = 3925 :
   L2082 = 3928 :
   L2083 = 3928 :
   L2084 = 3928 : 391F
   L2085 = 392B :
   L2086 = 392E :
   L2087 = 393C :
   L2088 = 393E :
   L2089 = 3945 :
    L209 = 222D :
   L2090 = 3948 :
   L2091 = 394A :
   L2092 = 394D :
   L2093 = 3950 : 3945
   L2094 = 3953 :
   L2095 = 3956 :
   L2096 = 3956 : 394D
   L2097 = 3959 :
   L2098 = 395C :
   L2099 = 3968 :
     L21 = 2022 :
    L210 = 222D :
   L2100 = 396E :
   L2101 = 3971 :
   L2102 = 3973 :
   L2103 = 3976 :
   L2104 = 3979 : 396E
   L2105 = 397C :
   L2106 = 397F :
   L2107 = 397F : 3976
   L2108 = 3982 :
   L2109 = 3985 :
    L211 = 222D : 2224
   L2110 = 3993 :
   L2111 = 3999 :
   L2112 = 399C :
   L2113 = 399E :
   L2114 = 39A1 :
   L2115 = 39A4 : 3999
   L2116 = 39A7 :
   L2117 = 39AA :
   L2118 = 39AA :
   L2119 = 39AA : 39A1
    L212 = 2230 :
   L2120 = 39AD :
   L2121 = 39BB :
   L2122 = 39BD :
   L2123 = 39C4 :
   L2124 = 39C7 :
   L2125 = 39C9 :
   L2126 = 39CC :
   L2127 = 39CF : 39C4
   L2128 = 39D2 :
   L2129 = 39D5 :
    L213 = 2234 :
   L2130 = 39D5 : 39CC
   L2131 = 39D8 :
   L2132 = 39E4 :
   L2133 = 39EA :
   L2134 = 39ED :
   L2135 = 39EF :
   L2136 = 39F2 :
   L2137 = 39F5 : 39EA
   L2138 = 39F8 :
   L2139 = 39FB :
    L214 = 2238 :
   L2140 = 39FB : 39F2
   L2141 = 39FE :
   L2142 = 3A0C :
   L2143 = 3A12 :
   L2144 = 3A15 :
   L2145 = 3A17 :
   L2146 = 3A1A :
   L2147 = 3A1D : 3A12
   L2148 = 3A20 :
   L2149 = 3A23 :
    L215 = 2243 :
   L2150 = 3A23 :
   L2151 = 3A23 :
   L2152 = 3A23 :
   L2153 = 3A23 :
   L2154 = 3A23 : 3A1A
   L2155 = 3A25 :
   L2156 = 3A27 :
   L2157 = 3A29 :
   L2158 = 3A2C :
   L2159 = 3A2E :
    L216 = 2249 :
   L2160 = 3A31 :
   L2161 = 3A34 : 3A29
   L2162 = 3A37 :
   L2163 = 3A3A :
   L2164 = 3A3A : 3A31
   L2165 = 3A3C :
   L2166 = 3A3E :
   L2167 = 3A40 :
   L2168 = 3A43 :
   L2169 = 3A45 :
    L217 = 224C :
   L2170 = 3A48 :
   L2171 = 3A4B : 3A40
   L2172 = 3A4E :
   L2173 = 3A51 :
   L2174 = 3A51 : 3A48
   L2175 = 3A53 :
   L2176 = 3A55 :
   L2177 = 3A57 :
   L2178 = 3A5A :
   L2179 = 3A5C :
    L218 = 224E :
   L2180 = 3A5F :
   L2181 = 3A62 : 3A57
   L2182 = 3A65 :
   L2183 = 3A68 :
   L2184 = 3A68 :
   L2185 = 3A68 : 3A5F
   L2186 = 3A6B :
   L2187 = 3A78 :
   L2188 = 3A7E :
   L2189 = 3A81 :
    L219 = 2251 :
   L2190 = 3A83 :
   L2191 = 3A86 :
   L2192 = 3A89 : 3A7E
   L2193 = 3A8C :
   L2194 = 3A8F :
   L2195 = 3A8F : 3A86
   L2196 = 3A92 :
   L2197 = 3A9D :
   L2198 = 3AA3 :
   L2199 = 3AA6 :
     L22 = 2022 :
    L220 = 2254 : 2249
   L2200 = 3AA8 :
   L2201 = 3AAB :
   L2202 = 3AAE : 3AA3
   L2203 = 3AB1 :
   L2204 = 3AB4 :
   L2205 = 3AB4 : 3AAB
   L2206 = 3AB7 :
   L2207 = 3AC4 :
   L2208 = 3ACA :
   L2209 = 3ACD :
    L221 = 2257 :
   L2210 = 3ACF :
   L2211 = 3AD2 :
   L2212 = 3AD5 : 3ACA
   L2213 = 3AD8 :
   L2214 = 3ADB :
   L2215 = 3ADB :
   L2216 = 3ADB : 3AD2
   L2217 = 3ADD :
   L2218 = 3AE0 :
   L2219 = 3AED :
    L222 = 225A :
   L2220 = 3AEF :
   L2221 = 3AF6 :
   L2222 = 3AF9 :
   L2223 = 3AFB :
   L2224 = 3AFE :
   L2225 = 3B01 : 3AF6
   L2226 = 3B04 :
   L2227 = 3B07 :
   L2228 = 3B07 : 3AFE
   L2229 = 3B09 :
    L223 = 225A : 2251
   L2230 = 3B0C :
   L2231 = 3B17 :
   L2232 = 3B1D :
   L2233 = 3B20 :
   L2234 = 3B22 :
   L2235 = 3B25 :
   L2236 = 3B28 : 3B1D
   L2237 = 3B2B :
   L2238 = 3B2E :
   L2239 = 3B2E : 3B25
    L224 = 225D :
   L2240 = 3B30 :
   L2241 = 3B33 :
   L2242 = 3B40 :
   L2243 = 3B46 :
   L2244 = 3B49 :
   L2245 = 3B4B :
   L2246 = 3B4E :
   L2247 = 3B51 : 3B46
   L2248 = 3B54 :
   L2249 = 3B57 :
    L225 = 2261 :
   L2250 = 3B57 :
   L2251 = 3B57 : 3B4E
   L2252 = 3B5A :
   L2253 = 3B67 :
   L2254 = 3B69 :
   L2255 = 3B70 :
   L2256 = 3B73 :
   L2257 = 3B75 :
   L2258 = 3B78 :
   L2259 = 3B7B : 3B70
    L226 = 2265 :
   L2260 = 3B7E :
   L2261 = 3B81 :
   L2262 = 3B81 : 3B78
   L2263 = 3B84 :
   L2264 = 3B8F :
   L2265 = 3B95 :
   L2266 = 3B98 :
   L2267 = 3B9A :
   L2268 = 3B9D :
   L2269 = 3BA0 : 3B95
    L227 = 226E :
   L2270 = 3BA3 :
   L2271 = 3BA6 :
   L2272 = 3BA6 : 3B9D
   L2273 = 3BA9 :
   L2274 = 3BB6 :
   L2275 = 3BBC :
   L2276 = 3BBF :
   L2277 = 3BC1 :
   L2278 = 3BC4 :
   L2279 = 3BC7 : 3BBC
    L228 = 2274 :
   L2280 = 3BCA :
   L2281 = 3BCD :
   L2282 = 3BCD :
   L2283 = 3BCD : 3BC4
   L2284 = 3BD0 :
   L2285 = 3BD3 :
   L2286 = 3BD3 :
   L2287 = 3BD5 :
   L2288 = 3BD7 :
   L2289 = 3BD8 :
    L229 = 2277 :
   L2290 = 3BD8 : 3BCD
     L23 = 2022 :
    L230 = 2279 :
    L231 = 227C :
    L232 = 227F : 2274
    L233 = 2282 :
    L234 = 2285 :
    L235 = 2285 : 227C
    L236 = 2288 :
    L237 = 228C :
    L238 = 2290 :
    L239 = 229B :
     L24 = 2022 : 201F
    L240 = 22A1 :
    L241 = 22A4 :
    L242 = 22A6 :
    L243 = 22A9 :
    L244 = 22AC : 22A1
    L245 = 22AF :
    L246 = 22B2 :
    L247 = 22B2 :
    L248 = 22B2 : 22A9
    L249 = 22B4 :
     L25 = 2022 :
    L250 = 22B7 :
    L251 = 22BB :
    L252 = 22BF :
    L253 = 22C1 :
    L254 = 22C8 :
    L255 = 22CB :
    L256 = 22CD :
    L257 = 22D0 :
    L258 = 22D3 : 22C8
    L259 = 22D6 :
     L26 = 2024 :
    L260 = 22D9 :
    L261 = 22D9 : 22D0
    L262 = 22DB :
    L263 = 22DE :
    L264 = 22E2 :
    L265 = 22E4 :
    L266 = 22EA :
    L267 = 22ED :
    L268 = 22EF :
    L269 = 22F2 :
     L27 = 202A :
    L270 = 22F5 : 22EA
    L271 = 22F8 :
    L272 = 22FB :
    L273 = 22FB : 22F2
    L274 = 22FD :
    L275 = 2300 :
    L276 = 2304 :
    L277 = 2306 :
    L278 = 230C :
    L279 = 230F :
     L28 = 202A :
    L280 = 2311 :
    L281 = 2314 :
    L282 = 2317 : 230C
    L283 = 231A :
    L284 = 231D :
    L285 = 231D :
    L286 = 231D : 2314
    L287 = 2320 :
    L288 = 2322 :
    L289 = 2324 :
     L29 = 202A :
    L290 = 2328 :
    L291 = 232A :
    L292 = 2331 :
    L293 = 2334 :
    L294 = 2336 :
    L295 = 2339 :
    L296 = 233C : 2331
    L297 = 233F :
    L298 = 2342 :
    L299 = 2342 : 2339
      L3 = 2009 :
     L30 = 202C :
    L300 = 2345 :
    L301 = 2347 :
    L302 = 2349 :
    L303 = 234B :
    L304 = 2351 :
    L305 = 2354 :
    L306 = 2356 :
    L307 = 2359 :
    L308 = 235C : 2351
    L309 = 235F :
     L31 = 202F :
    L310 = 2362 :
    L311 = 2362 : 2359
    L312 = 2365 :
    L313 = 2367 :
    L314 = 2369 :
    L315 = 236B :
    L316 = 2371 :
    L317 = 2374 :
    L318 = 2376 :
    L319 = 2379 :
     L32 = 202F :
    L320 = 237C : 2371
    L321 = 237F :
    L322 = 2382 :
    L323 = 2382 :
    L324 = 2382 :
    L325 = 2382 :
    L326 = 2382 :
    L327 = 2382 : 2379
    L328 = 2384 :
    L329 = 2389 :
     L33 = 202F :
    L330 = 238B :
    L331 = 238E :
    L332 = 2390 :
    L333 = 2393 :
    L334 = 2396 : 238B
    L335 = 2399 :
    L336 = 239C :
    L337 = 239C : 2393
    L338 = 239E :
    L339 = 23A3 :
     L34 = 202F :
    L340 = 23A5 :
    L341 = 23A8 :
    L342 = 23AA :
    L343 = 23AD :
    L344 = 23B0 : 23A5
    L345 = 23B3 :
    L346 = 23B6 :
    L347 = 23B6 : 23AD
    L348 = 23B8 :
    L349 = 23BD :
     L35 = 202F :
    L350 = 23BF :
    L351 = 23C2 :
    L352 = 23C4 :
    L353 = 23C7 :
    L354 = 23CA : 23BF
    L355 = 23CD :
    L356 = 23D0 :
    L357 = 23D0 :
    L358 = 23D0 : 23C7
    L359 = 23D3 :
     L36 = 202F :
    L360 = 23E1 :
    L361 = 23E7 :
    L362 = 23EA :
    L363 = 23EC :
    L364 = 23EF :
    L365 = 23F2 : 23E7
    L366 = 23F5 :
    L367 = 23F8 :
    L368 = 23F8 : 23EF
    L369 = 23FB :
     L37 = 202F :
    L370 = 2407 :
    L371 = 240D :
    L372 = 2410 :
    L373 = 2412 :
    L374 = 2415 :
    L375 = 2418 : 240D
    L376 = 241B :
    L377 = 241E :
    L378 = 241E : 2415
    L379 = 2421 :
     L38 = 202F :
    L380 = 242F :
    L381 = 2435 :
    L382 = 2438 :
    L383 = 243A :
    L384 = 243D :
    L385 = 2440 : 2435
    L386 = 2443 :
    L387 = 2446 :
    L388 = 2446 :
    L389 = 2446 : 243D
     L39 = 202F :
    L390 = 2448 :
    L391 = 244B :
    L392 = 2459 :
    L393 = 245B :
    L394 = 2462 :
    L395 = 2465 :
    L396 = 2467 :
    L397 = 246A :
    L398 = 246D : 2462
    L399 = 2470 :
      L4 = 2009 :
     L40 = 2031 :
    L400 = 2473 :
    L401 = 2473 : 246A
    L402 = 2475 :
    L403 = 2478 :
    L404 = 2484 :
    L405 = 248A :
    L406 = 248D :
    L407 = 248F :
    L408 = 2492 :
    L409 = 2495 : 248A
     L41 = 2033 :
    L410 = 2498 :
    L411 = 249B :
    L412 = 249B : 2492
    L413 = 249D :
    L414 = 24A0 :
    L415 = 24AE :
    L416 = 24B4 :
    L417 = 24B7 :
    L418 = 24B9 :
    L419 = 24BC :
     L42 = 2035 :
    L420 = 24BF : 24B4
    L421 = 24C2 :
    L422 = 24C5 :
    L423 = 24C5 :
    L424 = 24C5 : 24BC
    L425 = 24C8 :
    L426 = 24D6 :
    L427 = 24D8 :
    L428 = 24DF :
    L429 = 24E2 :
     L43 = 2038 :
    L430 = 24E4 :
    L431 = 24E7 :
    L432 = 24EA : 24DF
    L433 = 24ED :
    L434 = 24F0 :
    L435 = 24F0 : 24E7
    L436 = 24F3 :
    L437 = 24FF :
    L438 = 2505 :
    L439 = 2508 :
     L44 = 203A :
    L440 = 250A :
    L441 = 250D :
    L442 = 2510 : 2505
    L443 = 2513 :
    L444 = 2516 :
    L445 = 2516 : 250D
    L446 = 2519 :
    L447 = 2527 :
    L448 = 252D :
    L449 = 2530 :
     L45 = 203D :
    L450 = 2532 :
    L451 = 2535 :
    L452 = 2538 : 252D
    L453 = 253B :
    L454 = 253E :
    L455 = 253E :
    L456 = 253E :
    L457 = 253E :
    L458 = 253E :
    L459 = 253E : 2535
     L46 = 2040 : 2035
    L460 = 2540 :
    L461 = 2542 :
    L462 = 2544 :
    L463 = 2547 :
    L464 = 2549 :
    L465 = 254C :
    L466 = 254F : 2544
    L467 = 2552 :
    L468 = 2555 :
    L469 = 2555 : 254C
     L47 = 2043 :
    L470 = 2557 :
    L471 = 2559 :
    L472 = 255B :
    L473 = 255E :
    L474 = 2560 :
    L475 = 2563 :
    L476 = 2566 : 255B
    L477 = 2569 :
    L478 = 256C :
    L479 = 256C : 2563
     L48 = 2046 :
    L480 = 256E :
    L481 = 2570 :
    L482 = 2572 :
    L483 = 2575 :
    L484 = 2577 :
    L485 = 257A :
    L486 = 257D : 2572
    L487 = 2580 :
    L488 = 2583 :
    L489 = 2583 :
     L49 = 2046 : 203D
    L490 = 2583 : 257A
    L491 = 2586 :
    L492 = 2593 :
    L493 = 2599 :
    L494 = 259C :
    L495 = 259E :
    L496 = 25A1 :
    L497 = 25A4 : 2599
    L498 = 25A7 :
    L499 = 25AA :
      L5 = 2009 :
     L50 = 2048 :
    L500 = 25AA : 25A1
    L501 = 25AD :
    L502 = 25B8 :
    L503 = 25BE :
    L504 = 25C1 :
    L505 = 25C3 :
    L506 = 25C6 :
    L507 = 25C9 : 25BE
    L508 = 25CC :
    L509 = 25CF :
     L51 = 204A :
    L510 = 25CF : 25C6
    L511 = 25D2 :
    L512 = 25DF :
    L513 = 25E5 :
    L514 = 25E8 :
    L515 = 25EA :
    L516 = 25ED :
    L517 = 25F0 : 25E5
    L518 = 25F3 :
    L519 = 25F6 :
     L52 = 204C :
    L520 = 25F6 :
    L521 = 25F6 : 25ED
    L522 = 25F8 :
    L523 = 25FB :
    L524 = 2608 :
    L525 = 260A :
    L526 = 2611 :
    L527 = 2614 :
    L528 = 2616 :
    L529 = 2619 :
     L53 = 204F :
    L530 = 261C : 2611
    L531 = 261F :
    L532 = 2622 :
    L533 = 2622 : 2619
    L534 = 2624 :
    L535 = 2627 :
    L536 = 2632 :
    L537 = 2638 :
    L538 = 263B :
    L539 = 263D :
     L54 = 2051 :
    L540 = 2640 :
    L541 = 2643 : 2638
    L542 = 2646 :
    L543 = 2649 :
    L544 = 2649 : 2640
    L545 = 264B :
    L546 = 264E :
    L547 = 265B :
    L548 = 2661 :
    L549 = 2664 :
     L55 = 2054 :
    L550 = 2666 :
    L551 = 2669 :
    L552 = 266C : 2661
    L553 = 266F :
    L554 = 2672 :
    L555 = 2672 :
    L556 = 2672 : 2669
    L557 = 2675 :
    L558 = 2682 :
    L559 = 2684 :
     L56 = 2057 : 204C
    L560 = 268B :
    L561 = 268E :
    L562 = 2690 :
    L563 = 2693 :
    L564 = 2696 : 268B
    L565 = 2699 :
    L566 = 269C :
    L567 = 269C : 2693
    L568 = 269F :
    L569 = 26AA :
     L57 = 205A :
    L570 = 26B0 :
    L571 = 26B3 :
    L572 = 26B5 :
    L573 = 26B8 :
    L574 = 26BB : 26B0
    L575 = 26BE :
    L576 = 26C1 :
    L577 = 26C1 : 26B8
    L578 = 26C4 :
    L579 = 26D1 :
     L58 = 205D :
    L580 = 26D7 :
    L581 = 26DA :
    L582 = 26DC :
    L583 = 26DF :
    L584 = 26E2 : 26D7
    L585 = 26E5 :
    L586 = 26E8 :
    L587 = 26E8 :
    L588 = 26E8 :
    L589 = 26E8 :
     L59 = 205D : 2054
    L590 = 26E8 :
    L591 = 26E8 : 26DF
    L592 = 26EA :
    L593 = 26EC :
    L594 = 26EE :
    L595 = 26F0 :
    L596 = 26F3 :
    L597 = 26F5 :
    L598 = 26F8 :
    L599 = 26FB : 26F0
      L6 = 2009 : 2003
     L60 = 205F :
    L600 = 26FE :
    L601 = 2701 :
    L602 = 2701 : 26F8
    L603 = 2703 :
    L604 = 2705 :
    L605 = 2707 :
    L606 = 2709 :
    L607 = 270C :
    L608 = 270E :
    L609 = 2711 :
     L61 = 2061 :
    L610 = 2714 : 2709
    L611 = 2717 :
    L612 = 271A :
    L613 = 271A : 2711
    L614 = 271C :
    L615 = 271E :
    L616 = 2720 :
    L617 = 2722 :
    L618 = 2725 :
    L619 = 2727 :
     L62 = 2063 :
    L620 = 272A :
    L621 = 272D : 2722
    L622 = 2730 :
    L623 = 2733 :
    L624 = 2733 :
    L625 = 2733 : 272A
    L626 = 2736 :
    L627 = 273A :
    L628 = 2747 :
    L629 = 274D :
     L63 = 2066 :
    L630 = 2750 :
    L631 = 2752 :
    L632 = 2755 :
    L633 = 2758 : 274D
    L634 = 275B :
    L635 = 275E :
    L636 = 275E : 2755
    L637 = 2761 :
    L638 = 2765 :
    L639 = 2770 :
     L64 = 2068 :
    L640 = 2776 :
    L641 = 2779 :
    L642 = 277B :
    L643 = 277E :
    L644 = 2781 : 2776
    L645 = 2784 :
    L646 = 2787 :
    L647 = 2787 : 277E
    L648 = 278A :
    L649 = 278E :
     L65 = 206B :
    L650 = 279B :
    L651 = 27A1 :
    L652 = 27A4 :
    L653 = 27A6 :
    L654 = 27A9 :
    L655 = 27AC : 27A1
    L656 = 27AF :
    L657 = 27B2 :
    L658 = 27B2 :
    L659 = 27B2 : 27A9
     L66 = 206E : 2063
    L660 = 27B4 :
    L661 = 27B6 :
    L662 = 27B9 :
    L663 = 27C6 :
    L664 = 27C8 :
    L665 = 27CF :
    L666 = 27D2 :
    L667 = 27D4 :
    L668 = 27D7 :
    L669 = 27DA : 27CF
     L67 = 2071 :
    L670 = 27DD :
    L671 = 27E0 :
    L672 = 27E0 : 27D7
    L673 = 27E2 :
    L674 = 27E4 :
    L675 = 27E7 :
    L676 = 27F2 :
    L677 = 27F8 :
    L678 = 27FB :
    L679 = 27FD :
     L68 = 2074 :
    L680 = 2800 :
    L681 = 2803 : 27F8
    L682 = 2806 :
    L683 = 2809 :
    L684 = 2809 : 2800
    L685 = 280B :
    L686 = 280D :
    L687 = 2810 :
    L688 = 281D :
    L689 = 2823 :
     L69 = 2074 :
    L690 = 2826 :
    L691 = 2828 :
    L692 = 282B :
    L693 = 282E : 2823
    L694 = 2831 :
    L695 = 2834 :
    L696 = 2834 :
    L697 = 2834 : 282B
    L698 = 2837 :
    L699 = 283B :
      L7 = 200B :
     L70 = 2074 : 206B
    L700 = 2848 :
    L701 = 284A :
    L702 = 2851 :
    L703 = 2854 :
    L704 = 2856 :
    L705 = 2859 :
    L706 = 285C : 2851
    L707 = 285F :
    L708 = 2862 :
    L709 = 2862 : 2859
     L71 = 2077 :
    L710 = 2865 :
    L711 = 2869 :
    L712 = 2874 :
    L713 = 287A :
    L714 = 287D :
    L715 = 287F :
    L716 = 2882 :
    L717 = 2885 : 287A
    L718 = 2888 :
    L719 = 288B :
     L72 = 2084 :
    L720 = 288B : 2882
    L721 = 288E :
    L722 = 2892 :
    L723 = 289F :
    L724 = 28A5 :
    L725 = 28A8 :
    L726 = 28AA :
    L727 = 28AD :
    L728 = 28B0 : 28A5
    L729 = 28B3 :
     L73 = 208A :
    L730 = 28B6 :
    L731 = 28B6 :
    L732 = 28B6 :
    L733 = 28B6 :
    L734 = 28B6 :
    L735 = 28B6 : 28AD
    L736 = 28B8 :
    L737 = 28BA :
    L738 = 28BD :
    L739 = 28BF :
     L74 = 208D :
    L740 = 28C1 :
    L741 = 28C3 :
    L742 = 28C6 :
    L743 = 28C8 :
    L744 = 28CB :
    L745 = 28CE : 28C3
    L746 = 28D1 :
    L747 = 28D4 :
    L748 = 28D4 : 28CB
    L749 = 28D6 :
     L75 = 208F :
    L750 = 28D8 :
    L751 = 28DB :
    L752 = 28DD :
    L753 = 28DF :
    L754 = 28E1 :
    L755 = 28E4 :
    L756 = 28E6 :
    L757 = 28E9 :
    L758 = 28EC : 28E1
    L759 = 28EF :
     L76 = 2092 :
    L760 = 28F2 :
    L761 = 28F2 : 28E9
    L762 = 28F4 :
    L763 = 28F6 :
    L764 = 28F9 :
    L765 = 28FB :
    L766 = 28FD :
    L767 = 28FF :
    L768 = 2902 :
    L769 = 2904 :
     L77 = 2095 : 208A
    L770 = 2907 :
    L771 = 290A : 28FF
    L772 = 290D :
    L773 = 2910 :
    L774 = 2910 :
    L775 = 2910 : 2907
    L776 = 2913 :
    L777 = 2917 :
    L778 = 291B :
    L779 = 291F :
     L78 = 2098 :
    L780 = 292A :
    L781 = 2930 :
    L782 = 2933 :
    L783 = 2935 :
    L784 = 2938 :
    L785 = 293B : 2930
    L786 = 293E :
    L787 = 2941 :
    L788 = 2941 : 2938
    L789 = 2944 :
     L79 = 209B :
    L790 = 2948 :
    L791 = 294C :
    L792 = 2950 :
    L793 = 2959 :
    L794 = 295F :
    L795 = 2962 :
    L796 = 2964 :
    L797 = 2967 :
    L798 = 296A : 295F
    L799 = 296D :
      L8 = 200E :
     L80 = 209B :
    L800 = 2970 :
    L801 = 2970 : 2967
    L802 = 2973 :
    L803 = 2977 :
    L804 = 297B :
    L805 = 297F :
    L806 = 298A :
    L807 = 2990 :
    L808 = 2993 :
    L809 = 2995 :
     L81 = 209B : 2092
    L810 = 2998 :
    L811 = 299B : 2990
    L812 = 299E :
    L813 = 29A1 :
    L814 = 29A1 :
    L815 = 29A1 : 2998
    L816 = 29A3 :
    L817 = 29A5 :
    L818 = 29A8 :
    L819 = 29AC :
     L82 = 209E :
    L820 = 29B0 :
    L821 = 29B2 :
    L822 = 29B9 :
    L823 = 29BC :
    L824 = 29BE :
    L825 = 29C1 :
    L826 = 29C4 : 29B9
    L827 = 29C7 :
    L828 = 29CA :
    L829 = 29CA : 29C1
     L83 = 20A9 :
    L830 = 29CC :
    L831 = 29CE :
    L832 = 29D1 :
    L833 = 29D5 :
    L834 = 29D7 :
    L835 = 29DD :
    L836 = 29E0 :
    L837 = 29E2 :
    L838 = 29E5 :
    L839 = 29E8 : 29DD
     L84 = 20AF :
    L840 = 29EB :
    L841 = 29EE :
    L842 = 29EE : 29E5
    L843 = 29F0 :
    L844 = 29F2 :
    L845 = 29F5 :
    L846 = 29F9 :
    L847 = 29FB :
    L848 = 2A01 :
    L849 = 2A04 :
     L85 = 20B2 :
    L850 = 2A06 :
    L851 = 2A09 :
    L852 = 2A0C : 2A01
    L853 = 2A0F :
    L854 = 2A12 :
    L855 = 2A12 :
    L856 = 2A12 : 2A09
    L857 = 2A15 :
    L858 = 2A19 :
    L859 = 2A1B :
     L86 = 20B4 :
    L860 = 2A1D :
    L861 = 2A21 :
    L862 = 2A23 :
    L863 = 2A2A :
    L864 = 2A2D :
    L865 = 2A2F :
    L866 = 2A32 :
    L867 = 2A35 : 2A2A
    L868 = 2A38 :
    L869 = 2A3B :
     L87 = 20B7 :
    L870 = 2A3B : 2A32
    L871 = 2A3E :
    L872 = 2A42 :
    L873 = 2A44 :
    L874 = 2A46 :
    L875 = 2A48 :
    L876 = 2A4E :
    L877 = 2A51 :
    L878 = 2A53 :
    L879 = 2A56 :
     L88 = 20BA : 20AF
    L880 = 2A59 : 2A4E
    L881 = 2A5C :
    L882 = 2A5F :
    L883 = 2A5F : 2A56
    L884 = 2A62 :
    L885 = 2A66 :
    L886 = 2A68 :
    L887 = 2A6A :
    L888 = 2A6C :
    L889 = 2A72 :
     L89 = 20BD :
    L890 = 2A75 :
    L891 = 2A77 :
    L892 = 2A7A :
    L893 = 2A7D : 2A72
    L894 = 2A80 :
    L895 = 2A83 :
    L896 = 2A83 :
    L897 = 2A83 :
    L898 = 2A83 :
    L899 = 2A83 :
      L9 = 200E :
     L90 = 20C0 :
    L900 = 2A83 : 2A7A
    L901 = 2A85 :
    L902 = 2A87 :
    L903 = 2A8C :
    L904 = 2A8E :
    L905 = 2A91 :
    L906 = 2A93 :
    L907 = 2A96 :
    L908 = 2A99 : 2A8E
    L909 = 2A9C :
     L91 = 20C0 :
    L910 = 2A9F :
    L911 = 2A9F : 2A96
    L912 = 2AA1 :
    L913 = 2AA3 :
    L914 = 2AA8 :
    L915 = 2AAA :
    L916 = 2AAD :
    L917 = 2AAF :
    L918 = 2AB2 :
    L919 = 2AB5 : 2AAA
     L92 = 20C0 : 20B7
    L920 = 2AB8 :
    L921 = 2ABB :
    L922 = 2ABB : 2AB2
    L923 = 2ABD :
    L924 = 2ABF :
    L925 = 2AC4 :
    L926 = 2AC6 :
    L927 = 2AC9 :
    L928 = 2ACB :
    L929 = 2ACE :
     L93 = 20C3 :
    L930 = 2AD1 : 2AC6
    L931 = 2AD4 :
    L932 = 2AD7 :
    L933 = 2AD7 :
    L934 = 2AD7 : 2ACE
    L935 = 2ADA :
    L936 = 2ADE :
    L937 = 2AEC :
    L938 = 2AF2 :
    L939 = 2AF5 :
     L94 = 20D0 :
    L940 = 2AF7 :
    L941 = 2AFA :
    L942 = 2AFD : 2AF2
    L943 = 2B00 :
    L944 = 2B03 :
    L945 = 2B03 : 2AFA
    L946 = 2B06 :
    L947 = 2B0A :
    L948 = 2B16 :
    L949 = 2B1C :
     L95 = 20D6 :
    L950 = 2B1F :
    L951 = 2B21 :
    L952 = 2B24 :
    L953 = 2B27 : 2B1C
    L954 = 2B2A :
    L955 = 2B2D :
    L956 = 2B2D : 2B24
    L957 = 2B30 :
    L958 = 2B34 :
    L959 = 2B42 :
     L96 = 20D9 :
    L960 = 2B48 :
    L961 = 2B4B :
    L962 = 2B4D :
    L963 = 2B50 :
    L964 = 2B53 : 2B48
    L965 = 2B56 :
    L966 = 2B59 :
    L967 = 2B59 :
    L968 = 2B59 : 2B50
    L969 = 2B5B :
     L97 = 20DB :
    L970 = 2B5D :
    L971 = 2B60 :
    L972 = 2B6E :
    L973 = 2B70 :
    L974 = 2B77 :
    L975 = 2B7A :
    L976 = 2B7C :
    L977 = 2B7F :
    L978 = 2B82 : 2B77
    L979 = 2B85 :
     L98 = 20DE :
    L980 = 2B88 :
    L981 = 2B88 : 2B7F
    L982 = 2B8A :
    L983 = 2B8C :
    L984 = 2B8F :
    L985 = 2B9B :
    L986 = 2BA1 :
    L987 = 2BA4 :
    L988 = 2BA6 :
    L989 = 2BA9 :
     L99 = 20E1 : 20D6
    L990 = 2BAC : 2BA1
    L991 = 2BAF :
    L992 = 2BB2 :
    L993 = 2BB2 : 2BA9
    L994 = 2BB4 :
    L995 = 2BB6 :
    L996 = 2BB9 :
    L997 = 2BC7 :
    L998 = 2BCD :
    L999 = 2BD0 :
   div16 = 3CDC :
 div16_1 = 3CE5 : 3CF4
 div16_2 = 3CF3 : 3CEE
 div16_3 = 3CF4 : 3CF1
 div16_8 = 3CFC : 3D63
div16_82 = 3D01 : 3D09
div16_83 = 3D09 : 3D05
    div8 = 3D0D : 3D30
  div8_1 = 3D15 : 3D20
 div8_16 = 3D27 :
div8_161 = 3D2E : 3D2A
  div8_2 = 3D20 : 3D1C
 getChar = 3BDE : 3D38
getChar1 = 3BEC : 3BE3
   mul16 = 3C60 :
 mul1632 = 3C8F :
mul16321 = 3CB1 : 3CAE
mul16322 = 3CB8 : 3CB5
  mul16S = 3CC2 :
 mul16S1 = 3CCB : 3CD7
 mul16S2 = 3CD6 : 3CD0 3CD3
mul16_10 = 3C79 : 3D41
 mul16_8 = 3C82 :
 putBell = 3C38 :
 putCRLF = 3C1F : 3BFF 3D52 3D7A
 putChar = 3C12 : 3C09 3C22 3C27 3C2E 3C36 3C3A 3C5B 3D6F
putChar1 = 3C13 : 3C18
putErase = 3C2C :
 putHexA = 3C47 : 3C3E 3C42
putHexA1 = 3C50 : 3C4C
putHexA2 = 3C5B : 3C57
putHexHL = 3C3C :
  putMsg = 3BF6 :
putSpace = 3C10 : 3C31
 putStr1 = 3C04 : 3C0C
 putStr2 = 3C0E : 3C07
    read = 3D34 :
   read1 = 3D38 : 3D3B 3D48 3D4B
   read2 = 3D4D : 3D3F
   start = 2000 :
  writeA = 3D7E : 3D77
 writeHL = 3D56 : 3D4F 3D82
writeHL1 = 3D61 : 3D5C 3D6A
writeHL2 = 3D6C : 3D72
writeHL3 = 3D6D : 3D5F
writeLineA = 3D77 : 202C 203A 2051 2068 208F 20B4 20DB 2107 212E 2157 2181 21A6
                : 21CD 21E9 2205 2221 224E 2279 22A6 22CD 22EF 2311 2336 2356
                : 2376 2390 23AA 23C4 23EC 2412 243A 2467 248F 24B9 24E4 250A
                : 2532 2549 2560 2577 259E 25C3 25EA 2616 263D 2666 2690 26B5
                : 26DC 26F5 270E 2727 2752 277B 27A6 27D4 27FD 2828 2856 287F
                : 28AA 28C8 28E6 2904 2935 2964 2995 29BE 29E2 2A06 2A2F 2A53
                : 2A77 2A93 2AAF 2ACB 2AF7 2B21 2B4D 2B7C 2BA6 2BD2 2C01 2C2B
                : 2C57 2C70 2C89 2CA2 2CCD 2CF6 2D21 2D4F 2D78 2DA3 2DD1 2DFA
                : 2E25 2E3D 2E55 2E6D 2E94 2EB9 2EE0 2F0D 2F35 2F5F 2F89 2FAE
                : 2FD5 2FF2 300F 302C 3059 3084 30B1 30D9 30FC 311F 3144 3164
                : 3184 319F 31BA 31D5 31FD 3223 324B 3279 32A2 32CD 32F8 331E
                : 3346 335E 3376 338E 33B5 33DA 3401 342E 3456 3480 34AA 34CF
                : 34F6 350E 3526 353E 3565 358A 35B1 35DE 3606 3630 365A 367F
                : 36A6 36C3 36E0 36FD 372A 3755 3782 37AA 37CD 37F0 3815 3835
                : 3855 3870 388B 38A6 38CE 38F4 391C 394A 3973 399E 39C9 39EF
                : 3A17 3A2E 3A45 3A5C 3A83 3AA8 3ACF 3AFB 3B22 3B4B 3B75 3B9A
                : 3BC1
writeLineHL = 3D4F : 2043 205A 2071 2098 20BD 20E4 2110 2137 2160 218A 21AF 21D6
                : 21F2 220E 222A 2257 2282 22AF 22D6 22F8 231A 233F 235F 237F
                : 2399 23B3 23CD 23F5 241B 2443 2470 2498 24C2 24ED 2513 253B
                : 2552 2569 2580 25A7 25CC 25F3 261F 2646 266F 2699 26BE 26E5
                : 26FE 2717 2730 275B 2784 27AF 27DD 2806 2831 285F 2888 28B3
                : 28D1 28EF 290D 293E 296D 299E 29C7 29EB 2A0F 2A38 2A5C 2A80
                : 2A9C 2AB8 2AD4 2B00 2B2A 2B56 2B85 2BAF 2BDB 2C0A 2C34 2C60
                : 2C79 2C92 2CAB 2CD6 2CFF 2D2A 2D58 2D81 2DAC 2DDA 2E03 2E2E
                : 2E46 2E5E 2E76 2E9D 2EC2 2EE9 2F16 2F3E 2F68 2F92 2FB7 2FDE
                : 2FFB 3018 3035 3062 308D 30BA 30E2 3105 3128 314D 316D 318D
                : 31A8 31C3 31DE 3206 322C 3254 3282 32AB 32D6 3301 3327 334F
                : 3367 337F 3397 33BE 33E3 340A 3437 345F 3489 34B3 34D8 34FF
                : 3517 352F 3547 356E 3593 35BA 35E7 360F 3639 3663 3688 36AF
                : 36CC 36E9 3706 3733 375E 378B 37B3 37D6 37F9 381E 383E 385E
                : 3879 3894 38AF 38D7 38FD 3925 3953 397C 39A7 39D2 39F8 3A20
                : 3A37 3A4E 3A65 3A8C 3AB1 3AD8 3B04 3B2B 3B54 3B7E 3BA3 3BCA
                :
writeLineStr = 3BFC : 3BD0
writeStr = 3C03 : 3BF7 3BFC
