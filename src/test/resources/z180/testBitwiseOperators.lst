2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testBitwiseOperators.j(0) /* Program to test bitwise operators and, or and xor. */
2009             L3:
2009                     ;;testBitwiseOperators.j(1) class TestBitwiseOperators {
2009             L4:
2009                     ;class TestBitwiseOperators []
2009             L5:
2009                     ;;testBitwiseOperators.j(2)   private static byte b1 = 0x1C;
2009             L6:
2009 3E 1C               LD    A,28
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testBitwiseOperators.j(3)   private static byte b2 = 0x07;
200E             L9:
200E 3E 07               LD    A,7
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testBitwiseOperators.j(4)   private static word w1 = 0x032C;
2013             L12:
2013 21 2C 03            LD    HL,812
2016             L13:
2016 22 02 50            LD    (05002H),HL
2019             L14:
2019                     ;;testBitwiseOperators.j(5)   private static word w2 = 0x1234;
2019             L15:
2019 21 34 12            LD    HL,4660
201C             L16:
201C 22 04 50            LD    (05004H),HL
201F             L17:
201F C3 22 20            JP    L24
2022             L18:
2022                     ;;testBitwiseOperators.j(6)   private static final byte fb1 = 0x1C;
2022             L19:
2022                     ;;testBitwiseOperators.j(7)   private static final byte fb2 = 0x07;
2022             L20:
2022                     ;;testBitwiseOperators.j(8)   private static final word fw1 = 0x032C;
2022             L21:
2022                     ;;testBitwiseOperators.j(9)   private static final word fw2 = 0x1234;
2022             L22:
2022                     ;;testBitwiseOperators.j(10) 
2022             L23:
2022                     ;;testBitwiseOperators.j(11)   public static void main() {
2022             L24:
2022                     ;method TestBitwiseOperators.main [public, static] void ()
2022             L25:
2022 DD E5               PUSH  IX
2024             L26:
2024 DD 21 00 00         LD    IX,0x0000
2028 DD 39               ADD   IX,SP
202A             L27:
202A             L28:
202A                     ;;testBitwiseOperators.j(12)     println(0);
202A             L29:
202A 3E 00               LD    A,0
202C             L30:
202C CD 7B 3C            CALL  writeLineA
202F             L31:
202F                     ;;testBitwiseOperators.j(13)     
202F             L32:
202F                     ;;testBitwiseOperators.j(14)     // Possible operand types: constant, acc, var, final var, stack8, stack16.
202F             L33:
202F                     ;;testBitwiseOperators.j(15)     // Possible data types: byte, word.
202F             L34:
202F                     ;;testBitwiseOperators.j(16)   
202F             L35:
202F                     ;;testBitwiseOperators.j(17)     //constant/constant
202F             L36:
202F                     ;;testBitwiseOperators.j(18)     //*****************
202F             L37:
202F                     ;;testBitwiseOperators.j(19)     //constant byte/constant byte
202F             L38:
202F                     ;;testBitwiseOperators.j(20)     if (0x07 & 0x1C == 0x04) println (1); else println (999); //0000.0111 & 0001.1100 = 0000.0100
202F             L39:
202F 3E 07               LD    A,7
2031             L40:
2031 E6 1C               AND   A,28
2033             L41:
2033 D6 04               SUB   A,4
2035             L42:
2035 C2 40 20            JP    NZ,L46
2038             L43:
2038 3E 01               LD    A,1
203A             L44:
203A CD 7B 3C            CALL  writeLineA
203D             L45:
203D C3 46 20            JP    L49
2040             L46:
2040 21 E7 03            LD    HL,999
2043             L47:
2043 CD 53 3C            CALL  writeLineHL
2046             L48:
2046                     ;;testBitwiseOperators.j(21)     if (0x07 | 0x1C == 0x1F) println (2); else println (999); //0000.0111 | 0001.1100 = 0001.1111
2046             L49:
2046 3E 07               LD    A,7
2048             L50:
2048 F6 1C               OR    A,28
204A             L51:
204A D6 1F               SUB   A,31
204C             L52:
204C C2 57 20            JP    NZ,L56
204F             L53:
204F 3E 02               LD    A,2
2051             L54:
2051 CD 7B 3C            CALL  writeLineA
2054             L55:
2054 C3 5D 20            JP    L59
2057             L56:
2057 21 E7 03            LD    HL,999
205A             L57:
205A CD 53 3C            CALL  writeLineHL
205D             L58:
205D                     ;;testBitwiseOperators.j(22)     if (0x07 ^ 0x1C == 0x1B) println (3); else println (999); //0000.0111 ^ 0001.1100 = 0001.1011
205D             L59:
205D 3E 07               LD    A,7
205F             L60:
205F EE 1C               XOR   A,28
2061             L61:
2061 D6 1B               SUB   A,27
2063             L62:
2063 C2 6E 20            JP    NZ,L66
2066             L63:
2066 3E 03               LD    A,3
2068             L64:
2068 CD 7B 3C            CALL  writeLineA
206B             L65:
206B C3 74 20            JP    L70
206E             L66:
206E 21 E7 03            LD    HL,999
2071             L67:
2071 CD 53 3C            CALL  writeLineHL
2074             L68:
2074                     ;;testBitwiseOperators.j(23)     //constant word/constant word
2074             L69:
2074                     ;;testBitwiseOperators.j(24)     if (0x1234 & 0x032C == 0x0224) println (4); else println (999);
2074             L70:
2074 21 34 12            LD    HL,4660
2077             L71:
2077 11 2C 03            LD    DE,812
207A F5                  PUSH  AF
207B 7C                  LD    A,H
207C A2                  AND   A,D
207D 67                  LD    H,A
207E 7D                  LD    A,L
207F A3                  AND   A,E
2080 6F                  LD    L,A
2081 F1                  POP   AF
2082             L72:
2082 11 24 02            LD    DE,548
2085 B7                  OR    A
2086 ED 52               SBC   HL,DE
2088             L73:
2088 C2 93 20            JP    NZ,L77
208B             L74:
208B 3E 04               LD    A,4
208D             L75:
208D CD 7B 3C            CALL  writeLineA
2090             L76:
2090 C3 99 20            JP    L81
2093             L77:
2093 21 E7 03            LD    HL,999
2096             L78:
2096 CD 53 3C            CALL  writeLineHL
2099             L79:
2099                     ;;testBitwiseOperators.j(25)     //0001.0010.0011.0100 & 0000.0011.0010.1100 = 0000.0010.0010.0100
2099             L80:
2099                     ;;testBitwiseOperators.j(26)     if (0x1234 | 0x032C == 0x133C) println (5); else println (999);
2099             L81:
2099 21 34 12            LD    HL,4660
209C             L82:
209C 11 2C 03            LD    DE,812
209F 47                  LD    B,A
20A0 7C                  LD    A,H
20A1 B2                  OR    A,D
20A2 67                  LD    H,A
20A3 7D                  LD    A,L
20A4 B3                  OR    A,E
20A5 6F                  LD    L,A
20A6 78                  LD    A,B
20A7             L83:
20A7 11 3C 13            LD    DE,4924
20AA B7                  OR    A
20AB ED 52               SBC   HL,DE
20AD             L84:
20AD C2 B8 20            JP    NZ,L88
20B0             L85:
20B0 3E 05               LD    A,5
20B2             L86:
20B2 CD 7B 3C            CALL  writeLineA
20B5             L87:
20B5 C3 BE 20            JP    L92
20B8             L88:
20B8 21 E7 03            LD    HL,999
20BB             L89:
20BB CD 53 3C            CALL  writeLineHL
20BE             L90:
20BE                     ;;testBitwiseOperators.j(27)     //0001.0010.0011.0100 | 0000.0011.0010.1100 = 0001.0011.0011.1100
20BE             L91:
20BE                     ;;testBitwiseOperators.j(28)     if (0x1234 ^ 0x032C == 0x1118) println (6); else println (999);
20BE             L92:
20BE 21 34 12            LD    HL,4660
20C1             L93:
20C1 11 2C 03            LD    DE,812
20C4 F5                  PUSH  AF
20C5 7C                  LD    A,H
20C6 AA                  XOR   A,D
20C7 67                  LD    H,A
20C8 7D                  LD    A,L
20C9 AB                  XOR   A,E
20CA 6F                  LD    L,A
20CB F1                  POP   AF
20CC             L94:
20CC 11 18 11            LD    DE,4376
20CF B7                  OR    A
20D0 ED 52               SBC   HL,DE
20D2             L95:
20D2 C2 DD 20            JP    NZ,L99
20D5             L96:
20D5 3E 06               LD    A,6
20D7             L97:
20D7 CD 7B 3C            CALL  writeLineA
20DA             L98:
20DA C3 E3 20            JP    L104
20DD             L99:
20DD 21 E7 03            LD    HL,999
20E0             L100:
20E0 CD 53 3C            CALL  writeLineHL
20E3             L101:
20E3                     ;;testBitwiseOperators.j(29)     //0001.0010.0011.0100 ^ 0000.0011.0010.1100 = 0001.0001.0001.1000
20E3             L102:
20E3                     ;;testBitwiseOperators.j(30)     //constant byte/constant word
20E3             L103:
20E3                     ;;testBitwiseOperators.j(31)     if (0x1C & 0x1234 == 0x0014) println (7); else println (999); //0001.1100 & 0001.0010.0011.0100 = 0000.0000.0001.0100
20E3             L104:
20E3 3E 1C               LD    A,28
20E5             L105:
20E5 6F                  LD    L,A
20E6 26 00               LD    H,0
20E8             L106:
20E8 11 34 12            LD    DE,4660
20EB F5                  PUSH  AF
20EC 7C                  LD    A,H
20ED A2                  AND   A,D
20EE 67                  LD    H,A
20EF 7D                  LD    A,L
20F0 A3                  AND   A,E
20F1 6F                  LD    L,A
20F2 F1                  POP   AF
20F3             L107:
20F3 3E 14               LD    A,20
20F5             L108:
20F5 5F                  LD    E,A
20F6 16 00               LD    D,0
20F8 B7                  OR    A
20F9 ED 52               SBC   HL,DE
20FB             L109:
20FB C2 06 21            JP    NZ,L113
20FE             L110:
20FE 3E 07               LD    A,7
2100             L111:
2100 CD 7B 3C            CALL  writeLineA
2103             L112:
2103 C3 0C 21            JP    L116
2106             L113:
2106 21 E7 03            LD    HL,999
2109             L114:
2109 CD 53 3C            CALL  writeLineHL
210C             L115:
210C                     ;;testBitwiseOperators.j(32)     if (0x1C | 0x1234 == 0x123C) println (8); else println (999); //0001.1100 | 0001.0010.0011.0100 = 0001.0010.0011.1100
210C             L116:
210C 3E 1C               LD    A,28
210E             L117:
210E 6F                  LD    L,A
210F 26 00               LD    H,0
2111             L118:
2111 11 34 12            LD    DE,4660
2114 47                  LD    B,A
2115 7C                  LD    A,H
2116 B2                  OR    A,D
2117 67                  LD    H,A
2118 7D                  LD    A,L
2119 B3                  OR    A,E
211A 6F                  LD    L,A
211B 78                  LD    A,B
211C             L119:
211C 11 3C 12            LD    DE,4668
211F B7                  OR    A
2120 ED 52               SBC   HL,DE
2122             L120:
2122 C2 2D 21            JP    NZ,L124
2125             L121:
2125 3E 08               LD    A,8
2127             L122:
2127 CD 7B 3C            CALL  writeLineA
212A             L123:
212A C3 33 21            JP    L127
212D             L124:
212D 21 E7 03            LD    HL,999
2130             L125:
2130 CD 53 3C            CALL  writeLineHL
2133             L126:
2133                     ;;testBitwiseOperators.j(33)     if (0x1C ^ 0x1234 == 0x1228) println (9); else println (999); //0001.1100 ^ 0001.0010.0011.0100 = 0001.0010.0010.1000
2133             L127:
2133 3E 1C               LD    A,28
2135             L128:
2135 6F                  LD    L,A
2136 26 00               LD    H,0
2138             L129:
2138 11 34 12            LD    DE,4660
213B F5                  PUSH  AF
213C 7C                  LD    A,H
213D AA                  XOR   A,D
213E 67                  LD    H,A
213F 7D                  LD    A,L
2140 AB                  XOR   A,E
2141 6F                  LD    L,A
2142 F1                  POP   AF
2143             L130:
2143 11 28 12            LD    DE,4648
2146 B7                  OR    A
2147 ED 52               SBC   HL,DE
2149             L131:
2149 C2 54 21            JP    NZ,L135
214C             L132:
214C 3E 09               LD    A,9
214E             L133:
214E CD 7B 3C            CALL  writeLineA
2151             L134:
2151 C3 5A 21            JP    L139
2154             L135:
2154 21 E7 03            LD    HL,999
2157             L136:
2157 CD 53 3C            CALL  writeLineHL
215A             L137:
215A                     ;;testBitwiseOperators.j(34)     //constant word/constant byte
215A             L138:
215A                     ;;testBitwiseOperators.j(35)     if (0x1234 & 0x1C == 0x0014) println (10); else println (999); //0001.0010.0011.0100 & 0001.1100 = 0000.0000.0001.0100
215A             L139:
215A 21 34 12            LD    HL,4660
215D             L140:
215D 5F                  LD    E,A
215E 3E 1C               LD    A,28
2160 A5                  AND   A,L
2161 6F                  LD    L,A
2162 7B                  LD    A,E
2163 26 00               LD    H,0
2165             L141:
2165 3E 14               LD    A,20
2167             L142:
2167 5F                  LD    E,A
2168 16 00               LD    D,0
216A B7                  OR    A
216B ED 52               SBC   HL,DE
216D             L143:
216D C2 78 21            JP    NZ,L147
2170             L144:
2170 3E 0A               LD    A,10
2172             L145:
2172 CD 7B 3C            CALL  writeLineA
2175             L146:
2175 C3 7E 21            JP    L150
2178             L147:
2178 21 E7 03            LD    HL,999
217B             L148:
217B CD 53 3C            CALL  writeLineHL
217E             L149:
217E                     ;;testBitwiseOperators.j(36)     if (0x1234 | 0x1C == 0x123C) println (11); else println (999); //0001.0010.0011.0100 | 0001.1100 = 0001.0010.0011.1100
217E             L150:
217E 21 34 12            LD    HL,4660
2181             L151:
2181 11 1C 00            LD    DE,28
2184 47                  LD    B,A
2185 7C                  LD    A,H
2186 B2                  OR    A,D
2187 67                  LD    H,A
2188 7D                  LD    A,L
2189 B3                  OR    A,E
218A 6F                  LD    L,A
218B 78                  LD    A,B
218C             L152:
218C 11 3C 12            LD    DE,4668
218F B7                  OR    A
2190 ED 52               SBC   HL,DE
2192             L153:
2192 C2 9D 21            JP    NZ,L157
2195             L154:
2195 3E 0B               LD    A,11
2197             L155:
2197 CD 7B 3C            CALL  writeLineA
219A             L156:
219A C3 A3 21            JP    L160
219D             L157:
219D 21 E7 03            LD    HL,999
21A0             L158:
21A0 CD 53 3C            CALL  writeLineHL
21A3             L159:
21A3                     ;;testBitwiseOperators.j(37)     if (0x1234 ^ 0x1C == 0x1228) println (12); else println (999); //0001.0010.0011.0100 ^ 0001.1100 = 0001.0010.0010.1000
21A3             L160:
21A3 21 34 12            LD    HL,4660
21A6             L161:
21A6 11 1C 00            LD    DE,28
21A9 F5                  PUSH  AF
21AA 7C                  LD    A,H
21AB AA                  XOR   A,D
21AC 67                  LD    H,A
21AD 7D                  LD    A,L
21AE AB                  XOR   A,E
21AF 6F                  LD    L,A
21B0 F1                  POP   AF
21B1             L162:
21B1 11 28 12            LD    DE,4648
21B4 B7                  OR    A
21B5 ED 52               SBC   HL,DE
21B7             L163:
21B7 C2 C2 21            JP    NZ,L167
21BA             L164:
21BA 3E 0C               LD    A,12
21BC             L165:
21BC CD 7B 3C            CALL  writeLineA
21BF             L166:
21BF C3 C8 21            JP    L174
21C2             L167:
21C2 21 E7 03            LD    HL,999
21C5             L168:
21C5 CD 53 3C            CALL  writeLineHL
21C8             L169:
21C8                     ;;testBitwiseOperators.j(38)   
21C8             L170:
21C8                     ;;testBitwiseOperators.j(39)     //constant/acc
21C8             L171:
21C8                     ;;testBitwiseOperators.j(40)     //************
21C8             L172:
21C8                     ;;testBitwiseOperators.j(41)     //constant byte/acc byte
21C8             L173:
21C8                     ;;testBitwiseOperators.j(42)     if (0x07 & (0x10 + 0x0C) == 0x04) println (13); else println (999);
21C8             L174:
21C8 3E 07               LD    A,7
21CA             L175:
21CA F5                  PUSH  AF
21CB 3E 10               LD    A,16
21CD             L176:
21CD C6 0C               ADD   A,12
21CF             L177:
21CF C1                  POP   BC
21D0 A0                  AND   A,B
21D1             L178:
21D1 D6 04               SUB   A,4
21D3             L179:
21D3 C2 DE 21            JP    NZ,L183
21D6             L180:
21D6 3E 0D               LD    A,13
21D8             L181:
21D8 CD 7B 3C            CALL  writeLineA
21DB             L182:
21DB C3 E4 21            JP    L186
21DE             L183:
21DE 21 E7 03            LD    HL,999
21E1             L184:
21E1 CD 53 3C            CALL  writeLineHL
21E4             L185:
21E4                     ;;testBitwiseOperators.j(43)     if (0x07 | (0x10 + 0x0C) == 0x1F) println (14); else println (999);
21E4             L186:
21E4 3E 07               LD    A,7
21E6             L187:
21E6 F5                  PUSH  AF
21E7 3E 10               LD    A,16
21E9             L188:
21E9 C6 0C               ADD   A,12
21EB             L189:
21EB C1                  POP   BC
21EC B0                  OR    A,B
21ED             L190:
21ED D6 1F               SUB   A,31
21EF             L191:
21EF C2 FA 21            JP    NZ,L195
21F2             L192:
21F2 3E 0E               LD    A,14
21F4             L193:
21F4 CD 7B 3C            CALL  writeLineA
21F7             L194:
21F7 C3 00 22            JP    L198
21FA             L195:
21FA 21 E7 03            LD    HL,999
21FD             L196:
21FD CD 53 3C            CALL  writeLineHL
2200             L197:
2200                     ;;testBitwiseOperators.j(44)     if (0x07 ^ (0x10 + 0x0C) == 0x1B) println (15); else println (999);
2200             L198:
2200 3E 07               LD    A,7
2202             L199:
2202 F5                  PUSH  AF
2203 3E 10               LD    A,16
2205             L200:
2205 C6 0C               ADD   A,12
2207             L201:
2207 C1                  POP   BC
2208 A8                  XOR   A,B
2209             L202:
2209 D6 1B               SUB   A,27
220B             L203:
220B C2 16 22            JP    NZ,L207
220E             L204:
220E 3E 0F               LD    A,15
2210             L205:
2210 CD 7B 3C            CALL  writeLineA
2213             L206:
2213 C3 1C 22            JP    L211
2216             L207:
2216 21 E7 03            LD    HL,999
2219             L208:
2219 CD 53 3C            CALL  writeLineHL
221C             L209:
221C                     ;;testBitwiseOperators.j(45)     //constant word/acc word
221C             L210:
221C                     ;;testBitwiseOperators.j(46)     if (0x1234 & 0x0100 + 0x022C == 0x0224) println (16); else println (999);
221C             L211:
221C 21 34 12            LD    HL,4660
221F             L212:
221F E5                  PUSH  HL
2220 21 00 01            LD    HL,256
2223             L213:
2223 11 2C 02            LD    DE,556
2226 19                  ADD   HL,DE
2227             L214:
2227 D1                  POP   DE
2228 F5                  PUSH  AF
2229 7C                  LD    A,H
222A A2                  AND   A,D
222B 67                  LD    H,A
222C 7D                  LD    A,L
222D A3                  AND   A,E
222E 6F                  LD    L,A
222F F1                  POP   AF
2230             L215:
2230 11 24 02            LD    DE,548
2233 B7                  OR    A
2234 ED 52               SBC   HL,DE
2236             L216:
2236 C2 41 22            JP    NZ,L220
2239             L217:
2239 3E 10               LD    A,16
223B             L218:
223B CD 7B 3C            CALL  writeLineA
223E             L219:
223E C3 47 22            JP    L223
2241             L220:
2241 21 E7 03            LD    HL,999
2244             L221:
2244 CD 53 3C            CALL  writeLineHL
2247             L222:
2247                     ;;testBitwiseOperators.j(47)     if (0x1234 | 0x0100 + 0x022C == 0x133C) println (17); else println (999);
2247             L223:
2247 21 34 12            LD    HL,4660
224A             L224:
224A E5                  PUSH  HL
224B 21 00 01            LD    HL,256
224E             L225:
224E 11 2C 02            LD    DE,556
2251 19                  ADD   HL,DE
2252             L226:
2252 D1                  POP   DE
2253 47                  LD    B,A
2254 7C                  LD    A,H
2255 B2                  OR    A,D
2256 67                  LD    H,A
2257 7D                  LD    A,L
2258 B3                  OR    A,E
2259 6F                  LD    L,A
225A 78                  LD    A,B
225B             L227:
225B 11 3C 13            LD    DE,4924
225E B7                  OR    A
225F ED 52               SBC   HL,DE
2261             L228:
2261 C2 6C 22            JP    NZ,L232
2264             L229:
2264 3E 11               LD    A,17
2266             L230:
2266 CD 7B 3C            CALL  writeLineA
2269             L231:
2269 C3 72 22            JP    L235
226C             L232:
226C 21 E7 03            LD    HL,999
226F             L233:
226F CD 53 3C            CALL  writeLineHL
2272             L234:
2272                     ;;testBitwiseOperators.j(48)     if (0x1234 ^ 0x0100 + 0x022C == 0x1118) println (18); else println (999);
2272             L235:
2272 21 34 12            LD    HL,4660
2275             L236:
2275 E5                  PUSH  HL
2276 21 00 01            LD    HL,256
2279             L237:
2279 11 2C 02            LD    DE,556
227C 19                  ADD   HL,DE
227D             L238:
227D D1                  POP   DE
227E F5                  PUSH  AF
227F 7C                  LD    A,H
2280 AA                  XOR   A,D
2281 67                  LD    H,A
2282 7D                  LD    A,L
2283 AB                  XOR   A,E
2284 6F                  LD    L,A
2285 F1                  POP   AF
2286             L239:
2286 11 18 11            LD    DE,4376
2289 B7                  OR    A
228A ED 52               SBC   HL,DE
228C             L240:
228C C2 97 22            JP    NZ,L244
228F             L241:
228F 3E 12               LD    A,18
2291             L242:
2291 CD 7B 3C            CALL  writeLineA
2294             L243:
2294 C3 9D 22            JP    L248
2297             L244:
2297 21 E7 03            LD    HL,999
229A             L245:
229A CD 53 3C            CALL  writeLineHL
229D             L246:
229D                     ;;testBitwiseOperators.j(49)     //constant byte/acc word
229D             L247:
229D                     ;;testBitwiseOperators.j(50)     if (0x1C & 0x1000 + 0x0234 == 0x0014) println (19); else println (999);
229D             L248:
229D 3E 1C               LD    A,28
229F             L249:
229F 21 00 10            LD    HL,4096
22A2             L250:
22A2 11 34 02            LD    DE,564
22A5 19                  ADD   HL,DE
22A6             L251:
22A6 5F                  LD    E,A
22A7 A5                  AND   A,L
22A8 6F                  LD    L,A
22A9 7B                  LD    A,E
22AA 26 00               LD    H,0
22AC             L252:
22AC 3E 14               LD    A,20
22AE             L253:
22AE 5F                  LD    E,A
22AF 16 00               LD    D,0
22B1 B7                  OR    A
22B2 ED 52               SBC   HL,DE
22B4             L254:
22B4 C2 BF 22            JP    NZ,L258
22B7             L255:
22B7 3E 13               LD    A,19
22B9             L256:
22B9 CD 7B 3C            CALL  writeLineA
22BC             L257:
22BC C3 C5 22            JP    L261
22BF             L258:
22BF 21 E7 03            LD    HL,999
22C2             L259:
22C2 CD 53 3C            CALL  writeLineHL
22C5             L260:
22C5                     ;;testBitwiseOperators.j(51)     if (0x1C | 0x1000 + 0x0234 == 0x123C) println (20); else println (999);
22C5             L261:
22C5 3E 1C               LD    A,28
22C7             L262:
22C7 21 00 10            LD    HL,4096
22CA             L263:
22CA 11 34 02            LD    DE,564
22CD 19                  ADD   HL,DE
22CE             L264:
22CE B5                  OR    A,L
22CF 6F                  LD    L,A
22D0             L265:
22D0 11 3C 12            LD    DE,4668
22D3 B7                  OR    A
22D4 ED 52               SBC   HL,DE
22D6             L266:
22D6 C2 E1 22            JP    NZ,L270
22D9             L267:
22D9 3E 14               LD    A,20
22DB             L268:
22DB CD 7B 3C            CALL  writeLineA
22DE             L269:
22DE C3 E7 22            JP    L273
22E1             L270:
22E1 21 E7 03            LD    HL,999
22E4             L271:
22E4 CD 53 3C            CALL  writeLineHL
22E7             L272:
22E7                     ;;testBitwiseOperators.j(52)     if (0x1C ^ 0x1000 + 0x0234 == 0x1228) println (21); else println (999);
22E7             L273:
22E7 3E 1C               LD    A,28
22E9             L274:
22E9 21 00 10            LD    HL,4096
22EC             L275:
22EC 11 34 02            LD    DE,564
22EF 19                  ADD   HL,DE
22F0             L276:
22F0 AD                  XOR   A,L
22F1 6F                  LD    L,A
22F2             L277:
22F2 11 28 12            LD    DE,4648
22F5 B7                  OR    A
22F6 ED 52               SBC   HL,DE
22F8             L278:
22F8 C2 03 23            JP    NZ,L282
22FB             L279:
22FB 3E 15               LD    A,21
22FD             L280:
22FD CD 7B 3C            CALL  writeLineA
2300             L281:
2300 C3 09 23            JP    L286
2303             L282:
2303 21 E7 03            LD    HL,999
2306             L283:
2306 CD 53 3C            CALL  writeLineHL
2309             L284:
2309                     ;;testBitwiseOperators.j(53)     //constant word/acc byte
2309             L285:
2309                     ;;testBitwiseOperators.j(54)     if (0x1234 & 0x10 + 0x0C == 0x0014) println (22); else println (999);
2309             L286:
2309 21 34 12            LD    HL,4660
230C             L287:
230C 3E 10               LD    A,16
230E             L288:
230E C6 0C               ADD   A,12
2310             L289:
2310 5F                  LD    E,A
2311 A5                  AND   A,L
2312 6F                  LD    L,A
2313 7B                  LD    A,E
2314 26 00               LD    H,0
2316             L290:
2316 3E 14               LD    A,20
2318             L291:
2318 5F                  LD    E,A
2319 16 00               LD    D,0
231B B7                  OR    A
231C ED 52               SBC   HL,DE
231E             L292:
231E C2 29 23            JP    NZ,L296
2321             L293:
2321 3E 16               LD    A,22
2323             L294:
2323 CD 7B 3C            CALL  writeLineA
2326             L295:
2326 C3 2F 23            JP    L299
2329             L296:
2329 21 E7 03            LD    HL,999
232C             L297:
232C CD 53 3C            CALL  writeLineHL
232F             L298:
232F                     ;;testBitwiseOperators.j(55)     if (0x1234 | 0x10 + 0x0C == 0x123C) println (23); else println (999);
232F             L299:
232F 21 34 12            LD    HL,4660
2332             L300:
2332 3E 10               LD    A,16
2334             L301:
2334 C6 0C               ADD   A,12
2336             L302:
2336 B5                  OR    A,L
2337 6F                  LD    L,A
2338             L303:
2338 11 3C 12            LD    DE,4668
233B B7                  OR    A
233C ED 52               SBC   HL,DE
233E             L304:
233E C2 49 23            JP    NZ,L308
2341             L305:
2341 3E 17               LD    A,23
2343             L306:
2343 CD 7B 3C            CALL  writeLineA
2346             L307:
2346 C3 4F 23            JP    L311
2349             L308:
2349 21 E7 03            LD    HL,999
234C             L309:
234C CD 53 3C            CALL  writeLineHL
234F             L310:
234F                     ;;testBitwiseOperators.j(56)     if (0x1234 ^ 0x10 + 0x0C == 0x1228) println (24); else println (999);
234F             L311:
234F 21 34 12            LD    HL,4660
2352             L312:
2352 3E 10               LD    A,16
2354             L313:
2354 C6 0C               ADD   A,12
2356             L314:
2356 AD                  XOR   A,L
2357 6F                  LD    L,A
2358             L315:
2358 11 28 12            LD    DE,4648
235B B7                  OR    A
235C ED 52               SBC   HL,DE
235E             L316:
235E C2 69 23            JP    NZ,L320
2361             L317:
2361 3E 18               LD    A,24
2363             L318:
2363 CD 7B 3C            CALL  writeLineA
2366             L319:
2366 C3 6F 23            JP    L327
2369             L320:
2369 21 E7 03            LD    HL,999
236C             L321:
236C CD 53 3C            CALL  writeLineHL
236F             L322:
236F                     ;;testBitwiseOperators.j(57)   
236F             L323:
236F                     ;;testBitwiseOperators.j(58)     //constant/var
236F             L324:
236F                     ;;testBitwiseOperators.j(59)     //*****************
236F             L325:
236F                     ;;testBitwiseOperators.j(60)     //constant byte/var byte
236F             L326:
236F                     ;;testBitwiseOperators.j(61)     if (0x07 & b1 == 0x04) println (25); else println (999);
236F             L327:
236F 3E 07               LD    A,7
2371             L328:
2371 47                  LD    B,A
2372 3A 00 50            LD    A,(05000H)
2375 A0                  AND   A,B
2376             L329:
2376 D6 04               SUB   A,4
2378             L330:
2378 C2 83 23            JP    NZ,L334
237B             L331:
237B 3E 19               LD    A,25
237D             L332:
237D CD 7B 3C            CALL  writeLineA
2380             L333:
2380 C3 89 23            JP    L337
2383             L334:
2383 21 E7 03            LD    HL,999
2386             L335:
2386 CD 53 3C            CALL  writeLineHL
2389             L336:
2389                     ;;testBitwiseOperators.j(62)     if (0x07 | b1 == 0x1F) println (26); else println (999);
2389             L337:
2389 3E 07               LD    A,7
238B             L338:
238B 47                  LD    B,A
238C 3A 00 50            LD    A,(05000H)
238F B0                  OR    A,B
2390             L339:
2390 D6 1F               SUB   A,31
2392             L340:
2392 C2 9D 23            JP    NZ,L344
2395             L341:
2395 3E 1A               LD    A,26
2397             L342:
2397 CD 7B 3C            CALL  writeLineA
239A             L343:
239A C3 A3 23            JP    L347
239D             L344:
239D 21 E7 03            LD    HL,999
23A0             L345:
23A0 CD 53 3C            CALL  writeLineHL
23A3             L346:
23A3                     ;;testBitwiseOperators.j(63)     if (0x07 ^ b1 == 0x1B) println (27); else println (999);
23A3             L347:
23A3 3E 07               LD    A,7
23A5             L348:
23A5 47                  LD    B,A
23A6 3A 00 50            LD    A,(05000H)
23A9 A8                  XOR   A,B
23AA             L349:
23AA D6 1B               SUB   A,27
23AC             L350:
23AC C2 B7 23            JP    NZ,L354
23AF             L351:
23AF 3E 1B               LD    A,27
23B1             L352:
23B1 CD 7B 3C            CALL  writeLineA
23B4             L353:
23B4 C3 BD 23            JP    L358
23B7             L354:
23B7 21 E7 03            LD    HL,999
23BA             L355:
23BA CD 53 3C            CALL  writeLineHL
23BD             L356:
23BD                     ;;testBitwiseOperators.j(64)     //constant word/var word
23BD             L357:
23BD                     ;;testBitwiseOperators.j(65)     if (0x1234 & w1 == 0x0224) println (28); else println (999);
23BD             L358:
23BD 21 34 12            LD    HL,4660
23C0             L359:
23C0 ED 5B 02 50         LD    DE,(05002H)
23C4 F5                  PUSH  AF
23C5 7C                  LD    A,H
23C6 A2                  AND   A,D
23C7 67                  LD    H,A
23C8 7D                  LD    A,L
23C9 A3                  AND   A,E
23CA 6F                  LD    L,A
23CB F1                  POP   AF
23CC             L360:
23CC 11 24 02            LD    DE,548
23CF B7                  OR    A
23D0 ED 52               SBC   HL,DE
23D2             L361:
23D2 C2 DD 23            JP    NZ,L365
23D5             L362:
23D5 3E 1C               LD    A,28
23D7             L363:
23D7 CD 7B 3C            CALL  writeLineA
23DA             L364:
23DA C3 E3 23            JP    L368
23DD             L365:
23DD 21 E7 03            LD    HL,999
23E0             L366:
23E0 CD 53 3C            CALL  writeLineHL
23E3             L367:
23E3                     ;;testBitwiseOperators.j(66)     if (0x1234 | w1 == 0x133C) println (29); else println (999);
23E3             L368:
23E3 21 34 12            LD    HL,4660
23E6             L369:
23E6 ED 5B 02 50         LD    DE,(05002H)
23EA 47                  LD    B,A
23EB 7C                  LD    A,H
23EC B2                  OR    A,D
23ED 67                  LD    H,A
23EE 7D                  LD    A,L
23EF B3                  OR    A,E
23F0 6F                  LD    L,A
23F1 78                  LD    A,B
23F2             L370:
23F2 11 3C 13            LD    DE,4924
23F5 B7                  OR    A
23F6 ED 52               SBC   HL,DE
23F8             L371:
23F8 C2 03 24            JP    NZ,L375
23FB             L372:
23FB 3E 1D               LD    A,29
23FD             L373:
23FD CD 7B 3C            CALL  writeLineA
2400             L374:
2400 C3 09 24            JP    L378
2403             L375:
2403 21 E7 03            LD    HL,999
2406             L376:
2406 CD 53 3C            CALL  writeLineHL
2409             L377:
2409                     ;;testBitwiseOperators.j(67)     if (0x1234 ^ w1 == 0x1118) println (30); else println (999);
2409             L378:
2409 21 34 12            LD    HL,4660
240C             L379:
240C ED 5B 02 50         LD    DE,(05002H)
2410 F5                  PUSH  AF
2411 7C                  LD    A,H
2412 AA                  XOR   A,D
2413 67                  LD    H,A
2414 7D                  LD    A,L
2415 AB                  XOR   A,E
2416 6F                  LD    L,A
2417 F1                  POP   AF
2418             L380:
2418 11 18 11            LD    DE,4376
241B B7                  OR    A
241C ED 52               SBC   HL,DE
241E             L381:
241E C2 29 24            JP    NZ,L385
2421             L382:
2421 3E 1E               LD    A,30
2423             L383:
2423 CD 7B 3C            CALL  writeLineA
2426             L384:
2426 C3 2F 24            JP    L389
2429             L385:
2429 21 E7 03            LD    HL,999
242C             L386:
242C CD 53 3C            CALL  writeLineHL
242F             L387:
242F                     ;;testBitwiseOperators.j(68)     //constant byte/var word
242F             L388:
242F                     ;;testBitwiseOperators.j(69)     if (0x1C & w2 == 0x0014) println (31); else println (999);
242F             L389:
242F 3E 1C               LD    A,28
2431             L390:
2431 6F                  LD    L,A
2432 26 00               LD    H,0
2434             L391:
2434 ED 5B 04 50         LD    DE,(05004H)
2438 F5                  PUSH  AF
2439 7C                  LD    A,H
243A A2                  AND   A,D
243B 67                  LD    H,A
243C 7D                  LD    A,L
243D A3                  AND   A,E
243E 6F                  LD    L,A
243F F1                  POP   AF
2440             L392:
2440 3E 14               LD    A,20
2442             L393:
2442 5F                  LD    E,A
2443 16 00               LD    D,0
2445 B7                  OR    A
2446 ED 52               SBC   HL,DE
2448             L394:
2448 C2 53 24            JP    NZ,L398
244B             L395:
244B 3E 1F               LD    A,31
244D             L396:
244D CD 7B 3C            CALL  writeLineA
2450             L397:
2450 C3 59 24            JP    L401
2453             L398:
2453 21 E7 03            LD    HL,999
2456             L399:
2456 CD 53 3C            CALL  writeLineHL
2459             L400:
2459                     ;;testBitwiseOperators.j(70)     if (0x1C | w2 == 0x123C) println (32); else println (999);
2459             L401:
2459 3E 1C               LD    A,28
245B             L402:
245B 6F                  LD    L,A
245C 26 00               LD    H,0
245E             L403:
245E ED 5B 04 50         LD    DE,(05004H)
2462 47                  LD    B,A
2463 7C                  LD    A,H
2464 B2                  OR    A,D
2465 67                  LD    H,A
2466 7D                  LD    A,L
2467 B3                  OR    A,E
2468 6F                  LD    L,A
2469 78                  LD    A,B
246A             L404:
246A 11 3C 12            LD    DE,4668
246D B7                  OR    A
246E ED 52               SBC   HL,DE
2470             L405:
2470 C2 7B 24            JP    NZ,L409
2473             L406:
2473 3E 20               LD    A,32
2475             L407:
2475 CD 7B 3C            CALL  writeLineA
2478             L408:
2478 C3 81 24            JP    L412
247B             L409:
247B 21 E7 03            LD    HL,999
247E             L410:
247E CD 53 3C            CALL  writeLineHL
2481             L411:
2481                     ;;testBitwiseOperators.j(71)     if (0x1C ^ w2 == 0x1228) println (33); else println (999);
2481             L412:
2481 3E 1C               LD    A,28
2483             L413:
2483 6F                  LD    L,A
2484 26 00               LD    H,0
2486             L414:
2486 ED 5B 04 50         LD    DE,(05004H)
248A F5                  PUSH  AF
248B 7C                  LD    A,H
248C AA                  XOR   A,D
248D 67                  LD    H,A
248E 7D                  LD    A,L
248F AB                  XOR   A,E
2490 6F                  LD    L,A
2491 F1                  POP   AF
2492             L415:
2492 11 28 12            LD    DE,4648
2495 B7                  OR    A
2496 ED 52               SBC   HL,DE
2498             L416:
2498 C2 A3 24            JP    NZ,L420
249B             L417:
249B 3E 21               LD    A,33
249D             L418:
249D CD 7B 3C            CALL  writeLineA
24A0             L419:
24A0 C3 A9 24            JP    L424
24A3             L420:
24A3 21 E7 03            LD    HL,999
24A6             L421:
24A6 CD 53 3C            CALL  writeLineHL
24A9             L422:
24A9                     ;;testBitwiseOperators.j(72)     //constant word/var byte
24A9             L423:
24A9                     ;;testBitwiseOperators.j(73)     if (0x1234 & b1 == 0x0014) println (34); else println (999);
24A9             L424:
24A9 21 34 12            LD    HL,4660
24AC             L425:
24AC 5F                  LD    E,A
24AD 3A 00 50            LD    A,(05000H)
24B0 A5                  AND   A,L
24B1 6F                  LD    L,A
24B2 7B                  LD    A,E
24B3 26 00               LD    H,0
24B5             L426:
24B5 3E 14               LD    A,20
24B7             L427:
24B7 5F                  LD    E,A
24B8 16 00               LD    D,0
24BA B7                  OR    A
24BB ED 52               SBC   HL,DE
24BD             L428:
24BD C2 C8 24            JP    NZ,L432
24C0             L429:
24C0 3E 22               LD    A,34
24C2             L430:
24C2 CD 7B 3C            CALL  writeLineA
24C5             L431:
24C5 C3 CE 24            JP    L435
24C8             L432:
24C8 21 E7 03            LD    HL,999
24CB             L433:
24CB CD 53 3C            CALL  writeLineHL
24CE             L434:
24CE                     ;;testBitwiseOperators.j(74)     if (0x1234 | b1 == 0x123C) println (35); else println (999);
24CE             L435:
24CE 21 34 12            LD    HL,4660
24D1             L436:
24D1 47                  LD    B,A
24D2 3A 00 50            LD    A,(05000H)
24D5 B5                  OR    A,L
24D6 6F                  LD    L,A
24D7 78                  LD    A,B
24D8             L437:
24D8 11 3C 12            LD    DE,4668
24DB B7                  OR    A
24DC ED 52               SBC   HL,DE
24DE             L438:
24DE C2 E9 24            JP    NZ,L442
24E1             L439:
24E1 3E 23               LD    A,35
24E3             L440:
24E3 CD 7B 3C            CALL  writeLineA
24E6             L441:
24E6 C3 EF 24            JP    L445
24E9             L442:
24E9 21 E7 03            LD    HL,999
24EC             L443:
24EC CD 53 3C            CALL  writeLineHL
24EF             L444:
24EF                     ;;testBitwiseOperators.j(75)     if (0x1234 ^ b1 == 0x1228) println (36); else println (999);
24EF             L445:
24EF 21 34 12            LD    HL,4660
24F2             L446:
24F2 47                  LD    B,A
24F3 3A 00 50            LD    A,(05000H)
24F6 AD                  XOR   A,L
24F7 6F                  LD    L,A
24F8 78                  LD    A,B
24F9             L447:
24F9 11 28 12            LD    DE,4648
24FC B7                  OR    A
24FD ED 52               SBC   HL,DE
24FF             L448:
24FF C2 0A 25            JP    NZ,L452
2502             L449:
2502 3E 24               LD    A,36
2504             L450:
2504 CD 7B 3C            CALL  writeLineA
2507             L451:
2507 C3 10 25            JP    L459
250A             L452:
250A 21 E7 03            LD    HL,999
250D             L453:
250D CD 53 3C            CALL  writeLineHL
2510             L454:
2510                     ;;testBitwiseOperators.j(76)   
2510             L455:
2510                     ;;testBitwiseOperators.j(77)     //constant/final var
2510             L456:
2510                     ;;testBitwiseOperators.j(78)     //*****************
2510             L457:
2510                     ;;testBitwiseOperators.j(79)     //constant byte/final var byte
2510             L458:
2510                     ;;testBitwiseOperators.j(80)     if (0x07 & fb1 == 0x04) println (37); else println (999);
2510             L459:
2510 3E 07               LD    A,7
2512             L460:
2512 E6 1C               AND   A,28
2514             L461:
2514 D6 04               SUB   A,4
2516             L462:
2516 C2 21 25            JP    NZ,L466
2519             L463:
2519 3E 25               LD    A,37
251B             L464:
251B CD 7B 3C            CALL  writeLineA
251E             L465:
251E C3 27 25            JP    L469
2521             L466:
2521 21 E7 03            LD    HL,999
2524             L467:
2524 CD 53 3C            CALL  writeLineHL
2527             L468:
2527                     ;;testBitwiseOperators.j(81)     if (0x07 | fb1 == 0x1F) println (38); else println (999);
2527             L469:
2527 3E 07               LD    A,7
2529             L470:
2529 F6 1C               OR    A,28
252B             L471:
252B D6 1F               SUB   A,31
252D             L472:
252D C2 38 25            JP    NZ,L476
2530             L473:
2530 3E 26               LD    A,38
2532             L474:
2532 CD 7B 3C            CALL  writeLineA
2535             L475:
2535 C3 3E 25            JP    L479
2538             L476:
2538 21 E7 03            LD    HL,999
253B             L477:
253B CD 53 3C            CALL  writeLineHL
253E             L478:
253E                     ;;testBitwiseOperators.j(82)     if (0x07 ^ fb1 == 0x1B) println (39); else println (999);
253E             L479:
253E 3E 07               LD    A,7
2540             L480:
2540 EE 1C               XOR   A,28
2542             L481:
2542 D6 1B               SUB   A,27
2544             L482:
2544 C2 4F 25            JP    NZ,L486
2547             L483:
2547 3E 27               LD    A,39
2549             L484:
2549 CD 7B 3C            CALL  writeLineA
254C             L485:
254C C3 55 25            JP    L490
254F             L486:
254F 21 E7 03            LD    HL,999
2552             L487:
2552 CD 53 3C            CALL  writeLineHL
2555             L488:
2555                     ;;testBitwiseOperators.j(83)     //constant word/final var word
2555             L489:
2555                     ;;testBitwiseOperators.j(84)     if (0x1234 & fw1 == 0x0224) println (40); else println (999);
2555             L490:
2555 21 34 12            LD    HL,4660
2558             L491:
2558 11 2C 03            LD    DE,812
255B F5                  PUSH  AF
255C 7C                  LD    A,H
255D A2                  AND   A,D
255E 67                  LD    H,A
255F 7D                  LD    A,L
2560 A3                  AND   A,E
2561 6F                  LD    L,A
2562 F1                  POP   AF
2563             L492:
2563 11 24 02            LD    DE,548
2566 B7                  OR    A
2567 ED 52               SBC   HL,DE
2569             L493:
2569 C2 74 25            JP    NZ,L497
256C             L494:
256C 3E 28               LD    A,40
256E             L495:
256E CD 7B 3C            CALL  writeLineA
2571             L496:
2571 C3 7A 25            JP    L500
2574             L497:
2574 21 E7 03            LD    HL,999
2577             L498:
2577 CD 53 3C            CALL  writeLineHL
257A             L499:
257A                     ;;testBitwiseOperators.j(85)     if (0x1234 | fw1 == 0x133C) println (41); else println (999);
257A             L500:
257A 21 34 12            LD    HL,4660
257D             L501:
257D 11 2C 03            LD    DE,812
2580 47                  LD    B,A
2581 7C                  LD    A,H
2582 B2                  OR    A,D
2583 67                  LD    H,A
2584 7D                  LD    A,L
2585 B3                  OR    A,E
2586 6F                  LD    L,A
2587 78                  LD    A,B
2588             L502:
2588 11 3C 13            LD    DE,4924
258B B7                  OR    A
258C ED 52               SBC   HL,DE
258E             L503:
258E C2 99 25            JP    NZ,L507
2591             L504:
2591 3E 29               LD    A,41
2593             L505:
2593 CD 7B 3C            CALL  writeLineA
2596             L506:
2596 C3 9F 25            JP    L510
2599             L507:
2599 21 E7 03            LD    HL,999
259C             L508:
259C CD 53 3C            CALL  writeLineHL
259F             L509:
259F                     ;;testBitwiseOperators.j(86)     if (0x1234 ^ fw1 == 0x1118) println (42); else println (999);
259F             L510:
259F 21 34 12            LD    HL,4660
25A2             L511:
25A2 11 2C 03            LD    DE,812
25A5 F5                  PUSH  AF
25A6 7C                  LD    A,H
25A7 AA                  XOR   A,D
25A8 67                  LD    H,A
25A9 7D                  LD    A,L
25AA AB                  XOR   A,E
25AB 6F                  LD    L,A
25AC F1                  POP   AF
25AD             L512:
25AD 11 18 11            LD    DE,4376
25B0 B7                  OR    A
25B1 ED 52               SBC   HL,DE
25B3             L513:
25B3 C2 BE 25            JP    NZ,L517
25B6             L514:
25B6 3E 2A               LD    A,42
25B8             L515:
25B8 CD 7B 3C            CALL  writeLineA
25BB             L516:
25BB C3 C4 25            JP    L521
25BE             L517:
25BE 21 E7 03            LD    HL,999
25C1             L518:
25C1 CD 53 3C            CALL  writeLineHL
25C4             L519:
25C4                     ;;testBitwiseOperators.j(87)     //constant byte/final var word
25C4             L520:
25C4                     ;;testBitwiseOperators.j(88)     if (0x1C & fw2 == 0x0014) println (43); else println (999);
25C4             L521:
25C4 3E 1C               LD    A,28
25C6             L522:
25C6 6F                  LD    L,A
25C7 26 00               LD    H,0
25C9             L523:
25C9 11 34 12            LD    DE,4660
25CC F5                  PUSH  AF
25CD 7C                  LD    A,H
25CE A2                  AND   A,D
25CF 67                  LD    H,A
25D0 7D                  LD    A,L
25D1 A3                  AND   A,E
25D2 6F                  LD    L,A
25D3 F1                  POP   AF
25D4             L524:
25D4 3E 14               LD    A,20
25D6             L525:
25D6 5F                  LD    E,A
25D7 16 00               LD    D,0
25D9 B7                  OR    A
25DA ED 52               SBC   HL,DE
25DC             L526:
25DC C2 E7 25            JP    NZ,L530
25DF             L527:
25DF 3E 2B               LD    A,43
25E1             L528:
25E1 CD 7B 3C            CALL  writeLineA
25E4             L529:
25E4 C3 ED 25            JP    L533
25E7             L530:
25E7 21 E7 03            LD    HL,999
25EA             L531:
25EA CD 53 3C            CALL  writeLineHL
25ED             L532:
25ED                     ;;testBitwiseOperators.j(89)     if (0x1C | fw2 == 0x123C) println (44); else println (999);
25ED             L533:
25ED 3E 1C               LD    A,28
25EF             L534:
25EF 6F                  LD    L,A
25F0 26 00               LD    H,0
25F2             L535:
25F2 11 34 12            LD    DE,4660
25F5 47                  LD    B,A
25F6 7C                  LD    A,H
25F7 B2                  OR    A,D
25F8 67                  LD    H,A
25F9 7D                  LD    A,L
25FA B3                  OR    A,E
25FB 6F                  LD    L,A
25FC 78                  LD    A,B
25FD             L536:
25FD 11 3C 12            LD    DE,4668
2600 B7                  OR    A
2601 ED 52               SBC   HL,DE
2603             L537:
2603 C2 0E 26            JP    NZ,L541
2606             L538:
2606 3E 2C               LD    A,44
2608             L539:
2608 CD 7B 3C            CALL  writeLineA
260B             L540:
260B C3 14 26            JP    L544
260E             L541:
260E 21 E7 03            LD    HL,999
2611             L542:
2611 CD 53 3C            CALL  writeLineHL
2614             L543:
2614                     ;;testBitwiseOperators.j(90)     if (0x1C ^ fw2 == 0x1228) println (45); else println (999);
2614             L544:
2614 3E 1C               LD    A,28
2616             L545:
2616 6F                  LD    L,A
2617 26 00               LD    H,0
2619             L546:
2619 11 34 12            LD    DE,4660
261C F5                  PUSH  AF
261D 7C                  LD    A,H
261E AA                  XOR   A,D
261F 67                  LD    H,A
2620 7D                  LD    A,L
2621 AB                  XOR   A,E
2622 6F                  LD    L,A
2623 F1                  POP   AF
2624             L547:
2624 11 28 12            LD    DE,4648
2627 B7                  OR    A
2628 ED 52               SBC   HL,DE
262A             L548:
262A C2 35 26            JP    NZ,L552
262D             L549:
262D 3E 2D               LD    A,45
262F             L550:
262F CD 7B 3C            CALL  writeLineA
2632             L551:
2632 C3 3B 26            JP    L556
2635             L552:
2635 21 E7 03            LD    HL,999
2638             L553:
2638 CD 53 3C            CALL  writeLineHL
263B             L554:
263B                     ;;testBitwiseOperators.j(91)     //constant word/final var byte
263B             L555:
263B                     ;;testBitwiseOperators.j(92)     if (0x1234 & fb1 == 0x0014) println (46); else println (999);
263B             L556:
263B 21 34 12            LD    HL,4660
263E             L557:
263E 5F                  LD    E,A
263F 3E 1C               LD    A,28
2641 A5                  AND   A,L
2642 6F                  LD    L,A
2643 7B                  LD    A,E
2644 26 00               LD    H,0
2646             L558:
2646 3E 14               LD    A,20
2648             L559:
2648 5F                  LD    E,A
2649 16 00               LD    D,0
264B B7                  OR    A
264C ED 52               SBC   HL,DE
264E             L560:
264E C2 59 26            JP    NZ,L564
2651             L561:
2651 3E 2E               LD    A,46
2653             L562:
2653 CD 7B 3C            CALL  writeLineA
2656             L563:
2656 C3 5F 26            JP    L567
2659             L564:
2659 21 E7 03            LD    HL,999
265C             L565:
265C CD 53 3C            CALL  writeLineHL
265F             L566:
265F                     ;;testBitwiseOperators.j(93)     if (0x1234 | fb1 == 0x123C) println (47); else println (999);
265F             L567:
265F 21 34 12            LD    HL,4660
2662             L568:
2662 11 1C 00            LD    DE,28
2665 47                  LD    B,A
2666 7C                  LD    A,H
2667 B2                  OR    A,D
2668 67                  LD    H,A
2669 7D                  LD    A,L
266A B3                  OR    A,E
266B 6F                  LD    L,A
266C 78                  LD    A,B
266D             L569:
266D 11 3C 12            LD    DE,4668
2670 B7                  OR    A
2671 ED 52               SBC   HL,DE
2673             L570:
2673 C2 7E 26            JP    NZ,L574
2676             L571:
2676 3E 2F               LD    A,47
2678             L572:
2678 CD 7B 3C            CALL  writeLineA
267B             L573:
267B C3 84 26            JP    L577
267E             L574:
267E 21 E7 03            LD    HL,999
2681             L575:
2681 CD 53 3C            CALL  writeLineHL
2684             L576:
2684                     ;;testBitwiseOperators.j(94)     if (0x1234 ^ fb1 == 0x1228) println (48); else println (999);
2684             L577:
2684 21 34 12            LD    HL,4660
2687             L578:
2687 11 1C 00            LD    DE,28
268A F5                  PUSH  AF
268B 7C                  LD    A,H
268C AA                  XOR   A,D
268D 67                  LD    H,A
268E 7D                  LD    A,L
268F AB                  XOR   A,E
2690 6F                  LD    L,A
2691 F1                  POP   AF
2692             L579:
2692 11 28 12            LD    DE,4648
2695 B7                  OR    A
2696 ED 52               SBC   HL,DE
2698             L580:
2698 C2 A3 26            JP    NZ,L584
269B             L581:
269B 3E 30               LD    A,48
269D             L582:
269D CD 7B 3C            CALL  writeLineA
26A0             L583:
26A0 C3 A9 26            JP    L591
26A3             L584:
26A3 21 E7 03            LD    HL,999
26A6             L585:
26A6 CD 53 3C            CALL  writeLineHL
26A9             L586:
26A9                     ;;testBitwiseOperators.j(95)   
26A9             L587:
26A9                     ;;testBitwiseOperators.j(96)     //acc/constant
26A9             L588:
26A9                     ;;testBitwiseOperators.j(97)     //************
26A9             L589:
26A9                     ;;testBitwiseOperators.j(98)     //acc byte/constant byte
26A9             L590:
26A9                     ;;testBitwiseOperators.j(99)     if ((0x04 + 0x03) & 0x1C == 0x04) println (49); else println (999);
26A9             L591:
26A9 3E 04               LD    A,4
26AB             L592:
26AB C6 03               ADD   A,3
26AD             L593:
26AD E6 1C               AND   A,28
26AF             L594:
26AF D6 04               SUB   A,4
26B1             L595:
26B1 C2 BC 26            JP    NZ,L599
26B4             L596:
26B4 3E 31               LD    A,49
26B6             L597:
26B6 CD 7B 3C            CALL  writeLineA
26B9             L598:
26B9 C3 C2 26            JP    L602
26BC             L599:
26BC 21 E7 03            LD    HL,999
26BF             L600:
26BF CD 53 3C            CALL  writeLineHL
26C2             L601:
26C2                     ;;testBitwiseOperators.j(100)     if ((0x04 + 0x03) | 0x1C == 0x1F) println (50); else println (999);
26C2             L602:
26C2 3E 04               LD    A,4
26C4             L603:
26C4 C6 03               ADD   A,3
26C6             L604:
26C6 F6 1C               OR    A,28
26C8             L605:
26C8 D6 1F               SUB   A,31
26CA             L606:
26CA C2 D5 26            JP    NZ,L610
26CD             L607:
26CD 3E 32               LD    A,50
26CF             L608:
26CF CD 7B 3C            CALL  writeLineA
26D2             L609:
26D2 C3 DB 26            JP    L613
26D5             L610:
26D5 21 E7 03            LD    HL,999
26D8             L611:
26D8 CD 53 3C            CALL  writeLineHL
26DB             L612:
26DB                     ;;testBitwiseOperators.j(101)     if ((0x04 + 0x03) ^ 0x1C == 0x1B) println (51); else println (999);
26DB             L613:
26DB 3E 04               LD    A,4
26DD             L614:
26DD C6 03               ADD   A,3
26DF             L615:
26DF EE 1C               XOR   A,28
26E1             L616:
26E1 D6 1B               SUB   A,27
26E3             L617:
26E3 C2 EE 26            JP    NZ,L621
26E6             L618:
26E6 3E 33               LD    A,51
26E8             L619:
26E8 CD 7B 3C            CALL  writeLineA
26EB             L620:
26EB C3 F4 26            JP    L625
26EE             L621:
26EE 21 E7 03            LD    HL,999
26F1             L622:
26F1 CD 53 3C            CALL  writeLineHL
26F4             L623:
26F4                     ;;testBitwiseOperators.j(102)     //acc word/constant word
26F4             L624:
26F4                     ;;testBitwiseOperators.j(103)     if (0x1000 + 0x0234 & 0x032C == 0x0224) println (52); else println (999);
26F4             L625:
26F4 21 00 10            LD    HL,4096
26F7             L626:
26F7 11 34 02            LD    DE,564
26FA 19                  ADD   HL,DE
26FB             L627:
26FB 11 2C 03            LD    DE,812
26FE F5                  PUSH  AF
26FF 7C                  LD    A,H
2700 A2                  AND   A,D
2701 67                  LD    H,A
2702 7D                  LD    A,L
2703 A3                  AND   A,E
2704 6F                  LD    L,A
2705 F1                  POP   AF
2706             L628:
2706 11 24 02            LD    DE,548
2709 B7                  OR    A
270A ED 52               SBC   HL,DE
270C             L629:
270C C2 17 27            JP    NZ,L633
270F             L630:
270F 3E 34               LD    A,52
2711             L631:
2711 CD 7B 3C            CALL  writeLineA
2714             L632:
2714 C3 1D 27            JP    L636
2717             L633:
2717 21 E7 03            LD    HL,999
271A             L634:
271A CD 53 3C            CALL  writeLineHL
271D             L635:
271D                     ;;testBitwiseOperators.j(104)     if (0x1000 + 0x0234 | 0x032C == 0x133C) println (53); else println (999);
271D             L636:
271D 21 00 10            LD    HL,4096
2720             L637:
2720 11 34 02            LD    DE,564
2723 19                  ADD   HL,DE
2724             L638:
2724 11 2C 03            LD    DE,812
2727 47                  LD    B,A
2728 7C                  LD    A,H
2729 B2                  OR    A,D
272A 67                  LD    H,A
272B 7D                  LD    A,L
272C B3                  OR    A,E
272D 6F                  LD    L,A
272E 78                  LD    A,B
272F             L639:
272F 11 3C 13            LD    DE,4924
2732 B7                  OR    A
2733 ED 52               SBC   HL,DE
2735             L640:
2735 C2 40 27            JP    NZ,L644
2738             L641:
2738 3E 35               LD    A,53
273A             L642:
273A CD 7B 3C            CALL  writeLineA
273D             L643:
273D C3 46 27            JP    L647
2740             L644:
2740 21 E7 03            LD    HL,999
2743             L645:
2743 CD 53 3C            CALL  writeLineHL
2746             L646:
2746                     ;;testBitwiseOperators.j(105)     if (0x1000 + 0x0234 ^ 0x032C == 0x1118) println (54); else println (999);
2746             L647:
2746 21 00 10            LD    HL,4096
2749             L648:
2749 11 34 02            LD    DE,564
274C 19                  ADD   HL,DE
274D             L649:
274D 11 2C 03            LD    DE,812
2750 F5                  PUSH  AF
2751 7C                  LD    A,H
2752 AA                  XOR   A,D
2753 67                  LD    H,A
2754 7D                  LD    A,L
2755 AB                  XOR   A,E
2756 6F                  LD    L,A
2757 F1                  POP   AF
2758             L650:
2758 11 18 11            LD    DE,4376
275B B7                  OR    A
275C ED 52               SBC   HL,DE
275E             L651:
275E C2 69 27            JP    NZ,L655
2761             L652:
2761 3E 36               LD    A,54
2763             L653:
2763 CD 7B 3C            CALL  writeLineA
2766             L654:
2766 C3 6F 27            JP    L659
2769             L655:
2769 21 E7 03            LD    HL,999
276C             L656:
276C CD 53 3C            CALL  writeLineHL
276F             L657:
276F                     ;;testBitwiseOperators.j(106)     //acc byte/constant word
276F             L658:
276F                     ;;testBitwiseOperators.j(107)     if (0x10 + 0x0C & 0x1234 == 0x0014) println (55); else println (999);
276F             L659:
276F 3E 10               LD    A,16
2771             L660:
2771 C6 0C               ADD   A,12
2773             L661:
2773 6F                  LD    L,A
2774 26 00               LD    H,0
2776             L662:
2776 11 34 12            LD    DE,4660
2779 F5                  PUSH  AF
277A 7C                  LD    A,H
277B A2                  AND   A,D
277C 67                  LD    H,A
277D 7D                  LD    A,L
277E A3                  AND   A,E
277F 6F                  LD    L,A
2780 F1                  POP   AF
2781             L663:
2781 3E 14               LD    A,20
2783             L664:
2783 5F                  LD    E,A
2784 16 00               LD    D,0
2786 B7                  OR    A
2787 ED 52               SBC   HL,DE
2789             L665:
2789 C2 94 27            JP    NZ,L669
278C             L666:
278C 3E 37               LD    A,55
278E             L667:
278E CD 7B 3C            CALL  writeLineA
2791             L668:
2791 C3 9A 27            JP    L672
2794             L669:
2794 21 E7 03            LD    HL,999
2797             L670:
2797 CD 53 3C            CALL  writeLineHL
279A             L671:
279A                     ;;testBitwiseOperators.j(108)     if (0x10 + 0x0C | 0x1234 == 0x123C) println (56); else println (999);
279A             L672:
279A 3E 10               LD    A,16
279C             L673:
279C C6 0C               ADD   A,12
279E             L674:
279E 6F                  LD    L,A
279F 26 00               LD    H,0
27A1             L675:
27A1 11 34 12            LD    DE,4660
27A4 47                  LD    B,A
27A5 7C                  LD    A,H
27A6 B2                  OR    A,D
27A7 67                  LD    H,A
27A8 7D                  LD    A,L
27A9 B3                  OR    A,E
27AA 6F                  LD    L,A
27AB 78                  LD    A,B
27AC             L676:
27AC 11 3C 12            LD    DE,4668
27AF B7                  OR    A
27B0 ED 52               SBC   HL,DE
27B2             L677:
27B2 C2 BD 27            JP    NZ,L681
27B5             L678:
27B5 3E 38               LD    A,56
27B7             L679:
27B7 CD 7B 3C            CALL  writeLineA
27BA             L680:
27BA C3 C3 27            JP    L684
27BD             L681:
27BD 21 E7 03            LD    HL,999
27C0             L682:
27C0 CD 53 3C            CALL  writeLineHL
27C3             L683:
27C3                     ;;testBitwiseOperators.j(109)     if (0x10 + 0x0C ^ 0x1234 == 0x1228) println (57); else println (999);
27C3             L684:
27C3 3E 10               LD    A,16
27C5             L685:
27C5 C6 0C               ADD   A,12
27C7             L686:
27C7 6F                  LD    L,A
27C8 26 00               LD    H,0
27CA             L687:
27CA 11 34 12            LD    DE,4660
27CD F5                  PUSH  AF
27CE 7C                  LD    A,H
27CF AA                  XOR   A,D
27D0 67                  LD    H,A
27D1 7D                  LD    A,L
27D2 AB                  XOR   A,E
27D3 6F                  LD    L,A
27D4 F1                  POP   AF
27D5             L688:
27D5 11 28 12            LD    DE,4648
27D8 B7                  OR    A
27D9 ED 52               SBC   HL,DE
27DB             L689:
27DB C2 E6 27            JP    NZ,L693
27DE             L690:
27DE 3E 39               LD    A,57
27E0             L691:
27E0 CD 7B 3C            CALL  writeLineA
27E3             L692:
27E3 C3 EC 27            JP    L697
27E6             L693:
27E6 21 E7 03            LD    HL,999
27E9             L694:
27E9 CD 53 3C            CALL  writeLineHL
27EC             L695:
27EC                     ;;testBitwiseOperators.j(110)     //acc word/constant byte
27EC             L696:
27EC                     ;;testBitwiseOperators.j(111)     if (0x1000 + 0x0234 & 0x1C == 0x0014) println (58); else println (999);
27EC             L697:
27EC 21 00 10            LD    HL,4096
27EF             L698:
27EF 11 34 02            LD    DE,564
27F2 19                  ADD   HL,DE
27F3             L699:
27F3 5F                  LD    E,A
27F4 3E 1C               LD    A,28
27F6 A5                  AND   A,L
27F7 6F                  LD    L,A
27F8 7B                  LD    A,E
27F9 26 00               LD    H,0
27FB             L700:
27FB 3E 14               LD    A,20
27FD             L701:
27FD 5F                  LD    E,A
27FE 16 00               LD    D,0
2800 B7                  OR    A
2801 ED 52               SBC   HL,DE
2803             L702:
2803 C2 0E 28            JP    NZ,L706
2806             L703:
2806 3E 3A               LD    A,58
2808             L704:
2808 CD 7B 3C            CALL  writeLineA
280B             L705:
280B C3 14 28            JP    L709
280E             L706:
280E 21 E7 03            LD    HL,999
2811             L707:
2811 CD 53 3C            CALL  writeLineHL
2814             L708:
2814                     ;;testBitwiseOperators.j(112)     if (0x1000 + 0x0234 | 0x1C == 0x123C) println (59); else println (999);
2814             L709:
2814 21 00 10            LD    HL,4096
2817             L710:
2817 11 34 02            LD    DE,564
281A 19                  ADD   HL,DE
281B             L711:
281B 11 1C 00            LD    DE,28
281E 47                  LD    B,A
281F 7C                  LD    A,H
2820 B2                  OR    A,D
2821 67                  LD    H,A
2822 7D                  LD    A,L
2823 B3                  OR    A,E
2824 6F                  LD    L,A
2825 78                  LD    A,B
2826             L712:
2826 11 3C 12            LD    DE,4668
2829 B7                  OR    A
282A ED 52               SBC   HL,DE
282C             L713:
282C C2 37 28            JP    NZ,L717
282F             L714:
282F 3E 3B               LD    A,59
2831             L715:
2831 CD 7B 3C            CALL  writeLineA
2834             L716:
2834 C3 3D 28            JP    L720
2837             L717:
2837 21 E7 03            LD    HL,999
283A             L718:
283A CD 53 3C            CALL  writeLineHL
283D             L719:
283D                     ;;testBitwiseOperators.j(113)     if (0x1000 + 0x0234 ^ 0x1C == 0x1228) println (60); else println (999);
283D             L720:
283D 21 00 10            LD    HL,4096
2840             L721:
2840 11 34 02            LD    DE,564
2843 19                  ADD   HL,DE
2844             L722:
2844 11 1C 00            LD    DE,28
2847 F5                  PUSH  AF
2848 7C                  LD    A,H
2849 AA                  XOR   A,D
284A 67                  LD    H,A
284B 7D                  LD    A,L
284C AB                  XOR   A,E
284D 6F                  LD    L,A
284E F1                  POP   AF
284F             L723:
284F 11 28 12            LD    DE,4648
2852 B7                  OR    A
2853 ED 52               SBC   HL,DE
2855             L724:
2855 C2 60 28            JP    NZ,L728
2858             L725:
2858 3E 3C               LD    A,60
285A             L726:
285A CD 7B 3C            CALL  writeLineA
285D             L727:
285D C3 66 28            JP    L735
2860             L728:
2860 21 E7 03            LD    HL,999
2863             L729:
2863 CD 53 3C            CALL  writeLineHL
2866             L730:
2866                     ;;testBitwiseOperators.j(114)   
2866             L731:
2866                     ;;testBitwiseOperators.j(115)     //acc/acc
2866             L732:
2866                     ;;testBitwiseOperators.j(116)     //*******
2866             L733:
2866                     ;;testBitwiseOperators.j(117)     //acc byte/acc byte
2866             L734:
2866                     ;;testBitwiseOperators.j(118)     if (0x04 + 0x03 & 0x10 + 0x0C == 0x04) println (61); else println (999);
2866             L735:
2866 3E 04               LD    A,4
2868             L736:
2868 C6 03               ADD   A,3
286A             L737:
286A F5                  PUSH  AF
286B 3E 10               LD    A,16
286D             L738:
286D C6 0C               ADD   A,12
286F             L739:
286F C1                  POP   BC
2870 A0                  AND   A,B
2871             L740:
2871 D6 04               SUB   A,4
2873             L741:
2873 C2 7E 28            JP    NZ,L745
2876             L742:
2876 3E 3D               LD    A,61
2878             L743:
2878 CD 7B 3C            CALL  writeLineA
287B             L744:
287B C3 84 28            JP    L748
287E             L745:
287E 21 E7 03            LD    HL,999
2881             L746:
2881 CD 53 3C            CALL  writeLineHL
2884             L747:
2884                     ;;testBitwiseOperators.j(119)     if (0x04 + 0x03 | 0x10 + 0x0C == 0x1F) println (62); else println (999);
2884             L748:
2884 3E 04               LD    A,4
2886             L749:
2886 C6 03               ADD   A,3
2888             L750:
2888 F5                  PUSH  AF
2889 3E 10               LD    A,16
288B             L751:
288B C6 0C               ADD   A,12
288D             L752:
288D C1                  POP   BC
288E B0                  OR    A,B
288F             L753:
288F D6 1F               SUB   A,31
2891             L754:
2891 C2 9C 28            JP    NZ,L758
2894             L755:
2894 3E 3E               LD    A,62
2896             L756:
2896 CD 7B 3C            CALL  writeLineA
2899             L757:
2899 C3 A2 28            JP    L761
289C             L758:
289C 21 E7 03            LD    HL,999
289F             L759:
289F CD 53 3C            CALL  writeLineHL
28A2             L760:
28A2                     ;;testBitwiseOperators.j(120)     if (0x04 + 0x03 ^ 0x10 + 0x0C == 0x1B) println (63); else println (999);
28A2             L761:
28A2 3E 04               LD    A,4
28A4             L762:
28A4 C6 03               ADD   A,3
28A6             L763:
28A6 F5                  PUSH  AF
28A7 3E 10               LD    A,16
28A9             L764:
28A9 C6 0C               ADD   A,12
28AB             L765:
28AB C1                  POP   BC
28AC A8                  XOR   A,B
28AD             L766:
28AD D6 1B               SUB   A,27
28AF             L767:
28AF C2 BA 28            JP    NZ,L771
28B2             L768:
28B2 3E 3F               LD    A,63
28B4             L769:
28B4 CD 7B 3C            CALL  writeLineA
28B7             L770:
28B7 C3 C0 28            JP    L775
28BA             L771:
28BA 21 E7 03            LD    HL,999
28BD             L772:
28BD CD 53 3C            CALL  writeLineHL
28C0             L773:
28C0                     ;;testBitwiseOperators.j(121)     //acc word/acc word
28C0             L774:
28C0                     ;;testBitwiseOperators.j(122)     if (0x1000 + 0x0234 & 0x0100 + 0x022C == 0x0224) println (64); else println (999);
28C0             L775:
28C0 21 00 10            LD    HL,4096
28C3             L776:
28C3 11 34 02            LD    DE,564
28C6 19                  ADD   HL,DE
28C7             L777:
28C7 E5                  PUSH  HL
28C8 21 00 01            LD    HL,256
28CB             L778:
28CB 11 2C 02            LD    DE,556
28CE 19                  ADD   HL,DE
28CF             L779:
28CF D1                  POP   DE
28D0 F5                  PUSH  AF
28D1 7C                  LD    A,H
28D2 A2                  AND   A,D
28D3 67                  LD    H,A
28D4 7D                  LD    A,L
28D5 A3                  AND   A,E
28D6 6F                  LD    L,A
28D7 F1                  POP   AF
28D8             L780:
28D8 11 24 02            LD    DE,548
28DB B7                  OR    A
28DC ED 52               SBC   HL,DE
28DE             L781:
28DE C2 E9 28            JP    NZ,L785
28E1             L782:
28E1 3E 40               LD    A,64
28E3             L783:
28E3 CD 7B 3C            CALL  writeLineA
28E6             L784:
28E6 C3 EF 28            JP    L788
28E9             L785:
28E9 21 E7 03            LD    HL,999
28EC             L786:
28EC CD 53 3C            CALL  writeLineHL
28EF             L787:
28EF                     ;;testBitwiseOperators.j(123)     if (0x1000 + 0x0234 | 0x0100 + 0x022C == 0x133C) println (65); else println (999);
28EF             L788:
28EF 21 00 10            LD    HL,4096
28F2             L789:
28F2 11 34 02            LD    DE,564
28F5 19                  ADD   HL,DE
28F6             L790:
28F6 E5                  PUSH  HL
28F7 21 00 01            LD    HL,256
28FA             L791:
28FA 11 2C 02            LD    DE,556
28FD 19                  ADD   HL,DE
28FE             L792:
28FE D1                  POP   DE
28FF 47                  LD    B,A
2900 7C                  LD    A,H
2901 B2                  OR    A,D
2902 67                  LD    H,A
2903 7D                  LD    A,L
2904 B3                  OR    A,E
2905 6F                  LD    L,A
2906 78                  LD    A,B
2907             L793:
2907 11 3C 13            LD    DE,4924
290A B7                  OR    A
290B ED 52               SBC   HL,DE
290D             L794:
290D C2 18 29            JP    NZ,L798
2910             L795:
2910 3E 41               LD    A,65
2912             L796:
2912 CD 7B 3C            CALL  writeLineA
2915             L797:
2915 C3 1E 29            JP    L801
2918             L798:
2918 21 E7 03            LD    HL,999
291B             L799:
291B CD 53 3C            CALL  writeLineHL
291E             L800:
291E                     ;;testBitwiseOperators.j(124)     if (0x1000 + 0x0234 ^ 0x0100 + 0x022C == 0x1118) println (66); else println (999);
291E             L801:
291E 21 00 10            LD    HL,4096
2921             L802:
2921 11 34 02            LD    DE,564
2924 19                  ADD   HL,DE
2925             L803:
2925 E5                  PUSH  HL
2926 21 00 01            LD    HL,256
2929             L804:
2929 11 2C 02            LD    DE,556
292C 19                  ADD   HL,DE
292D             L805:
292D D1                  POP   DE
292E F5                  PUSH  AF
292F 7C                  LD    A,H
2930 AA                  XOR   A,D
2931 67                  LD    H,A
2932 7D                  LD    A,L
2933 AB                  XOR   A,E
2934 6F                  LD    L,A
2935 F1                  POP   AF
2936             L806:
2936 11 18 11            LD    DE,4376
2939 B7                  OR    A
293A ED 52               SBC   HL,DE
293C             L807:
293C C2 47 29            JP    NZ,L811
293F             L808:
293F 3E 42               LD    A,66
2941             L809:
2941 CD 7B 3C            CALL  writeLineA
2944             L810:
2944 C3 4D 29            JP    L815
2947             L811:
2947 21 E7 03            LD    HL,999
294A             L812:
294A CD 53 3C            CALL  writeLineHL
294D             L813:
294D                     ;;testBitwiseOperators.j(125)     //acc byte/acc word
294D             L814:
294D                     ;;testBitwiseOperators.j(126)     if (0x10 + 0x0C & 0x1000 + 0x0234 == 0x0014) println (67); else println (999);
294D             L815:
294D 3E 10               LD    A,16
294F             L816:
294F C6 0C               ADD   A,12
2951             L817:
2951 21 00 10            LD    HL,4096
2954             L818:
2954 11 34 02            LD    DE,564
2957 19                  ADD   HL,DE
2958             L819:
2958 5F                  LD    E,A
2959 A5                  AND   A,L
295A 6F                  LD    L,A
295B 7B                  LD    A,E
295C 26 00               LD    H,0
295E             L820:
295E 3E 14               LD    A,20
2960             L821:
2960 5F                  LD    E,A
2961 16 00               LD    D,0
2963 B7                  OR    A
2964 ED 52               SBC   HL,DE
2966             L822:
2966 C2 71 29            JP    NZ,L826
2969             L823:
2969 3E 43               LD    A,67
296B             L824:
296B CD 7B 3C            CALL  writeLineA
296E             L825:
296E C3 77 29            JP    L829
2971             L826:
2971 21 E7 03            LD    HL,999
2974             L827:
2974 CD 53 3C            CALL  writeLineHL
2977             L828:
2977                     ;;testBitwiseOperators.j(127)     if (0x10 + 0x0C | 0x1000 + 0x0234 == 0x123C) println (68); else println (999);
2977             L829:
2977 3E 10               LD    A,16
2979             L830:
2979 C6 0C               ADD   A,12
297B             L831:
297B 21 00 10            LD    HL,4096
297E             L832:
297E 11 34 02            LD    DE,564
2981 19                  ADD   HL,DE
2982             L833:
2982 B5                  OR    A,L
2983 6F                  LD    L,A
2984             L834:
2984 11 3C 12            LD    DE,4668
2987 B7                  OR    A
2988 ED 52               SBC   HL,DE
298A             L835:
298A C2 95 29            JP    NZ,L839
298D             L836:
298D 3E 44               LD    A,68
298F             L837:
298F CD 7B 3C            CALL  writeLineA
2992             L838:
2992 C3 9B 29            JP    L842
2995             L839:
2995 21 E7 03            LD    HL,999
2998             L840:
2998 CD 53 3C            CALL  writeLineHL
299B             L841:
299B                     ;;testBitwiseOperators.j(128)     if (0x10 + 0x0C ^ 0x1000 + 0x0234 == 0x1228) println (69); else println (999);
299B             L842:
299B 3E 10               LD    A,16
299D             L843:
299D C6 0C               ADD   A,12
299F             L844:
299F 21 00 10            LD    HL,4096
29A2             L845:
29A2 11 34 02            LD    DE,564
29A5 19                  ADD   HL,DE
29A6             L846:
29A6 AD                  XOR   A,L
29A7 6F                  LD    L,A
29A8             L847:
29A8 11 28 12            LD    DE,4648
29AB B7                  OR    A
29AC ED 52               SBC   HL,DE
29AE             L848:
29AE C2 B9 29            JP    NZ,L852
29B1             L849:
29B1 3E 45               LD    A,69
29B3             L850:
29B3 CD 7B 3C            CALL  writeLineA
29B6             L851:
29B6 C3 BF 29            JP    L856
29B9             L852:
29B9 21 E7 03            LD    HL,999
29BC             L853:
29BC CD 53 3C            CALL  writeLineHL
29BF             L854:
29BF                     ;;testBitwiseOperators.j(129)     //acc word/acc byte
29BF             L855:
29BF                     ;;testBitwiseOperators.j(130)     if (0x1000 + 0x0234 & 0x10 + 0x0C == 0x0014) println (70); else println (999);
29BF             L856:
29BF 21 00 10            LD    HL,4096
29C2             L857:
29C2 11 34 02            LD    DE,564
29C5 19                  ADD   HL,DE
29C6             L858:
29C6 3E 10               LD    A,16
29C8             L859:
29C8 C6 0C               ADD   A,12
29CA             L860:
29CA 5F                  LD    E,A
29CB A5                  AND   A,L
29CC 6F                  LD    L,A
29CD 7B                  LD    A,E
29CE 26 00               LD    H,0
29D0             L861:
29D0 3E 14               LD    A,20
29D2             L862:
29D2 5F                  LD    E,A
29D3 16 00               LD    D,0
29D5 B7                  OR    A
29D6 ED 52               SBC   HL,DE
29D8             L863:
29D8 C2 E3 29            JP    NZ,L867
29DB             L864:
29DB 3E 46               LD    A,70
29DD             L865:
29DD CD 7B 3C            CALL  writeLineA
29E0             L866:
29E0 C3 E9 29            JP    L870
29E3             L867:
29E3 21 E7 03            LD    HL,999
29E6             L868:
29E6 CD 53 3C            CALL  writeLineHL
29E9             L869:
29E9                     ;;testBitwiseOperators.j(131)     if (0x1000 + 0x0234 | 0x10 + 0x0C == 0x123C) println (71); else println (999);
29E9             L870:
29E9 21 00 10            LD    HL,4096
29EC             L871:
29EC 11 34 02            LD    DE,564
29EF 19                  ADD   HL,DE
29F0             L872:
29F0 3E 10               LD    A,16
29F2             L873:
29F2 C6 0C               ADD   A,12
29F4             L874:
29F4 B5                  OR    A,L
29F5 6F                  LD    L,A
29F6             L875:
29F6 11 3C 12            LD    DE,4668
29F9 B7                  OR    A
29FA ED 52               SBC   HL,DE
29FC             L876:
29FC C2 07 2A            JP    NZ,L880
29FF             L877:
29FF 3E 47               LD    A,71
2A01             L878:
2A01 CD 7B 3C            CALL  writeLineA
2A04             L879:
2A04 C3 0D 2A            JP    L883
2A07             L880:
2A07 21 E7 03            LD    HL,999
2A0A             L881:
2A0A CD 53 3C            CALL  writeLineHL
2A0D             L882:
2A0D                     ;;testBitwiseOperators.j(132)     if (0x1000 + 0x0234 ^ 0x10 + 0x0C == 0x1228) println (72); else println (999);
2A0D             L883:
2A0D 21 00 10            LD    HL,4096
2A10             L884:
2A10 11 34 02            LD    DE,564
2A13 19                  ADD   HL,DE
2A14             L885:
2A14 3E 10               LD    A,16
2A16             L886:
2A16 C6 0C               ADD   A,12
2A18             L887:
2A18 AD                  XOR   A,L
2A19 6F                  LD    L,A
2A1A             L888:
2A1A 11 28 12            LD    DE,4648
2A1D B7                  OR    A
2A1E ED 52               SBC   HL,DE
2A20             L889:
2A20 C2 2B 2A            JP    NZ,L893
2A23             L890:
2A23 3E 48               LD    A,72
2A25             L891:
2A25 CD 7B 3C            CALL  writeLineA
2A28             L892:
2A28 C3 31 2A            JP    L900
2A2B             L893:
2A2B 21 E7 03            LD    HL,999
2A2E             L894:
2A2E CD 53 3C            CALL  writeLineHL
2A31             L895:
2A31                     ;;testBitwiseOperators.j(133)   
2A31             L896:
2A31                     ;;testBitwiseOperators.j(134)     //acc/var
2A31             L897:
2A31                     ;;testBitwiseOperators.j(135)     //*******
2A31             L898:
2A31                     ;;testBitwiseOperators.j(136)     //acc byte/var byte
2A31             L899:
2A31                     ;;testBitwiseOperators.j(137)     if (0x04 + 0x03 & b1 == 0x04) println (73); else println (999);
2A31             L900:
2A31 3E 04               LD    A,4
2A33             L901:
2A33 C6 03               ADD   A,3
2A35             L902:
2A35 47                  LD    B,A
2A36 3A 00 50            LD    A,(05000H)
2A39 A0                  AND   A,B
2A3A             L903:
2A3A D6 04               SUB   A,4
2A3C             L904:
2A3C C2 47 2A            JP    NZ,L908
2A3F             L905:
2A3F 3E 49               LD    A,73
2A41             L906:
2A41 CD 7B 3C            CALL  writeLineA
2A44             L907:
2A44 C3 4D 2A            JP    L911
2A47             L908:
2A47 21 E7 03            LD    HL,999
2A4A             L909:
2A4A CD 53 3C            CALL  writeLineHL
2A4D             L910:
2A4D                     ;;testBitwiseOperators.j(138)     if (0x04 + 0x03 | b1 == 0x1F) println (74); else println (999);
2A4D             L911:
2A4D 3E 04               LD    A,4
2A4F             L912:
2A4F C6 03               ADD   A,3
2A51             L913:
2A51 47                  LD    B,A
2A52 3A 00 50            LD    A,(05000H)
2A55 B0                  OR    A,B
2A56             L914:
2A56 D6 1F               SUB   A,31
2A58             L915:
2A58 C2 63 2A            JP    NZ,L919
2A5B             L916:
2A5B 3E 4A               LD    A,74
2A5D             L917:
2A5D CD 7B 3C            CALL  writeLineA
2A60             L918:
2A60 C3 69 2A            JP    L922
2A63             L919:
2A63 21 E7 03            LD    HL,999
2A66             L920:
2A66 CD 53 3C            CALL  writeLineHL
2A69             L921:
2A69                     ;;testBitwiseOperators.j(139)     if (0x04 + 0x03 ^ b1 == 0x1B) println (75); else println (999);
2A69             L922:
2A69 3E 04               LD    A,4
2A6B             L923:
2A6B C6 03               ADD   A,3
2A6D             L924:
2A6D 47                  LD    B,A
2A6E 3A 00 50            LD    A,(05000H)
2A71 A8                  XOR   A,B
2A72             L925:
2A72 D6 1B               SUB   A,27
2A74             L926:
2A74 C2 7F 2A            JP    NZ,L930
2A77             L927:
2A77 3E 4B               LD    A,75
2A79             L928:
2A79 CD 7B 3C            CALL  writeLineA
2A7C             L929:
2A7C C3 85 2A            JP    L934
2A7F             L930:
2A7F 21 E7 03            LD    HL,999
2A82             L931:
2A82 CD 53 3C            CALL  writeLineHL
2A85             L932:
2A85                     ;;testBitwiseOperators.j(140)     //acc word/var word
2A85             L933:
2A85                     ;;testBitwiseOperators.j(141)     if (0x1000 + 0x0234 & w1 == 0x0224) println (76); else println (999);
2A85             L934:
2A85 21 00 10            LD    HL,4096
2A88             L935:
2A88 11 34 02            LD    DE,564
2A8B 19                  ADD   HL,DE
2A8C             L936:
2A8C ED 5B 02 50         LD    DE,(05002H)
2A90 F5                  PUSH  AF
2A91 7C                  LD    A,H
2A92 A2                  AND   A,D
2A93 67                  LD    H,A
2A94 7D                  LD    A,L
2A95 A3                  AND   A,E
2A96 6F                  LD    L,A
2A97 F1                  POP   AF
2A98             L937:
2A98 11 24 02            LD    DE,548
2A9B B7                  OR    A
2A9C ED 52               SBC   HL,DE
2A9E             L938:
2A9E C2 A9 2A            JP    NZ,L942
2AA1             L939:
2AA1 3E 4C               LD    A,76
2AA3             L940:
2AA3 CD 7B 3C            CALL  writeLineA
2AA6             L941:
2AA6 C3 AF 2A            JP    L945
2AA9             L942:
2AA9 21 E7 03            LD    HL,999
2AAC             L943:
2AAC CD 53 3C            CALL  writeLineHL
2AAF             L944:
2AAF                     ;;testBitwiseOperators.j(142)     if (0x1000 + 0x0234 | w1 == 0x133C) println (77); else println (999);
2AAF             L945:
2AAF 21 00 10            LD    HL,4096
2AB2             L946:
2AB2 11 34 02            LD    DE,564
2AB5 19                  ADD   HL,DE
2AB6             L947:
2AB6 ED 5B 02 50         LD    DE,(05002H)
2ABA 47                  LD    B,A
2ABB 7C                  LD    A,H
2ABC B2                  OR    A,D
2ABD 67                  LD    H,A
2ABE 7D                  LD    A,L
2ABF B3                  OR    A,E
2AC0 6F                  LD    L,A
2AC1 78                  LD    A,B
2AC2             L948:
2AC2 11 3C 13            LD    DE,4924
2AC5 B7                  OR    A
2AC6 ED 52               SBC   HL,DE
2AC8             L949:
2AC8 C2 D3 2A            JP    NZ,L953
2ACB             L950:
2ACB 3E 4D               LD    A,77
2ACD             L951:
2ACD CD 7B 3C            CALL  writeLineA
2AD0             L952:
2AD0 C3 D9 2A            JP    L956
2AD3             L953:
2AD3 21 E7 03            LD    HL,999
2AD6             L954:
2AD6 CD 53 3C            CALL  writeLineHL
2AD9             L955:
2AD9                     ;;testBitwiseOperators.j(143)     if (0x1000 + 0x0234 ^ w1 == 0x1118) println (78); else println (999);
2AD9             L956:
2AD9 21 00 10            LD    HL,4096
2ADC             L957:
2ADC 11 34 02            LD    DE,564
2ADF 19                  ADD   HL,DE
2AE0             L958:
2AE0 ED 5B 02 50         LD    DE,(05002H)
2AE4 F5                  PUSH  AF
2AE5 7C                  LD    A,H
2AE6 AA                  XOR   A,D
2AE7 67                  LD    H,A
2AE8 7D                  LD    A,L
2AE9 AB                  XOR   A,E
2AEA 6F                  LD    L,A
2AEB F1                  POP   AF
2AEC             L959:
2AEC 11 18 11            LD    DE,4376
2AEF B7                  OR    A
2AF0 ED 52               SBC   HL,DE
2AF2             L960:
2AF2 C2 FD 2A            JP    NZ,L964
2AF5             L961:
2AF5 3E 4E               LD    A,78
2AF7             L962:
2AF7 CD 7B 3C            CALL  writeLineA
2AFA             L963:
2AFA C3 03 2B            JP    L968
2AFD             L964:
2AFD 21 E7 03            LD    HL,999
2B00             L965:
2B00 CD 53 3C            CALL  writeLineHL
2B03             L966:
2B03                     ;;testBitwiseOperators.j(144)     //acc byte/var word
2B03             L967:
2B03                     ;;testBitwiseOperators.j(145)     if (0x10 + 0x0C & w2 == 0x0014) println (79); else println (999);
2B03             L968:
2B03 3E 10               LD    A,16
2B05             L969:
2B05 C6 0C               ADD   A,12
2B07             L970:
2B07 6F                  LD    L,A
2B08 26 00               LD    H,0
2B0A             L971:
2B0A ED 5B 04 50         LD    DE,(05004H)
2B0E F5                  PUSH  AF
2B0F 7C                  LD    A,H
2B10 A2                  AND   A,D
2B11 67                  LD    H,A
2B12 7D                  LD    A,L
2B13 A3                  AND   A,E
2B14 6F                  LD    L,A
2B15 F1                  POP   AF
2B16             L972:
2B16 3E 14               LD    A,20
2B18             L973:
2B18 5F                  LD    E,A
2B19 16 00               LD    D,0
2B1B B7                  OR    A
2B1C ED 52               SBC   HL,DE
2B1E             L974:
2B1E C2 29 2B            JP    NZ,L978
2B21             L975:
2B21 3E 4F               LD    A,79
2B23             L976:
2B23 CD 7B 3C            CALL  writeLineA
2B26             L977:
2B26 C3 2F 2B            JP    L981
2B29             L978:
2B29 21 E7 03            LD    HL,999
2B2C             L979:
2B2C CD 53 3C            CALL  writeLineHL
2B2F             L980:
2B2F                     ;;testBitwiseOperators.j(146)     if (0x10 + 0x0C | w2 == 0x123C) println (80); else println (999);
2B2F             L981:
2B2F 3E 10               LD    A,16
2B31             L982:
2B31 C6 0C               ADD   A,12
2B33             L983:
2B33 6F                  LD    L,A
2B34 26 00               LD    H,0
2B36             L984:
2B36 ED 5B 04 50         LD    DE,(05004H)
2B3A 47                  LD    B,A
2B3B 7C                  LD    A,H
2B3C B2                  OR    A,D
2B3D 67                  LD    H,A
2B3E 7D                  LD    A,L
2B3F B3                  OR    A,E
2B40 6F                  LD    L,A
2B41 78                  LD    A,B
2B42             L985:
2B42 11 3C 12            LD    DE,4668
2B45 B7                  OR    A
2B46 ED 52               SBC   HL,DE
2B48             L986:
2B48 C2 53 2B            JP    NZ,L990
2B4B             L987:
2B4B 3E 50               LD    A,80
2B4D             L988:
2B4D CD 7B 3C            CALL  writeLineA
2B50             L989:
2B50 C3 59 2B            JP    L993
2B53             L990:
2B53 21 E7 03            LD    HL,999
2B56             L991:
2B56 CD 53 3C            CALL  writeLineHL
2B59             L992:
2B59                     ;;testBitwiseOperators.j(147)     if (0x10 + 0x0C ^ w2 == 0x1228) println (81); else println (999);
2B59             L993:
2B59 3E 10               LD    A,16
2B5B             L994:
2B5B C6 0C               ADD   A,12
2B5D             L995:
2B5D 6F                  LD    L,A
2B5E 26 00               LD    H,0
2B60             L996:
2B60 ED 5B 04 50         LD    DE,(05004H)
2B64 F5                  PUSH  AF
2B65 7C                  LD    A,H
2B66 AA                  XOR   A,D
2B67 67                  LD    H,A
2B68 7D                  LD    A,L
2B69 AB                  XOR   A,E
2B6A 6F                  LD    L,A
2B6B F1                  POP   AF
2B6C             L997:
2B6C 11 28 12            LD    DE,4648
2B6F B7                  OR    A
2B70 ED 52               SBC   HL,DE
2B72             L998:
2B72 C2 7D 2B            JP    NZ,L1002
2B75             L999:
2B75 3E 51               LD    A,81
2B77             L1000:
2B77 CD 7B 3C            CALL  writeLineA
2B7A             L1001:
2B7A C3 83 2B            JP    L1006
2B7D             L1002:
2B7D 21 E7 03            LD    HL,999
2B80             L1003:
2B80 CD 53 3C            CALL  writeLineHL
2B83             L1004:
2B83                     ;;testBitwiseOperators.j(148)     //acc word/var byte
2B83             L1005:
2B83                     ;;testBitwiseOperators.j(149)     if (0x1000 + 0x0234 & b1 == 0x0014) println (82); else println (999);
2B83             L1006:
2B83 21 00 10            LD    HL,4096
2B86             L1007:
2B86 11 34 02            LD    DE,564
2B89 19                  ADD   HL,DE
2B8A             L1008:
2B8A 5F                  LD    E,A
2B8B 3A 00 50            LD    A,(05000H)
2B8E A5                  AND   A,L
2B8F 6F                  LD    L,A
2B90 7B                  LD    A,E
2B91 26 00               LD    H,0
2B93             L1009:
2B93 3E 14               LD    A,20
2B95             L1010:
2B95 5F                  LD    E,A
2B96 16 00               LD    D,0
2B98 B7                  OR    A
2B99 ED 52               SBC   HL,DE
2B9B             L1011:
2B9B C2 A6 2B            JP    NZ,L1015
2B9E             L1012:
2B9E 3E 52               LD    A,82
2BA0             L1013:
2BA0 CD 7B 3C            CALL  writeLineA
2BA3             L1014:
2BA3 C3 AC 2B            JP    L1018
2BA6             L1015:
2BA6 21 E7 03            LD    HL,999
2BA9             L1016:
2BA9 CD 53 3C            CALL  writeLineHL
2BAC             L1017:
2BAC                     ;;testBitwiseOperators.j(150)     if (0x1000 + 0x0234 | b1 == 0x123C) println (83); else println (999);
2BAC             L1018:
2BAC 21 00 10            LD    HL,4096
2BAF             L1019:
2BAF 11 34 02            LD    DE,564
2BB2 19                  ADD   HL,DE
2BB3             L1020:
2BB3 47                  LD    B,A
2BB4 3A 00 50            LD    A,(05000H)
2BB7 B5                  OR    A,L
2BB8 6F                  LD    L,A
2BB9 78                  LD    A,B
2BBA             L1021:
2BBA 11 3C 12            LD    DE,4668
2BBD B7                  OR    A
2BBE ED 52               SBC   HL,DE
2BC0             L1022:
2BC0 C2 CB 2B            JP    NZ,L1026
2BC3             L1023:
2BC3 3E 53               LD    A,83
2BC5             L1024:
2BC5 CD 7B 3C            CALL  writeLineA
2BC8             L1025:
2BC8 C3 D1 2B            JP    L1029
2BCB             L1026:
2BCB 21 E7 03            LD    HL,999
2BCE             L1027:
2BCE CD 53 3C            CALL  writeLineHL
2BD1             L1028:
2BD1                     ;;testBitwiseOperators.j(151)     if (0x1000 + 0x0234 ^ b1 == 0x1228) println (84); else println (999);
2BD1             L1029:
2BD1 21 00 10            LD    HL,4096
2BD4             L1030:
2BD4 11 34 02            LD    DE,564
2BD7 19                  ADD   HL,DE
2BD8             L1031:
2BD8 47                  LD    B,A
2BD9 3A 00 50            LD    A,(05000H)
2BDC AD                  XOR   A,L
2BDD 6F                  LD    L,A
2BDE 78                  LD    A,B
2BDF             L1032:
2BDF 11 28 12            LD    DE,4648
2BE2 B7                  OR    A
2BE3 ED 52               SBC   HL,DE
2BE5             L1033:
2BE5 C2 F0 2B            JP    NZ,L1037
2BE8             L1034:
2BE8 3E 54               LD    A,84
2BEA             L1035:
2BEA CD 7B 3C            CALL  writeLineA
2BED             L1036:
2BED C3 F6 2B            JP    L1044
2BF0             L1037:
2BF0 21 E7 03            LD    HL,999
2BF3             L1038:
2BF3 CD 53 3C            CALL  writeLineHL
2BF6             L1039:
2BF6                     ;;testBitwiseOperators.j(152)   
2BF6             L1040:
2BF6                     ;;testBitwiseOperators.j(153)     //acc/final var
2BF6             L1041:
2BF6                     ;;testBitwiseOperators.j(154)     //*************
2BF6             L1042:
2BF6                     ;;testBitwiseOperators.j(155)     //acc byte/final var byte
2BF6             L1043:
2BF6                     ;;testBitwiseOperators.j(156)     if (0x04 + 0x03 & fb1 == 0x04) println (85); else println (999);
2BF6             L1044:
2BF6 3E 04               LD    A,4
2BF8             L1045:
2BF8 C6 03               ADD   A,3
2BFA             L1046:
2BFA E6 1C               AND   A,28
2BFC             L1047:
2BFC D6 04               SUB   A,4
2BFE             L1048:
2BFE C2 09 2C            JP    NZ,L1052
2C01             L1049:
2C01 3E 55               LD    A,85
2C03             L1050:
2C03 CD 7B 3C            CALL  writeLineA
2C06             L1051:
2C06 C3 0F 2C            JP    L1055
2C09             L1052:
2C09 21 E7 03            LD    HL,999
2C0C             L1053:
2C0C CD 53 3C            CALL  writeLineHL
2C0F             L1054:
2C0F                     ;;testBitwiseOperators.j(157)     if (0x04 + 0x03 | fb1 == 0x1F) println (86); else println (999);
2C0F             L1055:
2C0F 3E 04               LD    A,4
2C11             L1056:
2C11 C6 03               ADD   A,3
2C13             L1057:
2C13 F6 1C               OR    A,28
2C15             L1058:
2C15 D6 1F               SUB   A,31
2C17             L1059:
2C17 C2 22 2C            JP    NZ,L1063
2C1A             L1060:
2C1A 3E 56               LD    A,86
2C1C             L1061:
2C1C CD 7B 3C            CALL  writeLineA
2C1F             L1062:
2C1F C3 28 2C            JP    L1066
2C22             L1063:
2C22 21 E7 03            LD    HL,999
2C25             L1064:
2C25 CD 53 3C            CALL  writeLineHL
2C28             L1065:
2C28                     ;;testBitwiseOperators.j(158)     if (0x04 + 0x03 ^ fb1 == 0x1B) println (87); else println (999);
2C28             L1066:
2C28 3E 04               LD    A,4
2C2A             L1067:
2C2A C6 03               ADD   A,3
2C2C             L1068:
2C2C EE 1C               XOR   A,28
2C2E             L1069:
2C2E D6 1B               SUB   A,27
2C30             L1070:
2C30 C2 3B 2C            JP    NZ,L1074
2C33             L1071:
2C33 3E 57               LD    A,87
2C35             L1072:
2C35 CD 7B 3C            CALL  writeLineA
2C38             L1073:
2C38 C3 41 2C            JP    L1078
2C3B             L1074:
2C3B 21 E7 03            LD    HL,999
2C3E             L1075:
2C3E CD 53 3C            CALL  writeLineHL
2C41             L1076:
2C41                     ;;testBitwiseOperators.j(159)     //acc word/final var word
2C41             L1077:
2C41                     ;;testBitwiseOperators.j(160)     if (0x1000 + 0x0234 & fw1 == 0x0224) println (88); else println (999);
2C41             L1078:
2C41 21 00 10            LD    HL,4096
2C44             L1079:
2C44 11 34 02            LD    DE,564
2C47 19                  ADD   HL,DE
2C48             L1080:
2C48 11 2C 03            LD    DE,812
2C4B F5                  PUSH  AF
2C4C 7C                  LD    A,H
2C4D A2                  AND   A,D
2C4E 67                  LD    H,A
2C4F 7D                  LD    A,L
2C50 A3                  AND   A,E
2C51 6F                  LD    L,A
2C52 F1                  POP   AF
2C53             L1081:
2C53 11 24 02            LD    DE,548
2C56 B7                  OR    A
2C57 ED 52               SBC   HL,DE
2C59             L1082:
2C59 C2 64 2C            JP    NZ,L1086
2C5C             L1083:
2C5C 3E 58               LD    A,88
2C5E             L1084:
2C5E CD 7B 3C            CALL  writeLineA
2C61             L1085:
2C61 C3 6A 2C            JP    L1089
2C64             L1086:
2C64 21 E7 03            LD    HL,999
2C67             L1087:
2C67 CD 53 3C            CALL  writeLineHL
2C6A             L1088:
2C6A                     ;;testBitwiseOperators.j(161)     if (0x1000 + 0x0234 | fw1 == 0x133C) println (89); else println (999);
2C6A             L1089:
2C6A 21 00 10            LD    HL,4096
2C6D             L1090:
2C6D 11 34 02            LD    DE,564
2C70 19                  ADD   HL,DE
2C71             L1091:
2C71 11 2C 03            LD    DE,812
2C74 47                  LD    B,A
2C75 7C                  LD    A,H
2C76 B2                  OR    A,D
2C77 67                  LD    H,A
2C78 7D                  LD    A,L
2C79 B3                  OR    A,E
2C7A 6F                  LD    L,A
2C7B 78                  LD    A,B
2C7C             L1092:
2C7C 11 3C 13            LD    DE,4924
2C7F B7                  OR    A
2C80 ED 52               SBC   HL,DE
2C82             L1093:
2C82 C2 8D 2C            JP    NZ,L1097
2C85             L1094:
2C85 3E 59               LD    A,89
2C87             L1095:
2C87 CD 7B 3C            CALL  writeLineA
2C8A             L1096:
2C8A C3 93 2C            JP    L1100
2C8D             L1097:
2C8D 21 E7 03            LD    HL,999
2C90             L1098:
2C90 CD 53 3C            CALL  writeLineHL
2C93             L1099:
2C93                     ;;testBitwiseOperators.j(162)     if (0x1000 + 0x0234 ^ fw1 == 0x1118) println (90); else println (999);
2C93             L1100:
2C93 21 00 10            LD    HL,4096
2C96             L1101:
2C96 11 34 02            LD    DE,564
2C99 19                  ADD   HL,DE
2C9A             L1102:
2C9A 11 2C 03            LD    DE,812
2C9D F5                  PUSH  AF
2C9E 7C                  LD    A,H
2C9F AA                  XOR   A,D
2CA0 67                  LD    H,A
2CA1 7D                  LD    A,L
2CA2 AB                  XOR   A,E
2CA3 6F                  LD    L,A
2CA4 F1                  POP   AF
2CA5             L1103:
2CA5 11 18 11            LD    DE,4376
2CA8 B7                  OR    A
2CA9 ED 52               SBC   HL,DE
2CAB             L1104:
2CAB C2 B6 2C            JP    NZ,L1108
2CAE             L1105:
2CAE 3E 5A               LD    A,90
2CB0             L1106:
2CB0 CD 7B 3C            CALL  writeLineA
2CB3             L1107:
2CB3 C3 BC 2C            JP    L1112
2CB6             L1108:
2CB6 21 E7 03            LD    HL,999
2CB9             L1109:
2CB9 CD 53 3C            CALL  writeLineHL
2CBC             L1110:
2CBC                     ;;testBitwiseOperators.j(163)     //acc byte/final var word
2CBC             L1111:
2CBC                     ;;testBitwiseOperators.j(164)     if (0x10 + 0x0C & fw2 == 0x0014) println (91); else println (999);
2CBC             L1112:
2CBC 3E 10               LD    A,16
2CBE             L1113:
2CBE C6 0C               ADD   A,12
2CC0             L1114:
2CC0 6F                  LD    L,A
2CC1 26 00               LD    H,0
2CC3             L1115:
2CC3 11 34 12            LD    DE,4660
2CC6 F5                  PUSH  AF
2CC7 7C                  LD    A,H
2CC8 A2                  AND   A,D
2CC9 67                  LD    H,A
2CCA 7D                  LD    A,L
2CCB A3                  AND   A,E
2CCC 6F                  LD    L,A
2CCD F1                  POP   AF
2CCE             L1116:
2CCE 3E 14               LD    A,20
2CD0             L1117:
2CD0 5F                  LD    E,A
2CD1 16 00               LD    D,0
2CD3 B7                  OR    A
2CD4 ED 52               SBC   HL,DE
2CD6             L1118:
2CD6 C2 E1 2C            JP    NZ,L1122
2CD9             L1119:
2CD9 3E 5B               LD    A,91
2CDB             L1120:
2CDB CD 7B 3C            CALL  writeLineA
2CDE             L1121:
2CDE C3 E7 2C            JP    L1125
2CE1             L1122:
2CE1 21 E7 03            LD    HL,999
2CE4             L1123:
2CE4 CD 53 3C            CALL  writeLineHL
2CE7             L1124:
2CE7                     ;;testBitwiseOperators.j(165)     if (0x10 + 0x0C | fw2 == 0x123C) println (92); else println (999);
2CE7             L1125:
2CE7 3E 10               LD    A,16
2CE9             L1126:
2CE9 C6 0C               ADD   A,12
2CEB             L1127:
2CEB 6F                  LD    L,A
2CEC 26 00               LD    H,0
2CEE             L1128:
2CEE 11 34 12            LD    DE,4660
2CF1 47                  LD    B,A
2CF2 7C                  LD    A,H
2CF3 B2                  OR    A,D
2CF4 67                  LD    H,A
2CF5 7D                  LD    A,L
2CF6 B3                  OR    A,E
2CF7 6F                  LD    L,A
2CF8 78                  LD    A,B
2CF9             L1129:
2CF9 11 3C 12            LD    DE,4668
2CFC B7                  OR    A
2CFD ED 52               SBC   HL,DE
2CFF             L1130:
2CFF C2 0A 2D            JP    NZ,L1134
2D02             L1131:
2D02 3E 5C               LD    A,92
2D04             L1132:
2D04 CD 7B 3C            CALL  writeLineA
2D07             L1133:
2D07 C3 10 2D            JP    L1137
2D0A             L1134:
2D0A 21 E7 03            LD    HL,999
2D0D             L1135:
2D0D CD 53 3C            CALL  writeLineHL
2D10             L1136:
2D10                     ;;testBitwiseOperators.j(166)     if (0x10 + 0x0C ^ fw2 == 0x1228) println (93); else println (999);
2D10             L1137:
2D10 3E 10               LD    A,16
2D12             L1138:
2D12 C6 0C               ADD   A,12
2D14             L1139:
2D14 6F                  LD    L,A
2D15 26 00               LD    H,0
2D17             L1140:
2D17 11 34 12            LD    DE,4660
2D1A F5                  PUSH  AF
2D1B 7C                  LD    A,H
2D1C AA                  XOR   A,D
2D1D 67                  LD    H,A
2D1E 7D                  LD    A,L
2D1F AB                  XOR   A,E
2D20 6F                  LD    L,A
2D21 F1                  POP   AF
2D22             L1141:
2D22 11 28 12            LD    DE,4648
2D25 B7                  OR    A
2D26 ED 52               SBC   HL,DE
2D28             L1142:
2D28 C2 33 2D            JP    NZ,L1146
2D2B             L1143:
2D2B 3E 5D               LD    A,93
2D2D             L1144:
2D2D CD 7B 3C            CALL  writeLineA
2D30             L1145:
2D30 C3 39 2D            JP    L1150
2D33             L1146:
2D33 21 E7 03            LD    HL,999
2D36             L1147:
2D36 CD 53 3C            CALL  writeLineHL
2D39             L1148:
2D39                     ;;testBitwiseOperators.j(167)     //acc word/final var byte
2D39             L1149:
2D39                     ;;testBitwiseOperators.j(168)     if (0x1000 + 0x0234 & fb1 == 0x0014) println (94); else println (999);
2D39             L1150:
2D39 21 00 10            LD    HL,4096
2D3C             L1151:
2D3C 11 34 02            LD    DE,564
2D3F 19                  ADD   HL,DE
2D40             L1152:
2D40 5F                  LD    E,A
2D41 3E 1C               LD    A,28
2D43 A5                  AND   A,L
2D44 6F                  LD    L,A
2D45 7B                  LD    A,E
2D46 26 00               LD    H,0
2D48             L1153:
2D48 3E 14               LD    A,20
2D4A             L1154:
2D4A 5F                  LD    E,A
2D4B 16 00               LD    D,0
2D4D B7                  OR    A
2D4E ED 52               SBC   HL,DE
2D50             L1155:
2D50 C2 5B 2D            JP    NZ,L1159
2D53             L1156:
2D53 3E 5E               LD    A,94
2D55             L1157:
2D55 CD 7B 3C            CALL  writeLineA
2D58             L1158:
2D58 C3 61 2D            JP    L1162
2D5B             L1159:
2D5B 21 E7 03            LD    HL,999
2D5E             L1160:
2D5E CD 53 3C            CALL  writeLineHL
2D61             L1161:
2D61                     ;;testBitwiseOperators.j(169)     if (0x1000 + 0x0234 | fb1 == 0x123C) println (95); else println (999);
2D61             L1162:
2D61 21 00 10            LD    HL,4096
2D64             L1163:
2D64 11 34 02            LD    DE,564
2D67 19                  ADD   HL,DE
2D68             L1164:
2D68 11 1C 00            LD    DE,28
2D6B 47                  LD    B,A
2D6C 7C                  LD    A,H
2D6D B2                  OR    A,D
2D6E 67                  LD    H,A
2D6F 7D                  LD    A,L
2D70 B3                  OR    A,E
2D71 6F                  LD    L,A
2D72 78                  LD    A,B
2D73             L1165:
2D73 11 3C 12            LD    DE,4668
2D76 B7                  OR    A
2D77 ED 52               SBC   HL,DE
2D79             L1166:
2D79 C2 84 2D            JP    NZ,L1170
2D7C             L1167:
2D7C 3E 5F               LD    A,95
2D7E             L1168:
2D7E CD 7B 3C            CALL  writeLineA
2D81             L1169:
2D81 C3 8A 2D            JP    L1173
2D84             L1170:
2D84 21 E7 03            LD    HL,999
2D87             L1171:
2D87 CD 53 3C            CALL  writeLineHL
2D8A             L1172:
2D8A                     ;;testBitwiseOperators.j(170)     if (0x1000 + 0x0234 ^ fb1 == 0x1228) println (96); else println (999);
2D8A             L1173:
2D8A 21 00 10            LD    HL,4096
2D8D             L1174:
2D8D 11 34 02            LD    DE,564
2D90 19                  ADD   HL,DE
2D91             L1175:
2D91 11 1C 00            LD    DE,28
2D94 F5                  PUSH  AF
2D95 7C                  LD    A,H
2D96 AA                  XOR   A,D
2D97 67                  LD    H,A
2D98 7D                  LD    A,L
2D99 AB                  XOR   A,E
2D9A 6F                  LD    L,A
2D9B F1                  POP   AF
2D9C             L1176:
2D9C 11 28 12            LD    DE,4648
2D9F B7                  OR    A
2DA0 ED 52               SBC   HL,DE
2DA2             L1177:
2DA2 C2 AD 2D            JP    NZ,L1181
2DA5             L1178:
2DA5 3E 60               LD    A,96
2DA7             L1179:
2DA7 CD 7B 3C            CALL  writeLineA
2DAA             L1180:
2DAA C3 B3 2D            JP    L1188
2DAD             L1181:
2DAD 21 E7 03            LD    HL,999
2DB0             L1182:
2DB0 CD 53 3C            CALL  writeLineHL
2DB3             L1183:
2DB3                     ;;testBitwiseOperators.j(171)   
2DB3             L1184:
2DB3                     ;;testBitwiseOperators.j(172)     //var/constant
2DB3             L1185:
2DB3                     ;;testBitwiseOperators.j(173)     //************
2DB3             L1186:
2DB3                     ;;testBitwiseOperators.j(174)     //var byte/constant byte
2DB3             L1187:
2DB3                     ;;testBitwiseOperators.j(175)     if (b2 & 0x1C == 0x04) println (97); else println (999);
2DB3             L1188:
2DB3 3A 01 50            LD    A,(05001H)
2DB6             L1189:
2DB6 E6 1C               AND   A,28
2DB8             L1190:
2DB8 D6 04               SUB   A,4
2DBA             L1191:
2DBA C2 C5 2D            JP    NZ,L1195
2DBD             L1192:
2DBD 3E 61               LD    A,97
2DBF             L1193:
2DBF CD 7B 3C            CALL  writeLineA
2DC2             L1194:
2DC2 C3 CB 2D            JP    L1198
2DC5             L1195:
2DC5 21 E7 03            LD    HL,999
2DC8             L1196:
2DC8 CD 53 3C            CALL  writeLineHL
2DCB             L1197:
2DCB                     ;;testBitwiseOperators.j(176)     if (b2 | 0x1C == 0x1F) println (98); else println (999);
2DCB             L1198:
2DCB 3A 01 50            LD    A,(05001H)
2DCE             L1199:
2DCE F6 1C               OR    A,28
2DD0             L1200:
2DD0 D6 1F               SUB   A,31
2DD2             L1201:
2DD2 C2 DD 2D            JP    NZ,L1205
2DD5             L1202:
2DD5 3E 62               LD    A,98
2DD7             L1203:
2DD7 CD 7B 3C            CALL  writeLineA
2DDA             L1204:
2DDA C3 E3 2D            JP    L1208
2DDD             L1205:
2DDD 21 E7 03            LD    HL,999
2DE0             L1206:
2DE0 CD 53 3C            CALL  writeLineHL
2DE3             L1207:
2DE3                     ;;testBitwiseOperators.j(177)     if (b2 ^ 0x1C == 0x1B) println (99); else println (999);
2DE3             L1208:
2DE3 3A 01 50            LD    A,(05001H)
2DE6             L1209:
2DE6 EE 1C               XOR   A,28
2DE8             L1210:
2DE8 D6 1B               SUB   A,27
2DEA             L1211:
2DEA C2 F5 2D            JP    NZ,L1215
2DED             L1212:
2DED 3E 63               LD    A,99
2DEF             L1213:
2DEF CD 7B 3C            CALL  writeLineA
2DF2             L1214:
2DF2 C3 FB 2D            JP    L1219
2DF5             L1215:
2DF5 21 E7 03            LD    HL,999
2DF8             L1216:
2DF8 CD 53 3C            CALL  writeLineHL
2DFB             L1217:
2DFB                     ;;testBitwiseOperators.j(178)     //var word/constant word
2DFB             L1218:
2DFB                     ;;testBitwiseOperators.j(179)     if (w2 & 0x032C == 0x0224) println (100); else println (999);
2DFB             L1219:
2DFB 2A 04 50            LD    HL,(05004H)
2DFE             L1220:
2DFE 11 2C 03            LD    DE,812
2E01 F5                  PUSH  AF
2E02 7C                  LD    A,H
2E03 A2                  AND   A,D
2E04 67                  LD    H,A
2E05 7D                  LD    A,L
2E06 A3                  AND   A,E
2E07 6F                  LD    L,A
2E08 F1                  POP   AF
2E09             L1221:
2E09 11 24 02            LD    DE,548
2E0C B7                  OR    A
2E0D ED 52               SBC   HL,DE
2E0F             L1222:
2E0F C2 1A 2E            JP    NZ,L1226
2E12             L1223:
2E12 3E 64               LD    A,100
2E14             L1224:
2E14 CD 7B 3C            CALL  writeLineA
2E17             L1225:
2E17 C3 20 2E            JP    L1229
2E1A             L1226:
2E1A 21 E7 03            LD    HL,999
2E1D             L1227:
2E1D CD 53 3C            CALL  writeLineHL
2E20             L1228:
2E20                     ;;testBitwiseOperators.j(180)     if (w2 | 0x032C == 0x133C) println (101); else println (999);
2E20             L1229:
2E20 2A 04 50            LD    HL,(05004H)
2E23             L1230:
2E23 11 2C 03            LD    DE,812
2E26 47                  LD    B,A
2E27 7C                  LD    A,H
2E28 B2                  OR    A,D
2E29 67                  LD    H,A
2E2A 7D                  LD    A,L
2E2B B3                  OR    A,E
2E2C 6F                  LD    L,A
2E2D 78                  LD    A,B
2E2E             L1231:
2E2E 11 3C 13            LD    DE,4924
2E31 B7                  OR    A
2E32 ED 52               SBC   HL,DE
2E34             L1232:
2E34 C2 3F 2E            JP    NZ,L1236
2E37             L1233:
2E37 3E 65               LD    A,101
2E39             L1234:
2E39 CD 7B 3C            CALL  writeLineA
2E3C             L1235:
2E3C C3 45 2E            JP    L1239
2E3F             L1236:
2E3F 21 E7 03            LD    HL,999
2E42             L1237:
2E42 CD 53 3C            CALL  writeLineHL
2E45             L1238:
2E45                     ;;testBitwiseOperators.j(181)     if (w2 ^ 0x032C == 0x1118) println (102); else println (999);
2E45             L1239:
2E45 2A 04 50            LD    HL,(05004H)
2E48             L1240:
2E48 11 2C 03            LD    DE,812
2E4B F5                  PUSH  AF
2E4C 7C                  LD    A,H
2E4D AA                  XOR   A,D
2E4E 67                  LD    H,A
2E4F 7D                  LD    A,L
2E50 AB                  XOR   A,E
2E51 6F                  LD    L,A
2E52 F1                  POP   AF
2E53             L1241:
2E53 11 18 11            LD    DE,4376
2E56 B7                  OR    A
2E57 ED 52               SBC   HL,DE
2E59             L1242:
2E59 C2 64 2E            JP    NZ,L1246
2E5C             L1243:
2E5C 3E 66               LD    A,102
2E5E             L1244:
2E5E CD 7B 3C            CALL  writeLineA
2E61             L1245:
2E61 C3 6A 2E            JP    L1250
2E64             L1246:
2E64 21 E7 03            LD    HL,999
2E67             L1247:
2E67 CD 53 3C            CALL  writeLineHL
2E6A             L1248:
2E6A                     ;;testBitwiseOperators.j(182)     //var byte/constant word
2E6A             L1249:
2E6A                     ;;testBitwiseOperators.j(183)     if (b1 & 0x1234 == 0x0014) println (103); else println (999);
2E6A             L1250:
2E6A 3A 00 50            LD    A,(05000H)
2E6D             L1251:
2E6D 6F                  LD    L,A
2E6E 26 00               LD    H,0
2E70             L1252:
2E70 11 34 12            LD    DE,4660
2E73 F5                  PUSH  AF
2E74 7C                  LD    A,H
2E75 A2                  AND   A,D
2E76 67                  LD    H,A
2E77 7D                  LD    A,L
2E78 A3                  AND   A,E
2E79 6F                  LD    L,A
2E7A F1                  POP   AF
2E7B             L1253:
2E7B 3E 14               LD    A,20
2E7D             L1254:
2E7D 5F                  LD    E,A
2E7E 16 00               LD    D,0
2E80 B7                  OR    A
2E81 ED 52               SBC   HL,DE
2E83             L1255:
2E83 C2 8E 2E            JP    NZ,L1259
2E86             L1256:
2E86 3E 67               LD    A,103
2E88             L1257:
2E88 CD 7B 3C            CALL  writeLineA
2E8B             L1258:
2E8B C3 94 2E            JP    L1262
2E8E             L1259:
2E8E 21 E7 03            LD    HL,999
2E91             L1260:
2E91 CD 53 3C            CALL  writeLineHL
2E94             L1261:
2E94                     ;;testBitwiseOperators.j(184)     if (b1 | 0x1234 == 0x123C) println (104); else println (999);
2E94             L1262:
2E94 3A 00 50            LD    A,(05000H)
2E97             L1263:
2E97 6F                  LD    L,A
2E98 26 00               LD    H,0
2E9A             L1264:
2E9A 11 34 12            LD    DE,4660
2E9D 47                  LD    B,A
2E9E 7C                  LD    A,H
2E9F B2                  OR    A,D
2EA0 67                  LD    H,A
2EA1 7D                  LD    A,L
2EA2 B3                  OR    A,E
2EA3 6F                  LD    L,A
2EA4 78                  LD    A,B
2EA5             L1265:
2EA5 11 3C 12            LD    DE,4668
2EA8 B7                  OR    A
2EA9 ED 52               SBC   HL,DE
2EAB             L1266:
2EAB C2 B6 2E            JP    NZ,L1270
2EAE             L1267:
2EAE 3E 68               LD    A,104
2EB0             L1268:
2EB0 CD 7B 3C            CALL  writeLineA
2EB3             L1269:
2EB3 C3 BC 2E            JP    L1273
2EB6             L1270:
2EB6 21 E7 03            LD    HL,999
2EB9             L1271:
2EB9 CD 53 3C            CALL  writeLineHL
2EBC             L1272:
2EBC                     ;;testBitwiseOperators.j(185)     if (b1 ^ 0x1234 == 0x1228) println (105); else println (999);
2EBC             L1273:
2EBC 3A 00 50            LD    A,(05000H)
2EBF             L1274:
2EBF 6F                  LD    L,A
2EC0 26 00               LD    H,0
2EC2             L1275:
2EC2 11 34 12            LD    DE,4660
2EC5 F5                  PUSH  AF
2EC6 7C                  LD    A,H
2EC7 AA                  XOR   A,D
2EC8 67                  LD    H,A
2EC9 7D                  LD    A,L
2ECA AB                  XOR   A,E
2ECB 6F                  LD    L,A
2ECC F1                  POP   AF
2ECD             L1276:
2ECD 11 28 12            LD    DE,4648
2ED0 B7                  OR    A
2ED1 ED 52               SBC   HL,DE
2ED3             L1277:
2ED3 C2 DE 2E            JP    NZ,L1281
2ED6             L1278:
2ED6 3E 69               LD    A,105
2ED8             L1279:
2ED8 CD 7B 3C            CALL  writeLineA
2EDB             L1280:
2EDB C3 E4 2E            JP    L1285
2EDE             L1281:
2EDE 21 E7 03            LD    HL,999
2EE1             L1282:
2EE1 CD 53 3C            CALL  writeLineHL
2EE4             L1283:
2EE4                     ;;testBitwiseOperators.j(186)     //var word/constant byte
2EE4             L1284:
2EE4                     ;;testBitwiseOperators.j(187)     if (w2 & 0x1C == 0x0014) println (106); else println (999);
2EE4             L1285:
2EE4 2A 04 50            LD    HL,(05004H)
2EE7             L1286:
2EE7 5F                  LD    E,A
2EE8 3E 1C               LD    A,28
2EEA A5                  AND   A,L
2EEB 6F                  LD    L,A
2EEC 7B                  LD    A,E
2EED 26 00               LD    H,0
2EEF             L1287:
2EEF 3E 14               LD    A,20
2EF1             L1288:
2EF1 5F                  LD    E,A
2EF2 16 00               LD    D,0
2EF4 B7                  OR    A
2EF5 ED 52               SBC   HL,DE
2EF7             L1289:
2EF7 C2 02 2F            JP    NZ,L1293
2EFA             L1290:
2EFA 3E 6A               LD    A,106
2EFC             L1291:
2EFC CD 7B 3C            CALL  writeLineA
2EFF             L1292:
2EFF C3 08 2F            JP    L1296
2F02             L1293:
2F02 21 E7 03            LD    HL,999
2F05             L1294:
2F05 CD 53 3C            CALL  writeLineHL
2F08             L1295:
2F08                     ;;testBitwiseOperators.j(188)     if (w2 | 0x1C == 0x123C) println (107); else println (999);
2F08             L1296:
2F08 2A 04 50            LD    HL,(05004H)
2F0B             L1297:
2F0B 11 1C 00            LD    DE,28
2F0E 47                  LD    B,A
2F0F 7C                  LD    A,H
2F10 B2                  OR    A,D
2F11 67                  LD    H,A
2F12 7D                  LD    A,L
2F13 B3                  OR    A,E
2F14 6F                  LD    L,A
2F15 78                  LD    A,B
2F16             L1298:
2F16 11 3C 12            LD    DE,4668
2F19 B7                  OR    A
2F1A ED 52               SBC   HL,DE
2F1C             L1299:
2F1C C2 27 2F            JP    NZ,L1303
2F1F             L1300:
2F1F 3E 6B               LD    A,107
2F21             L1301:
2F21 CD 7B 3C            CALL  writeLineA
2F24             L1302:
2F24 C3 2D 2F            JP    L1306
2F27             L1303:
2F27 21 E7 03            LD    HL,999
2F2A             L1304:
2F2A CD 53 3C            CALL  writeLineHL
2F2D             L1305:
2F2D                     ;;testBitwiseOperators.j(189)     if (w2 ^ 0x1C == 0x1228) println (108); else println (999);
2F2D             L1306:
2F2D 2A 04 50            LD    HL,(05004H)
2F30             L1307:
2F30 11 1C 00            LD    DE,28
2F33 F5                  PUSH  AF
2F34 7C                  LD    A,H
2F35 AA                  XOR   A,D
2F36 67                  LD    H,A
2F37 7D                  LD    A,L
2F38 AB                  XOR   A,E
2F39 6F                  LD    L,A
2F3A F1                  POP   AF
2F3B             L1308:
2F3B 11 28 12            LD    DE,4648
2F3E B7                  OR    A
2F3F ED 52               SBC   HL,DE
2F41             L1309:
2F41 C2 4C 2F            JP    NZ,L1313
2F44             L1310:
2F44 3E 6C               LD    A,108
2F46             L1311:
2F46 CD 7B 3C            CALL  writeLineA
2F49             L1312:
2F49 C3 52 2F            JP    L1320
2F4C             L1313:
2F4C 21 E7 03            LD    HL,999
2F4F             L1314:
2F4F CD 53 3C            CALL  writeLineHL
2F52             L1315:
2F52                     ;;testBitwiseOperators.j(190)   
2F52             L1316:
2F52                     ;;testBitwiseOperators.j(191)     //var/acc
2F52             L1317:
2F52                     ;;testBitwiseOperators.j(192)     //*******
2F52             L1318:
2F52                     ;;testBitwiseOperators.j(193)     //var byte/acc byte
2F52             L1319:
2F52                     ;;testBitwiseOperators.j(194)     if (b2 & (0x10 + 0x0C) == 0x04) println (109); else println (999);
2F52             L1320:
2F52 3A 01 50            LD    A,(05001H)
2F55             L1321:
2F55 F5                  PUSH  AF
2F56 3E 10               LD    A,16
2F58             L1322:
2F58 C6 0C               ADD   A,12
2F5A             L1323:
2F5A C1                  POP   BC
2F5B A0                  AND   A,B
2F5C             L1324:
2F5C D6 04               SUB   A,4
2F5E             L1325:
2F5E C2 69 2F            JP    NZ,L1329
2F61             L1326:
2F61 3E 6D               LD    A,109
2F63             L1327:
2F63 CD 7B 3C            CALL  writeLineA
2F66             L1328:
2F66 C3 6F 2F            JP    L1332
2F69             L1329:
2F69 21 E7 03            LD    HL,999
2F6C             L1330:
2F6C CD 53 3C            CALL  writeLineHL
2F6F             L1331:
2F6F                     ;;testBitwiseOperators.j(195)     if (b2 | (0x10 + 0x0C) == 0x1F) println (110); else println (999);
2F6F             L1332:
2F6F 3A 01 50            LD    A,(05001H)
2F72             L1333:
2F72 F5                  PUSH  AF
2F73 3E 10               LD    A,16
2F75             L1334:
2F75 C6 0C               ADD   A,12
2F77             L1335:
2F77 C1                  POP   BC
2F78 B0                  OR    A,B
2F79             L1336:
2F79 D6 1F               SUB   A,31
2F7B             L1337:
2F7B C2 86 2F            JP    NZ,L1341
2F7E             L1338:
2F7E 3E 6E               LD    A,110
2F80             L1339:
2F80 CD 7B 3C            CALL  writeLineA
2F83             L1340:
2F83 C3 8C 2F            JP    L1344
2F86             L1341:
2F86 21 E7 03            LD    HL,999
2F89             L1342:
2F89 CD 53 3C            CALL  writeLineHL
2F8C             L1343:
2F8C                     ;;testBitwiseOperators.j(196)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (111); else println (999);
2F8C             L1344:
2F8C 3A 01 50            LD    A,(05001H)
2F8F             L1345:
2F8F F5                  PUSH  AF
2F90 3E 10               LD    A,16
2F92             L1346:
2F92 C6 0C               ADD   A,12
2F94             L1347:
2F94 C1                  POP   BC
2F95 A8                  XOR   A,B
2F96             L1348:
2F96 D6 1B               SUB   A,27
2F98             L1349:
2F98 C2 A3 2F            JP    NZ,L1353
2F9B             L1350:
2F9B 3E 6F               LD    A,111
2F9D             L1351:
2F9D CD 7B 3C            CALL  writeLineA
2FA0             L1352:
2FA0 C3 A9 2F            JP    L1357
2FA3             L1353:
2FA3 21 E7 03            LD    HL,999
2FA6             L1354:
2FA6 CD 53 3C            CALL  writeLineHL
2FA9             L1355:
2FA9                     ;;testBitwiseOperators.j(197)     //var word/acc word
2FA9             L1356:
2FA9                     ;;testBitwiseOperators.j(198)     if (w2 & 0x0100 + 0x022C == 0x0224) println (112); else println (999);
2FA9             L1357:
2FA9 2A 04 50            LD    HL,(05004H)
2FAC             L1358:
2FAC E5                  PUSH  HL
2FAD 21 00 01            LD    HL,256
2FB0             L1359:
2FB0 11 2C 02            LD    DE,556
2FB3 19                  ADD   HL,DE
2FB4             L1360:
2FB4 D1                  POP   DE
2FB5 F5                  PUSH  AF
2FB6 7C                  LD    A,H
2FB7 A2                  AND   A,D
2FB8 67                  LD    H,A
2FB9 7D                  LD    A,L
2FBA A3                  AND   A,E
2FBB 6F                  LD    L,A
2FBC F1                  POP   AF
2FBD             L1361:
2FBD 11 24 02            LD    DE,548
2FC0 B7                  OR    A
2FC1 ED 52               SBC   HL,DE
2FC3             L1362:
2FC3 C2 CE 2F            JP    NZ,L1366
2FC6             L1363:
2FC6 3E 70               LD    A,112
2FC8             L1364:
2FC8 CD 7B 3C            CALL  writeLineA
2FCB             L1365:
2FCB C3 D4 2F            JP    L1369
2FCE             L1366:
2FCE 21 E7 03            LD    HL,999
2FD1             L1367:
2FD1 CD 53 3C            CALL  writeLineHL
2FD4             L1368:
2FD4                     ;;testBitwiseOperators.j(199)     if (w2 | 0x0100 + 0x022C == 0x133C) println (113); else println (999);
2FD4             L1369:
2FD4 2A 04 50            LD    HL,(05004H)
2FD7             L1370:
2FD7 E5                  PUSH  HL
2FD8 21 00 01            LD    HL,256
2FDB             L1371:
2FDB 11 2C 02            LD    DE,556
2FDE 19                  ADD   HL,DE
2FDF             L1372:
2FDF D1                  POP   DE
2FE0 47                  LD    B,A
2FE1 7C                  LD    A,H
2FE2 B2                  OR    A,D
2FE3 67                  LD    H,A
2FE4 7D                  LD    A,L
2FE5 B3                  OR    A,E
2FE6 6F                  LD    L,A
2FE7 78                  LD    A,B
2FE8             L1373:
2FE8 11 3C 13            LD    DE,4924
2FEB B7                  OR    A
2FEC ED 52               SBC   HL,DE
2FEE             L1374:
2FEE C2 F9 2F            JP    NZ,L1378
2FF1             L1375:
2FF1 3E 71               LD    A,113
2FF3             L1376:
2FF3 CD 7B 3C            CALL  writeLineA
2FF6             L1377:
2FF6 C3 FF 2F            JP    L1381
2FF9             L1378:
2FF9 21 E7 03            LD    HL,999
2FFC             L1379:
2FFC CD 53 3C            CALL  writeLineHL
2FFF             L1380:
2FFF                     ;;testBitwiseOperators.j(200)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (114); else println (999);
2FFF             L1381:
2FFF 2A 04 50            LD    HL,(05004H)
3002             L1382:
3002 E5                  PUSH  HL
3003 21 00 01            LD    HL,256
3006             L1383:
3006 11 2C 02            LD    DE,556
3009 19                  ADD   HL,DE
300A             L1384:
300A D1                  POP   DE
300B F5                  PUSH  AF
300C 7C                  LD    A,H
300D AA                  XOR   A,D
300E 67                  LD    H,A
300F 7D                  LD    A,L
3010 AB                  XOR   A,E
3011 6F                  LD    L,A
3012 F1                  POP   AF
3013             L1385:
3013 11 18 11            LD    DE,4376
3016 B7                  OR    A
3017 ED 52               SBC   HL,DE
3019             L1386:
3019 C2 24 30            JP    NZ,L1390
301C             L1387:
301C 3E 72               LD    A,114
301E             L1388:
301E CD 7B 3C            CALL  writeLineA
3021             L1389:
3021 C3 2A 30            JP    L1394
3024             L1390:
3024 21 E7 03            LD    HL,999
3027             L1391:
3027 CD 53 3C            CALL  writeLineHL
302A             L1392:
302A                     ;;testBitwiseOperators.j(201)     //var byte/acc word
302A             L1393:
302A                     ;;testBitwiseOperators.j(202)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (115); else println (999);
302A             L1394:
302A 3A 00 50            LD    A,(05000H)
302D             L1395:
302D 21 00 10            LD    HL,4096
3030             L1396:
3030 11 34 02            LD    DE,564
3033 19                  ADD   HL,DE
3034             L1397:
3034 5F                  LD    E,A
3035 A5                  AND   A,L
3036 6F                  LD    L,A
3037 7B                  LD    A,E
3038 26 00               LD    H,0
303A             L1398:
303A 3E 14               LD    A,20
303C             L1399:
303C 5F                  LD    E,A
303D 16 00               LD    D,0
303F B7                  OR    A
3040 ED 52               SBC   HL,DE
3042             L1400:
3042 C2 4D 30            JP    NZ,L1404
3045             L1401:
3045 3E 73               LD    A,115
3047             L1402:
3047 CD 7B 3C            CALL  writeLineA
304A             L1403:
304A C3 53 30            JP    L1407
304D             L1404:
304D 21 E7 03            LD    HL,999
3050             L1405:
3050 CD 53 3C            CALL  writeLineHL
3053             L1406:
3053                     ;;testBitwiseOperators.j(203)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (116); else println (999);
3053             L1407:
3053 3A 00 50            LD    A,(05000H)
3056             L1408:
3056 21 00 10            LD    HL,4096
3059             L1409:
3059 11 34 02            LD    DE,564
305C 19                  ADD   HL,DE
305D             L1410:
305D B5                  OR    A,L
305E 6F                  LD    L,A
305F             L1411:
305F 11 3C 12            LD    DE,4668
3062 B7                  OR    A
3063 ED 52               SBC   HL,DE
3065             L1412:
3065 C2 70 30            JP    NZ,L1416
3068             L1413:
3068 3E 74               LD    A,116
306A             L1414:
306A CD 7B 3C            CALL  writeLineA
306D             L1415:
306D C3 76 30            JP    L1419
3070             L1416:
3070 21 E7 03            LD    HL,999
3073             L1417:
3073 CD 53 3C            CALL  writeLineHL
3076             L1418:
3076                     ;;testBitwiseOperators.j(204)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (117); else println (999);
3076             L1419:
3076 3A 00 50            LD    A,(05000H)
3079             L1420:
3079 21 00 10            LD    HL,4096
307C             L1421:
307C 11 34 02            LD    DE,564
307F 19                  ADD   HL,DE
3080             L1422:
3080 AD                  XOR   A,L
3081 6F                  LD    L,A
3082             L1423:
3082 11 28 12            LD    DE,4648
3085 B7                  OR    A
3086 ED 52               SBC   HL,DE
3088             L1424:
3088 C2 93 30            JP    NZ,L1428
308B             L1425:
308B 3E 75               LD    A,117
308D             L1426:
308D CD 7B 3C            CALL  writeLineA
3090             L1427:
3090 C3 99 30            JP    L1432
3093             L1428:
3093 21 E7 03            LD    HL,999
3096             L1429:
3096 CD 53 3C            CALL  writeLineHL
3099             L1430:
3099                     ;;testBitwiseOperators.j(205)     //var word/acc byte
3099             L1431:
3099                     ;;testBitwiseOperators.j(206)     if (w2 & 0x10 + 0x0C == 0x0014) println (118); else println (999);
3099             L1432:
3099 2A 04 50            LD    HL,(05004H)
309C             L1433:
309C 3E 10               LD    A,16
309E             L1434:
309E C6 0C               ADD   A,12
30A0             L1435:
30A0 5F                  LD    E,A
30A1 A5                  AND   A,L
30A2 6F                  LD    L,A
30A3 7B                  LD    A,E
30A4 26 00               LD    H,0
30A6             L1436:
30A6 3E 14               LD    A,20
30A8             L1437:
30A8 5F                  LD    E,A
30A9 16 00               LD    D,0
30AB B7                  OR    A
30AC ED 52               SBC   HL,DE
30AE             L1438:
30AE C2 B9 30            JP    NZ,L1442
30B1             L1439:
30B1 3E 76               LD    A,118
30B3             L1440:
30B3 CD 7B 3C            CALL  writeLineA
30B6             L1441:
30B6 C3 BF 30            JP    L1445
30B9             L1442:
30B9 21 E7 03            LD    HL,999
30BC             L1443:
30BC CD 53 3C            CALL  writeLineHL
30BF             L1444:
30BF                     ;;testBitwiseOperators.j(207)     if (w2 | 0x10 + 0x0C == 0x123C) println (119); else println (999);
30BF             L1445:
30BF 2A 04 50            LD    HL,(05004H)
30C2             L1446:
30C2 3E 10               LD    A,16
30C4             L1447:
30C4 C6 0C               ADD   A,12
30C6             L1448:
30C6 B5                  OR    A,L
30C7 6F                  LD    L,A
30C8             L1449:
30C8 11 3C 12            LD    DE,4668
30CB B7                  OR    A
30CC ED 52               SBC   HL,DE
30CE             L1450:
30CE C2 D9 30            JP    NZ,L1454
30D1             L1451:
30D1 3E 77               LD    A,119
30D3             L1452:
30D3 CD 7B 3C            CALL  writeLineA
30D6             L1453:
30D6 C3 DF 30            JP    L1457
30D9             L1454:
30D9 21 E7 03            LD    HL,999
30DC             L1455:
30DC CD 53 3C            CALL  writeLineHL
30DF             L1456:
30DF                     ;;testBitwiseOperators.j(208)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (120); else println (999);
30DF             L1457:
30DF 2A 04 50            LD    HL,(05004H)
30E2             L1458:
30E2 3E 10               LD    A,16
30E4             L1459:
30E4 C6 0C               ADD   A,12
30E6             L1460:
30E6 AD                  XOR   A,L
30E7 6F                  LD    L,A
30E8             L1461:
30E8 11 28 12            LD    DE,4648
30EB B7                  OR    A
30EC ED 52               SBC   HL,DE
30EE             L1462:
30EE C2 F9 30            JP    NZ,L1466
30F1             L1463:
30F1 3E 78               LD    A,120
30F3             L1464:
30F3 CD 7B 3C            CALL  writeLineA
30F6             L1465:
30F6 C3 FF 30            JP    L1473
30F9             L1466:
30F9 21 E7 03            LD    HL,999
30FC             L1467:
30FC CD 53 3C            CALL  writeLineHL
30FF             L1468:
30FF                     ;;testBitwiseOperators.j(209)   
30FF             L1469:
30FF                     ;;testBitwiseOperators.j(210)     //var/var
30FF             L1470:
30FF                     ;;testBitwiseOperators.j(211)     //*******
30FF             L1471:
30FF                     ;;testBitwiseOperators.j(212)     //var byte/var byte
30FF             L1472:
30FF                     ;;testBitwiseOperators.j(213)     if (b2 & b1 == 0x04) println (121); else println (999);
30FF             L1473:
30FF 3A 01 50            LD    A,(05001H)
3102             L1474:
3102 47                  LD    B,A
3103 3A 00 50            LD    A,(05000H)
3106 A0                  AND   A,B
3107             L1475:
3107 D6 04               SUB   A,4
3109             L1476:
3109 C2 14 31            JP    NZ,L1480
310C             L1477:
310C 3E 79               LD    A,121
310E             L1478:
310E CD 7B 3C            CALL  writeLineA
3111             L1479:
3111 C3 1A 31            JP    L1483
3114             L1480:
3114 21 E7 03            LD    HL,999
3117             L1481:
3117 CD 53 3C            CALL  writeLineHL
311A             L1482:
311A                     ;;testBitwiseOperators.j(214)     if (b2 | b1 == 0x1F) println (122); else println (999);
311A             L1483:
311A 3A 01 50            LD    A,(05001H)
311D             L1484:
311D 47                  LD    B,A
311E 3A 00 50            LD    A,(05000H)
3121 B0                  OR    A,B
3122             L1485:
3122 D6 1F               SUB   A,31
3124             L1486:
3124 C2 2F 31            JP    NZ,L1490
3127             L1487:
3127 3E 7A               LD    A,122
3129             L1488:
3129 CD 7B 3C            CALL  writeLineA
312C             L1489:
312C C3 35 31            JP    L1493
312F             L1490:
312F 21 E7 03            LD    HL,999
3132             L1491:
3132 CD 53 3C            CALL  writeLineHL
3135             L1492:
3135                     ;;testBitwiseOperators.j(215)     if (b2 ^ b1 == 0x1B) println (123); else println (999);
3135             L1493:
3135 3A 01 50            LD    A,(05001H)
3138             L1494:
3138 47                  LD    B,A
3139 3A 00 50            LD    A,(05000H)
313C A8                  XOR   A,B
313D             L1495:
313D D6 1B               SUB   A,27
313F             L1496:
313F C2 4A 31            JP    NZ,L1500
3142             L1497:
3142 3E 7B               LD    A,123
3144             L1498:
3144 CD 7B 3C            CALL  writeLineA
3147             L1499:
3147 C3 50 31            JP    L1504
314A             L1500:
314A 21 E7 03            LD    HL,999
314D             L1501:
314D CD 53 3C            CALL  writeLineHL
3150             L1502:
3150                     ;;testBitwiseOperators.j(216)     //var word/var word
3150             L1503:
3150                     ;;testBitwiseOperators.j(217)     if (w2 & w1 == 0x0224) println (124); else println (999);
3150             L1504:
3150 2A 04 50            LD    HL,(05004H)
3153             L1505:
3153 ED 5B 02 50         LD    DE,(05002H)
3157 F5                  PUSH  AF
3158 7C                  LD    A,H
3159 A2                  AND   A,D
315A 67                  LD    H,A
315B 7D                  LD    A,L
315C A3                  AND   A,E
315D 6F                  LD    L,A
315E F1                  POP   AF
315F             L1506:
315F 11 24 02            LD    DE,548
3162 B7                  OR    A
3163 ED 52               SBC   HL,DE
3165             L1507:
3165 C2 70 31            JP    NZ,L1511
3168             L1508:
3168 3E 7C               LD    A,124
316A             L1509:
316A CD 7B 3C            CALL  writeLineA
316D             L1510:
316D C3 76 31            JP    L1514
3170             L1511:
3170 21 E7 03            LD    HL,999
3173             L1512:
3173 CD 53 3C            CALL  writeLineHL
3176             L1513:
3176                     ;;testBitwiseOperators.j(218)     if (w2 | w1 == 0x133C) println (125); else println (999);
3176             L1514:
3176 2A 04 50            LD    HL,(05004H)
3179             L1515:
3179 ED 5B 02 50         LD    DE,(05002H)
317D 47                  LD    B,A
317E 7C                  LD    A,H
317F B2                  OR    A,D
3180 67                  LD    H,A
3181 7D                  LD    A,L
3182 B3                  OR    A,E
3183 6F                  LD    L,A
3184 78                  LD    A,B
3185             L1516:
3185 11 3C 13            LD    DE,4924
3188 B7                  OR    A
3189 ED 52               SBC   HL,DE
318B             L1517:
318B C2 96 31            JP    NZ,L1521
318E             L1518:
318E 3E 7D               LD    A,125
3190             L1519:
3190 CD 7B 3C            CALL  writeLineA
3193             L1520:
3193 C3 9C 31            JP    L1524
3196             L1521:
3196 21 E7 03            LD    HL,999
3199             L1522:
3199 CD 53 3C            CALL  writeLineHL
319C             L1523:
319C                     ;;testBitwiseOperators.j(219)     if (w2 ^ w1 == 0x1118) println (126); else println (999);
319C             L1524:
319C 2A 04 50            LD    HL,(05004H)
319F             L1525:
319F ED 5B 02 50         LD    DE,(05002H)
31A3 F5                  PUSH  AF
31A4 7C                  LD    A,H
31A5 AA                  XOR   A,D
31A6 67                  LD    H,A
31A7 7D                  LD    A,L
31A8 AB                  XOR   A,E
31A9 6F                  LD    L,A
31AA F1                  POP   AF
31AB             L1526:
31AB 11 18 11            LD    DE,4376
31AE B7                  OR    A
31AF ED 52               SBC   HL,DE
31B1             L1527:
31B1 C2 BC 31            JP    NZ,L1531
31B4             L1528:
31B4 3E 7E               LD    A,126
31B6             L1529:
31B6 CD 7B 3C            CALL  writeLineA
31B9             L1530:
31B9 C3 C2 31            JP    L1535
31BC             L1531:
31BC 21 E7 03            LD    HL,999
31BF             L1532:
31BF CD 53 3C            CALL  writeLineHL
31C2             L1533:
31C2                     ;;testBitwiseOperators.j(220)     //var byte/var word
31C2             L1534:
31C2                     ;;testBitwiseOperators.j(221)     if (b1 & w2 == 0x0014) println (127); else println (999);
31C2             L1535:
31C2 3A 00 50            LD    A,(05000H)
31C5             L1536:
31C5 6F                  LD    L,A
31C6 26 00               LD    H,0
31C8             L1537:
31C8 ED 5B 04 50         LD    DE,(05004H)
31CC F5                  PUSH  AF
31CD 7C                  LD    A,H
31CE A2                  AND   A,D
31CF 67                  LD    H,A
31D0 7D                  LD    A,L
31D1 A3                  AND   A,E
31D2 6F                  LD    L,A
31D3 F1                  POP   AF
31D4             L1538:
31D4 3E 14               LD    A,20
31D6             L1539:
31D6 5F                  LD    E,A
31D7 16 00               LD    D,0
31D9 B7                  OR    A
31DA ED 52               SBC   HL,DE
31DC             L1540:
31DC C2 E7 31            JP    NZ,L1544
31DF             L1541:
31DF 3E 7F               LD    A,127
31E1             L1542:
31E1 CD 7B 3C            CALL  writeLineA
31E4             L1543:
31E4 C3 ED 31            JP    L1547
31E7             L1544:
31E7 21 E7 03            LD    HL,999
31EA             L1545:
31EA CD 53 3C            CALL  writeLineHL
31ED             L1546:
31ED                     ;;testBitwiseOperators.j(222)     if (b1 | w2 == 0x123C) println (128); else println (999);
31ED             L1547:
31ED 3A 00 50            LD    A,(05000H)
31F0             L1548:
31F0 6F                  LD    L,A
31F1 26 00               LD    H,0
31F3             L1549:
31F3 ED 5B 04 50         LD    DE,(05004H)
31F7 47                  LD    B,A
31F8 7C                  LD    A,H
31F9 B2                  OR    A,D
31FA 67                  LD    H,A
31FB 7D                  LD    A,L
31FC B3                  OR    A,E
31FD 6F                  LD    L,A
31FE 78                  LD    A,B
31FF             L1550:
31FF 11 3C 12            LD    DE,4668
3202 B7                  OR    A
3203 ED 52               SBC   HL,DE
3205             L1551:
3205 C2 10 32            JP    NZ,L1555
3208             L1552:
3208 3E 80               LD    A,128
320A             L1553:
320A CD 7B 3C            CALL  writeLineA
320D             L1554:
320D C3 16 32            JP    L1558
3210             L1555:
3210 21 E7 03            LD    HL,999
3213             L1556:
3213 CD 53 3C            CALL  writeLineHL
3216             L1557:
3216                     ;;testBitwiseOperators.j(223)     if (b1 ^ w2 == 0x1228) println (129); else println (999);
3216             L1558:
3216 3A 00 50            LD    A,(05000H)
3219             L1559:
3219 6F                  LD    L,A
321A 26 00               LD    H,0
321C             L1560:
321C ED 5B 04 50         LD    DE,(05004H)
3220 F5                  PUSH  AF
3221 7C                  LD    A,H
3222 AA                  XOR   A,D
3223 67                  LD    H,A
3224 7D                  LD    A,L
3225 AB                  XOR   A,E
3226 6F                  LD    L,A
3227 F1                  POP   AF
3228             L1561:
3228 11 28 12            LD    DE,4648
322B B7                  OR    A
322C ED 52               SBC   HL,DE
322E             L1562:
322E C2 39 32            JP    NZ,L1566
3231             L1563:
3231 3E 81               LD    A,129
3233             L1564:
3233 CD 7B 3C            CALL  writeLineA
3236             L1565:
3236 C3 3F 32            JP    L1570
3239             L1566:
3239 21 E7 03            LD    HL,999
323C             L1567:
323C CD 53 3C            CALL  writeLineHL
323F             L1568:
323F                     ;;testBitwiseOperators.j(224)     //var word/var byte
323F             L1569:
323F                     ;;testBitwiseOperators.j(225)     if (w2 & b1 == 0x0014) println (130); else println (999);
323F             L1570:
323F 2A 04 50            LD    HL,(05004H)
3242             L1571:
3242 5F                  LD    E,A
3243 3A 00 50            LD    A,(05000H)
3246 A5                  AND   A,L
3247 6F                  LD    L,A
3248 7B                  LD    A,E
3249 26 00               LD    H,0
324B             L1572:
324B 3E 14               LD    A,20
324D             L1573:
324D 5F                  LD    E,A
324E 16 00               LD    D,0
3250 B7                  OR    A
3251 ED 52               SBC   HL,DE
3253             L1574:
3253 C2 5E 32            JP    NZ,L1578
3256             L1575:
3256 3E 82               LD    A,130
3258             L1576:
3258 CD 7B 3C            CALL  writeLineA
325B             L1577:
325B C3 64 32            JP    L1581
325E             L1578:
325E 21 E7 03            LD    HL,999
3261             L1579:
3261 CD 53 3C            CALL  writeLineHL
3264             L1580:
3264                     ;;testBitwiseOperators.j(226)     if (w2 | b1 == 0x123C) println (131); else println (999);
3264             L1581:
3264 2A 04 50            LD    HL,(05004H)
3267             L1582:
3267 47                  LD    B,A
3268 3A 00 50            LD    A,(05000H)
326B B5                  OR    A,L
326C 6F                  LD    L,A
326D 78                  LD    A,B
326E             L1583:
326E 11 3C 12            LD    DE,4668
3271 B7                  OR    A
3272 ED 52               SBC   HL,DE
3274             L1584:
3274 C2 7F 32            JP    NZ,L1588
3277             L1585:
3277 3E 83               LD    A,131
3279             L1586:
3279 CD 7B 3C            CALL  writeLineA
327C             L1587:
327C C3 85 32            JP    L1591
327F             L1588:
327F 21 E7 03            LD    HL,999
3282             L1589:
3282 CD 53 3C            CALL  writeLineHL
3285             L1590:
3285                     ;;testBitwiseOperators.j(227)     if (w2 ^ b1 == 0x1228) println (132); else println (999);
3285             L1591:
3285 2A 04 50            LD    HL,(05004H)
3288             L1592:
3288 47                  LD    B,A
3289 3A 00 50            LD    A,(05000H)
328C AD                  XOR   A,L
328D 6F                  LD    L,A
328E 78                  LD    A,B
328F             L1593:
328F 11 28 12            LD    DE,4648
3292 B7                  OR    A
3293 ED 52               SBC   HL,DE
3295             L1594:
3295 C2 A0 32            JP    NZ,L1598
3298             L1595:
3298 3E 84               LD    A,132
329A             L1596:
329A CD 7B 3C            CALL  writeLineA
329D             L1597:
329D C3 A6 32            JP    L1605
32A0             L1598:
32A0 21 E7 03            LD    HL,999
32A3             L1599:
32A3 CD 53 3C            CALL  writeLineHL
32A6             L1600:
32A6                     ;;testBitwiseOperators.j(228)   
32A6             L1601:
32A6                     ;;testBitwiseOperators.j(229)     //var/final var
32A6             L1602:
32A6                     ;;testBitwiseOperators.j(230)     //*************
32A6             L1603:
32A6                     ;;testBitwiseOperators.j(231)     //var byte/final var byte
32A6             L1604:
32A6                     ;;testBitwiseOperators.j(232)     if (b2 & fb1 == 0x04) println (133); else println (999);
32A6             L1605:
32A6 3A 01 50            LD    A,(05001H)
32A9             L1606:
32A9 E6 1C               AND   A,28
32AB             L1607:
32AB D6 04               SUB   A,4
32AD             L1608:
32AD C2 B8 32            JP    NZ,L1612
32B0             L1609:
32B0 3E 85               LD    A,133
32B2             L1610:
32B2 CD 7B 3C            CALL  writeLineA
32B5             L1611:
32B5 C3 BE 32            JP    L1615
32B8             L1612:
32B8 21 E7 03            LD    HL,999
32BB             L1613:
32BB CD 53 3C            CALL  writeLineHL
32BE             L1614:
32BE                     ;;testBitwiseOperators.j(233)     if (b2 | fb1 == 0x1F) println (134); else println (999);
32BE             L1615:
32BE 3A 01 50            LD    A,(05001H)
32C1             L1616:
32C1 F6 1C               OR    A,28
32C3             L1617:
32C3 D6 1F               SUB   A,31
32C5             L1618:
32C5 C2 D0 32            JP    NZ,L1622
32C8             L1619:
32C8 3E 86               LD    A,134
32CA             L1620:
32CA CD 7B 3C            CALL  writeLineA
32CD             L1621:
32CD C3 D6 32            JP    L1625
32D0             L1622:
32D0 21 E7 03            LD    HL,999
32D3             L1623:
32D3 CD 53 3C            CALL  writeLineHL
32D6             L1624:
32D6                     ;;testBitwiseOperators.j(234)     if (b2 ^ fb1 == 0x1B) println (135); else println (999);
32D6             L1625:
32D6 3A 01 50            LD    A,(05001H)
32D9             L1626:
32D9 EE 1C               XOR   A,28
32DB             L1627:
32DB D6 1B               SUB   A,27
32DD             L1628:
32DD C2 E8 32            JP    NZ,L1632
32E0             L1629:
32E0 3E 87               LD    A,135
32E2             L1630:
32E2 CD 7B 3C            CALL  writeLineA
32E5             L1631:
32E5 C3 EE 32            JP    L1636
32E8             L1632:
32E8 21 E7 03            LD    HL,999
32EB             L1633:
32EB CD 53 3C            CALL  writeLineHL
32EE             L1634:
32EE                     ;;testBitwiseOperators.j(235)     //var word/final var word
32EE             L1635:
32EE                     ;;testBitwiseOperators.j(236)     if (w2 & fw1 == 0x0224) println (136); else println (999);
32EE             L1636:
32EE 2A 04 50            LD    HL,(05004H)
32F1             L1637:
32F1 11 2C 03            LD    DE,812
32F4 F5                  PUSH  AF
32F5 7C                  LD    A,H
32F6 A2                  AND   A,D
32F7 67                  LD    H,A
32F8 7D                  LD    A,L
32F9 A3                  AND   A,E
32FA 6F                  LD    L,A
32FB F1                  POP   AF
32FC             L1638:
32FC 11 24 02            LD    DE,548
32FF B7                  OR    A
3300 ED 52               SBC   HL,DE
3302             L1639:
3302 C2 0D 33            JP    NZ,L1643
3305             L1640:
3305 3E 88               LD    A,136
3307             L1641:
3307 CD 7B 3C            CALL  writeLineA
330A             L1642:
330A C3 13 33            JP    L1646
330D             L1643:
330D 21 E7 03            LD    HL,999
3310             L1644:
3310 CD 53 3C            CALL  writeLineHL
3313             L1645:
3313                     ;;testBitwiseOperators.j(237)     if (w2 | fw1 == 0x133C) println (137); else println (999);
3313             L1646:
3313 2A 04 50            LD    HL,(05004H)
3316             L1647:
3316 11 2C 03            LD    DE,812
3319 47                  LD    B,A
331A 7C                  LD    A,H
331B B2                  OR    A,D
331C 67                  LD    H,A
331D 7D                  LD    A,L
331E B3                  OR    A,E
331F 6F                  LD    L,A
3320 78                  LD    A,B
3321             L1648:
3321 11 3C 13            LD    DE,4924
3324 B7                  OR    A
3325 ED 52               SBC   HL,DE
3327             L1649:
3327 C2 32 33            JP    NZ,L1653
332A             L1650:
332A 3E 89               LD    A,137
332C             L1651:
332C CD 7B 3C            CALL  writeLineA
332F             L1652:
332F C3 38 33            JP    L1656
3332             L1653:
3332 21 E7 03            LD    HL,999
3335             L1654:
3335 CD 53 3C            CALL  writeLineHL
3338             L1655:
3338                     ;;testBitwiseOperators.j(238)     if (w2 ^ fw1 == 0x1118) println (138); else println (999);
3338             L1656:
3338 2A 04 50            LD    HL,(05004H)
333B             L1657:
333B 11 2C 03            LD    DE,812
333E F5                  PUSH  AF
333F 7C                  LD    A,H
3340 AA                  XOR   A,D
3341 67                  LD    H,A
3342 7D                  LD    A,L
3343 AB                  XOR   A,E
3344 6F                  LD    L,A
3345 F1                  POP   AF
3346             L1658:
3346 11 18 11            LD    DE,4376
3349 B7                  OR    A
334A ED 52               SBC   HL,DE
334C             L1659:
334C C2 57 33            JP    NZ,L1663
334F             L1660:
334F 3E 8A               LD    A,138
3351             L1661:
3351 CD 7B 3C            CALL  writeLineA
3354             L1662:
3354 C3 5D 33            JP    L1667
3357             L1663:
3357 21 E7 03            LD    HL,999
335A             L1664:
335A CD 53 3C            CALL  writeLineHL
335D             L1665:
335D                     ;;testBitwiseOperators.j(239)     //var byte/final var word
335D             L1666:
335D                     ;;testBitwiseOperators.j(240)     if (b1 & fw2 == 0x0014) println (139); else println (999);
335D             L1667:
335D 3A 00 50            LD    A,(05000H)
3360             L1668:
3360 6F                  LD    L,A
3361 26 00               LD    H,0
3363             L1669:
3363 11 34 12            LD    DE,4660
3366 F5                  PUSH  AF
3367 7C                  LD    A,H
3368 A2                  AND   A,D
3369 67                  LD    H,A
336A 7D                  LD    A,L
336B A3                  AND   A,E
336C 6F                  LD    L,A
336D F1                  POP   AF
336E             L1670:
336E 3E 14               LD    A,20
3370             L1671:
3370 5F                  LD    E,A
3371 16 00               LD    D,0
3373 B7                  OR    A
3374 ED 52               SBC   HL,DE
3376             L1672:
3376 C2 81 33            JP    NZ,L1676
3379             L1673:
3379 3E 8B               LD    A,139
337B             L1674:
337B CD 7B 3C            CALL  writeLineA
337E             L1675:
337E C3 87 33            JP    L1679
3381             L1676:
3381 21 E7 03            LD    HL,999
3384             L1677:
3384 CD 53 3C            CALL  writeLineHL
3387             L1678:
3387                     ;;testBitwiseOperators.j(241)     if (b1 | fw2 == 0x123C) println (140); else println (999);
3387             L1679:
3387 3A 00 50            LD    A,(05000H)
338A             L1680:
338A 6F                  LD    L,A
338B 26 00               LD    H,0
338D             L1681:
338D 11 34 12            LD    DE,4660
3390 47                  LD    B,A
3391 7C                  LD    A,H
3392 B2                  OR    A,D
3393 67                  LD    H,A
3394 7D                  LD    A,L
3395 B3                  OR    A,E
3396 6F                  LD    L,A
3397 78                  LD    A,B
3398             L1682:
3398 11 3C 12            LD    DE,4668
339B B7                  OR    A
339C ED 52               SBC   HL,DE
339E             L1683:
339E C2 A9 33            JP    NZ,L1687
33A1             L1684:
33A1 3E 8C               LD    A,140
33A3             L1685:
33A3 CD 7B 3C            CALL  writeLineA
33A6             L1686:
33A6 C3 AF 33            JP    L1690
33A9             L1687:
33A9 21 E7 03            LD    HL,999
33AC             L1688:
33AC CD 53 3C            CALL  writeLineHL
33AF             L1689:
33AF                     ;;testBitwiseOperators.j(242)     if (b1 ^ fw2 == 0x1228) println (141); else println (999);
33AF             L1690:
33AF 3A 00 50            LD    A,(05000H)
33B2             L1691:
33B2 6F                  LD    L,A
33B3 26 00               LD    H,0
33B5             L1692:
33B5 11 34 12            LD    DE,4660
33B8 F5                  PUSH  AF
33B9 7C                  LD    A,H
33BA AA                  XOR   A,D
33BB 67                  LD    H,A
33BC 7D                  LD    A,L
33BD AB                  XOR   A,E
33BE 6F                  LD    L,A
33BF F1                  POP   AF
33C0             L1693:
33C0 11 28 12            LD    DE,4648
33C3 B7                  OR    A
33C4 ED 52               SBC   HL,DE
33C6             L1694:
33C6 C2 D1 33            JP    NZ,L1698
33C9             L1695:
33C9 3E 8D               LD    A,141
33CB             L1696:
33CB CD 7B 3C            CALL  writeLineA
33CE             L1697:
33CE C3 D7 33            JP    L1702
33D1             L1698:
33D1 21 E7 03            LD    HL,999
33D4             L1699:
33D4 CD 53 3C            CALL  writeLineHL
33D7             L1700:
33D7                     ;;testBitwiseOperators.j(243)     //var word/final var byte
33D7             L1701:
33D7                     ;;testBitwiseOperators.j(244)     if (w2 & fb1 == 0x0014) println (142); else println (999);
33D7             L1702:
33D7 2A 04 50            LD    HL,(05004H)
33DA             L1703:
33DA 5F                  LD    E,A
33DB 3E 1C               LD    A,28
33DD A5                  AND   A,L
33DE 6F                  LD    L,A
33DF 7B                  LD    A,E
33E0 26 00               LD    H,0
33E2             L1704:
33E2 3E 14               LD    A,20
33E4             L1705:
33E4 5F                  LD    E,A
33E5 16 00               LD    D,0
33E7 B7                  OR    A
33E8 ED 52               SBC   HL,DE
33EA             L1706:
33EA C2 F5 33            JP    NZ,L1710
33ED             L1707:
33ED 3E 8E               LD    A,142
33EF             L1708:
33EF CD 7B 3C            CALL  writeLineA
33F2             L1709:
33F2 C3 FB 33            JP    L1713
33F5             L1710:
33F5 21 E7 03            LD    HL,999
33F8             L1711:
33F8 CD 53 3C            CALL  writeLineHL
33FB             L1712:
33FB                     ;;testBitwiseOperators.j(245)     if (w2 | fb1 == 0x123C) println (143); else println (999);
33FB             L1713:
33FB 2A 04 50            LD    HL,(05004H)
33FE             L1714:
33FE 11 1C 00            LD    DE,28
3401 47                  LD    B,A
3402 7C                  LD    A,H
3403 B2                  OR    A,D
3404 67                  LD    H,A
3405 7D                  LD    A,L
3406 B3                  OR    A,E
3407 6F                  LD    L,A
3408 78                  LD    A,B
3409             L1715:
3409 11 3C 12            LD    DE,4668
340C B7                  OR    A
340D ED 52               SBC   HL,DE
340F             L1716:
340F C2 1A 34            JP    NZ,L1720
3412             L1717:
3412 3E 8F               LD    A,143
3414             L1718:
3414 CD 7B 3C            CALL  writeLineA
3417             L1719:
3417 C3 20 34            JP    L1723
341A             L1720:
341A 21 E7 03            LD    HL,999
341D             L1721:
341D CD 53 3C            CALL  writeLineHL
3420             L1722:
3420                     ;;testBitwiseOperators.j(246)     if (w2 ^ fb1 == 0x1228) println (144); else println (999);
3420             L1723:
3420 2A 04 50            LD    HL,(05004H)
3423             L1724:
3423 11 1C 00            LD    DE,28
3426 F5                  PUSH  AF
3427 7C                  LD    A,H
3428 AA                  XOR   A,D
3429 67                  LD    H,A
342A 7D                  LD    A,L
342B AB                  XOR   A,E
342C 6F                  LD    L,A
342D F1                  POP   AF
342E             L1725:
342E 11 28 12            LD    DE,4648
3431 B7                  OR    A
3432 ED 52               SBC   HL,DE
3434             L1726:
3434 C2 3F 34            JP    NZ,L1730
3437             L1727:
3437 3E 90               LD    A,144
3439             L1728:
3439 CD 7B 3C            CALL  writeLineA
343C             L1729:
343C C3 45 34            JP    L1737
343F             L1730:
343F 21 E7 03            LD    HL,999
3442             L1731:
3442 CD 53 3C            CALL  writeLineHL
3445             L1732:
3445                     ;;testBitwiseOperators.j(247)   
3445             L1733:
3445                     ;;testBitwiseOperators.j(248)     //final var/constant
3445             L1734:
3445                     ;;testBitwiseOperators.j(249)     //******************
3445             L1735:
3445                     ;;testBitwiseOperators.j(250)     //final var byte/constant byte
3445             L1736:
3445                     ;;testBitwiseOperators.j(251)     if (b2 & 0x1C == 0x04) println (145); else println (999);
3445             L1737:
3445 3A 01 50            LD    A,(05001H)
3448             L1738:
3448 E6 1C               AND   A,28
344A             L1739:
344A D6 04               SUB   A,4
344C             L1740:
344C C2 57 34            JP    NZ,L1744
344F             L1741:
344F 3E 91               LD    A,145
3451             L1742:
3451 CD 7B 3C            CALL  writeLineA
3454             L1743:
3454 C3 5D 34            JP    L1747
3457             L1744:
3457 21 E7 03            LD    HL,999
345A             L1745:
345A CD 53 3C            CALL  writeLineHL
345D             L1746:
345D                     ;;testBitwiseOperators.j(252)     if (b2 | 0x1C == 0x1F) println (146); else println (999);
345D             L1747:
345D 3A 01 50            LD    A,(05001H)
3460             L1748:
3460 F6 1C               OR    A,28
3462             L1749:
3462 D6 1F               SUB   A,31
3464             L1750:
3464 C2 6F 34            JP    NZ,L1754
3467             L1751:
3467 3E 92               LD    A,146
3469             L1752:
3469 CD 7B 3C            CALL  writeLineA
346C             L1753:
346C C3 75 34            JP    L1757
346F             L1754:
346F 21 E7 03            LD    HL,999
3472             L1755:
3472 CD 53 3C            CALL  writeLineHL
3475             L1756:
3475                     ;;testBitwiseOperators.j(253)     if (b2 ^ 0x1C == 0x1B) println (147); else println (999);
3475             L1757:
3475 3A 01 50            LD    A,(05001H)
3478             L1758:
3478 EE 1C               XOR   A,28
347A             L1759:
347A D6 1B               SUB   A,27
347C             L1760:
347C C2 87 34            JP    NZ,L1764
347F             L1761:
347F 3E 93               LD    A,147
3481             L1762:
3481 CD 7B 3C            CALL  writeLineA
3484             L1763:
3484 C3 8D 34            JP    L1768
3487             L1764:
3487 21 E7 03            LD    HL,999
348A             L1765:
348A CD 53 3C            CALL  writeLineHL
348D             L1766:
348D                     ;;testBitwiseOperators.j(254)     //final var word/constant word
348D             L1767:
348D                     ;;testBitwiseOperators.j(255)     if (w2 & 0x032C == 0x0224) println (148); else println (999);
348D             L1768:
348D 2A 04 50            LD    HL,(05004H)
3490             L1769:
3490 11 2C 03            LD    DE,812
3493 F5                  PUSH  AF
3494 7C                  LD    A,H
3495 A2                  AND   A,D
3496 67                  LD    H,A
3497 7D                  LD    A,L
3498 A3                  AND   A,E
3499 6F                  LD    L,A
349A F1                  POP   AF
349B             L1770:
349B 11 24 02            LD    DE,548
349E B7                  OR    A
349F ED 52               SBC   HL,DE
34A1             L1771:
34A1 C2 AC 34            JP    NZ,L1775
34A4             L1772:
34A4 3E 94               LD    A,148
34A6             L1773:
34A6 CD 7B 3C            CALL  writeLineA
34A9             L1774:
34A9 C3 B2 34            JP    L1778
34AC             L1775:
34AC 21 E7 03            LD    HL,999
34AF             L1776:
34AF CD 53 3C            CALL  writeLineHL
34B2             L1777:
34B2                     ;;testBitwiseOperators.j(256)     if (w2 | 0x032C == 0x133C) println (149); else println (999);
34B2             L1778:
34B2 2A 04 50            LD    HL,(05004H)
34B5             L1779:
34B5 11 2C 03            LD    DE,812
34B8 47                  LD    B,A
34B9 7C                  LD    A,H
34BA B2                  OR    A,D
34BB 67                  LD    H,A
34BC 7D                  LD    A,L
34BD B3                  OR    A,E
34BE 6F                  LD    L,A
34BF 78                  LD    A,B
34C0             L1780:
34C0 11 3C 13            LD    DE,4924
34C3 B7                  OR    A
34C4 ED 52               SBC   HL,DE
34C6             L1781:
34C6 C2 D1 34            JP    NZ,L1785
34C9             L1782:
34C9 3E 95               LD    A,149
34CB             L1783:
34CB CD 7B 3C            CALL  writeLineA
34CE             L1784:
34CE C3 D7 34            JP    L1788
34D1             L1785:
34D1 21 E7 03            LD    HL,999
34D4             L1786:
34D4 CD 53 3C            CALL  writeLineHL
34D7             L1787:
34D7                     ;;testBitwiseOperators.j(257)     if (w2 ^ 0x032C == 0x1118) println (150); else println (999);
34D7             L1788:
34D7 2A 04 50            LD    HL,(05004H)
34DA             L1789:
34DA 11 2C 03            LD    DE,812
34DD F5                  PUSH  AF
34DE 7C                  LD    A,H
34DF AA                  XOR   A,D
34E0 67                  LD    H,A
34E1 7D                  LD    A,L
34E2 AB                  XOR   A,E
34E3 6F                  LD    L,A
34E4 F1                  POP   AF
34E5             L1790:
34E5 11 18 11            LD    DE,4376
34E8 B7                  OR    A
34E9 ED 52               SBC   HL,DE
34EB             L1791:
34EB C2 F6 34            JP    NZ,L1795
34EE             L1792:
34EE 3E 96               LD    A,150
34F0             L1793:
34F0 CD 7B 3C            CALL  writeLineA
34F3             L1794:
34F3 C3 FC 34            JP    L1799
34F6             L1795:
34F6 21 E7 03            LD    HL,999
34F9             L1796:
34F9 CD 53 3C            CALL  writeLineHL
34FC             L1797:
34FC                     ;;testBitwiseOperators.j(258)     //final var byte/constant word
34FC             L1798:
34FC                     ;;testBitwiseOperators.j(259)     if (b1 & 0x1234 == 0x0014) println (151); else println (999);
34FC             L1799:
34FC 3A 00 50            LD    A,(05000H)
34FF             L1800:
34FF 6F                  LD    L,A
3500 26 00               LD    H,0
3502             L1801:
3502 11 34 12            LD    DE,4660
3505 F5                  PUSH  AF
3506 7C                  LD    A,H
3507 A2                  AND   A,D
3508 67                  LD    H,A
3509 7D                  LD    A,L
350A A3                  AND   A,E
350B 6F                  LD    L,A
350C F1                  POP   AF
350D             L1802:
350D 3E 14               LD    A,20
350F             L1803:
350F 5F                  LD    E,A
3510 16 00               LD    D,0
3512 B7                  OR    A
3513 ED 52               SBC   HL,DE
3515             L1804:
3515 C2 20 35            JP    NZ,L1808
3518             L1805:
3518 3E 97               LD    A,151
351A             L1806:
351A CD 7B 3C            CALL  writeLineA
351D             L1807:
351D C3 26 35            JP    L1811
3520             L1808:
3520 21 E7 03            LD    HL,999
3523             L1809:
3523 CD 53 3C            CALL  writeLineHL
3526             L1810:
3526                     ;;testBitwiseOperators.j(260)     if (b1 | 0x1234 == 0x123C) println (152); else println (999);
3526             L1811:
3526 3A 00 50            LD    A,(05000H)
3529             L1812:
3529 6F                  LD    L,A
352A 26 00               LD    H,0
352C             L1813:
352C 11 34 12            LD    DE,4660
352F 47                  LD    B,A
3530 7C                  LD    A,H
3531 B2                  OR    A,D
3532 67                  LD    H,A
3533 7D                  LD    A,L
3534 B3                  OR    A,E
3535 6F                  LD    L,A
3536 78                  LD    A,B
3537             L1814:
3537 11 3C 12            LD    DE,4668
353A B7                  OR    A
353B ED 52               SBC   HL,DE
353D             L1815:
353D C2 48 35            JP    NZ,L1819
3540             L1816:
3540 3E 98               LD    A,152
3542             L1817:
3542 CD 7B 3C            CALL  writeLineA
3545             L1818:
3545 C3 4E 35            JP    L1822
3548             L1819:
3548 21 E7 03            LD    HL,999
354B             L1820:
354B CD 53 3C            CALL  writeLineHL
354E             L1821:
354E                     ;;testBitwiseOperators.j(261)     if (b1 ^ 0x1234 == 0x1228) println (153); else println (999);
354E             L1822:
354E 3A 00 50            LD    A,(05000H)
3551             L1823:
3551 6F                  LD    L,A
3552 26 00               LD    H,0
3554             L1824:
3554 11 34 12            LD    DE,4660
3557 F5                  PUSH  AF
3558 7C                  LD    A,H
3559 AA                  XOR   A,D
355A 67                  LD    H,A
355B 7D                  LD    A,L
355C AB                  XOR   A,E
355D 6F                  LD    L,A
355E F1                  POP   AF
355F             L1825:
355F 11 28 12            LD    DE,4648
3562 B7                  OR    A
3563 ED 52               SBC   HL,DE
3565             L1826:
3565 C2 70 35            JP    NZ,L1830
3568             L1827:
3568 3E 99               LD    A,153
356A             L1828:
356A CD 7B 3C            CALL  writeLineA
356D             L1829:
356D C3 76 35            JP    L1834
3570             L1830:
3570 21 E7 03            LD    HL,999
3573             L1831:
3573 CD 53 3C            CALL  writeLineHL
3576             L1832:
3576                     ;;testBitwiseOperators.j(262)     //final var word/constant byte
3576             L1833:
3576                     ;;testBitwiseOperators.j(263)     if (w2 & 0x1C == 0x0014) println (154); else println (999);
3576             L1834:
3576 2A 04 50            LD    HL,(05004H)
3579             L1835:
3579 5F                  LD    E,A
357A 3E 1C               LD    A,28
357C A5                  AND   A,L
357D 6F                  LD    L,A
357E 7B                  LD    A,E
357F 26 00               LD    H,0
3581             L1836:
3581 3E 14               LD    A,20
3583             L1837:
3583 5F                  LD    E,A
3584 16 00               LD    D,0
3586 B7                  OR    A
3587 ED 52               SBC   HL,DE
3589             L1838:
3589 C2 94 35            JP    NZ,L1842
358C             L1839:
358C 3E 9A               LD    A,154
358E             L1840:
358E CD 7B 3C            CALL  writeLineA
3591             L1841:
3591 C3 9A 35            JP    L1845
3594             L1842:
3594 21 E7 03            LD    HL,999
3597             L1843:
3597 CD 53 3C            CALL  writeLineHL
359A             L1844:
359A                     ;;testBitwiseOperators.j(264)     if (w2 | 0x1C == 0x123C) println (155); else println (999);
359A             L1845:
359A 2A 04 50            LD    HL,(05004H)
359D             L1846:
359D 11 1C 00            LD    DE,28
35A0 47                  LD    B,A
35A1 7C                  LD    A,H
35A2 B2                  OR    A,D
35A3 67                  LD    H,A
35A4 7D                  LD    A,L
35A5 B3                  OR    A,E
35A6 6F                  LD    L,A
35A7 78                  LD    A,B
35A8             L1847:
35A8 11 3C 12            LD    DE,4668
35AB B7                  OR    A
35AC ED 52               SBC   HL,DE
35AE             L1848:
35AE C2 B9 35            JP    NZ,L1852
35B1             L1849:
35B1 3E 9B               LD    A,155
35B3             L1850:
35B3 CD 7B 3C            CALL  writeLineA
35B6             L1851:
35B6 C3 BF 35            JP    L1855
35B9             L1852:
35B9 21 E7 03            LD    HL,999
35BC             L1853:
35BC CD 53 3C            CALL  writeLineHL
35BF             L1854:
35BF                     ;;testBitwiseOperators.j(265)     if (w2 ^ 0x1C == 0x1228) println (156); else println (999);
35BF             L1855:
35BF 2A 04 50            LD    HL,(05004H)
35C2             L1856:
35C2 11 1C 00            LD    DE,28
35C5 F5                  PUSH  AF
35C6 7C                  LD    A,H
35C7 AA                  XOR   A,D
35C8 67                  LD    H,A
35C9 7D                  LD    A,L
35CA AB                  XOR   A,E
35CB 6F                  LD    L,A
35CC F1                  POP   AF
35CD             L1857:
35CD 11 28 12            LD    DE,4648
35D0 B7                  OR    A
35D1 ED 52               SBC   HL,DE
35D3             L1858:
35D3 C2 DE 35            JP    NZ,L1862
35D6             L1859:
35D6 3E 9C               LD    A,156
35D8             L1860:
35D8 CD 7B 3C            CALL  writeLineA
35DB             L1861:
35DB C3 E4 35            JP    L1869
35DE             L1862:
35DE 21 E7 03            LD    HL,999
35E1             L1863:
35E1 CD 53 3C            CALL  writeLineHL
35E4             L1864:
35E4                     ;;testBitwiseOperators.j(266)   
35E4             L1865:
35E4                     ;;testBitwiseOperators.j(267)     //final var/acc
35E4             L1866:
35E4                     ;;testBitwiseOperators.j(268)     //*************
35E4             L1867:
35E4                     ;;testBitwiseOperators.j(269)     //final var byte/acc byte
35E4             L1868:
35E4                     ;;testBitwiseOperators.j(270)     if (b2 & (0x10 + 0x0C) == 0x04) println (157); else println (999);
35E4             L1869:
35E4 3A 01 50            LD    A,(05001H)
35E7             L1870:
35E7 F5                  PUSH  AF
35E8 3E 10               LD    A,16
35EA             L1871:
35EA C6 0C               ADD   A,12
35EC             L1872:
35EC C1                  POP   BC
35ED A0                  AND   A,B
35EE             L1873:
35EE D6 04               SUB   A,4
35F0             L1874:
35F0 C2 FB 35            JP    NZ,L1878
35F3             L1875:
35F3 3E 9D               LD    A,157
35F5             L1876:
35F5 CD 7B 3C            CALL  writeLineA
35F8             L1877:
35F8 C3 01 36            JP    L1881
35FB             L1878:
35FB 21 E7 03            LD    HL,999
35FE             L1879:
35FE CD 53 3C            CALL  writeLineHL
3601             L1880:
3601                     ;;testBitwiseOperators.j(271)     if (b2 | (0x10 + 0x0C) == 0x1F) println (158); else println (999);
3601             L1881:
3601 3A 01 50            LD    A,(05001H)
3604             L1882:
3604 F5                  PUSH  AF
3605 3E 10               LD    A,16
3607             L1883:
3607 C6 0C               ADD   A,12
3609             L1884:
3609 C1                  POP   BC
360A B0                  OR    A,B
360B             L1885:
360B D6 1F               SUB   A,31
360D             L1886:
360D C2 18 36            JP    NZ,L1890
3610             L1887:
3610 3E 9E               LD    A,158
3612             L1888:
3612 CD 7B 3C            CALL  writeLineA
3615             L1889:
3615 C3 1E 36            JP    L1893
3618             L1890:
3618 21 E7 03            LD    HL,999
361B             L1891:
361B CD 53 3C            CALL  writeLineHL
361E             L1892:
361E                     ;;testBitwiseOperators.j(272)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (159); else println (999);
361E             L1893:
361E 3A 01 50            LD    A,(05001H)
3621             L1894:
3621 F5                  PUSH  AF
3622 3E 10               LD    A,16
3624             L1895:
3624 C6 0C               ADD   A,12
3626             L1896:
3626 C1                  POP   BC
3627 A8                  XOR   A,B
3628             L1897:
3628 D6 1B               SUB   A,27
362A             L1898:
362A C2 35 36            JP    NZ,L1902
362D             L1899:
362D 3E 9F               LD    A,159
362F             L1900:
362F CD 7B 3C            CALL  writeLineA
3632             L1901:
3632 C3 3B 36            JP    L1906
3635             L1902:
3635 21 E7 03            LD    HL,999
3638             L1903:
3638 CD 53 3C            CALL  writeLineHL
363B             L1904:
363B                     ;;testBitwiseOperators.j(273)     //final var word/acc word
363B             L1905:
363B                     ;;testBitwiseOperators.j(274)     if (w2 & 0x0100 + 0x022C == 0x0224) println (160); else println (999);
363B             L1906:
363B 2A 04 50            LD    HL,(05004H)
363E             L1907:
363E E5                  PUSH  HL
363F 21 00 01            LD    HL,256
3642             L1908:
3642 11 2C 02            LD    DE,556
3645 19                  ADD   HL,DE
3646             L1909:
3646 D1                  POP   DE
3647 F5                  PUSH  AF
3648 7C                  LD    A,H
3649 A2                  AND   A,D
364A 67                  LD    H,A
364B 7D                  LD    A,L
364C A3                  AND   A,E
364D 6F                  LD    L,A
364E F1                  POP   AF
364F             L1910:
364F 11 24 02            LD    DE,548
3652 B7                  OR    A
3653 ED 52               SBC   HL,DE
3655             L1911:
3655 C2 60 36            JP    NZ,L1915
3658             L1912:
3658 3E A0               LD    A,160
365A             L1913:
365A CD 7B 3C            CALL  writeLineA
365D             L1914:
365D C3 66 36            JP    L1918
3660             L1915:
3660 21 E7 03            LD    HL,999
3663             L1916:
3663 CD 53 3C            CALL  writeLineHL
3666             L1917:
3666                     ;;testBitwiseOperators.j(275)     if (w2 | 0x0100 + 0x022C == 0x133C) println (161); else println (999);
3666             L1918:
3666 2A 04 50            LD    HL,(05004H)
3669             L1919:
3669 E5                  PUSH  HL
366A 21 00 01            LD    HL,256
366D             L1920:
366D 11 2C 02            LD    DE,556
3670 19                  ADD   HL,DE
3671             L1921:
3671 D1                  POP   DE
3672 47                  LD    B,A
3673 7C                  LD    A,H
3674 B2                  OR    A,D
3675 67                  LD    H,A
3676 7D                  LD    A,L
3677 B3                  OR    A,E
3678 6F                  LD    L,A
3679 78                  LD    A,B
367A             L1922:
367A 11 3C 13            LD    DE,4924
367D B7                  OR    A
367E ED 52               SBC   HL,DE
3680             L1923:
3680 C2 8B 36            JP    NZ,L1927
3683             L1924:
3683 3E A1               LD    A,161
3685             L1925:
3685 CD 7B 3C            CALL  writeLineA
3688             L1926:
3688 C3 91 36            JP    L1930
368B             L1927:
368B 21 E7 03            LD    HL,999
368E             L1928:
368E CD 53 3C            CALL  writeLineHL
3691             L1929:
3691                     ;;testBitwiseOperators.j(276)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (162); else println (999);
3691             L1930:
3691 2A 04 50            LD    HL,(05004H)
3694             L1931:
3694 E5                  PUSH  HL
3695 21 00 01            LD    HL,256
3698             L1932:
3698 11 2C 02            LD    DE,556
369B 19                  ADD   HL,DE
369C             L1933:
369C D1                  POP   DE
369D F5                  PUSH  AF
369E 7C                  LD    A,H
369F AA                  XOR   A,D
36A0 67                  LD    H,A
36A1 7D                  LD    A,L
36A2 AB                  XOR   A,E
36A3 6F                  LD    L,A
36A4 F1                  POP   AF
36A5             L1934:
36A5 11 18 11            LD    DE,4376
36A8 B7                  OR    A
36A9 ED 52               SBC   HL,DE
36AB             L1935:
36AB C2 B6 36            JP    NZ,L1939
36AE             L1936:
36AE 3E A2               LD    A,162
36B0             L1937:
36B0 CD 7B 3C            CALL  writeLineA
36B3             L1938:
36B3 C3 BC 36            JP    L1943
36B6             L1939:
36B6 21 E7 03            LD    HL,999
36B9             L1940:
36B9 CD 53 3C            CALL  writeLineHL
36BC             L1941:
36BC                     ;;testBitwiseOperators.j(277)     //final var byte/acc word
36BC             L1942:
36BC                     ;;testBitwiseOperators.j(278)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (163); else println (999);
36BC             L1943:
36BC 3A 00 50            LD    A,(05000H)
36BF             L1944:
36BF 21 00 10            LD    HL,4096
36C2             L1945:
36C2 11 34 02            LD    DE,564
36C5 19                  ADD   HL,DE
36C6             L1946:
36C6 5F                  LD    E,A
36C7 A5                  AND   A,L
36C8 6F                  LD    L,A
36C9 7B                  LD    A,E
36CA 26 00               LD    H,0
36CC             L1947:
36CC 3E 14               LD    A,20
36CE             L1948:
36CE 5F                  LD    E,A
36CF 16 00               LD    D,0
36D1 B7                  OR    A
36D2 ED 52               SBC   HL,DE
36D4             L1949:
36D4 C2 DF 36            JP    NZ,L1953
36D7             L1950:
36D7 3E A3               LD    A,163
36D9             L1951:
36D9 CD 7B 3C            CALL  writeLineA
36DC             L1952:
36DC C3 E5 36            JP    L1956
36DF             L1953:
36DF 21 E7 03            LD    HL,999
36E2             L1954:
36E2 CD 53 3C            CALL  writeLineHL
36E5             L1955:
36E5                     ;;testBitwiseOperators.j(279)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (164); else println (999);
36E5             L1956:
36E5 3A 00 50            LD    A,(05000H)
36E8             L1957:
36E8 21 00 10            LD    HL,4096
36EB             L1958:
36EB 11 34 02            LD    DE,564
36EE 19                  ADD   HL,DE
36EF             L1959:
36EF B5                  OR    A,L
36F0 6F                  LD    L,A
36F1             L1960:
36F1 11 3C 12            LD    DE,4668
36F4 B7                  OR    A
36F5 ED 52               SBC   HL,DE
36F7             L1961:
36F7 C2 02 37            JP    NZ,L1965
36FA             L1962:
36FA 3E A4               LD    A,164
36FC             L1963:
36FC CD 7B 3C            CALL  writeLineA
36FF             L1964:
36FF C3 08 37            JP    L1968
3702             L1965:
3702 21 E7 03            LD    HL,999
3705             L1966:
3705 CD 53 3C            CALL  writeLineHL
3708             L1967:
3708                     ;;testBitwiseOperators.j(280)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (165); else println (999);
3708             L1968:
3708 3A 00 50            LD    A,(05000H)
370B             L1969:
370B 21 00 10            LD    HL,4096
370E             L1970:
370E 11 34 02            LD    DE,564
3711 19                  ADD   HL,DE
3712             L1971:
3712 AD                  XOR   A,L
3713 6F                  LD    L,A
3714             L1972:
3714 11 28 12            LD    DE,4648
3717 B7                  OR    A
3718 ED 52               SBC   HL,DE
371A             L1973:
371A C2 25 37            JP    NZ,L1977
371D             L1974:
371D 3E A5               LD    A,165
371F             L1975:
371F CD 7B 3C            CALL  writeLineA
3722             L1976:
3722 C3 2B 37            JP    L1981
3725             L1977:
3725 21 E7 03            LD    HL,999
3728             L1978:
3728 CD 53 3C            CALL  writeLineHL
372B             L1979:
372B                     ;;testBitwiseOperators.j(281)     //final var word/acc byte
372B             L1980:
372B                     ;;testBitwiseOperators.j(282)     if (w2 & 0x10 + 0x0C == 0x0014) println (166); else println (999);
372B             L1981:
372B 2A 04 50            LD    HL,(05004H)
372E             L1982:
372E 3E 10               LD    A,16
3730             L1983:
3730 C6 0C               ADD   A,12
3732             L1984:
3732 5F                  LD    E,A
3733 A5                  AND   A,L
3734 6F                  LD    L,A
3735 7B                  LD    A,E
3736 26 00               LD    H,0
3738             L1985:
3738 3E 14               LD    A,20
373A             L1986:
373A 5F                  LD    E,A
373B 16 00               LD    D,0
373D B7                  OR    A
373E ED 52               SBC   HL,DE
3740             L1987:
3740 C2 4B 37            JP    NZ,L1991
3743             L1988:
3743 3E A6               LD    A,166
3745             L1989:
3745 CD 7B 3C            CALL  writeLineA
3748             L1990:
3748 C3 51 37            JP    L1994
374B             L1991:
374B 21 E7 03            LD    HL,999
374E             L1992:
374E CD 53 3C            CALL  writeLineHL
3751             L1993:
3751                     ;;testBitwiseOperators.j(283)     if (w2 | 0x10 + 0x0C == 0x123C) println (167); else println (999);
3751             L1994:
3751 2A 04 50            LD    HL,(05004H)
3754             L1995:
3754 3E 10               LD    A,16
3756             L1996:
3756 C6 0C               ADD   A,12
3758             L1997:
3758 B5                  OR    A,L
3759 6F                  LD    L,A
375A             L1998:
375A 11 3C 12            LD    DE,4668
375D B7                  OR    A
375E ED 52               SBC   HL,DE
3760             L1999:
3760 C2 6B 37            JP    NZ,L2003
3763             L2000:
3763 3E A7               LD    A,167
3765             L2001:
3765 CD 7B 3C            CALL  writeLineA
3768             L2002:
3768 C3 71 37            JP    L2006
376B             L2003:
376B 21 E7 03            LD    HL,999
376E             L2004:
376E CD 53 3C            CALL  writeLineHL
3771             L2005:
3771                     ;;testBitwiseOperators.j(284)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (168); else println (999);
3771             L2006:
3771 2A 04 50            LD    HL,(05004H)
3774             L2007:
3774 3E 10               LD    A,16
3776             L2008:
3776 C6 0C               ADD   A,12
3778             L2009:
3778 AD                  XOR   A,L
3779 6F                  LD    L,A
377A             L2010:
377A 11 28 12            LD    DE,4648
377D B7                  OR    A
377E ED 52               SBC   HL,DE
3780             L2011:
3780 C2 8B 37            JP    NZ,L2015
3783             L2012:
3783 3E A8               LD    A,168
3785             L2013:
3785 CD 7B 3C            CALL  writeLineA
3788             L2014:
3788 C3 91 37            JP    L2022
378B             L2015:
378B 21 E7 03            LD    HL,999
378E             L2016:
378E CD 53 3C            CALL  writeLineHL
3791             L2017:
3791                     ;;testBitwiseOperators.j(285)   
3791             L2018:
3791                     ;;testBitwiseOperators.j(286)     //final var/var
3791             L2019:
3791                     ;;testBitwiseOperators.j(287)     //*************
3791             L2020:
3791                     ;;testBitwiseOperators.j(288)     //final var byte/var byte
3791             L2021:
3791                     ;;testBitwiseOperators.j(289)     if (b2 & b1 == 0x04) println (169); else println (999);
3791             L2022:
3791 3A 01 50            LD    A,(05001H)
3794             L2023:
3794 47                  LD    B,A
3795 3A 00 50            LD    A,(05000H)
3798 A0                  AND   A,B
3799             L2024:
3799 D6 04               SUB   A,4
379B             L2025:
379B C2 A6 37            JP    NZ,L2029
379E             L2026:
379E 3E A9               LD    A,169
37A0             L2027:
37A0 CD 7B 3C            CALL  writeLineA
37A3             L2028:
37A3 C3 AC 37            JP    L2032
37A6             L2029:
37A6 21 E7 03            LD    HL,999
37A9             L2030:
37A9 CD 53 3C            CALL  writeLineHL
37AC             L2031:
37AC                     ;;testBitwiseOperators.j(290)     if (b2 | b1 == 0x1F) println (170); else println (999);
37AC             L2032:
37AC 3A 01 50            LD    A,(05001H)
37AF             L2033:
37AF 47                  LD    B,A
37B0 3A 00 50            LD    A,(05000H)
37B3 B0                  OR    A,B
37B4             L2034:
37B4 D6 1F               SUB   A,31
37B6             L2035:
37B6 C2 C1 37            JP    NZ,L2039
37B9             L2036:
37B9 3E AA               LD    A,170
37BB             L2037:
37BB CD 7B 3C            CALL  writeLineA
37BE             L2038:
37BE C3 C7 37            JP    L2042
37C1             L2039:
37C1 21 E7 03            LD    HL,999
37C4             L2040:
37C4 CD 53 3C            CALL  writeLineHL
37C7             L2041:
37C7                     ;;testBitwiseOperators.j(291)     if (b2 ^ b1 == 0x1B) println (171); else println (999);
37C7             L2042:
37C7 3A 01 50            LD    A,(05001H)
37CA             L2043:
37CA 47                  LD    B,A
37CB 3A 00 50            LD    A,(05000H)
37CE A8                  XOR   A,B
37CF             L2044:
37CF D6 1B               SUB   A,27
37D1             L2045:
37D1 C2 DC 37            JP    NZ,L2049
37D4             L2046:
37D4 3E AB               LD    A,171
37D6             L2047:
37D6 CD 7B 3C            CALL  writeLineA
37D9             L2048:
37D9 C3 E2 37            JP    L2053
37DC             L2049:
37DC 21 E7 03            LD    HL,999
37DF             L2050:
37DF CD 53 3C            CALL  writeLineHL
37E2             L2051:
37E2                     ;;testBitwiseOperators.j(292)     //final var word/var word
37E2             L2052:
37E2                     ;;testBitwiseOperators.j(293)     if (w2 & w1 == 0x0224) println (172); else println (999);
37E2             L2053:
37E2 2A 04 50            LD    HL,(05004H)
37E5             L2054:
37E5 ED 5B 02 50         LD    DE,(05002H)
37E9 F5                  PUSH  AF
37EA 7C                  LD    A,H
37EB A2                  AND   A,D
37EC 67                  LD    H,A
37ED 7D                  LD    A,L
37EE A3                  AND   A,E
37EF 6F                  LD    L,A
37F0 F1                  POP   AF
37F1             L2055:
37F1 11 24 02            LD    DE,548
37F4 B7                  OR    A
37F5 ED 52               SBC   HL,DE
37F7             L2056:
37F7 C2 02 38            JP    NZ,L2060
37FA             L2057:
37FA 3E AC               LD    A,172
37FC             L2058:
37FC CD 7B 3C            CALL  writeLineA
37FF             L2059:
37FF C3 08 38            JP    L2063
3802             L2060:
3802 21 E7 03            LD    HL,999
3805             L2061:
3805 CD 53 3C            CALL  writeLineHL
3808             L2062:
3808                     ;;testBitwiseOperators.j(294)     if (w2 | w1 == 0x133C) println (173); else println (999);
3808             L2063:
3808 2A 04 50            LD    HL,(05004H)
380B             L2064:
380B ED 5B 02 50         LD    DE,(05002H)
380F 47                  LD    B,A
3810 7C                  LD    A,H
3811 B2                  OR    A,D
3812 67                  LD    H,A
3813 7D                  LD    A,L
3814 B3                  OR    A,E
3815 6F                  LD    L,A
3816 78                  LD    A,B
3817             L2065:
3817 11 3C 13            LD    DE,4924
381A B7                  OR    A
381B ED 52               SBC   HL,DE
381D             L2066:
381D C2 28 38            JP    NZ,L2070
3820             L2067:
3820 3E AD               LD    A,173
3822             L2068:
3822 CD 7B 3C            CALL  writeLineA
3825             L2069:
3825 C3 2E 38            JP    L2073
3828             L2070:
3828 21 E7 03            LD    HL,999
382B             L2071:
382B CD 53 3C            CALL  writeLineHL
382E             L2072:
382E                     ;;testBitwiseOperators.j(295)     if (w2 ^ w1 == 0x1118) println (174); else println (999);
382E             L2073:
382E 2A 04 50            LD    HL,(05004H)
3831             L2074:
3831 ED 5B 02 50         LD    DE,(05002H)
3835 F5                  PUSH  AF
3836 7C                  LD    A,H
3837 AA                  XOR   A,D
3838 67                  LD    H,A
3839 7D                  LD    A,L
383A AB                  XOR   A,E
383B 6F                  LD    L,A
383C F1                  POP   AF
383D             L2075:
383D 11 18 11            LD    DE,4376
3840 B7                  OR    A
3841 ED 52               SBC   HL,DE
3843             L2076:
3843 C2 4E 38            JP    NZ,L2080
3846             L2077:
3846 3E AE               LD    A,174
3848             L2078:
3848 CD 7B 3C            CALL  writeLineA
384B             L2079:
384B C3 54 38            JP    L2084
384E             L2080:
384E 21 E7 03            LD    HL,999
3851             L2081:
3851 CD 53 3C            CALL  writeLineHL
3854             L2082:
3854                     ;;testBitwiseOperators.j(296)     //final var byte/var word
3854             L2083:
3854                     ;;testBitwiseOperators.j(297)     if (b1 & w2 == 0x0014) println (175); else println (999);
3854             L2084:
3854 3A 00 50            LD    A,(05000H)
3857             L2085:
3857 6F                  LD    L,A
3858 26 00               LD    H,0
385A             L2086:
385A ED 5B 04 50         LD    DE,(05004H)
385E F5                  PUSH  AF
385F 7C                  LD    A,H
3860 A2                  AND   A,D
3861 67                  LD    H,A
3862 7D                  LD    A,L
3863 A3                  AND   A,E
3864 6F                  LD    L,A
3865 F1                  POP   AF
3866             L2087:
3866 3E 14               LD    A,20
3868             L2088:
3868 5F                  LD    E,A
3869 16 00               LD    D,0
386B B7                  OR    A
386C ED 52               SBC   HL,DE
386E             L2089:
386E C2 79 38            JP    NZ,L2093
3871             L2090:
3871 3E AF               LD    A,175
3873             L2091:
3873 CD 7B 3C            CALL  writeLineA
3876             L2092:
3876 C3 7F 38            JP    L2096
3879             L2093:
3879 21 E7 03            LD    HL,999
387C             L2094:
387C CD 53 3C            CALL  writeLineHL
387F             L2095:
387F                     ;;testBitwiseOperators.j(298)     if (b1 | w2 == 0x123C) println (176); else println (999);
387F             L2096:
387F 3A 00 50            LD    A,(05000H)
3882             L2097:
3882 6F                  LD    L,A
3883 26 00               LD    H,0
3885             L2098:
3885 ED 5B 04 50         LD    DE,(05004H)
3889 47                  LD    B,A
388A 7C                  LD    A,H
388B B2                  OR    A,D
388C 67                  LD    H,A
388D 7D                  LD    A,L
388E B3                  OR    A,E
388F 6F                  LD    L,A
3890 78                  LD    A,B
3891             L2099:
3891 11 3C 12            LD    DE,4668
3894 B7                  OR    A
3895 ED 52               SBC   HL,DE
3897             L2100:
3897 C2 A2 38            JP    NZ,L2104
389A             L2101:
389A 3E B0               LD    A,176
389C             L2102:
389C CD 7B 3C            CALL  writeLineA
389F             L2103:
389F C3 A8 38            JP    L2107
38A2             L2104:
38A2 21 E7 03            LD    HL,999
38A5             L2105:
38A5 CD 53 3C            CALL  writeLineHL
38A8             L2106:
38A8                     ;;testBitwiseOperators.j(299)     if (b1 ^ w2 == 0x1228) println (177); else println (999);
38A8             L2107:
38A8 3A 00 50            LD    A,(05000H)
38AB             L2108:
38AB 6F                  LD    L,A
38AC 26 00               LD    H,0
38AE             L2109:
38AE ED 5B 04 50         LD    DE,(05004H)
38B2 F5                  PUSH  AF
38B3 7C                  LD    A,H
38B4 AA                  XOR   A,D
38B5 67                  LD    H,A
38B6 7D                  LD    A,L
38B7 AB                  XOR   A,E
38B8 6F                  LD    L,A
38B9 F1                  POP   AF
38BA             L2110:
38BA 11 28 12            LD    DE,4648
38BD B7                  OR    A
38BE ED 52               SBC   HL,DE
38C0             L2111:
38C0 C2 CB 38            JP    NZ,L2115
38C3             L2112:
38C3 3E B1               LD    A,177
38C5             L2113:
38C5 CD 7B 3C            CALL  writeLineA
38C8             L2114:
38C8 C3 D1 38            JP    L2119
38CB             L2115:
38CB 21 E7 03            LD    HL,999
38CE             L2116:
38CE CD 53 3C            CALL  writeLineHL
38D1             L2117:
38D1                     ;;testBitwiseOperators.j(300)     //final var word/var byte
38D1             L2118:
38D1                     ;;testBitwiseOperators.j(301)     if (w2 & b1 == 0x0014) println (178); else println (999);
38D1             L2119:
38D1 2A 04 50            LD    HL,(05004H)
38D4             L2120:
38D4 5F                  LD    E,A
38D5 3A 00 50            LD    A,(05000H)
38D8 A5                  AND   A,L
38D9 6F                  LD    L,A
38DA 7B                  LD    A,E
38DB 26 00               LD    H,0
38DD             L2121:
38DD 3E 14               LD    A,20
38DF             L2122:
38DF 5F                  LD    E,A
38E0 16 00               LD    D,0
38E2 B7                  OR    A
38E3 ED 52               SBC   HL,DE
38E5             L2123:
38E5 C2 F0 38            JP    NZ,L2127
38E8             L2124:
38E8 3E B2               LD    A,178
38EA             L2125:
38EA CD 7B 3C            CALL  writeLineA
38ED             L2126:
38ED C3 F6 38            JP    L2130
38F0             L2127:
38F0 21 E7 03            LD    HL,999
38F3             L2128:
38F3 CD 53 3C            CALL  writeLineHL
38F6             L2129:
38F6                     ;;testBitwiseOperators.j(302)     if (w2 | b1 == 0x123C) println (179); else println (999);
38F6             L2130:
38F6 2A 04 50            LD    HL,(05004H)
38F9             L2131:
38F9 47                  LD    B,A
38FA 3A 00 50            LD    A,(05000H)
38FD B5                  OR    A,L
38FE 6F                  LD    L,A
38FF 78                  LD    A,B
3900             L2132:
3900 11 3C 12            LD    DE,4668
3903 B7                  OR    A
3904 ED 52               SBC   HL,DE
3906             L2133:
3906 C2 11 39            JP    NZ,L2137
3909             L2134:
3909 3E B3               LD    A,179
390B             L2135:
390B CD 7B 3C            CALL  writeLineA
390E             L2136:
390E C3 17 39            JP    L2140
3911             L2137:
3911 21 E7 03            LD    HL,999
3914             L2138:
3914 CD 53 3C            CALL  writeLineHL
3917             L2139:
3917                     ;;testBitwiseOperators.j(303)     if (w2 ^ b1 == 0x1228) println (180); else println (999);
3917             L2140:
3917 2A 04 50            LD    HL,(05004H)
391A             L2141:
391A 47                  LD    B,A
391B 3A 00 50            LD    A,(05000H)
391E AD                  XOR   A,L
391F 6F                  LD    L,A
3920 78                  LD    A,B
3921             L2142:
3921 11 28 12            LD    DE,4648
3924 B7                  OR    A
3925 ED 52               SBC   HL,DE
3927             L2143:
3927 C2 32 39            JP    NZ,L2147
392A             L2144:
392A 3E B4               LD    A,180
392C             L2145:
392C CD 7B 3C            CALL  writeLineA
392F             L2146:
392F C3 38 39            JP    L2154
3932             L2147:
3932 21 E7 03            LD    HL,999
3935             L2148:
3935 CD 53 3C            CALL  writeLineHL
3938             L2149:
3938                     ;;testBitwiseOperators.j(304)   
3938             L2150:
3938                     ;;testBitwiseOperators.j(305)     //final var/final var
3938             L2151:
3938                     ;;testBitwiseOperators.j(306)     //*******************
3938             L2152:
3938                     ;;testBitwiseOperators.j(307)     //final var byte/final var byte
3938             L2153:
3938                     ;;testBitwiseOperators.j(308)     if (fb2 & fb1 == 0x04) println (181); else println (999);
3938             L2154:
3938 3E 07               LD    A,7
393A             L2155:
393A E6 1C               AND   A,28
393C             L2156:
393C D6 04               SUB   A,4
393E             L2157:
393E C2 49 39            JP    NZ,L2161
3941             L2158:
3941 3E B5               LD    A,181
3943             L2159:
3943 CD 7B 3C            CALL  writeLineA
3946             L2160:
3946 C3 4F 39            JP    L2164
3949             L2161:
3949 21 E7 03            LD    HL,999
394C             L2162:
394C CD 53 3C            CALL  writeLineHL
394F             L2163:
394F                     ;;testBitwiseOperators.j(309)     if (fb2 | fb1 == 0x1F) println (182); else println (999);
394F             L2164:
394F 3E 07               LD    A,7
3951             L2165:
3951 F6 1C               OR    A,28
3953             L2166:
3953 D6 1F               SUB   A,31
3955             L2167:
3955 C2 60 39            JP    NZ,L2171
3958             L2168:
3958 3E B6               LD    A,182
395A             L2169:
395A CD 7B 3C            CALL  writeLineA
395D             L2170:
395D C3 66 39            JP    L2174
3960             L2171:
3960 21 E7 03            LD    HL,999
3963             L2172:
3963 CD 53 3C            CALL  writeLineHL
3966             L2173:
3966                     ;;testBitwiseOperators.j(310)     if (fb2 ^ fb1 == 0x1B) println (183); else println (999);
3966             L2174:
3966 3E 07               LD    A,7
3968             L2175:
3968 EE 1C               XOR   A,28
396A             L2176:
396A D6 1B               SUB   A,27
396C             L2177:
396C C2 77 39            JP    NZ,L2181
396F             L2178:
396F 3E B7               LD    A,183
3971             L2179:
3971 CD 7B 3C            CALL  writeLineA
3974             L2180:
3974 C3 7D 39            JP    L2185
3977             L2181:
3977 21 E7 03            LD    HL,999
397A             L2182:
397A CD 53 3C            CALL  writeLineHL
397D             L2183:
397D                     ;;testBitwiseOperators.j(311)     //final var word/final var word
397D             L2184:
397D                     ;;testBitwiseOperators.j(312)     if (fw2 & fw1 == 0x0224) println (184); else println (999);
397D             L2185:
397D 21 34 12            LD    HL,4660
3980             L2186:
3980 11 2C 03            LD    DE,812
3983 F5                  PUSH  AF
3984 7C                  LD    A,H
3985 A2                  AND   A,D
3986 67                  LD    H,A
3987 7D                  LD    A,L
3988 A3                  AND   A,E
3989 6F                  LD    L,A
398A F1                  POP   AF
398B             L2187:
398B 11 24 02            LD    DE,548
398E B7                  OR    A
398F ED 52               SBC   HL,DE
3991             L2188:
3991 C2 9C 39            JP    NZ,L2192
3994             L2189:
3994 3E B8               LD    A,184
3996             L2190:
3996 CD 7B 3C            CALL  writeLineA
3999             L2191:
3999 C3 A2 39            JP    L2195
399C             L2192:
399C 21 E7 03            LD    HL,999
399F             L2193:
399F CD 53 3C            CALL  writeLineHL
39A2             L2194:
39A2                     ;;testBitwiseOperators.j(313)     if (fw2 | fw1 == 0x133C) println (185); else println (999);
39A2             L2195:
39A2 21 34 12            LD    HL,4660
39A5             L2196:
39A5 11 2C 03            LD    DE,812
39A8 47                  LD    B,A
39A9 7C                  LD    A,H
39AA B2                  OR    A,D
39AB 67                  LD    H,A
39AC 7D                  LD    A,L
39AD B3                  OR    A,E
39AE 6F                  LD    L,A
39AF 78                  LD    A,B
39B0             L2197:
39B0 11 3C 13            LD    DE,4924
39B3 B7                  OR    A
39B4 ED 52               SBC   HL,DE
39B6             L2198:
39B6 C2 C1 39            JP    NZ,L2202
39B9             L2199:
39B9 3E B9               LD    A,185
39BB             L2200:
39BB CD 7B 3C            CALL  writeLineA
39BE             L2201:
39BE C3 C7 39            JP    L2205
39C1             L2202:
39C1 21 E7 03            LD    HL,999
39C4             L2203:
39C4 CD 53 3C            CALL  writeLineHL
39C7             L2204:
39C7                     ;;testBitwiseOperators.j(314)     if (fw2 ^ fw1 == 0x1118) println (186); else println (999);
39C7             L2205:
39C7 21 34 12            LD    HL,4660
39CA             L2206:
39CA 11 2C 03            LD    DE,812
39CD F5                  PUSH  AF
39CE 7C                  LD    A,H
39CF AA                  XOR   A,D
39D0 67                  LD    H,A
39D1 7D                  LD    A,L
39D2 AB                  XOR   A,E
39D3 6F                  LD    L,A
39D4 F1                  POP   AF
39D5             L2207:
39D5 11 18 11            LD    DE,4376
39D8 B7                  OR    A
39D9 ED 52               SBC   HL,DE
39DB             L2208:
39DB C2 E6 39            JP    NZ,L2212
39DE             L2209:
39DE 3E BA               LD    A,186
39E0             L2210:
39E0 CD 7B 3C            CALL  writeLineA
39E3             L2211:
39E3 C3 EC 39            JP    L2216
39E6             L2212:
39E6 21 E7 03            LD    HL,999
39E9             L2213:
39E9 CD 53 3C            CALL  writeLineHL
39EC             L2214:
39EC                     ;;testBitwiseOperators.j(315)     //final var byte/final var word
39EC             L2215:
39EC                     ;;testBitwiseOperators.j(316)     if (fb1 & fw2 == 0x0014) println (187); else println (999);
39EC             L2216:
39EC 3E 1C               LD    A,28
39EE             L2217:
39EE 6F                  LD    L,A
39EF 26 00               LD    H,0
39F1             L2218:
39F1 11 34 12            LD    DE,4660
39F4 F5                  PUSH  AF
39F5 7C                  LD    A,H
39F6 A2                  AND   A,D
39F7 67                  LD    H,A
39F8 7D                  LD    A,L
39F9 A3                  AND   A,E
39FA 6F                  LD    L,A
39FB F1                  POP   AF
39FC             L2219:
39FC 3E 14               LD    A,20
39FE             L2220:
39FE 5F                  LD    E,A
39FF 16 00               LD    D,0
3A01 B7                  OR    A
3A02 ED 52               SBC   HL,DE
3A04             L2221:
3A04 C2 0F 3A            JP    NZ,L2225
3A07             L2222:
3A07 3E BB               LD    A,187
3A09             L2223:
3A09 CD 7B 3C            CALL  writeLineA
3A0C             L2224:
3A0C C3 15 3A            JP    L2228
3A0F             L2225:
3A0F 21 E7 03            LD    HL,999
3A12             L2226:
3A12 CD 53 3C            CALL  writeLineHL
3A15             L2227:
3A15                     ;;testBitwiseOperators.j(317)     if (fb1 | fw2 == 0x123C) println (188); else println (999);
3A15             L2228:
3A15 3E 1C               LD    A,28
3A17             L2229:
3A17 6F                  LD    L,A
3A18 26 00               LD    H,0
3A1A             L2230:
3A1A 11 34 12            LD    DE,4660
3A1D 47                  LD    B,A
3A1E 7C                  LD    A,H
3A1F B2                  OR    A,D
3A20 67                  LD    H,A
3A21 7D                  LD    A,L
3A22 B3                  OR    A,E
3A23 6F                  LD    L,A
3A24 78                  LD    A,B
3A25             L2231:
3A25 11 3C 12            LD    DE,4668
3A28 B7                  OR    A
3A29 ED 52               SBC   HL,DE
3A2B             L2232:
3A2B C2 36 3A            JP    NZ,L2236
3A2E             L2233:
3A2E 3E BC               LD    A,188
3A30             L2234:
3A30 CD 7B 3C            CALL  writeLineA
3A33             L2235:
3A33 C3 3C 3A            JP    L2239
3A36             L2236:
3A36 21 E7 03            LD    HL,999
3A39             L2237:
3A39 CD 53 3C            CALL  writeLineHL
3A3C             L2238:
3A3C                     ;;testBitwiseOperators.j(318)     if (fb1 ^ fw2 == 0x1228) println (189); else println (999);
3A3C             L2239:
3A3C 3E 1C               LD    A,28
3A3E             L2240:
3A3E 6F                  LD    L,A
3A3F 26 00               LD    H,0
3A41             L2241:
3A41 11 34 12            LD    DE,4660
3A44 F5                  PUSH  AF
3A45 7C                  LD    A,H
3A46 AA                  XOR   A,D
3A47 67                  LD    H,A
3A48 7D                  LD    A,L
3A49 AB                  XOR   A,E
3A4A 6F                  LD    L,A
3A4B F1                  POP   AF
3A4C             L2242:
3A4C 11 28 12            LD    DE,4648
3A4F B7                  OR    A
3A50 ED 52               SBC   HL,DE
3A52             L2243:
3A52 C2 5D 3A            JP    NZ,L2247
3A55             L2244:
3A55 3E BD               LD    A,189
3A57             L2245:
3A57 CD 7B 3C            CALL  writeLineA
3A5A             L2246:
3A5A C3 63 3A            JP    L2251
3A5D             L2247:
3A5D 21 E7 03            LD    HL,999
3A60             L2248:
3A60 CD 53 3C            CALL  writeLineHL
3A63             L2249:
3A63                     ;;testBitwiseOperators.j(319)     //final var word/final var byte
3A63             L2250:
3A63                     ;;testBitwiseOperators.j(320)     if (fw2 & fb1 == 0x0014) println (190); else println (999);
3A63             L2251:
3A63 21 34 12            LD    HL,4660
3A66             L2252:
3A66 5F                  LD    E,A
3A67 3E 1C               LD    A,28
3A69 A5                  AND   A,L
3A6A 6F                  LD    L,A
3A6B 7B                  LD    A,E
3A6C 26 00               LD    H,0
3A6E             L2253:
3A6E 3E 14               LD    A,20
3A70             L2254:
3A70 5F                  LD    E,A
3A71 16 00               LD    D,0
3A73 B7                  OR    A
3A74 ED 52               SBC   HL,DE
3A76             L2255:
3A76 C2 81 3A            JP    NZ,L2259
3A79             L2256:
3A79 3E BE               LD    A,190
3A7B             L2257:
3A7B CD 7B 3C            CALL  writeLineA
3A7E             L2258:
3A7E C3 87 3A            JP    L2262
3A81             L2259:
3A81 21 E7 03            LD    HL,999
3A84             L2260:
3A84 CD 53 3C            CALL  writeLineHL
3A87             L2261:
3A87                     ;;testBitwiseOperators.j(321)     if (fw2 | fb1 == 0x123C) println (191); else println (999);
3A87             L2262:
3A87 21 34 12            LD    HL,4660
3A8A             L2263:
3A8A 11 1C 00            LD    DE,28
3A8D 47                  LD    B,A
3A8E 7C                  LD    A,H
3A8F B2                  OR    A,D
3A90 67                  LD    H,A
3A91 7D                  LD    A,L
3A92 B3                  OR    A,E
3A93 6F                  LD    L,A
3A94 78                  LD    A,B
3A95             L2264:
3A95 11 3C 12            LD    DE,4668
3A98 B7                  OR    A
3A99 ED 52               SBC   HL,DE
3A9B             L2265:
3A9B C2 A6 3A            JP    NZ,L2269
3A9E             L2266:
3A9E 3E BF               LD    A,191
3AA0             L2267:
3AA0 CD 7B 3C            CALL  writeLineA
3AA3             L2268:
3AA3 C3 AC 3A            JP    L2272
3AA6             L2269:
3AA6 21 E7 03            LD    HL,999
3AA9             L2270:
3AA9 CD 53 3C            CALL  writeLineHL
3AAC             L2271:
3AAC                     ;;testBitwiseOperators.j(322)     if (fw2 ^ fb1 == 0x1228) println (192); else println (999);
3AAC             L2272:
3AAC 21 34 12            LD    HL,4660
3AAF             L2273:
3AAF 11 1C 00            LD    DE,28
3AB2 F5                  PUSH  AF
3AB3 7C                  LD    A,H
3AB4 AA                  XOR   A,D
3AB5 67                  LD    H,A
3AB6 7D                  LD    A,L
3AB7 AB                  XOR   A,E
3AB8 6F                  LD    L,A
3AB9 F1                  POP   AF
3ABA             L2274:
3ABA 11 28 12            LD    DE,4648
3ABD B7                  OR    A
3ABE ED 52               SBC   HL,DE
3AC0             L2275:
3AC0 C2 CB 3A            JP    NZ,L2279
3AC3             L2276:
3AC3 3E C0               LD    A,192
3AC5             L2277:
3AC5 CD 7B 3C            CALL  writeLineA
3AC8             L2278:
3AC8 C3 D1 3A            JP    L2283
3ACB             L2279:
3ACB 21 E7 03            LD    HL,999
3ACE             L2280:
3ACE CD 53 3C            CALL  writeLineHL
3AD1             L2281:
3AD1                     ;;testBitwiseOperators.j(323)   
3AD1             L2282:
3AD1                     ;;testBitwiseOperators.j(324)     println("Klaar");
3AD1             L2283:
3AD1 21 DC 3A            LD    HL,L2290
3AD4             L2284:
3AD4 CD 00 3B            CALL  writeLineStr
3AD7             L2285:
3AD7                     ;;testBitwiseOperators.j(325)   }
3AD7             L2286:
3AD7 DD F9               LD    SP,IX
3AD9             L2287:
3AD9 DD E1               POP   IX
3ADB             L2288:
3ADB C9                  return
3ADC             L2289:
3ADC                     ;;testBitwiseOperators.j(326) }
3ADC             L2290:
3ADC 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
3AE2             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
3AE2             STAT0   equ 004H          ;147 ASCI0 Status register.
3AE2             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
3AE2             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
3AE2             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
3AE2             TDRE    equ 1             ;STAT0->Tx data register empty bit.
3AE2             OVERRUN equ 6             ;STAT0->OVERRUN bit.
3AE2             RDRF    equ 7             ;STAT0->Rx data register full bit.
3AE2             ;****************
3AE2             ;getChar
3AE2             ;Check if an input character from ASCI0 is available.
3AE2             ;  IN:  none
3AE2             ;  OUT: F: ZERO flag set if no character is available.
3AE2             ;          ZERO flag reset if a character is available.
3AE2             ;       A : character from ASCI0, if available.
3AE2             ;  USES:AF
3AE2             ;****************
3AE2             getChar:
3AE2 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
3AE5 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
3AE7 20 07               JR    NZ,getChar1 ;-yes: reset error flags
3AE9 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
3AEB C8                  RET   Z           ;-no: return without a character
3AEC ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
3AEF C9                  RET
3AF0             getChar1:
3AF0 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
3AF3 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
3AF5 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
3AF8 AF                  XOR   A,A
3AF9 C9                  RET               ;return without a character
3AFA             ;****************
3AFA             ;putMsg
3AFA             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
3AFA             ;  IN:  none.
3AFA             ;  OUT: none.
3AFA             ;  USES:none.
3AFA             ;****************
3AFA             putMsg:
3AFA E3                  EX    (SP),HL     ;save HL and load return address into HL.
3AFB CD 07 3B            CALL  writeStr
3AFE E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
3AFF C9                  RET
3B00             ;****************
3B00             ;writeLineStr
3B00             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
3B00             ;  IN:  HL:address of zero terminated string to be printed.
3B00             ;  OUT: none.
3B00             ;  USES:HL (point to byte after zero terminated string)
3B00             ;****************
3B00             writeLineStr:
3B00 CD 07 3B            CALL  writeStr
3B03 CD 23 3B            CALL  putCRLF
3B06 C9                  RET
3B07             ;****************
3B07             ;writeStr
3B07             ;Print via ASCI0 a zero terminated string, pointed to by HL.
3B07             ;  IN:  HL:address of zero terminated string to be printed.
3B07             ;  OUT: none.
3B07             ;  USES:HL (point to byte after zero terminated string)
3B07             ;****************
3B07             writeStr:
3B07 F5                  PUSH  AF          ;save registers
3B08             putStr1:
3B08 7E                  LD    A,(HL)      ;get next character
3B09 23                  INC   HL
3B0A B7                  OR    A,A         ;is it zer0?
3B0B 28 05               JR    Z,putStr2   ;yes ->return
3B0D CD 16 3B            CALL  putChar     ;no->put it to ASCI0
3B10 18 F6               JR    putStr1
3B12             putStr2:
3B12 F1                  POP   AF
3B13 C9                  RET
3B14             ;****************
3B14             ;putSpace
3B14             ;Send a space character to ASCI0
3B14             ;  IN:  none.
3B14             ;  OUT: none.
3B14             ;  USES:AF
3B14             ;****************
3B14             putSpace:
3B14 3E 20               LD    A,' '       ;load space and continue with putChar.
3B16             ;****************
3B16             ;putChar
3B16             ;Send one character to ASCI0.
3B16             ;  IN:  A = character
3B16             ;  OUT: none.
3B16             ;  USES:none.
3B16             ;****************
3B16             putChar:
3B16 F5                  PUSH  AF          ;send the character via ASCI0
3B17             putChar1:
3B17 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
3B1A CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
3B1C 28 F9               JR    Z,putChar1
3B1E F1                  POP   AF          ;restore AF registers
3B1F ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
3B22 C9                  RET
3B23             ;****************
3B23             ;putCRLF
3B23             ;Send CR and LF to ASCI0
3B23             ;  IN:  none.
3B23             ;  OUT: none.
3B23             ;  USES:none.
3B23             ;****************
3B23             putCRLF:
3B23 F5                  PUSH  AF
3B24 3E 0D               LD    A,'\r'       ;print carriage return
3B26 CD 16 3B            CALL  putChar
3B29 3E 0A               LD    A,'\n'       ;print line feed
3B2B CD 16 3B            CALL  putChar
3B2E F1                  POP   AF
3B2F C9                  RET
3B30             ;****************
3B30             ;putErase
3B30             ;Erase the latest character at ASCI0
3B30             ;  IN:  none.
3B30             ;  OUT: none.
3B30             ;  USES:AF
3B30             ;****************
3B30             putErase:
3B30 3E 08               LD    A,'\b'       ;print backspace
3B32 CD 16 3B            CALL  putChar
3B35 CD 14 3B            CALL  putSpace    ;print space (erase character)
3B38 3E 08               LD    A,'\b'      ;print backspace
3B3A 18 DA               JR    putChar
3B3C             ;****************
3B3C             ;putBell
3B3C             ;Send a Bell character to ASCI0
3B3C             ;  IN:  none.
3B3C             ;  OUT: none.
3B3C             ;  USES:AF
3B3C             ;****************
3B3C             putBell:
3B3C 3E 07               LD    A,07        ;ring the bell at ASCI0
3B3E 18 D6               JR    putChar
3B40             ;****************
3B40             ;putHexHL
3B40             ;Print HL register pair as 4 hex digits
3B40             ;  IN:  HL = word to be printed.
3B40             ;  OUT: none.
3B40             ;  USES:none.
3B40             ;****************
3B40             putHexHL:
3B40 F5                  PUSH  AF          ;save used registers
3B41 7C                  LD    A,H         ;print H as 2 hex digits
3B42 CD 4B 3B            CALL  putHexA
3B45 7D                  LD    A,L         ;print L as 2 hex digits
3B46 CD 4B 3B            CALL  putHexA
3B49 F1                  POP   AF          ;restore used registers
3B4A C9                  RET
3B4B             ;****************
3B4B             ;putHexA
3B4B             ;Print A register as 2 hex digits
3B4B             ;  IN:  A = byte to be printed
3B4B             ;  OUT: none.
3B4B             ;  USES:none.
3B4B             ;****************
3B4B             putHexA:
3B4B F5                  PUSH  AF          ;save input
3B4C 1F                  RRA               ;shift upper nibble to the right
3B4D 1F                  RRA
3B4E 1F                  RRA
3B4F 1F                  RRA
3B50 CD 54 3B            CALL  putHexA1    ;print upper nibble
3B53 F1                  POP   AF          ;restore input & print lower nibble
3B54             putHexA1:
3B54 F5                  PUSH  AF          ;save input
3B55 E6 0F               AND   A,00FH      ;mask lower nibble
3B57 C6 30               ADD   A,'0'       ;convert to hex digit
3B59 FE 3A               CP    A,'9'+1
3B5B 38 02               JR    C,putHexA2
3B5D C6 07               ADD   A,07
3B5F             putHexA2:
3B5F CD 16 3B            CALL  putChar
3B62 F1                  POP   AF          ;restore input
3B63 C9                  RET               ;and return
3B64             ;****************
3B64             ;mul16
3B64             ;16 by 16 bit unsigned multiplication with 16 bit result.
3B64             ;  IN:  HL = operand 1
3B64             ;       DE = operand 2
3B64             ;  OUT: HL = HL * DE low part
3B64             ;  USES:DE
3B64             ;  Size   25 bytes
3B64             ;  Time  160 cycles
3B64             ;****************
3B64             mul16:
3B64                     ;HL = HL * DE
3B64                     ;        H  L
3B64                     ;        D  E
3B64                     ;    --------*
3B64                     ;          EL
3B64                     ;       EH  0
3B64                     ;       DL  0
3B64                     ; -----------+
3B64                     ;        R  S
3B64                     ;S = ELlow
3B64                     ;R = ELhigh+EHlow+DLlow
3B64 C5                  PUSH  BC          ;11  11 save BC
3B65 44                  LD    B,H         ; 4  15 copy HL to BC
3B66 4D                  LD    C,L         ; 4  19
3B67 63                  LD    H,E         ; 4  23 HL contains EL
3B68 ED 6C               MLT   HL          ;17  40
3B6A E5                  PUSH  HL          ;11  51
3B6B 63                  LD    H,E         ; 4  55 HL contains EH aka EB
3B6C 68                  LD    L,B         ; 4  59
3B6D ED 6C               MLT   HL          ;17  76
3B6F 45                  LD    B,L         ; 4  80 save EHlow in B
3B70 62                  LD    H,D         ; 4  84 HL contains DL aka DC
3B71 69                  LD    L,C         ; 4  88
3B72 ED 6C               MLT   HL          ;17 105
3B74 55                  LD    D,L         ; 4 109 DLlow into DE
3B75 1E 00               LD    E,0         ; 6 115
3B77 E1                  POP   HL          ; 9 124 add EL+DElow
3B78 19                  ADD   HL,DE       ; 7 131
3B79 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
3B7A 19                  ADD   HL,DE       ; 7 142
3B7B C1                  POP   BC          ; 9 151 restore BC
3B7C C9                  RET               ; 9 160
3B7D             ;****************
3B7D             ;mul16_10
3B7D             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
3B7D             ;  IN:  HL = operand
3B7D             ;  OUT: HL = HL * 10; low part
3B7D             ;  USES:Flags
3B7D             ;  Size   9 bytes
3B7D             ;  Time   65 cycles
3B7D             ;****************
3B7D             mul16_10:
3B7D D5                  PUSH  DE          ;11 11
3B7E 54                  LD    D,H         ; 4 15
3B7F 5D                  LD    E,L         ; 4 19
3B80 29                  ADD   HL,HL       ; 7 26 times 2
3B81 29                  ADD   HL,HL       ; 7 33 times 4
3B82 19                  ADD   HL,DE       ; 7 40 times 5
3B83 29                  ADD   HL,HL       ; 7 47 times 10
3B84 D1                  POP   DE          ; 9 56
3B85 C9                  RET               ; 9 65
3B86             ;****************
3B86             ;mul16_8
3B86             ;16 by 8 bit unsigned multiplication with 16 bit result.
3B86             ;  IN:  HL = operand 1
3B86             ;        A = operand 2
3B86             ;  OUT: HL = HL * A low part
3B86             ;  USES:AF
3B86             ;  Size   .. bytes
3B86             ;  Time  ... cycles
3B86             ;****************
3B86             mul16_8:
3B86                     ;HL = HL * A
3B86                     ;        H  L
3B86                     ;           A
3B86                     ;    --------*
3B86                     ;          AL
3B86                     ;       AH  0
3B86                     ; -----------+
3B86                     ;        R  S
3B86                     ;S = ALlow
3B86                     ;R = ALhigh+AHlow
3B86 C5                  PUSH  BC          ;11  11 save BC
3B87 44                  LD    B,H         ; 4  15
3B88 4F                  LD    C,A         ; 4  19
3B89 67                  LD    H,A         ; 4  23
3B8A ED 6C               MLT   HL          ;17  40 HL = AL
3B8C ED 4C               MLT   BC          ;17  57 BC = AH
3B8E 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
3B8F 81                  ADD   A,C         ; 4  65
3B90 67                  LD    H,A         ; 4  69
3B91 C1                  POP   BC          ; 9  78 | 289 restore BC
3B92 C9                  RET               ; 9  87 | 307
3B93             ;****************
3B93             ;mul1632
3B93             ;16 by 16 bit unsigned multiplication with 32 bit result.
3B93             ;  IN:  HL = operand 1
3B93             ;       DE = operand 2
3B93             ;  OUT: HL = HL * DE low part
3B93             ;       DE = HL * DE high part
3B93             ;  USES:-
3B93             ;  Size 49 bytes
3B93             ;  Time between 303 en 307 cycles
3B93             ;****************
3B93             mul1632:
3B93                     ;HL = HL * DE
3B93                     ;        H  L
3B93                     ;        D  E
3B93                     ;    --------*
3B93                     ;          EL
3B93                     ;       EH  0
3B93                     ;       DL  0
3B93                     ;    DH  0  0
3B93                     ; -----------+
3B93                     ;  P  Q  R  S
3B93                     ;S = ELlow
3B93                     ;R = ELhigh+EHlow+DLlow
3B93                     ;Q = DHlow+EHhigh+DLhigh
3B93                     ;P = DHhigh
3B93 F5                  PUSH  AF          ;11  11 save AF
3B94 C5                  PUSH  BC          ;11  22 save BC
3B95 44                  LD    B,H         ; 4  26
3B96 4D                  LD    C,L         ; 4  30
3B97 62                  LD    H,D         ; 4  34 HL contains DH aka DB
3B98 68                  LD    L,B         ; 4  38
3B99 ED 6C               MLT   HL          ;17  55
3B9B E5                  PUSH  HL          ;11  66
3B9C 62                  LD    H,D         ; 4  70 HL contains DL aka DC
3B9D 69                  LD    L,C         ; 4  74
3B9E ED 6C               MLT   HL          ;17  91
3BA0 E5                  PUSH  HL          ;11 102
3BA1 63                  LD    H,E         ; 4 106 HL contains EH aka EB
3BA2 68                  LD    L,B         ; 4 110
3BA3 ED 6C               MLT   HL          ;17 127
3BA5 E5                  PUSH  HL          ;11 138
3BA6 63                  LD    H,E         ; 4 142 HL contains EL aka EC
3BA7 69                  LD    L,C         ; 4 146
3BA8 ED 6C               MLT   HL          ;17 163
3BAA D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
3BAB 06 00               LD    B,0         ; 6 178
3BAD 4A                  LD    C,D         ; 4 182 ..C=EHhigh
3BAE 53                  LD    D,E         ; 4 186 ..D=EHlow
3BAF 1E 00               LD    E,0         ; 6 192
3BB1 19                  ADD   HL,DE       ; 7 199
3BB2 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
3BB4 03                  INC   BC          ;         4 209
3BB5             mul16321:
3BB5 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
3BB6 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
3BB7 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
3BB8 19                  ADD   HL,DE       ; 7 231 | 233
3BB9 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
3BBB 03                  INC   BC          ;         4 243
3BBC             mul16322:
3BBC                                       ;HL=RS=EL+EH0+DL0
3BBC                                       ;C=EHhigh
3BBC                                       ;A=DLhigh
3BBC                                       ;E=0
3BBC EB                  EX    DE,HL       ; 3 242 | 246
3BBD 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
3BBE 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
3BBF 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
3BC0 C1                  POP   BC          ; 9 266 | 270
3BC1 09                  ADD   HL,BC       ; 7 273 | 277
3BC2 EB                  EX    DE,HL       ; 3 276 | 280
3BC3                                       ;D=P=DHhigh
3BC3                                       ;E=Q=DHlow+EHhigh+DLhigh
3BC3                                       ;H=R=ELhigh+EHlow+DLlow
3BC3                                       ;L=S=ELlow
3BC3 C1                  POP   BC          ; 9 285 | 289 restore BC
3BC4 F1                  POP   AF          ; 9 294 | 298 restore AF
3BC5 C9                  RET               ; 9 303 | 307
3BC6             ;****************
3BC6             ;mul16S
3BC6             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
3BC6             ;  IN:  HL = operand 1
3BC6             ;       DE = operand 2
3BC6             ;  OUT: DE = HL * DE high part
3BC6             ;       HL = HL * DE low part
3BC6             ;  USES:none.
3BC6             ;  Size 26 bytes
3BC6             ;  Time between 726 en 998 cycles
3BC6             ;****************
3BC6             mul16S:
3BC6 F5                  PUSH  AF          ;11  11 save AF
3BC7 C5                  PUSH  BC          ;11  22 save BC
3BC8 44                  LD    B,H         ; 4  26
3BC9 4D                  LD    C,L         ; 4  30
3BCA 21 00 00            LD    HL,0        ; 9  39
3BCD 3E 10               LD    A,16        ; 6  45
3BCF             mul16S1:
3BCF 29                  ADD   HL,HL       ;16*7=112 157
3BD0 CB 13               RL    E           ;16*7=112 269
3BD2 CB 12               RL    D           ;16*7=112 381
3BD4 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
3BD6 09                  ADD   HL,BC       ;             16*7=112 589
3BD7 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
3BD9 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
3BDA             mul16S2:
3BDA 3D                  DEC   A           ;16*4=64    573 | 845 | 813
3BDB 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
3BDD C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
3BDE F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
3BDF C9                  RET               ; 9         726 | 998 | 966
3BE0             ;****************
3BE0             ;div16
3BE0             ;16 by 16 bit unsigned division.
3BE0             ;  IN:  HL = dividend
3BE0             ;       DE = divisor
3BE0             ;  OUT: HL = quotient
3BE0             ;       DE = remainder
3BE0             ;  USES:-
3BE0             ;  Size   32 bytes
3BE0             ;  Time   between 1073 en 1121 cycles
3BE0             ;pseudo code:
3BE0             ;T = AC = dividend
3BE0             ;D = DE = divisor
3BE0             ;Q = AC = quotient = 0
3BE0             ;R = HL = remainder = 0
3BE0             ;invariante betrekking:
3BE0             ; D/T\Q     
3BE0             ;   R       
3BE0             ; T = QD + R
3BE0             ; T <= 2^N  
3BE0             ;
3BE0             ; D/T'.RT\Q'      
3BE0             ;   R'             
3BE0             ; RT <= 2^N        
3BE0             ; 0<=k<=N          
3BE0             ; RT = T % 2^k     
3BE0             ; T' = (T-RT) / 2^k
3BE0             ; Q' = T' / D      
3BE0             ; R' = T' % D      
3BE0             ;
3BE0             ;for (i=16; i>0; i--) {
3BE0             ;  T = T * 2 (remember MSB in carry)
3BE0             ;  R = R * 2 + carry
3BE0             ;  Q = Q * 2
3BE0             ;  if (R >= D) {
3BE0             ;    R = R - D;
3BE0             ;    Q++;
3BE0             ;  }
3BE0             ;}
3BE0             ;return Q (in HL) and R (in DE)
3BE0             ;****************
3BE0             div16:
3BE0 F5                  PUSH  AF          ;11  11 save registers used
3BE1 C5                  PUSH  BC          ;11  22
3BE2 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
3BE3 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
3BE4 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
3BE7 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
3BE9             div16_1:
3BE9 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
3BEB CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
3BED ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
3BEF B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
3BF0 ED 52               SBC   HL,DE       ;16*10=160 653
3BF2 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
3BF4 0C                  INC   C           ;              16*4= 64 813   Q++
3BF5 18 01               JR    div16_3     ;              16*8=128 941
3BF7             div16_2:
3BF7 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
3BF8             div16_3:
3BF8 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
3BFA EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
3BFB 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
3BFC 69                  LD    L,C         ; 4 1046 | 1094
3BFD C1                  POP   BC          ; 9 1055 | 1103
3BFE F1                  POP   AF          ; 9 1064 | 1112
3BFF C9                  RET               ; 9 1073 | 1121
3C00             ;****************
3C00             ;div16_8
3C00             ;16 by 8 bit unsigned division.
3C00             ;  IN:  HL = dividend
3C00             ;       A  = divisor
3C00             ;  OUT: HL = quotient
3C00             ;       A  = remainder
3C00             ;  USES:F(lags)
3C00             ;  Size 18 bytes
3C00             ;  Time between 601 en 697 cycles
3C00             ;****************
3C00             div16_8:
3C00 C5                  PUSH  BC          ;11 11 save registers used
3C01 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
3C03 4F                  LD    C,A         ; 4 21 move divisor to C
3C04 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
3C05             div16_82:
3C05 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
3C06 CB 17               RL    A           ;16*7=112 249
3C08 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
3C09 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
3C0B 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
3C0C 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
3C0D             div16_83:
3C0D 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
3C0F C1                  POP   BC          ;9 592 688
3C10 C9                  RET               ;9 601 697
3C11             ;****************
3C11             ;div8
3C11             ;8 by 8 bit unsigned division.
3C11             ;  IN:  A = dividend
3C11             ;       C = divisor
3C11             ;  OUT: A = quotient
3C11             ;       C = remainder
3C11             ;  USES:F(lags)
3C11             ;  Size 26 bytes
3C11             ;  Time between 411 and 459 cycles
3C11             ;****************
3C11             ;pseudo code:
3C11             ;T = dividend
3C11             ;D = divisor
3C11             ;Q = quotient = 0
3C11             ;R = remainder = 0
3C11             ;invariante betrekking:
3C11             ; T = QD + R
3C11             ; T <= 2^8  
3C11             ;
3C11             ; D/T'.RT\Q'      
3C11             ;   R'             
3C11             ; RT <= 2^8        
3C11             ; 0<=k<=8          
3C11             ; RT = T % 2^k     
3C11             ; T' = (T-RT) / 2^k
3C11             ; Q' = T' / D      
3C11             ; R' = T' % D      
3C11             ;
3C11             ;for (i=8; i>0; i--) {
3C11             ;  T = T * 2 (remember MSB in carry)
3C11             ;  R = R * 2 + carry
3C11             ;  Q = Q * 2
3C11             ;  if (R >= D) {
3C11             ;    R = R - D;
3C11             ;    Q++;
3C11             ;  }
3C11             ;}
3C11             ;return Q (in A) and R (in C)
3C11             ;****************
3C11             ;E = T = dividend
3C11             ;C = D = divisor
3C11             ;D = Q = quotient
3C11             ;A = R = remainder
3C11             ;****************
3C11             ;  IN:  A = dividend
3C11             ;       C  = divisor
3C11             div8:
3C11 D5                  PUSH  DE          ;11 11 save registers used
3C12 C5                  PUSH  BC          ;11 22 save registers used
3C13 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
3C15 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
3C17 5F                  LD    E,A         ; 4 38 E = T = dividend
3C18 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
3C19             div8_1:
3C19 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
3C1B CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
3C1D CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
3C1F B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
3C20 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
3C22 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
3C23 14                  INC   D           ;           8*4=32 354   Q[D]++;
3C24             div8_2:           ;                      }
3C24 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
3C26 C1                  POP   BC          ;9        385 433
3C27 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
3C28 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
3C29 D1                  POP   DE          ;9        402 450
3C2A C9                  RET               ;9        411 459
3C2B             ;****************
3C2B             ;div8_16
3C2B             ;8 by 16 bit unsigned division.
3C2B             ;  IN:  A = dividend
3C2B             ;       HL = divisor
3C2B             ;  OUT: A = quotient
3C2B             ;       C = remainder
3C2B             ;  USES:F(lags)
3C2B             ;  Size 13 bytes (plus dependency on div8)
3C2B             ;  Time 31 or between 436 and 484 cycles
3C2B             ;****************
3C2B             ;invariante betrekking:
3C2B             ; T = dividend
3C2B             ; D = divisor
3C2B             ; Q = quotient
3C2B             ; R = remainder
3C2B             ; T = QD + R
3C2B             ;pseudo code:
3C2B             ; if D >= 256 {
3C2B             ;   R = T
3C2B             ;   Q = 0
3C2B             ; } else {
3C2B             ;   R = T/D (using div8)
3C2B             ;   Q = T%D (using div8)
3C2B             ; }
3C2B             ;****************
3C2B             
3C2B             
3C2B             div8_16:
3C2B 4F                  LD    C,A         ;  4  4         save dividend(A) in C
3C2C 7C                  LD    A,H         ;  4  8         if D >= 256 {
3C2D B7                  OR    A,A         ;  4 12
3C2E 28 02               JR    Z,div8_161  ;  6 18  8  20
3C30 AF                  XOR   A,A         ;  4 22           R = T;
3C31 C9                  RET               ;  9 31           Q = 0;
3C32             div8_161:                     ;               } else {
3C32 79                  LD    A,C         ;        4  24    restore dividend into A
3C33 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
3C34 CD 11 3C            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
3C37 C9                  RET               ; 9  436/484    }
3C38             ;****************
3C38             ;read
3C38             ;read a 16 bit unsigned number from the input
3C38             ;  IN:  none
3C38             ;  OUT: HL = 16 bit unsigned number
3C38             ;  USES:-
3C38             ;****************
3C38             read:
3C38 F5                  PUSH  AF
3C39 21 00 00            LD    HL,0        ;result = 0;
3C3C             read1:
3C3C CD E2 3A            CALL  getChar     ;check if a character is available.
3C3F 28 FB               JR    Z,read1     ;-no: wait for it.
3C41 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
3C43 28 0C               JR    Z,read2
3C45 CD 7D 3B            CALL  mul16_10    ;result *= 10;
3C48 D6 30               SUB   A,'0'       ;digit = char - '0';
3C4A 85                  ADD   A,L         ;result += digit;
3C4B 6F                  LD    L,A
3C4C 30 EE               JR    NC,read1     ;get next character
3C4E 24                  INC   H
3C4F 18 EB               JR    read1        ;get next character
3C51             read2:
3C51 F1                  POP   AF
3C52 C9                  RET
3C53             ;****************
3C53             ;writeLineHL
3C53             ;write a 16 bit unsigned number to the output, followed by a carriage return
3C53             ;  IN:  HL = 16 bit unsigned number
3C53             ;  OUT: none
3C53             ;  USES:HL
3C53             ;****************
3C53             writeLineHL:
3C53 CD 5A 3C            CALL  writeHL
3C56 CD 23 3B            CALL  putCRLF
3C59 C9                  RET
3C5A             ;****************
3C5A             ;writeHL
3C5A             ;write a 16 bit unsigned number to the output
3C5A             ;  IN:  HL = 16 bit unsigned number
3C5A             ;  OUT: none
3C5A             ;  USES:HL
3C5A             ;****************
3C5A             writeHL:
3C5A C5                  PUSH  BC          ;save registers used
3C5B F5                  PUSH  AF
3C5C 06 00               LD    B,0         ;number of digits on stack
3C5E 7C                  LD    A,H         ;is HL=0?
3C5F B5                  OR    A,L
3C60 20 03               JR    NZ,writeHL1
3C62 04                  INC   B           ;write a single digit 0
3C63 18 0C               JR    writeHL3
3C65             writeHL1:
3C65 3E 0A               LD    A,10        ;divide HL by 10
3C67 CD 00 3C            CALL  div16_8
3C6A F5                  PUSH  AF          ;put remainder on stack
3C6B 04                  INC   B
3C6C 7C                  LD    A,H         ;is quotient 0?
3C6D B5                  OR    A,L
3C6E 20 F5               JR    NZ,writeHL1
3C70             writeHL2:
3C70 F1                  POP   AF          ;write digit
3C71             writeHL3:
3C71 C6 30               ADD   A,'0'
3C73 CD 16 3B            CALL  putChar
3C76 10 F8               DJNZ  writeHL2
3C78 F1                  POP   AF          ;restore registers used
3C79 C1                  POP   BC
3C7A C9                  RET
3C7B             ;****************
3C7B             ;writeLineA
3C7B             ;write an 8-bit unsigned number to the output, followed by a carriage return
3C7B             ;  IN:  A = 8-bit unsigned number
3C7B             ;  OUT: none
3C7B             ;  USES:none
3C7B             ;****************
3C7B             writeLineA:
3C7B CD 82 3C            CALL  writeA
3C7E CD 23 3B            CALL  putCRLF
3C81 C9                  RET
3C82             ;****************
3C82             ;writeA
3C82             ;write an 8-bit unsigned number to the output
3C82             ;  IN:  A = 8-bit unsigned number
3C82             ;  OUT: none
3C82             ;  USES:none
3C82             ;****************
3C82             writeA:
3C82 E5                  PUSH  HL          ;save registers used
3C83 26 00               LD    H,0
3C85 6F                  LD    L,A
3C86 CD 5A 3C            CALL  writeHL
3C89 E1                  POP   HL
3C8A C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20E0 :
   L1000 = 2B77 :
   L1001 = 2B7A :
   L1002 = 2B7D : 2B72
   L1003 = 2B80 :
   L1004 = 2B83 :
   L1005 = 2B83 :
   L1006 = 2B83 : 2B7A
   L1007 = 2B86 :
   L1008 = 2B8A :
   L1009 = 2B93 :
    L101 = 20E3 :
   L1010 = 2B95 :
   L1011 = 2B9B :
   L1012 = 2B9E :
   L1013 = 2BA0 :
   L1014 = 2BA3 :
   L1015 = 2BA6 : 2B9B
   L1016 = 2BA9 :
   L1017 = 2BAC :
   L1018 = 2BAC : 2BA3
   L1019 = 2BAF :
    L102 = 20E3 :
   L1020 = 2BB3 :
   L1021 = 2BBA :
   L1022 = 2BC0 :
   L1023 = 2BC3 :
   L1024 = 2BC5 :
   L1025 = 2BC8 :
   L1026 = 2BCB : 2BC0
   L1027 = 2BCE :
   L1028 = 2BD1 :
   L1029 = 2BD1 : 2BC8
    L103 = 20E3 :
   L1030 = 2BD4 :
   L1031 = 2BD8 :
   L1032 = 2BDF :
   L1033 = 2BE5 :
   L1034 = 2BE8 :
   L1035 = 2BEA :
   L1036 = 2BED :
   L1037 = 2BF0 : 2BE5
   L1038 = 2BF3 :
   L1039 = 2BF6 :
    L104 = 20E3 : 20DA
   L1040 = 2BF6 :
   L1041 = 2BF6 :
   L1042 = 2BF6 :
   L1043 = 2BF6 :
   L1044 = 2BF6 : 2BED
   L1045 = 2BF8 :
   L1046 = 2BFA :
   L1047 = 2BFC :
   L1048 = 2BFE :
   L1049 = 2C01 :
    L105 = 20E5 :
   L1050 = 2C03 :
   L1051 = 2C06 :
   L1052 = 2C09 : 2BFE
   L1053 = 2C0C :
   L1054 = 2C0F :
   L1055 = 2C0F : 2C06
   L1056 = 2C11 :
   L1057 = 2C13 :
   L1058 = 2C15 :
   L1059 = 2C17 :
    L106 = 20E8 :
   L1060 = 2C1A :
   L1061 = 2C1C :
   L1062 = 2C1F :
   L1063 = 2C22 : 2C17
   L1064 = 2C25 :
   L1065 = 2C28 :
   L1066 = 2C28 : 2C1F
   L1067 = 2C2A :
   L1068 = 2C2C :
   L1069 = 2C2E :
    L107 = 20F3 :
   L1070 = 2C30 :
   L1071 = 2C33 :
   L1072 = 2C35 :
   L1073 = 2C38 :
   L1074 = 2C3B : 2C30
   L1075 = 2C3E :
   L1076 = 2C41 :
   L1077 = 2C41 :
   L1078 = 2C41 : 2C38
   L1079 = 2C44 :
    L108 = 20F5 :
   L1080 = 2C48 :
   L1081 = 2C53 :
   L1082 = 2C59 :
   L1083 = 2C5C :
   L1084 = 2C5E :
   L1085 = 2C61 :
   L1086 = 2C64 : 2C59
   L1087 = 2C67 :
   L1088 = 2C6A :
   L1089 = 2C6A : 2C61
    L109 = 20FB :
   L1090 = 2C6D :
   L1091 = 2C71 :
   L1092 = 2C7C :
   L1093 = 2C82 :
   L1094 = 2C85 :
   L1095 = 2C87 :
   L1096 = 2C8A :
   L1097 = 2C8D : 2C82
   L1098 = 2C90 :
   L1099 = 2C93 :
     L11 = 2013 :
    L110 = 20FE :
   L1100 = 2C93 : 2C8A
   L1101 = 2C96 :
   L1102 = 2C9A :
   L1103 = 2CA5 :
   L1104 = 2CAB :
   L1105 = 2CAE :
   L1106 = 2CB0 :
   L1107 = 2CB3 :
   L1108 = 2CB6 : 2CAB
   L1109 = 2CB9 :
    L111 = 2100 :
   L1110 = 2CBC :
   L1111 = 2CBC :
   L1112 = 2CBC : 2CB3
   L1113 = 2CBE :
   L1114 = 2CC0 :
   L1115 = 2CC3 :
   L1116 = 2CCE :
   L1117 = 2CD0 :
   L1118 = 2CD6 :
   L1119 = 2CD9 :
    L112 = 2103 :
   L1120 = 2CDB :
   L1121 = 2CDE :
   L1122 = 2CE1 : 2CD6
   L1123 = 2CE4 :
   L1124 = 2CE7 :
   L1125 = 2CE7 : 2CDE
   L1126 = 2CE9 :
   L1127 = 2CEB :
   L1128 = 2CEE :
   L1129 = 2CF9 :
    L113 = 2106 : 20FB
   L1130 = 2CFF :
   L1131 = 2D02 :
   L1132 = 2D04 :
   L1133 = 2D07 :
   L1134 = 2D0A : 2CFF
   L1135 = 2D0D :
   L1136 = 2D10 :
   L1137 = 2D10 : 2D07
   L1138 = 2D12 :
   L1139 = 2D14 :
    L114 = 2109 :
   L1140 = 2D17 :
   L1141 = 2D22 :
   L1142 = 2D28 :
   L1143 = 2D2B :
   L1144 = 2D2D :
   L1145 = 2D30 :
   L1146 = 2D33 : 2D28
   L1147 = 2D36 :
   L1148 = 2D39 :
   L1149 = 2D39 :
    L115 = 210C :
   L1150 = 2D39 : 2D30
   L1151 = 2D3C :
   L1152 = 2D40 :
   L1153 = 2D48 :
   L1154 = 2D4A :
   L1155 = 2D50 :
   L1156 = 2D53 :
   L1157 = 2D55 :
   L1158 = 2D58 :
   L1159 = 2D5B : 2D50
    L116 = 210C : 2103
   L1160 = 2D5E :
   L1161 = 2D61 :
   L1162 = 2D61 : 2D58
   L1163 = 2D64 :
   L1164 = 2D68 :
   L1165 = 2D73 :
   L1166 = 2D79 :
   L1167 = 2D7C :
   L1168 = 2D7E :
   L1169 = 2D81 :
    L117 = 210E :
   L1170 = 2D84 : 2D79
   L1171 = 2D87 :
   L1172 = 2D8A :
   L1173 = 2D8A : 2D81
   L1174 = 2D8D :
   L1175 = 2D91 :
   L1176 = 2D9C :
   L1177 = 2DA2 :
   L1178 = 2DA5 :
   L1179 = 2DA7 :
    L118 = 2111 :
   L1180 = 2DAA :
   L1181 = 2DAD : 2DA2
   L1182 = 2DB0 :
   L1183 = 2DB3 :
   L1184 = 2DB3 :
   L1185 = 2DB3 :
   L1186 = 2DB3 :
   L1187 = 2DB3 :
   L1188 = 2DB3 : 2DAA
   L1189 = 2DB6 :
    L119 = 211C :
   L1190 = 2DB8 :
   L1191 = 2DBA :
   L1192 = 2DBD :
   L1193 = 2DBF :
   L1194 = 2DC2 :
   L1195 = 2DC5 : 2DBA
   L1196 = 2DC8 :
   L1197 = 2DCB :
   L1198 = 2DCB : 2DC2
   L1199 = 2DCE :
     L12 = 2013 :
    L120 = 2122 :
   L1200 = 2DD0 :
   L1201 = 2DD2 :
   L1202 = 2DD5 :
   L1203 = 2DD7 :
   L1204 = 2DDA :
   L1205 = 2DDD : 2DD2
   L1206 = 2DE0 :
   L1207 = 2DE3 :
   L1208 = 2DE3 : 2DDA
   L1209 = 2DE6 :
    L121 = 2125 :
   L1210 = 2DE8 :
   L1211 = 2DEA :
   L1212 = 2DED :
   L1213 = 2DEF :
   L1214 = 2DF2 :
   L1215 = 2DF5 : 2DEA
   L1216 = 2DF8 :
   L1217 = 2DFB :
   L1218 = 2DFB :
   L1219 = 2DFB : 2DF2
    L122 = 2127 :
   L1220 = 2DFE :
   L1221 = 2E09 :
   L1222 = 2E0F :
   L1223 = 2E12 :
   L1224 = 2E14 :
   L1225 = 2E17 :
   L1226 = 2E1A : 2E0F
   L1227 = 2E1D :
   L1228 = 2E20 :
   L1229 = 2E20 : 2E17
    L123 = 212A :
   L1230 = 2E23 :
   L1231 = 2E2E :
   L1232 = 2E34 :
   L1233 = 2E37 :
   L1234 = 2E39 :
   L1235 = 2E3C :
   L1236 = 2E3F : 2E34
   L1237 = 2E42 :
   L1238 = 2E45 :
   L1239 = 2E45 : 2E3C
    L124 = 212D : 2122
   L1240 = 2E48 :
   L1241 = 2E53 :
   L1242 = 2E59 :
   L1243 = 2E5C :
   L1244 = 2E5E :
   L1245 = 2E61 :
   L1246 = 2E64 : 2E59
   L1247 = 2E67 :
   L1248 = 2E6A :
   L1249 = 2E6A :
    L125 = 2130 :
   L1250 = 2E6A : 2E61
   L1251 = 2E6D :
   L1252 = 2E70 :
   L1253 = 2E7B :
   L1254 = 2E7D :
   L1255 = 2E83 :
   L1256 = 2E86 :
   L1257 = 2E88 :
   L1258 = 2E8B :
   L1259 = 2E8E : 2E83
    L126 = 2133 :
   L1260 = 2E91 :
   L1261 = 2E94 :
   L1262 = 2E94 : 2E8B
   L1263 = 2E97 :
   L1264 = 2E9A :
   L1265 = 2EA5 :
   L1266 = 2EAB :
   L1267 = 2EAE :
   L1268 = 2EB0 :
   L1269 = 2EB3 :
    L127 = 2133 : 212A
   L1270 = 2EB6 : 2EAB
   L1271 = 2EB9 :
   L1272 = 2EBC :
   L1273 = 2EBC : 2EB3
   L1274 = 2EBF :
   L1275 = 2EC2 :
   L1276 = 2ECD :
   L1277 = 2ED3 :
   L1278 = 2ED6 :
   L1279 = 2ED8 :
    L128 = 2135 :
   L1280 = 2EDB :
   L1281 = 2EDE : 2ED3
   L1282 = 2EE1 :
   L1283 = 2EE4 :
   L1284 = 2EE4 :
   L1285 = 2EE4 : 2EDB
   L1286 = 2EE7 :
   L1287 = 2EEF :
   L1288 = 2EF1 :
   L1289 = 2EF7 :
    L129 = 2138 :
   L1290 = 2EFA :
   L1291 = 2EFC :
   L1292 = 2EFF :
   L1293 = 2F02 : 2EF7
   L1294 = 2F05 :
   L1295 = 2F08 :
   L1296 = 2F08 : 2EFF
   L1297 = 2F0B :
   L1298 = 2F16 :
   L1299 = 2F1C :
     L13 = 2016 :
    L130 = 2143 :
   L1300 = 2F1F :
   L1301 = 2F21 :
   L1302 = 2F24 :
   L1303 = 2F27 : 2F1C
   L1304 = 2F2A :
   L1305 = 2F2D :
   L1306 = 2F2D : 2F24
   L1307 = 2F30 :
   L1308 = 2F3B :
   L1309 = 2F41 :
    L131 = 2149 :
   L1310 = 2F44 :
   L1311 = 2F46 :
   L1312 = 2F49 :
   L1313 = 2F4C : 2F41
   L1314 = 2F4F :
   L1315 = 2F52 :
   L1316 = 2F52 :
   L1317 = 2F52 :
   L1318 = 2F52 :
   L1319 = 2F52 :
    L132 = 214C :
   L1320 = 2F52 : 2F49
   L1321 = 2F55 :
   L1322 = 2F58 :
   L1323 = 2F5A :
   L1324 = 2F5C :
   L1325 = 2F5E :
   L1326 = 2F61 :
   L1327 = 2F63 :
   L1328 = 2F66 :
   L1329 = 2F69 : 2F5E
    L133 = 214E :
   L1330 = 2F6C :
   L1331 = 2F6F :
   L1332 = 2F6F : 2F66
   L1333 = 2F72 :
   L1334 = 2F75 :
   L1335 = 2F77 :
   L1336 = 2F79 :
   L1337 = 2F7B :
   L1338 = 2F7E :
   L1339 = 2F80 :
    L134 = 2151 :
   L1340 = 2F83 :
   L1341 = 2F86 : 2F7B
   L1342 = 2F89 :
   L1343 = 2F8C :
   L1344 = 2F8C : 2F83
   L1345 = 2F8F :
   L1346 = 2F92 :
   L1347 = 2F94 :
   L1348 = 2F96 :
   L1349 = 2F98 :
    L135 = 2154 : 2149
   L1350 = 2F9B :
   L1351 = 2F9D :
   L1352 = 2FA0 :
   L1353 = 2FA3 : 2F98
   L1354 = 2FA6 :
   L1355 = 2FA9 :
   L1356 = 2FA9 :
   L1357 = 2FA9 : 2FA0
   L1358 = 2FAC :
   L1359 = 2FB0 :
    L136 = 2157 :
   L1360 = 2FB4 :
   L1361 = 2FBD :
   L1362 = 2FC3 :
   L1363 = 2FC6 :
   L1364 = 2FC8 :
   L1365 = 2FCB :
   L1366 = 2FCE : 2FC3
   L1367 = 2FD1 :
   L1368 = 2FD4 :
   L1369 = 2FD4 : 2FCB
    L137 = 215A :
   L1370 = 2FD7 :
   L1371 = 2FDB :
   L1372 = 2FDF :
   L1373 = 2FE8 :
   L1374 = 2FEE :
   L1375 = 2FF1 :
   L1376 = 2FF3 :
   L1377 = 2FF6 :
   L1378 = 2FF9 : 2FEE
   L1379 = 2FFC :
    L138 = 215A :
   L1380 = 2FFF :
   L1381 = 2FFF : 2FF6
   L1382 = 3002 :
   L1383 = 3006 :
   L1384 = 300A :
   L1385 = 3013 :
   L1386 = 3019 :
   L1387 = 301C :
   L1388 = 301E :
   L1389 = 3021 :
    L139 = 215A : 2151
   L1390 = 3024 : 3019
   L1391 = 3027 :
   L1392 = 302A :
   L1393 = 302A :
   L1394 = 302A : 3021
   L1395 = 302D :
   L1396 = 3030 :
   L1397 = 3034 :
   L1398 = 303A :
   L1399 = 303C :
     L14 = 2019 :
    L140 = 215D :
   L1400 = 3042 :
   L1401 = 3045 :
   L1402 = 3047 :
   L1403 = 304A :
   L1404 = 304D : 3042
   L1405 = 3050 :
   L1406 = 3053 :
   L1407 = 3053 : 304A
   L1408 = 3056 :
   L1409 = 3059 :
    L141 = 2165 :
   L1410 = 305D :
   L1411 = 305F :
   L1412 = 3065 :
   L1413 = 3068 :
   L1414 = 306A :
   L1415 = 306D :
   L1416 = 3070 : 3065
   L1417 = 3073 :
   L1418 = 3076 :
   L1419 = 3076 : 306D
    L142 = 2167 :
   L1420 = 3079 :
   L1421 = 307C :
   L1422 = 3080 :
   L1423 = 3082 :
   L1424 = 3088 :
   L1425 = 308B :
   L1426 = 308D :
   L1427 = 3090 :
   L1428 = 3093 : 3088
   L1429 = 3096 :
    L143 = 216D :
   L1430 = 3099 :
   L1431 = 3099 :
   L1432 = 3099 : 3090
   L1433 = 309C :
   L1434 = 309E :
   L1435 = 30A0 :
   L1436 = 30A6 :
   L1437 = 30A8 :
   L1438 = 30AE :
   L1439 = 30B1 :
    L144 = 2170 :
   L1440 = 30B3 :
   L1441 = 30B6 :
   L1442 = 30B9 : 30AE
   L1443 = 30BC :
   L1444 = 30BF :
   L1445 = 30BF : 30B6
   L1446 = 30C2 :
   L1447 = 30C4 :
   L1448 = 30C6 :
   L1449 = 30C8 :
    L145 = 2172 :
   L1450 = 30CE :
   L1451 = 30D1 :
   L1452 = 30D3 :
   L1453 = 30D6 :
   L1454 = 30D9 : 30CE
   L1455 = 30DC :
   L1456 = 30DF :
   L1457 = 30DF : 30D6
   L1458 = 30E2 :
   L1459 = 30E4 :
    L146 = 2175 :
   L1460 = 30E6 :
   L1461 = 30E8 :
   L1462 = 30EE :
   L1463 = 30F1 :
   L1464 = 30F3 :
   L1465 = 30F6 :
   L1466 = 30F9 : 30EE
   L1467 = 30FC :
   L1468 = 30FF :
   L1469 = 30FF :
    L147 = 2178 : 216D
   L1470 = 30FF :
   L1471 = 30FF :
   L1472 = 30FF :
   L1473 = 30FF : 30F6
   L1474 = 3102 :
   L1475 = 3107 :
   L1476 = 3109 :
   L1477 = 310C :
   L1478 = 310E :
   L1479 = 3111 :
    L148 = 217B :
   L1480 = 3114 : 3109
   L1481 = 3117 :
   L1482 = 311A :
   L1483 = 311A : 3111
   L1484 = 311D :
   L1485 = 3122 :
   L1486 = 3124 :
   L1487 = 3127 :
   L1488 = 3129 :
   L1489 = 312C :
    L149 = 217E :
   L1490 = 312F : 3124
   L1491 = 3132 :
   L1492 = 3135 :
   L1493 = 3135 : 312C
   L1494 = 3138 :
   L1495 = 313D :
   L1496 = 313F :
   L1497 = 3142 :
   L1498 = 3144 :
   L1499 = 3147 :
     L15 = 2019 :
    L150 = 217E : 2175
   L1500 = 314A : 313F
   L1501 = 314D :
   L1502 = 3150 :
   L1503 = 3150 :
   L1504 = 3150 : 3147
   L1505 = 3153 :
   L1506 = 315F :
   L1507 = 3165 :
   L1508 = 3168 :
   L1509 = 316A :
    L151 = 2181 :
   L1510 = 316D :
   L1511 = 3170 : 3165
   L1512 = 3173 :
   L1513 = 3176 :
   L1514 = 3176 : 316D
   L1515 = 3179 :
   L1516 = 3185 :
   L1517 = 318B :
   L1518 = 318E :
   L1519 = 3190 :
    L152 = 218C :
   L1520 = 3193 :
   L1521 = 3196 : 318B
   L1522 = 3199 :
   L1523 = 319C :
   L1524 = 319C : 3193
   L1525 = 319F :
   L1526 = 31AB :
   L1527 = 31B1 :
   L1528 = 31B4 :
   L1529 = 31B6 :
    L153 = 2192 :
   L1530 = 31B9 :
   L1531 = 31BC : 31B1
   L1532 = 31BF :
   L1533 = 31C2 :
   L1534 = 31C2 :
   L1535 = 31C2 : 31B9
   L1536 = 31C5 :
   L1537 = 31C8 :
   L1538 = 31D4 :
   L1539 = 31D6 :
    L154 = 2195 :
   L1540 = 31DC :
   L1541 = 31DF :
   L1542 = 31E1 :
   L1543 = 31E4 :
   L1544 = 31E7 : 31DC
   L1545 = 31EA :
   L1546 = 31ED :
   L1547 = 31ED : 31E4
   L1548 = 31F0 :
   L1549 = 31F3 :
    L155 = 2197 :
   L1550 = 31FF :
   L1551 = 3205 :
   L1552 = 3208 :
   L1553 = 320A :
   L1554 = 320D :
   L1555 = 3210 : 3205
   L1556 = 3213 :
   L1557 = 3216 :
   L1558 = 3216 : 320D
   L1559 = 3219 :
    L156 = 219A :
   L1560 = 321C :
   L1561 = 3228 :
   L1562 = 322E :
   L1563 = 3231 :
   L1564 = 3233 :
   L1565 = 3236 :
   L1566 = 3239 : 322E
   L1567 = 323C :
   L1568 = 323F :
   L1569 = 323F :
    L157 = 219D : 2192
   L1570 = 323F : 3236
   L1571 = 3242 :
   L1572 = 324B :
   L1573 = 324D :
   L1574 = 3253 :
   L1575 = 3256 :
   L1576 = 3258 :
   L1577 = 325B :
   L1578 = 325E : 3253
   L1579 = 3261 :
    L158 = 21A0 :
   L1580 = 3264 :
   L1581 = 3264 : 325B
   L1582 = 3267 :
   L1583 = 326E :
   L1584 = 3274 :
   L1585 = 3277 :
   L1586 = 3279 :
   L1587 = 327C :
   L1588 = 327F : 3274
   L1589 = 3282 :
    L159 = 21A3 :
   L1590 = 3285 :
   L1591 = 3285 : 327C
   L1592 = 3288 :
   L1593 = 328F :
   L1594 = 3295 :
   L1595 = 3298 :
   L1596 = 329A :
   L1597 = 329D :
   L1598 = 32A0 : 3295
   L1599 = 32A3 :
     L16 = 201C :
    L160 = 21A3 : 219A
   L1600 = 32A6 :
   L1601 = 32A6 :
   L1602 = 32A6 :
   L1603 = 32A6 :
   L1604 = 32A6 :
   L1605 = 32A6 : 329D
   L1606 = 32A9 :
   L1607 = 32AB :
   L1608 = 32AD :
   L1609 = 32B0 :
    L161 = 21A6 :
   L1610 = 32B2 :
   L1611 = 32B5 :
   L1612 = 32B8 : 32AD
   L1613 = 32BB :
   L1614 = 32BE :
   L1615 = 32BE : 32B5
   L1616 = 32C1 :
   L1617 = 32C3 :
   L1618 = 32C5 :
   L1619 = 32C8 :
    L162 = 21B1 :
   L1620 = 32CA :
   L1621 = 32CD :
   L1622 = 32D0 : 32C5
   L1623 = 32D3 :
   L1624 = 32D6 :
   L1625 = 32D6 : 32CD
   L1626 = 32D9 :
   L1627 = 32DB :
   L1628 = 32DD :
   L1629 = 32E0 :
    L163 = 21B7 :
   L1630 = 32E2 :
   L1631 = 32E5 :
   L1632 = 32E8 : 32DD
   L1633 = 32EB :
   L1634 = 32EE :
   L1635 = 32EE :
   L1636 = 32EE : 32E5
   L1637 = 32F1 :
   L1638 = 32FC :
   L1639 = 3302 :
    L164 = 21BA :
   L1640 = 3305 :
   L1641 = 3307 :
   L1642 = 330A :
   L1643 = 330D : 3302
   L1644 = 3310 :
   L1645 = 3313 :
   L1646 = 3313 : 330A
   L1647 = 3316 :
   L1648 = 3321 :
   L1649 = 3327 :
    L165 = 21BC :
   L1650 = 332A :
   L1651 = 332C :
   L1652 = 332F :
   L1653 = 3332 : 3327
   L1654 = 3335 :
   L1655 = 3338 :
   L1656 = 3338 : 332F
   L1657 = 333B :
   L1658 = 3346 :
   L1659 = 334C :
    L166 = 21BF :
   L1660 = 334F :
   L1661 = 3351 :
   L1662 = 3354 :
   L1663 = 3357 : 334C
   L1664 = 335A :
   L1665 = 335D :
   L1666 = 335D :
   L1667 = 335D : 3354
   L1668 = 3360 :
   L1669 = 3363 :
    L167 = 21C2 : 21B7
   L1670 = 336E :
   L1671 = 3370 :
   L1672 = 3376 :
   L1673 = 3379 :
   L1674 = 337B :
   L1675 = 337E :
   L1676 = 3381 : 3376
   L1677 = 3384 :
   L1678 = 3387 :
   L1679 = 3387 : 337E
    L168 = 21C5 :
   L1680 = 338A :
   L1681 = 338D :
   L1682 = 3398 :
   L1683 = 339E :
   L1684 = 33A1 :
   L1685 = 33A3 :
   L1686 = 33A6 :
   L1687 = 33A9 : 339E
   L1688 = 33AC :
   L1689 = 33AF :
    L169 = 21C8 :
   L1690 = 33AF : 33A6
   L1691 = 33B2 :
   L1692 = 33B5 :
   L1693 = 33C0 :
   L1694 = 33C6 :
   L1695 = 33C9 :
   L1696 = 33CB :
   L1697 = 33CE :
   L1698 = 33D1 : 33C6
   L1699 = 33D4 :
     L17 = 201F :
    L170 = 21C8 :
   L1700 = 33D7 :
   L1701 = 33D7 :
   L1702 = 33D7 : 33CE
   L1703 = 33DA :
   L1704 = 33E2 :
   L1705 = 33E4 :
   L1706 = 33EA :
   L1707 = 33ED :
   L1708 = 33EF :
   L1709 = 33F2 :
    L171 = 21C8 :
   L1710 = 33F5 : 33EA
   L1711 = 33F8 :
   L1712 = 33FB :
   L1713 = 33FB : 33F2
   L1714 = 33FE :
   L1715 = 3409 :
   L1716 = 340F :
   L1717 = 3412 :
   L1718 = 3414 :
   L1719 = 3417 :
    L172 = 21C8 :
   L1720 = 341A : 340F
   L1721 = 341D :
   L1722 = 3420 :
   L1723 = 3420 : 3417
   L1724 = 3423 :
   L1725 = 342E :
   L1726 = 3434 :
   L1727 = 3437 :
   L1728 = 3439 :
   L1729 = 343C :
    L173 = 21C8 :
   L1730 = 343F : 3434
   L1731 = 3442 :
   L1732 = 3445 :
   L1733 = 3445 :
   L1734 = 3445 :
   L1735 = 3445 :
   L1736 = 3445 :
   L1737 = 3445 : 343C
   L1738 = 3448 :
   L1739 = 344A :
    L174 = 21C8 : 21BF
   L1740 = 344C :
   L1741 = 344F :
   L1742 = 3451 :
   L1743 = 3454 :
   L1744 = 3457 : 344C
   L1745 = 345A :
   L1746 = 345D :
   L1747 = 345D : 3454
   L1748 = 3460 :
   L1749 = 3462 :
    L175 = 21CA :
   L1750 = 3464 :
   L1751 = 3467 :
   L1752 = 3469 :
   L1753 = 346C :
   L1754 = 346F : 3464
   L1755 = 3472 :
   L1756 = 3475 :
   L1757 = 3475 : 346C
   L1758 = 3478 :
   L1759 = 347A :
    L176 = 21CD :
   L1760 = 347C :
   L1761 = 347F :
   L1762 = 3481 :
   L1763 = 3484 :
   L1764 = 3487 : 347C
   L1765 = 348A :
   L1766 = 348D :
   L1767 = 348D :
   L1768 = 348D : 3484
   L1769 = 3490 :
    L177 = 21CF :
   L1770 = 349B :
   L1771 = 34A1 :
   L1772 = 34A4 :
   L1773 = 34A6 :
   L1774 = 34A9 :
   L1775 = 34AC : 34A1
   L1776 = 34AF :
   L1777 = 34B2 :
   L1778 = 34B2 : 34A9
   L1779 = 34B5 :
    L178 = 21D1 :
   L1780 = 34C0 :
   L1781 = 34C6 :
   L1782 = 34C9 :
   L1783 = 34CB :
   L1784 = 34CE :
   L1785 = 34D1 : 34C6
   L1786 = 34D4 :
   L1787 = 34D7 :
   L1788 = 34D7 : 34CE
   L1789 = 34DA :
    L179 = 21D3 :
   L1790 = 34E5 :
   L1791 = 34EB :
   L1792 = 34EE :
   L1793 = 34F0 :
   L1794 = 34F3 :
   L1795 = 34F6 : 34EB
   L1796 = 34F9 :
   L1797 = 34FC :
   L1798 = 34FC :
   L1799 = 34FC : 34F3
     L18 = 2022 :
    L180 = 21D6 :
   L1800 = 34FF :
   L1801 = 3502 :
   L1802 = 350D :
   L1803 = 350F :
   L1804 = 3515 :
   L1805 = 3518 :
   L1806 = 351A :
   L1807 = 351D :
   L1808 = 3520 : 3515
   L1809 = 3523 :
    L181 = 21D8 :
   L1810 = 3526 :
   L1811 = 3526 : 351D
   L1812 = 3529 :
   L1813 = 352C :
   L1814 = 3537 :
   L1815 = 353D :
   L1816 = 3540 :
   L1817 = 3542 :
   L1818 = 3545 :
   L1819 = 3548 : 353D
    L182 = 21DB :
   L1820 = 354B :
   L1821 = 354E :
   L1822 = 354E : 3545
   L1823 = 3551 :
   L1824 = 3554 :
   L1825 = 355F :
   L1826 = 3565 :
   L1827 = 3568 :
   L1828 = 356A :
   L1829 = 356D :
    L183 = 21DE : 21D3
   L1830 = 3570 : 3565
   L1831 = 3573 :
   L1832 = 3576 :
   L1833 = 3576 :
   L1834 = 3576 : 356D
   L1835 = 3579 :
   L1836 = 3581 :
   L1837 = 3583 :
   L1838 = 3589 :
   L1839 = 358C :
    L184 = 21E1 :
   L1840 = 358E :
   L1841 = 3591 :
   L1842 = 3594 : 3589
   L1843 = 3597 :
   L1844 = 359A :
   L1845 = 359A : 3591
   L1846 = 359D :
   L1847 = 35A8 :
   L1848 = 35AE :
   L1849 = 35B1 :
    L185 = 21E4 :
   L1850 = 35B3 :
   L1851 = 35B6 :
   L1852 = 35B9 : 35AE
   L1853 = 35BC :
   L1854 = 35BF :
   L1855 = 35BF : 35B6
   L1856 = 35C2 :
   L1857 = 35CD :
   L1858 = 35D3 :
   L1859 = 35D6 :
    L186 = 21E4 : 21DB
   L1860 = 35D8 :
   L1861 = 35DB :
   L1862 = 35DE : 35D3
   L1863 = 35E1 :
   L1864 = 35E4 :
   L1865 = 35E4 :
   L1866 = 35E4 :
   L1867 = 35E4 :
   L1868 = 35E4 :
   L1869 = 35E4 : 35DB
    L187 = 21E6 :
   L1870 = 35E7 :
   L1871 = 35EA :
   L1872 = 35EC :
   L1873 = 35EE :
   L1874 = 35F0 :
   L1875 = 35F3 :
   L1876 = 35F5 :
   L1877 = 35F8 :
   L1878 = 35FB : 35F0
   L1879 = 35FE :
    L188 = 21E9 :
   L1880 = 3601 :
   L1881 = 3601 : 35F8
   L1882 = 3604 :
   L1883 = 3607 :
   L1884 = 3609 :
   L1885 = 360B :
   L1886 = 360D :
   L1887 = 3610 :
   L1888 = 3612 :
   L1889 = 3615 :
    L189 = 21EB :
   L1890 = 3618 : 360D
   L1891 = 361B :
   L1892 = 361E :
   L1893 = 361E : 3615
   L1894 = 3621 :
   L1895 = 3624 :
   L1896 = 3626 :
   L1897 = 3628 :
   L1898 = 362A :
   L1899 = 362D :
     L19 = 2022 :
    L190 = 21ED :
   L1900 = 362F :
   L1901 = 3632 :
   L1902 = 3635 : 362A
   L1903 = 3638 :
   L1904 = 363B :
   L1905 = 363B :
   L1906 = 363B : 3632
   L1907 = 363E :
   L1908 = 3642 :
   L1909 = 3646 :
    L191 = 21EF :
   L1910 = 364F :
   L1911 = 3655 :
   L1912 = 3658 :
   L1913 = 365A :
   L1914 = 365D :
   L1915 = 3660 : 3655
   L1916 = 3663 :
   L1917 = 3666 :
   L1918 = 3666 : 365D
   L1919 = 3669 :
    L192 = 21F2 :
   L1920 = 366D :
   L1921 = 3671 :
   L1922 = 367A :
   L1923 = 3680 :
   L1924 = 3683 :
   L1925 = 3685 :
   L1926 = 3688 :
   L1927 = 368B : 3680
   L1928 = 368E :
   L1929 = 3691 :
    L193 = 21F4 :
   L1930 = 3691 : 3688
   L1931 = 3694 :
   L1932 = 3698 :
   L1933 = 369C :
   L1934 = 36A5 :
   L1935 = 36AB :
   L1936 = 36AE :
   L1937 = 36B0 :
   L1938 = 36B3 :
   L1939 = 36B6 : 36AB
    L194 = 21F7 :
   L1940 = 36B9 :
   L1941 = 36BC :
   L1942 = 36BC :
   L1943 = 36BC : 36B3
   L1944 = 36BF :
   L1945 = 36C2 :
   L1946 = 36C6 :
   L1947 = 36CC :
   L1948 = 36CE :
   L1949 = 36D4 :
    L195 = 21FA : 21EF
   L1950 = 36D7 :
   L1951 = 36D9 :
   L1952 = 36DC :
   L1953 = 36DF : 36D4
   L1954 = 36E2 :
   L1955 = 36E5 :
   L1956 = 36E5 : 36DC
   L1957 = 36E8 :
   L1958 = 36EB :
   L1959 = 36EF :
    L196 = 21FD :
   L1960 = 36F1 :
   L1961 = 36F7 :
   L1962 = 36FA :
   L1963 = 36FC :
   L1964 = 36FF :
   L1965 = 3702 : 36F7
   L1966 = 3705 :
   L1967 = 3708 :
   L1968 = 3708 : 36FF
   L1969 = 370B :
    L197 = 2200 :
   L1970 = 370E :
   L1971 = 3712 :
   L1972 = 3714 :
   L1973 = 371A :
   L1974 = 371D :
   L1975 = 371F :
   L1976 = 3722 :
   L1977 = 3725 : 371A
   L1978 = 3728 :
   L1979 = 372B :
    L198 = 2200 : 21F7
   L1980 = 372B :
   L1981 = 372B : 3722
   L1982 = 372E :
   L1983 = 3730 :
   L1984 = 3732 :
   L1985 = 3738 :
   L1986 = 373A :
   L1987 = 3740 :
   L1988 = 3743 :
   L1989 = 3745 :
    L199 = 2202 :
   L1990 = 3748 :
   L1991 = 374B : 3740
   L1992 = 374E :
   L1993 = 3751 :
   L1994 = 3751 : 3748
   L1995 = 3754 :
   L1996 = 3756 :
   L1997 = 3758 :
   L1998 = 375A :
   L1999 = 3760 :
      L2 = 2009 :
     L20 = 2022 :
    L200 = 2205 :
   L2000 = 3763 :
   L2001 = 3765 :
   L2002 = 3768 :
   L2003 = 376B : 3760
   L2004 = 376E :
   L2005 = 3771 :
   L2006 = 3771 : 3768
   L2007 = 3774 :
   L2008 = 3776 :
   L2009 = 3778 :
    L201 = 2207 :
   L2010 = 377A :
   L2011 = 3780 :
   L2012 = 3783 :
   L2013 = 3785 :
   L2014 = 3788 :
   L2015 = 378B : 3780
   L2016 = 378E :
   L2017 = 3791 :
   L2018 = 3791 :
   L2019 = 3791 :
    L202 = 2209 :
   L2020 = 3791 :
   L2021 = 3791 :
   L2022 = 3791 : 3788
   L2023 = 3794 :
   L2024 = 3799 :
   L2025 = 379B :
   L2026 = 379E :
   L2027 = 37A0 :
   L2028 = 37A3 :
   L2029 = 37A6 : 379B
    L203 = 220B :
   L2030 = 37A9 :
   L2031 = 37AC :
   L2032 = 37AC : 37A3
   L2033 = 37AF :
   L2034 = 37B4 :
   L2035 = 37B6 :
   L2036 = 37B9 :
   L2037 = 37BB :
   L2038 = 37BE :
   L2039 = 37C1 : 37B6
    L204 = 220E :
   L2040 = 37C4 :
   L2041 = 37C7 :
   L2042 = 37C7 : 37BE
   L2043 = 37CA :
   L2044 = 37CF :
   L2045 = 37D1 :
   L2046 = 37D4 :
   L2047 = 37D6 :
   L2048 = 37D9 :
   L2049 = 37DC : 37D1
    L205 = 2210 :
   L2050 = 37DF :
   L2051 = 37E2 :
   L2052 = 37E2 :
   L2053 = 37E2 : 37D9
   L2054 = 37E5 :
   L2055 = 37F1 :
   L2056 = 37F7 :
   L2057 = 37FA :
   L2058 = 37FC :
   L2059 = 37FF :
    L206 = 2213 :
   L2060 = 3802 : 37F7
   L2061 = 3805 :
   L2062 = 3808 :
   L2063 = 3808 : 37FF
   L2064 = 380B :
   L2065 = 3817 :
   L2066 = 381D :
   L2067 = 3820 :
   L2068 = 3822 :
   L2069 = 3825 :
    L207 = 2216 : 220B
   L2070 = 3828 : 381D
   L2071 = 382B :
   L2072 = 382E :
   L2073 = 382E : 3825
   L2074 = 3831 :
   L2075 = 383D :
   L2076 = 3843 :
   L2077 = 3846 :
   L2078 = 3848 :
   L2079 = 384B :
    L208 = 2219 :
   L2080 = 384E : 3843
   L2081 = 3851 :
   L2082 = 3854 :
   L2083 = 3854 :
   L2084 = 3854 : 384B
   L2085 = 3857 :
   L2086 = 385A :
   L2087 = 3866 :
   L2088 = 3868 :
   L2089 = 386E :
    L209 = 221C :
   L2090 = 3871 :
   L2091 = 3873 :
   L2092 = 3876 :
   L2093 = 3879 : 386E
   L2094 = 387C :
   L2095 = 387F :
   L2096 = 387F : 3876
   L2097 = 3882 :
   L2098 = 3885 :
   L2099 = 3891 :
     L21 = 2022 :
    L210 = 221C :
   L2100 = 3897 :
   L2101 = 389A :
   L2102 = 389C :
   L2103 = 389F :
   L2104 = 38A2 : 3897
   L2105 = 38A5 :
   L2106 = 38A8 :
   L2107 = 38A8 : 389F
   L2108 = 38AB :
   L2109 = 38AE :
    L211 = 221C : 2213
   L2110 = 38BA :
   L2111 = 38C0 :
   L2112 = 38C3 :
   L2113 = 38C5 :
   L2114 = 38C8 :
   L2115 = 38CB : 38C0
   L2116 = 38CE :
   L2117 = 38D1 :
   L2118 = 38D1 :
   L2119 = 38D1 : 38C8
    L212 = 221F :
   L2120 = 38D4 :
   L2121 = 38DD :
   L2122 = 38DF :
   L2123 = 38E5 :
   L2124 = 38E8 :
   L2125 = 38EA :
   L2126 = 38ED :
   L2127 = 38F0 : 38E5
   L2128 = 38F3 :
   L2129 = 38F6 :
    L213 = 2223 :
   L2130 = 38F6 : 38ED
   L2131 = 38F9 :
   L2132 = 3900 :
   L2133 = 3906 :
   L2134 = 3909 :
   L2135 = 390B :
   L2136 = 390E :
   L2137 = 3911 : 3906
   L2138 = 3914 :
   L2139 = 3917 :
    L214 = 2227 :
   L2140 = 3917 : 390E
   L2141 = 391A :
   L2142 = 3921 :
   L2143 = 3927 :
   L2144 = 392A :
   L2145 = 392C :
   L2146 = 392F :
   L2147 = 3932 : 3927
   L2148 = 3935 :
   L2149 = 3938 :
    L215 = 2230 :
   L2150 = 3938 :
   L2151 = 3938 :
   L2152 = 3938 :
   L2153 = 3938 :
   L2154 = 3938 : 392F
   L2155 = 393A :
   L2156 = 393C :
   L2157 = 393E :
   L2158 = 3941 :
   L2159 = 3943 :
    L216 = 2236 :
   L2160 = 3946 :
   L2161 = 3949 : 393E
   L2162 = 394C :
   L2163 = 394F :
   L2164 = 394F : 3946
   L2165 = 3951 :
   L2166 = 3953 :
   L2167 = 3955 :
   L2168 = 3958 :
   L2169 = 395A :
    L217 = 2239 :
   L2170 = 395D :
   L2171 = 3960 : 3955
   L2172 = 3963 :
   L2173 = 3966 :
   L2174 = 3966 : 395D
   L2175 = 3968 :
   L2176 = 396A :
   L2177 = 396C :
   L2178 = 396F :
   L2179 = 3971 :
    L218 = 223B :
   L2180 = 3974 :
   L2181 = 3977 : 396C
   L2182 = 397A :
   L2183 = 397D :
   L2184 = 397D :
   L2185 = 397D : 3974
   L2186 = 3980 :
   L2187 = 398B :
   L2188 = 3991 :
   L2189 = 3994 :
    L219 = 223E :
   L2190 = 3996 :
   L2191 = 3999 :
   L2192 = 399C : 3991
   L2193 = 399F :
   L2194 = 39A2 :
   L2195 = 39A2 : 3999
   L2196 = 39A5 :
   L2197 = 39B0 :
   L2198 = 39B6 :
   L2199 = 39B9 :
     L22 = 2022 :
    L220 = 2241 : 2236
   L2200 = 39BB :
   L2201 = 39BE :
   L2202 = 39C1 : 39B6
   L2203 = 39C4 :
   L2204 = 39C7 :
   L2205 = 39C7 : 39BE
   L2206 = 39CA :
   L2207 = 39D5 :
   L2208 = 39DB :
   L2209 = 39DE :
    L221 = 2244 :
   L2210 = 39E0 :
   L2211 = 39E3 :
   L2212 = 39E6 : 39DB
   L2213 = 39E9 :
   L2214 = 39EC :
   L2215 = 39EC :
   L2216 = 39EC : 39E3
   L2217 = 39EE :
   L2218 = 39F1 :
   L2219 = 39FC :
    L222 = 2247 :
   L2220 = 39FE :
   L2221 = 3A04 :
   L2222 = 3A07 :
   L2223 = 3A09 :
   L2224 = 3A0C :
   L2225 = 3A0F : 3A04
   L2226 = 3A12 :
   L2227 = 3A15 :
   L2228 = 3A15 : 3A0C
   L2229 = 3A17 :
    L223 = 2247 : 223E
   L2230 = 3A1A :
   L2231 = 3A25 :
   L2232 = 3A2B :
   L2233 = 3A2E :
   L2234 = 3A30 :
   L2235 = 3A33 :
   L2236 = 3A36 : 3A2B
   L2237 = 3A39 :
   L2238 = 3A3C :
   L2239 = 3A3C : 3A33
    L224 = 224A :
   L2240 = 3A3E :
   L2241 = 3A41 :
   L2242 = 3A4C :
   L2243 = 3A52 :
   L2244 = 3A55 :
   L2245 = 3A57 :
   L2246 = 3A5A :
   L2247 = 3A5D : 3A52
   L2248 = 3A60 :
   L2249 = 3A63 :
    L225 = 224E :
   L2250 = 3A63 :
   L2251 = 3A63 : 3A5A
   L2252 = 3A66 :
   L2253 = 3A6E :
   L2254 = 3A70 :
   L2255 = 3A76 :
   L2256 = 3A79 :
   L2257 = 3A7B :
   L2258 = 3A7E :
   L2259 = 3A81 : 3A76
    L226 = 2252 :
   L2260 = 3A84 :
   L2261 = 3A87 :
   L2262 = 3A87 : 3A7E
   L2263 = 3A8A :
   L2264 = 3A95 :
   L2265 = 3A9B :
   L2266 = 3A9E :
   L2267 = 3AA0 :
   L2268 = 3AA3 :
   L2269 = 3AA6 : 3A9B
    L227 = 225B :
   L2270 = 3AA9 :
   L2271 = 3AAC :
   L2272 = 3AAC : 3AA3
   L2273 = 3AAF :
   L2274 = 3ABA :
   L2275 = 3AC0 :
   L2276 = 3AC3 :
   L2277 = 3AC5 :
   L2278 = 3AC8 :
   L2279 = 3ACB : 3AC0
    L228 = 2261 :
   L2280 = 3ACE :
   L2281 = 3AD1 :
   L2282 = 3AD1 :
   L2283 = 3AD1 : 3AC8
   L2284 = 3AD4 :
   L2285 = 3AD7 :
   L2286 = 3AD7 :
   L2287 = 3AD9 :
   L2288 = 3ADB :
   L2289 = 3ADC :
    L229 = 2264 :
   L2290 = 3ADC : 3AD1
     L23 = 2022 :
    L230 = 2266 :
    L231 = 2269 :
    L232 = 226C : 2261
    L233 = 226F :
    L234 = 2272 :
    L235 = 2272 : 2269
    L236 = 2275 :
    L237 = 2279 :
    L238 = 227D :
    L239 = 2286 :
     L24 = 2022 : 201F
    L240 = 228C :
    L241 = 228F :
    L242 = 2291 :
    L243 = 2294 :
    L244 = 2297 : 228C
    L245 = 229A :
    L246 = 229D :
    L247 = 229D :
    L248 = 229D : 2294
    L249 = 229F :
     L25 = 2022 :
    L250 = 22A2 :
    L251 = 22A6 :
    L252 = 22AC :
    L253 = 22AE :
    L254 = 22B4 :
    L255 = 22B7 :
    L256 = 22B9 :
    L257 = 22BC :
    L258 = 22BF : 22B4
    L259 = 22C2 :
     L26 = 2024 :
    L260 = 22C5 :
    L261 = 22C5 : 22BC
    L262 = 22C7 :
    L263 = 22CA :
    L264 = 22CE :
    L265 = 22D0 :
    L266 = 22D6 :
    L267 = 22D9 :
    L268 = 22DB :
    L269 = 22DE :
     L27 = 202A :
    L270 = 22E1 : 22D6
    L271 = 22E4 :
    L272 = 22E7 :
    L273 = 22E7 : 22DE
    L274 = 22E9 :
    L275 = 22EC :
    L276 = 22F0 :
    L277 = 22F2 :
    L278 = 22F8 :
    L279 = 22FB :
     L28 = 202A :
    L280 = 22FD :
    L281 = 2300 :
    L282 = 2303 : 22F8
    L283 = 2306 :
    L284 = 2309 :
    L285 = 2309 :
    L286 = 2309 : 2300
    L287 = 230C :
    L288 = 230E :
    L289 = 2310 :
     L29 = 202A :
    L290 = 2316 :
    L291 = 2318 :
    L292 = 231E :
    L293 = 2321 :
    L294 = 2323 :
    L295 = 2326 :
    L296 = 2329 : 231E
    L297 = 232C :
    L298 = 232F :
    L299 = 232F : 2326
      L3 = 2009 :
     L30 = 202C :
    L300 = 2332 :
    L301 = 2334 :
    L302 = 2336 :
    L303 = 2338 :
    L304 = 233E :
    L305 = 2341 :
    L306 = 2343 :
    L307 = 2346 :
    L308 = 2349 : 233E
    L309 = 234C :
     L31 = 202F :
    L310 = 234F :
    L311 = 234F : 2346
    L312 = 2352 :
    L313 = 2354 :
    L314 = 2356 :
    L315 = 2358 :
    L316 = 235E :
    L317 = 2361 :
    L318 = 2363 :
    L319 = 2366 :
     L32 = 202F :
    L320 = 2369 : 235E
    L321 = 236C :
    L322 = 236F :
    L323 = 236F :
    L324 = 236F :
    L325 = 236F :
    L326 = 236F :
    L327 = 236F : 2366
    L328 = 2371 :
    L329 = 2376 :
     L33 = 202F :
    L330 = 2378 :
    L331 = 237B :
    L332 = 237D :
    L333 = 2380 :
    L334 = 2383 : 2378
    L335 = 2386 :
    L336 = 2389 :
    L337 = 2389 : 2380
    L338 = 238B :
    L339 = 2390 :
     L34 = 202F :
    L340 = 2392 :
    L341 = 2395 :
    L342 = 2397 :
    L343 = 239A :
    L344 = 239D : 2392
    L345 = 23A0 :
    L346 = 23A3 :
    L347 = 23A3 : 239A
    L348 = 23A5 :
    L349 = 23AA :
     L35 = 202F :
    L350 = 23AC :
    L351 = 23AF :
    L352 = 23B1 :
    L353 = 23B4 :
    L354 = 23B7 : 23AC
    L355 = 23BA :
    L356 = 23BD :
    L357 = 23BD :
    L358 = 23BD : 23B4
    L359 = 23C0 :
     L36 = 202F :
    L360 = 23CC :
    L361 = 23D2 :
    L362 = 23D5 :
    L363 = 23D7 :
    L364 = 23DA :
    L365 = 23DD : 23D2
    L366 = 23E0 :
    L367 = 23E3 :
    L368 = 23E3 : 23DA
    L369 = 23E6 :
     L37 = 202F :
    L370 = 23F2 :
    L371 = 23F8 :
    L372 = 23FB :
    L373 = 23FD :
    L374 = 2400 :
    L375 = 2403 : 23F8
    L376 = 2406 :
    L377 = 2409 :
    L378 = 2409 : 2400
    L379 = 240C :
     L38 = 202F :
    L380 = 2418 :
    L381 = 241E :
    L382 = 2421 :
    L383 = 2423 :
    L384 = 2426 :
    L385 = 2429 : 241E
    L386 = 242C :
    L387 = 242F :
    L388 = 242F :
    L389 = 242F : 2426
     L39 = 202F :
    L390 = 2431 :
    L391 = 2434 :
    L392 = 2440 :
    L393 = 2442 :
    L394 = 2448 :
    L395 = 244B :
    L396 = 244D :
    L397 = 2450 :
    L398 = 2453 : 2448
    L399 = 2456 :
      L4 = 2009 :
     L40 = 2031 :
    L400 = 2459 :
    L401 = 2459 : 2450
    L402 = 245B :
    L403 = 245E :
    L404 = 246A :
    L405 = 2470 :
    L406 = 2473 :
    L407 = 2475 :
    L408 = 2478 :
    L409 = 247B : 2470
     L41 = 2033 :
    L410 = 247E :
    L411 = 2481 :
    L412 = 2481 : 2478
    L413 = 2483 :
    L414 = 2486 :
    L415 = 2492 :
    L416 = 2498 :
    L417 = 249B :
    L418 = 249D :
    L419 = 24A0 :
     L42 = 2035 :
    L420 = 24A3 : 2498
    L421 = 24A6 :
    L422 = 24A9 :
    L423 = 24A9 :
    L424 = 24A9 : 24A0
    L425 = 24AC :
    L426 = 24B5 :
    L427 = 24B7 :
    L428 = 24BD :
    L429 = 24C0 :
     L43 = 2038 :
    L430 = 24C2 :
    L431 = 24C5 :
    L432 = 24C8 : 24BD
    L433 = 24CB :
    L434 = 24CE :
    L435 = 24CE : 24C5
    L436 = 24D1 :
    L437 = 24D8 :
    L438 = 24DE :
    L439 = 24E1 :
     L44 = 203A :
    L440 = 24E3 :
    L441 = 24E6 :
    L442 = 24E9 : 24DE
    L443 = 24EC :
    L444 = 24EF :
    L445 = 24EF : 24E6
    L446 = 24F2 :
    L447 = 24F9 :
    L448 = 24FF :
    L449 = 2502 :
     L45 = 203D :
    L450 = 2504 :
    L451 = 2507 :
    L452 = 250A : 24FF
    L453 = 250D :
    L454 = 2510 :
    L455 = 2510 :
    L456 = 2510 :
    L457 = 2510 :
    L458 = 2510 :
    L459 = 2510 : 2507
     L46 = 2040 : 2035
    L460 = 2512 :
    L461 = 2514 :
    L462 = 2516 :
    L463 = 2519 :
    L464 = 251B :
    L465 = 251E :
    L466 = 2521 : 2516
    L467 = 2524 :
    L468 = 2527 :
    L469 = 2527 : 251E
     L47 = 2043 :
    L470 = 2529 :
    L471 = 252B :
    L472 = 252D :
    L473 = 2530 :
    L474 = 2532 :
    L475 = 2535 :
    L476 = 2538 : 252D
    L477 = 253B :
    L478 = 253E :
    L479 = 253E : 2535
     L48 = 2046 :
    L480 = 2540 :
    L481 = 2542 :
    L482 = 2544 :
    L483 = 2547 :
    L484 = 2549 :
    L485 = 254C :
    L486 = 254F : 2544
    L487 = 2552 :
    L488 = 2555 :
    L489 = 2555 :
     L49 = 2046 : 203D
    L490 = 2555 : 254C
    L491 = 2558 :
    L492 = 2563 :
    L493 = 2569 :
    L494 = 256C :
    L495 = 256E :
    L496 = 2571 :
    L497 = 2574 : 2569
    L498 = 2577 :
    L499 = 257A :
      L5 = 2009 :
     L50 = 2048 :
    L500 = 257A : 2571
    L501 = 257D :
    L502 = 2588 :
    L503 = 258E :
    L504 = 2591 :
    L505 = 2593 :
    L506 = 2596 :
    L507 = 2599 : 258E
    L508 = 259C :
    L509 = 259F :
     L51 = 204A :
    L510 = 259F : 2596
    L511 = 25A2 :
    L512 = 25AD :
    L513 = 25B3 :
    L514 = 25B6 :
    L515 = 25B8 :
    L516 = 25BB :
    L517 = 25BE : 25B3
    L518 = 25C1 :
    L519 = 25C4 :
     L52 = 204C :
    L520 = 25C4 :
    L521 = 25C4 : 25BB
    L522 = 25C6 :
    L523 = 25C9 :
    L524 = 25D4 :
    L525 = 25D6 :
    L526 = 25DC :
    L527 = 25DF :
    L528 = 25E1 :
    L529 = 25E4 :
     L53 = 204F :
    L530 = 25E7 : 25DC
    L531 = 25EA :
    L532 = 25ED :
    L533 = 25ED : 25E4
    L534 = 25EF :
    L535 = 25F2 :
    L536 = 25FD :
    L537 = 2603 :
    L538 = 2606 :
    L539 = 2608 :
     L54 = 2051 :
    L540 = 260B :
    L541 = 260E : 2603
    L542 = 2611 :
    L543 = 2614 :
    L544 = 2614 : 260B
    L545 = 2616 :
    L546 = 2619 :
    L547 = 2624 :
    L548 = 262A :
    L549 = 262D :
     L55 = 2054 :
    L550 = 262F :
    L551 = 2632 :
    L552 = 2635 : 262A
    L553 = 2638 :
    L554 = 263B :
    L555 = 263B :
    L556 = 263B : 2632
    L557 = 263E :
    L558 = 2646 :
    L559 = 2648 :
     L56 = 2057 : 204C
    L560 = 264E :
    L561 = 2651 :
    L562 = 2653 :
    L563 = 2656 :
    L564 = 2659 : 264E
    L565 = 265C :
    L566 = 265F :
    L567 = 265F : 2656
    L568 = 2662 :
    L569 = 266D :
     L57 = 205A :
    L570 = 2673 :
    L571 = 2676 :
    L572 = 2678 :
    L573 = 267B :
    L574 = 267E : 2673
    L575 = 2681 :
    L576 = 2684 :
    L577 = 2684 : 267B
    L578 = 2687 :
    L579 = 2692 :
     L58 = 205D :
    L580 = 2698 :
    L581 = 269B :
    L582 = 269D :
    L583 = 26A0 :
    L584 = 26A3 : 2698
    L585 = 26A6 :
    L586 = 26A9 :
    L587 = 26A9 :
    L588 = 26A9 :
    L589 = 26A9 :
     L59 = 205D : 2054
    L590 = 26A9 :
    L591 = 26A9 : 26A0
    L592 = 26AB :
    L593 = 26AD :
    L594 = 26AF :
    L595 = 26B1 :
    L596 = 26B4 :
    L597 = 26B6 :
    L598 = 26B9 :
    L599 = 26BC : 26B1
      L6 = 2009 : 2003
     L60 = 205F :
    L600 = 26BF :
    L601 = 26C2 :
    L602 = 26C2 : 26B9
    L603 = 26C4 :
    L604 = 26C6 :
    L605 = 26C8 :
    L606 = 26CA :
    L607 = 26CD :
    L608 = 26CF :
    L609 = 26D2 :
     L61 = 2061 :
    L610 = 26D5 : 26CA
    L611 = 26D8 :
    L612 = 26DB :
    L613 = 26DB : 26D2
    L614 = 26DD :
    L615 = 26DF :
    L616 = 26E1 :
    L617 = 26E3 :
    L618 = 26E6 :
    L619 = 26E8 :
     L62 = 2063 :
    L620 = 26EB :
    L621 = 26EE : 26E3
    L622 = 26F1 :
    L623 = 26F4 :
    L624 = 26F4 :
    L625 = 26F4 : 26EB
    L626 = 26F7 :
    L627 = 26FB :
    L628 = 2706 :
    L629 = 270C :
     L63 = 2066 :
    L630 = 270F :
    L631 = 2711 :
    L632 = 2714 :
    L633 = 2717 : 270C
    L634 = 271A :
    L635 = 271D :
    L636 = 271D : 2714
    L637 = 2720 :
    L638 = 2724 :
    L639 = 272F :
     L64 = 2068 :
    L640 = 2735 :
    L641 = 2738 :
    L642 = 273A :
    L643 = 273D :
    L644 = 2740 : 2735
    L645 = 2743 :
    L646 = 2746 :
    L647 = 2746 : 273D
    L648 = 2749 :
    L649 = 274D :
     L65 = 206B :
    L650 = 2758 :
    L651 = 275E :
    L652 = 2761 :
    L653 = 2763 :
    L654 = 2766 :
    L655 = 2769 : 275E
    L656 = 276C :
    L657 = 276F :
    L658 = 276F :
    L659 = 276F : 2766
     L66 = 206E : 2063
    L660 = 2771 :
    L661 = 2773 :
    L662 = 2776 :
    L663 = 2781 :
    L664 = 2783 :
    L665 = 2789 :
    L666 = 278C :
    L667 = 278E :
    L668 = 2791 :
    L669 = 2794 : 2789
     L67 = 2071 :
    L670 = 2797 :
    L671 = 279A :
    L672 = 279A : 2791
    L673 = 279C :
    L674 = 279E :
    L675 = 27A1 :
    L676 = 27AC :
    L677 = 27B2 :
    L678 = 27B5 :
    L679 = 27B7 :
     L68 = 2074 :
    L680 = 27BA :
    L681 = 27BD : 27B2
    L682 = 27C0 :
    L683 = 27C3 :
    L684 = 27C3 : 27BA
    L685 = 27C5 :
    L686 = 27C7 :
    L687 = 27CA :
    L688 = 27D5 :
    L689 = 27DB :
     L69 = 2074 :
    L690 = 27DE :
    L691 = 27E0 :
    L692 = 27E3 :
    L693 = 27E6 : 27DB
    L694 = 27E9 :
    L695 = 27EC :
    L696 = 27EC :
    L697 = 27EC : 27E3
    L698 = 27EF :
    L699 = 27F3 :
      L7 = 200B :
     L70 = 2074 : 206B
    L700 = 27FB :
    L701 = 27FD :
    L702 = 2803 :
    L703 = 2806 :
    L704 = 2808 :
    L705 = 280B :
    L706 = 280E : 2803
    L707 = 2811 :
    L708 = 2814 :
    L709 = 2814 : 280B
     L71 = 2077 :
    L710 = 2817 :
    L711 = 281B :
    L712 = 2826 :
    L713 = 282C :
    L714 = 282F :
    L715 = 2831 :
    L716 = 2834 :
    L717 = 2837 : 282C
    L718 = 283A :
    L719 = 283D :
     L72 = 2082 :
    L720 = 283D : 2834
    L721 = 2840 :
    L722 = 2844 :
    L723 = 284F :
    L724 = 2855 :
    L725 = 2858 :
    L726 = 285A :
    L727 = 285D :
    L728 = 2860 : 2855
    L729 = 2863 :
     L73 = 2088 :
    L730 = 2866 :
    L731 = 2866 :
    L732 = 2866 :
    L733 = 2866 :
    L734 = 2866 :
    L735 = 2866 : 285D
    L736 = 2868 :
    L737 = 286A :
    L738 = 286D :
    L739 = 286F :
     L74 = 208B :
    L740 = 2871 :
    L741 = 2873 :
    L742 = 2876 :
    L743 = 2878 :
    L744 = 287B :
    L745 = 287E : 2873
    L746 = 2881 :
    L747 = 2884 :
    L748 = 2884 : 287B
    L749 = 2886 :
     L75 = 208D :
    L750 = 2888 :
    L751 = 288B :
    L752 = 288D :
    L753 = 288F :
    L754 = 2891 :
    L755 = 2894 :
    L756 = 2896 :
    L757 = 2899 :
    L758 = 289C : 2891
    L759 = 289F :
     L76 = 2090 :
    L760 = 28A2 :
    L761 = 28A2 : 2899
    L762 = 28A4 :
    L763 = 28A6 :
    L764 = 28A9 :
    L765 = 28AB :
    L766 = 28AD :
    L767 = 28AF :
    L768 = 28B2 :
    L769 = 28B4 :
     L77 = 2093 : 2088
    L770 = 28B7 :
    L771 = 28BA : 28AF
    L772 = 28BD :
    L773 = 28C0 :
    L774 = 28C0 :
    L775 = 28C0 : 28B7
    L776 = 28C3 :
    L777 = 28C7 :
    L778 = 28CB :
    L779 = 28CF :
     L78 = 2096 :
    L780 = 28D8 :
    L781 = 28DE :
    L782 = 28E1 :
    L783 = 28E3 :
    L784 = 28E6 :
    L785 = 28E9 : 28DE
    L786 = 28EC :
    L787 = 28EF :
    L788 = 28EF : 28E6
    L789 = 28F2 :
     L79 = 2099 :
    L790 = 28F6 :
    L791 = 28FA :
    L792 = 28FE :
    L793 = 2907 :
    L794 = 290D :
    L795 = 2910 :
    L796 = 2912 :
    L797 = 2915 :
    L798 = 2918 : 290D
    L799 = 291B :
      L8 = 200E :
     L80 = 2099 :
    L800 = 291E :
    L801 = 291E : 2915
    L802 = 2921 :
    L803 = 2925 :
    L804 = 2929 :
    L805 = 292D :
    L806 = 2936 :
    L807 = 293C :
    L808 = 293F :
    L809 = 2941 :
     L81 = 2099 : 2090
    L810 = 2944 :
    L811 = 2947 : 293C
    L812 = 294A :
    L813 = 294D :
    L814 = 294D :
    L815 = 294D : 2944
    L816 = 294F :
    L817 = 2951 :
    L818 = 2954 :
    L819 = 2958 :
     L82 = 209C :
    L820 = 295E :
    L821 = 2960 :
    L822 = 2966 :
    L823 = 2969 :
    L824 = 296B :
    L825 = 296E :
    L826 = 2971 : 2966
    L827 = 2974 :
    L828 = 2977 :
    L829 = 2977 : 296E
     L83 = 20A7 :
    L830 = 2979 :
    L831 = 297B :
    L832 = 297E :
    L833 = 2982 :
    L834 = 2984 :
    L835 = 298A :
    L836 = 298D :
    L837 = 298F :
    L838 = 2992 :
    L839 = 2995 : 298A
     L84 = 20AD :
    L840 = 2998 :
    L841 = 299B :
    L842 = 299B : 2992
    L843 = 299D :
    L844 = 299F :
    L845 = 29A2 :
    L846 = 29A6 :
    L847 = 29A8 :
    L848 = 29AE :
    L849 = 29B1 :
     L85 = 20B0 :
    L850 = 29B3 :
    L851 = 29B6 :
    L852 = 29B9 : 29AE
    L853 = 29BC :
    L854 = 29BF :
    L855 = 29BF :
    L856 = 29BF : 29B6
    L857 = 29C2 :
    L858 = 29C6 :
    L859 = 29C8 :
     L86 = 20B2 :
    L860 = 29CA :
    L861 = 29D0 :
    L862 = 29D2 :
    L863 = 29D8 :
    L864 = 29DB :
    L865 = 29DD :
    L866 = 29E0 :
    L867 = 29E3 : 29D8
    L868 = 29E6 :
    L869 = 29E9 :
     L87 = 20B5 :
    L870 = 29E9 : 29E0
    L871 = 29EC :
    L872 = 29F0 :
    L873 = 29F2 :
    L874 = 29F4 :
    L875 = 29F6 :
    L876 = 29FC :
    L877 = 29FF :
    L878 = 2A01 :
    L879 = 2A04 :
     L88 = 20B8 : 20AD
    L880 = 2A07 : 29FC
    L881 = 2A0A :
    L882 = 2A0D :
    L883 = 2A0D : 2A04
    L884 = 2A10 :
    L885 = 2A14 :
    L886 = 2A16 :
    L887 = 2A18 :
    L888 = 2A1A :
    L889 = 2A20 :
     L89 = 20BB :
    L890 = 2A23 :
    L891 = 2A25 :
    L892 = 2A28 :
    L893 = 2A2B : 2A20
    L894 = 2A2E :
    L895 = 2A31 :
    L896 = 2A31 :
    L897 = 2A31 :
    L898 = 2A31 :
    L899 = 2A31 :
      L9 = 200E :
     L90 = 20BE :
    L900 = 2A31 : 2A28
    L901 = 2A33 :
    L902 = 2A35 :
    L903 = 2A3A :
    L904 = 2A3C :
    L905 = 2A3F :
    L906 = 2A41 :
    L907 = 2A44 :
    L908 = 2A47 : 2A3C
    L909 = 2A4A :
     L91 = 20BE :
    L910 = 2A4D :
    L911 = 2A4D : 2A44
    L912 = 2A4F :
    L913 = 2A51 :
    L914 = 2A56 :
    L915 = 2A58 :
    L916 = 2A5B :
    L917 = 2A5D :
    L918 = 2A60 :
    L919 = 2A63 : 2A58
     L92 = 20BE : 20B5
    L920 = 2A66 :
    L921 = 2A69 :
    L922 = 2A69 : 2A60
    L923 = 2A6B :
    L924 = 2A6D :
    L925 = 2A72 :
    L926 = 2A74 :
    L927 = 2A77 :
    L928 = 2A79 :
    L929 = 2A7C :
     L93 = 20C1 :
    L930 = 2A7F : 2A74
    L931 = 2A82 :
    L932 = 2A85 :
    L933 = 2A85 :
    L934 = 2A85 : 2A7C
    L935 = 2A88 :
    L936 = 2A8C :
    L937 = 2A98 :
    L938 = 2A9E :
    L939 = 2AA1 :
     L94 = 20CC :
    L940 = 2AA3 :
    L941 = 2AA6 :
    L942 = 2AA9 : 2A9E
    L943 = 2AAC :
    L944 = 2AAF :
    L945 = 2AAF : 2AA6
    L946 = 2AB2 :
    L947 = 2AB6 :
    L948 = 2AC2 :
    L949 = 2AC8 :
     L95 = 20D2 :
    L950 = 2ACB :
    L951 = 2ACD :
    L952 = 2AD0 :
    L953 = 2AD3 : 2AC8
    L954 = 2AD6 :
    L955 = 2AD9 :
    L956 = 2AD9 : 2AD0
    L957 = 2ADC :
    L958 = 2AE0 :
    L959 = 2AEC :
     L96 = 20D5 :
    L960 = 2AF2 :
    L961 = 2AF5 :
    L962 = 2AF7 :
    L963 = 2AFA :
    L964 = 2AFD : 2AF2
    L965 = 2B00 :
    L966 = 2B03 :
    L967 = 2B03 :
    L968 = 2B03 : 2AFA
    L969 = 2B05 :
     L97 = 20D7 :
    L970 = 2B07 :
    L971 = 2B0A :
    L972 = 2B16 :
    L973 = 2B18 :
    L974 = 2B1E :
    L975 = 2B21 :
    L976 = 2B23 :
    L977 = 2B26 :
    L978 = 2B29 : 2B1E
    L979 = 2B2C :
     L98 = 20DA :
    L980 = 2B2F :
    L981 = 2B2F : 2B26
    L982 = 2B31 :
    L983 = 2B33 :
    L984 = 2B36 :
    L985 = 2B42 :
    L986 = 2B48 :
    L987 = 2B4B :
    L988 = 2B4D :
    L989 = 2B50 :
     L99 = 20DD : 20D2
    L990 = 2B53 : 2B48
    L991 = 2B56 :
    L992 = 2B59 :
    L993 = 2B59 : 2B50
    L994 = 2B5B :
    L995 = 2B5D :
    L996 = 2B60 :
    L997 = 2B6C :
    L998 = 2B72 :
    L999 = 2B75 :
   div16 = 3BE0 :
 div16_1 = 3BE9 : 3BF8
 div16_2 = 3BF7 : 3BF2
 div16_3 = 3BF8 : 3BF5
 div16_8 = 3C00 : 3C67
div16_82 = 3C05 : 3C0D
div16_83 = 3C0D : 3C09
    div8 = 3C11 : 3C34
  div8_1 = 3C19 : 3C24
 div8_16 = 3C2B :
div8_161 = 3C32 : 3C2E
  div8_2 = 3C24 : 3C20
 getChar = 3AE2 : 3C3C
getChar1 = 3AF0 : 3AE7
   mul16 = 3B64 :
 mul1632 = 3B93 :
mul16321 = 3BB5 : 3BB2
mul16322 = 3BBC : 3BB9
  mul16S = 3BC6 :
 mul16S1 = 3BCF : 3BDB
 mul16S2 = 3BDA : 3BD4 3BD7
mul16_10 = 3B7D : 3C45
 mul16_8 = 3B86 :
 putBell = 3B3C :
 putCRLF = 3B23 : 3B03 3C56 3C7E
 putChar = 3B16 : 3B0D 3B26 3B2B 3B32 3B3A 3B3E 3B5F 3C73
putChar1 = 3B17 : 3B1C
putErase = 3B30 :
 putHexA = 3B4B : 3B42 3B46
putHexA1 = 3B54 : 3B50
putHexA2 = 3B5F : 3B5B
putHexHL = 3B40 :
  putMsg = 3AFA :
putSpace = 3B14 : 3B35
 putStr1 = 3B08 : 3B10
 putStr2 = 3B12 : 3B0B
    read = 3C38 :
   read1 = 3C3C : 3C3F 3C4C 3C4F
   read2 = 3C51 : 3C43
   start = 2000 :
  writeA = 3C82 : 3C7B
 writeHL = 3C5A : 3C53 3C86
writeHL1 = 3C65 : 3C60 3C6E
writeHL2 = 3C70 : 3C76
writeHL3 = 3C71 : 3C63
writeLineA = 3C7B : 202C 203A 2051 2068 208D 20B2 20D7 2100 2127 214E 2172 2197
                : 21BC 21D8 21F4 2210 223B 2266 2291 22B9 22DB 22FD 2323 2343
                : 2363 237D 2397 23B1 23D7 23FD 2423 244D 2475 249D 24C2 24E3
                : 2504 251B 2532 2549 256E 2593 25B8 25E1 2608 262F 2653 2678
                : 269D 26B6 26CF 26E8 2711 273A 2763 278E 27B7 27E0 2808 2831
                : 285A 2878 2896 28B4 28E3 2912 2941 296B 298F 29B3 29DD 2A01
                : 2A25 2A41 2A5D 2A79 2AA3 2ACD 2AF7 2B23 2B4D 2B77 2BA0 2BC5
                : 2BEA 2C03 2C1C 2C35 2C5E 2C87 2CB0 2CDB 2D04 2D2D 2D55 2D7E
                : 2DA7 2DBF 2DD7 2DEF 2E14 2E39 2E5E 2E88 2EB0 2ED8 2EFC 2F21
                : 2F46 2F63 2F80 2F9D 2FC8 2FF3 301E 3047 306A 308D 30B3 30D3
                : 30F3 310E 3129 3144 316A 3190 31B6 31E1 320A 3233 3258 3279
                : 329A 32B2 32CA 32E2 3307 332C 3351 337B 33A3 33CB 33EF 3414
                : 3439 3451 3469 3481 34A6 34CB 34F0 351A 3542 356A 358E 35B3
                : 35D8 35F5 3612 362F 365A 3685 36B0 36D9 36FC 371F 3745 3765
                : 3785 37A0 37BB 37D6 37FC 3822 3848 3873 389C 38C5 38EA 390B
                : 392C 3943 395A 3971 3996 39BB 39E0 3A09 3A30 3A57 3A7B 3AA0
                : 3AC5
writeLineHL = 3C53 : 2043 205A 2071 2096 20BB 20E0 2109 2130 2157 217B 21A0 21C5
                : 21E1 21FD 2219 2244 226F 229A 22C2 22E4 2306 232C 234C 236C
                : 2386 23A0 23BA 23E0 2406 242C 2456 247E 24A6 24CB 24EC 250D
                : 2524 253B 2552 2577 259C 25C1 25EA 2611 2638 265C 2681 26A6
                : 26BF 26D8 26F1 271A 2743 276C 2797 27C0 27E9 2811 283A 2863
                : 2881 289F 28BD 28EC 291B 294A 2974 2998 29BC 29E6 2A0A 2A2E
                : 2A4A 2A66 2A82 2AAC 2AD6 2B00 2B2C 2B56 2B80 2BA9 2BCE 2BF3
                : 2C0C 2C25 2C3E 2C67 2C90 2CB9 2CE4 2D0D 2D36 2D5E 2D87 2DB0
                : 2DC8 2DE0 2DF8 2E1D 2E42 2E67 2E91 2EB9 2EE1 2F05 2F2A 2F4F
                : 2F6C 2F89 2FA6 2FD1 2FFC 3027 3050 3073 3096 30BC 30DC 30FC
                : 3117 3132 314D 3173 3199 31BF 31EA 3213 323C 3261 3282 32A3
                : 32BB 32D3 32EB 3310 3335 335A 3384 33AC 33D4 33F8 341D 3442
                : 345A 3472 348A 34AF 34D4 34F9 3523 354B 3573 3597 35BC 35E1
                : 35FE 361B 3638 3663 368E 36B9 36E2 3705 3728 374E 376E 378E
                : 37A9 37C4 37DF 3805 382B 3851 387C 38A5 38CE 38F3 3914 3935
                : 394C 3963 397A 399F 39C4 39E9 3A12 3A39 3A60 3A84 3AA9 3ACE
                :
writeLineStr = 3B00 : 3AD4
writeStr = 3B07 : 3AFB 3B00
