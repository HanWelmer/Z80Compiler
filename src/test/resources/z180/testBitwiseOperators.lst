2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 1F 20            CALL  L23
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testBitwiseOperators.j(0) /* Program to test bitwise operators and, or and xor. */
2009             L3:
2009                     ;;testBitwiseOperators.j(1) class TestBitwiseOperators {
2009             L4:
2009                     ;class TestBitwiseOperators []
2009             L5:
2009                     ;;testBitwiseOperators.j(2)   private static byte b1 = 0x1C;
2009             L6:
2009 3E 1C               LD    A,28
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testBitwiseOperators.j(3)   private static byte b2 = 0x07;
200E             L9:
200E 3E 07               LD    A,7
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testBitwiseOperators.j(4)   private static word w1 = 0x032C;
2013             L12:
2013 21 2C 03            LD    HL,812
2016             L13:
2016 22 02 50            LD    (05002H),HL
2019             L14:
2019                     ;;testBitwiseOperators.j(5)   private static word w2 = 0x1234;
2019             L15:
2019 21 34 12            LD    HL,4660
201C             L16:
201C 22 04 50            LD    (05004H),HL
201F             L17:
201F                     ;;testBitwiseOperators.j(6)   private static final byte fb1 = 0x1C;
201F             L18:
201F                     ;;testBitwiseOperators.j(7)   private static final byte fb2 = 0x07;
201F             L19:
201F                     ;;testBitwiseOperators.j(8)   private static final word fw1 = 0x032C;
201F             L20:
201F                     ;;testBitwiseOperators.j(9)   private static final word fw2 = 0x1234;
201F             L21:
201F                     ;;testBitwiseOperators.j(10) 
201F             L22:
201F                     ;;testBitwiseOperators.j(11)   public static void main() {
201F             L23:
201F                     ;method TestBitwiseOperators.main [public, static] void ()
201F             L24:
201F DD E5               PUSH  IX
2021             L25:
2021 DD 21 00 00         LD    IX,0x0000
2025 DD 39               ADD   IX,SP
2027             L26:
2027             L27:
2027                     ;;testBitwiseOperators.j(12)     println(0);
2027             L28:
2027 3E 00               LD    A,0
2029             L29:
2029 CD 74 3D            CALL  writeLineA
202C             L30:
202C                     ;;testBitwiseOperators.j(13)     
202C             L31:
202C                     ;;testBitwiseOperators.j(14)     // Possible operand types: constant, acc, var, final var, stack8, stack16.
202C             L32:
202C                     ;;testBitwiseOperators.j(15)     // Possible data types: byte, word.
202C             L33:
202C                     ;;testBitwiseOperators.j(16)   
202C             L34:
202C                     ;;testBitwiseOperators.j(17)     //constant/constant
202C             L35:
202C                     ;;testBitwiseOperators.j(18)     //*****************
202C             L36:
202C                     ;;testBitwiseOperators.j(19)     //constant byte/constant byte
202C             L37:
202C                     ;;testBitwiseOperators.j(20)     if (0x07 & 0x1C == 0x04) println (1); else println (999); //0000.0111 & 0001.1100 = 0000.0100
202C             L38:
202C 3E 07               LD    A,7
202E             L39:
202E E6 1C               AND   A,28
2030             L40:
2030 D6 04               SUB   A,4
2032             L41:
2032 C2 43 20            JP    NZ,L47
2035             L42:
2035 3E 01               LD    A,1
2037             L43:
2037 CD 74 3D            CALL  writeLineA
203A             L44:
203A C3 47 20            JP    L50
203D             L45:
203D 21 E7 03            LD    HL,999
2040             L46:
2040 CD 4C 3D            CALL  writeLineHL
2043             L47:
2043                     ;;testBitwiseOperators.j(21)     if (0x07 | 0x1C == 0x1F) println (2); else println (999); //0000.0111 | 0001.1100 = 0001.1111
2043             L48:
2043 3E 07               LD    A,7
2045             L49:
2045 F6 1C               OR    A,28
2047             L50:
2047 D6 1F               SUB   A,31
2049             L51:
2049 C2 5C 20            JP    NZ,L59
204C             L52:
204C 3E 02               LD    A,2
204E             L53:
204E CD 74 3D            CALL  writeLineA
2051             L54:
2051 C3 63 20            JP    L62
2054             L55:
2054 21 E7 03            LD    HL,999
2057             L56:
2057 CD 4C 3D            CALL  writeLineHL
205A             L57:
205A                     ;;testBitwiseOperators.j(22)     if (0x07 ^ 0x1C == 0x1B) println (3); else println (999); //0000.0111 ^ 0001.1100 = 0001.1011
205A             L58:
205A 3E 07               LD    A,7
205C             L59:
205C EE 1C               XOR   A,28
205E             L60:
205E D6 1B               SUB   A,27
2060             L61:
2060 C2 81 20            JP    NZ,L71
2063             L62:
2063 3E 03               LD    A,3
2065             L63:
2065 CD 74 3D            CALL  writeLineA
2068             L64:
2068 C3 8F 20            JP    L75
206B             L65:
206B 21 E7 03            LD    HL,999
206E             L66:
206E CD 4C 3D            CALL  writeLineHL
2071             L67:
2071                     ;;testBitwiseOperators.j(23)     //constant word/constant word
2071             L68:
2071                     ;;testBitwiseOperators.j(24)     if (0x1234 & 0x032C == 0x0224) println (4); else println (999);
2071             L69:
2071 21 34 12            LD    HL,4660
2074             L70:
2074 11 2C 03            LD    DE,812
2077 C5                  PUSH  BC
2078 47                  LD    B,A
2079 7C                  LD    A,H
207A A2                  AND   A,D
207B 67                  LD    H,A
207C 7D                  LD    A,L
207D A3                  AND   A,E
207E 6F                  LD    L,A
207F 78                  LD    A,B
2080 C1                  POP   BC
2081             L71:
2081 11 24 02            LD    DE,548
2084 B7                  OR    A
2085 ED 52               SBC   HL,DE
2087             L72:
2087 C2 AF 20            JP    NZ,L84
208A             L73:
208A 3E 04               LD    A,4
208C             L74:
208C CD 74 3D            CALL  writeLineA
208F             L75:
208F C3 BA 20            JP    L88
2092             L76:
2092 21 E7 03            LD    HL,999
2095             L77:
2095 CD 4C 3D            CALL  writeLineHL
2098             L78:
2098                     ;;testBitwiseOperators.j(25)     //0001.0010.0011.0100 & 0000.0011.0010.1100 = 0000.0010.0010.0100
2098             L79:
2098                     ;;testBitwiseOperators.j(26)     if (0x1234 | 0x032C == 0x133C) println (5); else println (999);
2098             L80:
2098 21 34 12            LD    HL,4660
209B             L81:
209B 11 2C 03            LD    DE,812
209E 47                  LD    B,A
209F 7C                  LD    A,H
20A0 B2                  OR    A,D
20A1 67                  LD    H,A
20A2 7D                  LD    A,L
20A3 B3                  OR    A,E
20A4 6F                  LD    L,A
20A5 78                  LD    A,B
20A6             L82:
20A6 11 3C 13            LD    DE,4924
20A9 B7                  OR    A
20AA ED 52               SBC   HL,DE
20AC             L83:
20AC C2 DB 20            JP    NZ,L97
20AF             L84:
20AF 3E 05               LD    A,5
20B1             L85:
20B1 CD 74 3D            CALL  writeLineA
20B4             L86:
20B4 C3 E4 20            JP    L101
20B7             L87:
20B7 21 E7 03            LD    HL,999
20BA             L88:
20BA CD 4C 3D            CALL  writeLineHL
20BD             L89:
20BD                     ;;testBitwiseOperators.j(27)     //0001.0010.0011.0100 | 0000.0011.0010.1100 = 0001.0011.0011.1100
20BD             L90:
20BD                     ;;testBitwiseOperators.j(28)     if (0x1234 ^ 0x032C == 0x1118) println (6); else println (999);
20BD             L91:
20BD 21 34 12            LD    HL,4660
20C0             L92:
20C0 11 2C 03            LD    DE,812
20C3 C5                  PUSH  BC
20C4 47                  LD    B,A
20C5 7C                  LD    A,H
20C6 AA                  XOR   A,D
20C7 67                  LD    H,A
20C8 7D                  LD    A,L
20C9 AB                  XOR   A,E
20CA 6F                  LD    L,A
20CB 78                  LD    A,B
20CC C1                  POP   BC
20CD             L93:
20CD 11 18 11            LD    DE,4376
20D0 B7                  OR    A
20D1 ED 52               SBC   HL,DE
20D3             L94:
20D3 C2 04 21            JP    NZ,L110
20D6             L95:
20D6 3E 06               LD    A,6
20D8             L96:
20D8 CD 74 3D            CALL  writeLineA
20DB             L97:
20DB C3 10 21            JP    L115
20DE             L98:
20DE 21 E7 03            LD    HL,999
20E1             L99:
20E1 CD 4C 3D            CALL  writeLineHL
20E4             L100:
20E4                     ;;testBitwiseOperators.j(29)     //0001.0010.0011.0100 ^ 0000.0011.0010.1100 = 0001.0001.0001.1000
20E4             L101:
20E4                     ;;testBitwiseOperators.j(30)     //constant byte/constant word
20E4             L102:
20E4                     ;;testBitwiseOperators.j(31)     if (0x1C & 0x1234 == 0x0014) println (7); else println (999); //0001.1100 & 0001.0010.0011.0100 = 0000.0000.0001.0100
20E4             L103:
20E4 3E 1C               LD    A,28
20E6             L104:
20E6 6F                  LD    L,A
20E7 26 00               LD    H,0
20E9             L105:
20E9 11 34 12            LD    DE,4660
20EC C5                  PUSH  BC
20ED 47                  LD    B,A
20EE 7C                  LD    A,H
20EF A2                  AND   A,D
20F0 67                  LD    H,A
20F1 7D                  LD    A,L
20F2 A3                  AND   A,E
20F3 6F                  LD    L,A
20F4 78                  LD    A,B
20F5 C1                  POP   BC
20F6             L106:
20F6 3E 14               LD    A,20
20F8             L107:
20F8 5F                  LD    E,A
20F9 16 00               LD    D,0
20FB EB                  EX    DE,HL
20FC B7                  OR    A
20FD ED 52               SBC   HL,DE
20FF             L108:
20FF C2 37 21            JP    NZ,L126
2102             L109:
2102 3E 07               LD    A,7
2104             L110:
2104 CD 74 3D            CALL  writeLineA
2107             L111:
2107 C3 49 21            JP    L129
210A             L112:
210A 21 E7 03            LD    HL,999
210D             L113:
210D CD 4C 3D            CALL  writeLineHL
2110             L114:
2110                     ;;testBitwiseOperators.j(32)     if (0x1C | 0x1234 == 0x123C) println (8); else println (999); //0001.1100 | 0001.0010.0011.0100 = 0001.0010.0011.1100
2110             L115:
2110 3E 1C               LD    A,28
2112             L116:
2112 6F                  LD    L,A
2113 26 00               LD    H,0
2115             L117:
2115 11 34 12            LD    DE,4660
2118 47                  LD    B,A
2119 7C                  LD    A,H
211A B2                  OR    A,D
211B 67                  LD    H,A
211C 7D                  LD    A,L
211D B3                  OR    A,E
211E 6F                  LD    L,A
211F 78                  LD    A,B
2120             L118:
2120 11 3C 12            LD    DE,4668
2123 B7                  OR    A
2124 ED 52               SBC   HL,DE
2126             L119:
2126 C2 63 21            JP    NZ,L139
2129             L120:
2129 3E 08               LD    A,8
212B             L121:
212B CD 74 3D            CALL  writeLineA
212E             L122:
212E C3 79 21            JP    L142
2131             L123:
2131 21 E7 03            LD    HL,999
2134             L124:
2134 CD 4C 3D            CALL  writeLineHL
2137             L125:
2137                     ;;testBitwiseOperators.j(33)     if (0x1C ^ 0x1234 == 0x1228) println (9); else println (999); //0001.1100 ^ 0001.0010.0011.0100 = 0001.0010.0010.1000
2137             L126:
2137 3E 1C               LD    A,28
2139             L127:
2139 6F                  LD    L,A
213A 26 00               LD    H,0
213C             L128:
213C 11 34 12            LD    DE,4660
213F C5                  PUSH  BC
2140 47                  LD    B,A
2141 7C                  LD    A,H
2142 AA                  XOR   A,D
2143 67                  LD    H,A
2144 7D                  LD    A,L
2145 AB                  XOR   A,E
2146 6F                  LD    L,A
2147 78                  LD    A,B
2148 C1                  POP   BC
2149             L129:
2149 11 28 12            LD    DE,4648
214C B7                  OR    A
214D ED 52               SBC   HL,DE
214F             L130:
214F C2 9E 21            JP    NZ,L152
2152             L131:
2152 3E 09               LD    A,9
2154             L132:
2154 CD 74 3D            CALL  writeLineA
2157             L133:
2157 C3 A9 21            JP    L156
215A             L134:
215A 21 E7 03            LD    HL,999
215D             L135:
215D CD 4C 3D            CALL  writeLineHL
2160             L136:
2160                     ;;testBitwiseOperators.j(34)     //constant word/constant byte
2160             L137:
2160                     ;;testBitwiseOperators.j(35)     if (0x1234 & 0x1C == 0x0014) println (10); else println (999); //0001.0010.0011.0100 & 0001.1100 = 0000.0000.0001.0100
2160             L138:
2160 21 34 12            LD    HL,4660
2163             L139:
2163 11 1C 00            LD    DE,28
2166 C5                  PUSH  BC
2167 47                  LD    B,A
2168 7C                  LD    A,H
2169 A2                  AND   A,D
216A 67                  LD    H,A
216B 7D                  LD    A,L
216C A3                  AND   A,E
216D 6F                  LD    L,A
216E 78                  LD    A,B
216F C1                  POP   BC
2170             L140:
2170 3E 14               LD    A,20
2172             L141:
2172 5F                  LD    E,A
2173 16 00               LD    D,0
2175 EB                  EX    DE,HL
2176 B7                  OR    A
2177 ED 52               SBC   HL,DE
2179             L142:
2179 C2 D0 21            JP    NZ,L166
217C             L143:
217C 3E 0A               LD    A,10
217E             L144:
217E CD 74 3D            CALL  writeLineA
2181             L145:
2181 C3 D6 21            JP    L169
2184             L146:
2184 21 E7 03            LD    HL,999
2187             L147:
2187 CD 4C 3D            CALL  writeLineHL
218A             L148:
218A                     ;;testBitwiseOperators.j(36)     if (0x1234 | 0x1C == 0x123C) println (11); else println (999); //0001.0010.0011.0100 | 0001.1100 = 0001.0010.0011.1100
218A             L149:
218A 21 34 12            LD    HL,4660
218D             L150:
218D 11 1C 00            LD    DE,28
2190 47                  LD    B,A
2191 7C                  LD    A,H
2192 B2                  OR    A,D
2193 67                  LD    H,A
2194 7D                  LD    A,L
2195 B3                  OR    A,E
2196 6F                  LD    L,A
2197 78                  LD    A,B
2198             L151:
2198 11 3C 12            LD    DE,4668
219B B7                  OR    A
219C ED 52               SBC   HL,DE
219E             L152:
219E C2 E1 21            JP    NZ,L178
21A1             L153:
21A1 3E 0B               LD    A,11
21A3             L154:
21A3 CD 74 3D            CALL  writeLineA
21A6             L155:
21A6 C3 E9 21            JP    L181
21A9             L156:
21A9 21 E7 03            LD    HL,999
21AC             L157:
21AC CD 4C 3D            CALL  writeLineHL
21AF             L158:
21AF                     ;;testBitwiseOperators.j(37)     if (0x1234 ^ 0x1C == 0x1228) println (12); else println (999); //0001.0010.0011.0100 ^ 0001.1100 = 0001.0010.0010.1000
21AF             L159:
21AF 21 34 12            LD    HL,4660
21B2             L160:
21B2 11 1C 00            LD    DE,28
21B5 C5                  PUSH  BC
21B6 47                  LD    B,A
21B7 7C                  LD    A,H
21B8 AA                  XOR   A,D
21B9 67                  LD    H,A
21BA 7D                  LD    A,L
21BB AB                  XOR   A,E
21BC 6F                  LD    L,A
21BD 78                  LD    A,B
21BE C1                  POP   BC
21BF             L161:
21BF 11 28 12            LD    DE,4648
21C2 B7                  OR    A
21C3 ED 52               SBC   HL,DE
21C5             L162:
21C5 C2 FD 21            JP    NZ,L190
21C8             L163:
21C8 3E 0C               LD    A,12
21CA             L164:
21CA CD 74 3D            CALL  writeLineA
21CD             L165:
21CD C3 0E 22            JP    L197
21D0             L166:
21D0 21 E7 03            LD    HL,999
21D3             L167:
21D3 CD 4C 3D            CALL  writeLineHL
21D6             L168:
21D6                     ;;testBitwiseOperators.j(38)   
21D6             L169:
21D6                     ;;testBitwiseOperators.j(39)     //constant/acc
21D6             L170:
21D6                     ;;testBitwiseOperators.j(40)     //************
21D6             L171:
21D6                     ;;testBitwiseOperators.j(41)     //constant byte/acc byte
21D6             L172:
21D6                     ;;testBitwiseOperators.j(42)     if (0x07 & (0x10 + 0x0C) == 0x04) println (13); else println (999);
21D6             L173:
21D6 3E 07               LD    A,7
21D8             L174:
21D8 F5                  PUSH  AF
21D9 3E 10               LD    A,16
21DB             L175:
21DB C6 0C               ADD   A,12
21DD             L176:
21DD C1                  POP   BC
21DE A0                  AND   A,B
21DF             L177:
21DF D6 04               SUB   A,4
21E1             L178:
21E1 C2 2A 22            JP    NZ,L208
21E4             L179:
21E4 3E 0D               LD    A,13
21E6             L180:
21E6 CD 74 3D            CALL  writeLineA
21E9             L181:
21E9 C3 2D 22            JP    L211
21EC             L182:
21EC 21 E7 03            LD    HL,999
21EF             L183:
21EF CD 4C 3D            CALL  writeLineHL
21F2             L184:
21F2                     ;;testBitwiseOperators.j(43)     if (0x07 | (0x10 + 0x0C) == 0x1F) println (14); else println (999);
21F2             L185:
21F2 3E 07               LD    A,7
21F4             L186:
21F4 F5                  PUSH  AF
21F5 3E 10               LD    A,16
21F7             L187:
21F7 C6 0C               ADD   A,12
21F9             L188:
21F9 C1                  POP   BC
21FA B0                  OR    A,B
21FB             L189:
21FB D6 1F               SUB   A,31
21FD             L190:
21FD C2 57 22            JP    NZ,L222
2200             L191:
2200 3E 0E               LD    A,14
2202             L192:
2202 CD 74 3D            CALL  writeLineA
2205             L193:
2205 C3 62 22            JP    L225
2208             L194:
2208 21 E7 03            LD    HL,999
220B             L195:
220B CD 4C 3D            CALL  writeLineHL
220E             L196:
220E                     ;;testBitwiseOperators.j(44)     if (0x07 ^ (0x10 + 0x0C) == 0x1B) println (15); else println (999);
220E             L197:
220E 3E 07               LD    A,7
2210             L198:
2210 F5                  PUSH  AF
2211 3E 10               LD    A,16
2213             L199:
2213 C6 0C               ADD   A,12
2215             L200:
2215 C1                  POP   BC
2216 A8                  XOR   A,B
2217             L201:
2217 D6 1B               SUB   A,27
2219             L202:
2219 C2 89 22            JP    NZ,L236
221C             L203:
221C 3E 0F               LD    A,15
221E             L204:
221E CD 74 3D            CALL  writeLineA
2221             L205:
2221 C3 A1 22            JP    L240
2224             L206:
2224 21 E7 03            LD    HL,999
2227             L207:
2227 CD 4C 3D            CALL  writeLineHL
222A             L208:
222A                     ;;testBitwiseOperators.j(45)     //constant word/acc word
222A             L209:
222A                     ;;testBitwiseOperators.j(46)     if (0x1234 & 0x0100 + 0x022C == 0x0224) println (16); else println (999);
222A             L210:
222A 21 34 12            LD    HL,4660
222D             L211:
222D E5                  PUSH  HL
222E 21 00 01            LD    HL,256
2231             L212:
2231 11 2C 02            LD    DE,556
2234 19                  ADD   HL,DE
2235             L213:
2235 D1                  POP   DE
2236 C5                  PUSH  BC
2237 47                  LD    B,A
2238 7C                  LD    A,H
2239 A2                  AND   A,D
223A 67                  LD    H,A
223B 7D                  LD    A,L
223C A3                  AND   A,E
223D 6F                  LD    L,A
223E 78                  LD    A,B
223F C1                  POP   BC
2240             L214:
2240 11 24 02            LD    DE,548
2243 B7                  OR    A
2244 ED 52               SBC   HL,DE
2246             L215:
2246 C2 BC 22            JP    NZ,L251
2249             L216:
2249 3E 10               LD    A,16
224B             L217:
224B CD 74 3D            CALL  writeLineA
224E             L218:
224E C3 C8 22            JP    L254
2251             L219:
2251 21 E7 03            LD    HL,999
2254             L220:
2254 CD 4C 3D            CALL  writeLineHL
2257             L221:
2257                     ;;testBitwiseOperators.j(47)     if (0x1234 | 0x0100 + 0x022C == 0x133C) println (17); else println (999);
2257             L222:
2257 21 34 12            LD    HL,4660
225A             L223:
225A E5                  PUSH  HL
225B 21 00 01            LD    HL,256
225E             L224:
225E 11 2C 02            LD    DE,556
2261 19                  ADD   HL,DE
2262             L225:
2262 D1                  POP   DE
2263 47                  LD    B,A
2264 7C                  LD    A,H
2265 B2                  OR    A,D
2266 67                  LD    H,A
2267 7D                  LD    A,L
2268 B3                  OR    A,E
2269 6F                  LD    L,A
226A 78                  LD    A,B
226B             L226:
226B 11 3C 13            LD    DE,4924
226E B7                  OR    A
226F ED 52               SBC   HL,DE
2271             L227:
2271 C2 E7 22            JP    NZ,L265
2274             L228:
2274 3E 11               LD    A,17
2276             L229:
2276 CD 74 3D            CALL  writeLineA
2279             L230:
2279 C3 EF 22            JP    L268
227C             L231:
227C 21 E7 03            LD    HL,999
227F             L232:
227F CD 4C 3D            CALL  writeLineHL
2282             L233:
2282                     ;;testBitwiseOperators.j(48)     if (0x1234 ^ 0x0100 + 0x022C == 0x1118) println (18); else println (999);
2282             L234:
2282 21 34 12            LD    HL,4660
2285             L235:
2285 E5                  PUSH  HL
2286 21 00 01            LD    HL,256
2289             L236:
2289 11 2C 02            LD    DE,556
228C 19                  ADD   HL,DE
228D             L237:
228D D1                  POP   DE
228E C5                  PUSH  BC
228F 47                  LD    B,A
2290 7C                  LD    A,H
2291 AA                  XOR   A,D
2292 67                  LD    H,A
2293 7D                  LD    A,L
2294 AB                  XOR   A,E
2295 6F                  LD    L,A
2296 78                  LD    A,B
2297 C1                  POP   BC
2298             L238:
2298 11 18 11            LD    DE,4376
229B B7                  OR    A
229C ED 52               SBC   HL,DE
229E             L239:
229E C2 0E 23            JP    NZ,L279
22A1             L240:
22A1 3E 12               LD    A,18
22A3             L241:
22A3 CD 74 3D            CALL  writeLineA
22A6             L242:
22A6 C3 1A 23            JP    L283
22A9             L243:
22A9 21 E7 03            LD    HL,999
22AC             L244:
22AC CD 4C 3D            CALL  writeLineHL
22AF             L245:
22AF                     ;;testBitwiseOperators.j(49)     //constant byte/acc word
22AF             L246:
22AF                     ;;testBitwiseOperators.j(50)     if (0x1C & 0x1000 + 0x0234 == 0x0014) println (19); else println (999);
22AF             L247:
22AF 3E 1C               LD    A,28
22B1             L248:
22B1 21 00 10            LD    HL,4096
22B4             L249:
22B4 11 34 02            LD    DE,564
22B7 19                  ADD   HL,DE
22B8             L250:
22B8 A5                  AND   A,L
22B9 6F                  LD    L,A
22BA 26 00               LD    H,0
22BC             L251:
22BC 3E 14               LD    A,20
22BE             L252:
22BE 5F                  LD    E,A
22BF 16 00               LD    D,0
22C1 EB                  EX    DE,HL
22C2 B7                  OR    A
22C3 ED 52               SBC   HL,DE
22C5             L253:
22C5 C2 39 23            JP    NZ,L295
22C8             L254:
22C8 3E 13               LD    A,19
22CA             L255:
22CA CD 74 3D            CALL  writeLineA
22CD             L256:
22CD C3 3F 23            JP    L298
22D0             L257:
22D0 21 E7 03            LD    HL,999
22D3             L258:
22D3 CD 4C 3D            CALL  writeLineHL
22D6             L259:
22D6                     ;;testBitwiseOperators.j(51)     if (0x1C | 0x1000 + 0x0234 == 0x123C) println (20); else println (999);
22D6             L260:
22D6 3E 1C               LD    A,28
22D8             L261:
22D8 21 00 10            LD    HL,4096
22DB             L262:
22DB 11 34 02            LD    DE,564
22DE 19                  ADD   HL,DE
22DF             L263:
22DF B5                  OR    A,L
22E0 6F                  LD    L,A
22E1             L264:
22E1 11 3C 12            LD    DE,4668
22E4 B7                  OR    A
22E5 ED 52               SBC   HL,DE
22E7             L265:
22E7 C2 5F 23            JP    NZ,L309
22EA             L266:
22EA 3E 14               LD    A,20
22EC             L267:
22EC CD 74 3D            CALL  writeLineA
22EF             L268:
22EF C3 64 23            JP    L312
22F2             L269:
22F2 21 E7 03            LD    HL,999
22F5             L270:
22F5 CD 4C 3D            CALL  writeLineHL
22F8             L271:
22F8                     ;;testBitwiseOperators.j(52)     if (0x1C ^ 0x1000 + 0x0234 == 0x1228) println (21); else println (999);
22F8             L272:
22F8 3E 1C               LD    A,28
22FA             L273:
22FA 21 00 10            LD    HL,4096
22FD             L274:
22FD 11 34 02            LD    DE,564
2300 19                  ADD   HL,DE
2301             L275:
2301 AD                  XOR   A,L
2302 6F                  LD    L,A
2303             L276:
2303 11 28 12            LD    DE,4648
2306 B7                  OR    A
2307 ED 52               SBC   HL,DE
2309             L277:
2309 C2 7F 23            JP    NZ,L323
230C             L278:
230C 3E 15               LD    A,21
230E             L279:
230E CD 74 3D            CALL  writeLineA
2311             L280:
2311 C3 81 23            JP    L327
2314             L281:
2314 21 E7 03            LD    HL,999
2317             L282:
2317 CD 4C 3D            CALL  writeLineHL
231A             L283:
231A                     ;;testBitwiseOperators.j(53)     //constant word/acc byte
231A             L284:
231A                     ;;testBitwiseOperators.j(54)     if (0x1234 & 0x10 + 0x0C == 0x0014) println (22); else println (999);
231A             L285:
231A 21 34 12            LD    HL,4660
231D             L286:
231D 3E 10               LD    A,16
231F             L287:
231F C6 0C               ADD   A,12
2321             L288:
2321 A5                  AND   A,L
2322 6F                  LD    L,A
2323 26 00               LD    H,0
2325             L289:
2325 3E 14               LD    A,20
2327             L290:
2327 5F                  LD    E,A
2328 16 00               LD    D,0
232A EB                  EX    DE,HL
232B B7                  OR    A
232C ED 52               SBC   HL,DE
232E             L291:
232E C2 A2 23            JP    NZ,L339
2331             L292:
2331 3E 16               LD    A,22
2333             L293:
2333 CD 74 3D            CALL  writeLineA
2336             L294:
2336 C3 AA 23            JP    L342
2339             L295:
2339 21 E7 03            LD    HL,999
233C             L296:
233C CD 4C 3D            CALL  writeLineHL
233F             L297:
233F                     ;;testBitwiseOperators.j(55)     if (0x1234 | 0x10 + 0x0C == 0x123C) println (23); else println (999);
233F             L298:
233F 21 34 12            LD    HL,4660
2342             L299:
2342 3E 10               LD    A,16
2344             L300:
2344 C6 0C               ADD   A,12
2346             L301:
2346 B5                  OR    A,L
2347 6F                  LD    L,A
2348             L302:
2348 11 3C 12            LD    DE,4668
234B B7                  OR    A
234C ED 52               SBC   HL,DE
234E             L303:
234E C2 C7 23            JP    NZ,L353
2351             L304:
2351 3E 17               LD    A,23
2353             L305:
2353 CD 74 3D            CALL  writeLineA
2356             L306:
2356 C3 CD 23            JP    L356
2359             L307:
2359 21 E7 03            LD    HL,999
235C             L308:
235C CD 4C 3D            CALL  writeLineHL
235F             L309:
235F                     ;;testBitwiseOperators.j(56)     if (0x1234 ^ 0x10 + 0x0C == 0x1228) println (24); else println (999);
235F             L310:
235F 21 34 12            LD    HL,4660
2362             L311:
2362 3E 10               LD    A,16
2364             L312:
2364 C6 0C               ADD   A,12
2366             L313:
2366 AD                  XOR   A,L
2367 6F                  LD    L,A
2368             L314:
2368 11 28 12            LD    DE,4648
236B B7                  OR    A
236C ED 52               SBC   HL,DE
236E             L315:
236E C2 F5 23            JP    NZ,L367
2371             L316:
2371 3E 18               LD    A,24
2373             L317:
2373 CD 74 3D            CALL  writeLineA
2376             L318:
2376 C3 15 24            JP    L374
2379             L319:
2379 21 E7 03            LD    HL,999
237C             L320:
237C CD 4C 3D            CALL  writeLineHL
237F             L321:
237F                     ;;testBitwiseOperators.j(57)   
237F             L322:
237F                     ;;testBitwiseOperators.j(58)     //constant/var
237F             L323:
237F                     ;;testBitwiseOperators.j(59)     //*****************
237F             L324:
237F                     ;;testBitwiseOperators.j(60)     //constant byte/var byte
237F             L325:
237F                     ;;testBitwiseOperators.j(61)     if (0x07 & b1 == 0x04) println (25); else println (999);
237F             L326:
237F 3E 07               LD    A,7
2381             L327:
2381 47                  LD    B,A
2382 3A 00 50            LD    A,(05000H)
2385 A0                  AND   A,B
2386             L328:
2386 D6 04               SUB   A,4
2388             L329:
2388 C2 3A 24            JP    NZ,L383
238B             L330:
238B 3E 19               LD    A,25
238D             L331:
238D CD 74 3D            CALL  writeLineA
2390             L332:
2390 C3 43 24            JP    L386
2393             L333:
2393 21 E7 03            LD    HL,999
2396             L334:
2396 CD 4C 3D            CALL  writeLineHL
2399             L335:
2399                     ;;testBitwiseOperators.j(62)     if (0x07 | b1 == 0x1F) println (26); else println (999);
2399             L336:
2399 3E 07               LD    A,7
239B             L337:
239B 47                  LD    B,A
239C 3A 00 50            LD    A,(05000H)
239F B0                  OR    A,B
23A0             L338:
23A0 D6 1F               SUB   A,31
23A2             L339:
23A2 C2 64 24            JP    NZ,L395
23A5             L340:
23A5 3E 1A               LD    A,26
23A7             L341:
23A7 CD 74 3D            CALL  writeLineA
23AA             L342:
23AA C3 6D 24            JP    L398
23AD             L343:
23AD 21 E7 03            LD    HL,999
23B0             L344:
23B0 CD 4C 3D            CALL  writeLineHL
23B3             L345:
23B3                     ;;testBitwiseOperators.j(63)     if (0x07 ^ b1 == 0x1B) println (27); else println (999);
23B3             L346:
23B3 3E 07               LD    A,7
23B5             L347:
23B5 47                  LD    B,A
23B6 3A 00 50            LD    A,(05000H)
23B9 A8                  XOR   A,B
23BA             L348:
23BA D6 1B               SUB   A,27
23BC             L349:
23BC C2 8F 24            JP    NZ,L407
23BF             L350:
23BF 3E 1B               LD    A,27
23C1             L351:
23C1 CD 74 3D            CALL  writeLineA
23C4             L352:
23C4 C3 98 24            JP    L411
23C7             L353:
23C7 21 E7 03            LD    HL,999
23CA             L354:
23CA CD 4C 3D            CALL  writeLineHL
23CD             L355:
23CD                     ;;testBitwiseOperators.j(64)     //constant word/var word
23CD             L356:
23CD                     ;;testBitwiseOperators.j(65)     if (0x1234 & w1 == 0x0224) println (28); else println (999);
23CD             L357:
23CD 21 34 12            LD    HL,4660
23D0             L358:
23D0 ED 5B 02 50         LD    DE,(05002H)
23D4 C5                  PUSH  BC
23D5 47                  LD    B,A
23D6 7C                  LD    A,H
23D7 A2                  AND   A,D
23D8 67                  LD    H,A
23D9 7D                  LD    A,L
23DA A3                  AND   A,E
23DB 6F                  LD    L,A
23DC 78                  LD    A,B
23DD C1                  POP   BC
23DE             L359:
23DE 11 24 02            LD    DE,548
23E1 B7                  OR    A
23E2 ED 52               SBC   HL,DE
23E4             L360:
23E4 C2 BF 24            JP    NZ,L420
23E7             L361:
23E7 3E 1C               LD    A,28
23E9             L362:
23E9 CD 74 3D            CALL  writeLineA
23EC             L363:
23EC C3 C2 24            JP    L423
23EF             L364:
23EF 21 E7 03            LD    HL,999
23F2             L365:
23F2 CD 4C 3D            CALL  writeLineHL
23F5             L366:
23F5                     ;;testBitwiseOperators.j(66)     if (0x1234 | w1 == 0x133C) println (29); else println (999);
23F5             L367:
23F5 21 34 12            LD    HL,4660
23F8             L368:
23F8 ED 5B 02 50         LD    DE,(05002H)
23FC 47                  LD    B,A
23FD 7C                  LD    A,H
23FE B2                  OR    A,D
23FF 67                  LD    H,A
2400 7D                  LD    A,L
2401 B3                  OR    A,E
2402 6F                  LD    L,A
2403 78                  LD    A,B
2404             L369:
2404 11 3C 13            LD    DE,4924
2407 B7                  OR    A
2408 ED 52               SBC   HL,DE
240A             L370:
240A C2 EA 24            JP    NZ,L432
240D             L371:
240D 3E 1D               LD    A,29
240F             L372:
240F CD 74 3D            CALL  writeLineA
2412             L373:
2412 C3 F0 24            JP    L435
2415             L374:
2415 21 E7 03            LD    HL,999
2418             L375:
2418 CD 4C 3D            CALL  writeLineHL
241B             L376:
241B                     ;;testBitwiseOperators.j(67)     if (0x1234 ^ w1 == 0x1118) println (30); else println (999);
241B             L377:
241B 21 34 12            LD    HL,4660
241E             L378:
241E ED 5B 02 50         LD    DE,(05002H)
2422 C5                  PUSH  BC
2423 47                  LD    B,A
2424 7C                  LD    A,H
2425 AA                  XOR   A,D
2426 67                  LD    H,A
2427 7D                  LD    A,L
2428 AB                  XOR   A,E
2429 6F                  LD    L,A
242A 78                  LD    A,B
242B C1                  POP   BC
242C             L379:
242C 11 18 11            LD    DE,4376
242F B7                  OR    A
2430 ED 52               SBC   HL,DE
2432             L380:
2432 C2 13 25            JP    NZ,L444
2435             L381:
2435 3E 1E               LD    A,30
2437             L382:
2437 CD 74 3D            CALL  writeLineA
243A             L383:
243A C3 2D 25            JP    L448
243D             L384:
243D 21 E7 03            LD    HL,999
2440             L385:
2440 CD 4C 3D            CALL  writeLineHL
2443             L386:
2443                     ;;testBitwiseOperators.j(68)     //constant byte/var word
2443             L387:
2443                     ;;testBitwiseOperators.j(69)     if (0x1C & w2 == 0x0014) println (31); else println (999);
2443             L388:
2443 3E 1C               LD    A,28
2445             L389:
2445 6F                  LD    L,A
2446 26 00               LD    H,0
2448             L390:
2448 ED 5B 04 50         LD    DE,(05004H)
244C C5                  PUSH  BC
244D 47                  LD    B,A
244E 7C                  LD    A,H
244F A2                  AND   A,D
2450 67                  LD    H,A
2451 7D                  LD    A,L
2452 A3                  AND   A,E
2453 6F                  LD    L,A
2454 78                  LD    A,B
2455 C1                  POP   BC
2456             L391:
2456 3E 14               LD    A,20
2458             L392:
2458 5F                  LD    E,A
2459 16 00               LD    D,0
245B EB                  EX    DE,HL
245C B7                  OR    A
245D ED 52               SBC   HL,DE
245F             L393:
245F C2 3D 25            JP    NZ,L459
2462             L394:
2462 3E 1F               LD    A,31
2464             L395:
2464 CD 74 3D            CALL  writeLineA
2467             L396:
2467 C3 44 25            JP    L462
246A             L397:
246A 21 E7 03            LD    HL,999
246D             L398:
246D CD 4C 3D            CALL  writeLineHL
2470             L399:
2470                     ;;testBitwiseOperators.j(70)     if (0x1C | w2 == 0x123C) println (32); else println (999);
2470             L400:
2470 3E 1C               LD    A,28
2472             L401:
2472 6F                  LD    L,A
2473 26 00               LD    H,0
2475             L402:
2475 ED 5B 04 50         LD    DE,(05004H)
2479 47                  LD    B,A
247A 7C                  LD    A,H
247B B2                  OR    A,D
247C 67                  LD    H,A
247D 7D                  LD    A,L
247E B3                  OR    A,E
247F 6F                  LD    L,A
2480 78                  LD    A,B
2481             L403:
2481 11 3C 12            LD    DE,4668
2484 B7                  OR    A
2485 ED 52               SBC   HL,DE
2487             L404:
2487 C2 5B 25            JP    NZ,L472
248A             L405:
248A 3E 20               LD    A,32
248C             L406:
248C CD 74 3D            CALL  writeLineA
248F             L407:
248F C3 63 25            JP    L475
2492             L408:
2492 21 E7 03            LD    HL,999
2495             L409:
2495 CD 4C 3D            CALL  writeLineHL
2498             L410:
2498                     ;;testBitwiseOperators.j(71)     if (0x1C ^ w2 == 0x1228) println (33); else println (999);
2498             L411:
2498 3E 1C               LD    A,28
249A             L412:
249A 6F                  LD    L,A
249B 26 00               LD    H,0
249D             L413:
249D ED 5B 04 50         LD    DE,(05004H)
24A1 C5                  PUSH  BC
24A2 47                  LD    B,A
24A3 7C                  LD    A,H
24A4 AA                  XOR   A,D
24A5 67                  LD    H,A
24A6 7D                  LD    A,L
24A7 AB                  XOR   A,E
24A8 6F                  LD    L,A
24A9 78                  LD    A,B
24AA C1                  POP   BC
24AB             L414:
24AB 11 28 12            LD    DE,4648
24AE B7                  OR    A
24AF ED 52               SBC   HL,DE
24B1             L415:
24B1 C2 7A 25            JP    NZ,L485
24B4             L416:
24B4 3E 21               LD    A,33
24B6             L417:
24B6 CD 74 3D            CALL  writeLineA
24B9             L418:
24B9 C3 80 25            JP    L489
24BC             L419:
24BC 21 E7 03            LD    HL,999
24BF             L420:
24BF CD 4C 3D            CALL  writeLineHL
24C2             L421:
24C2                     ;;testBitwiseOperators.j(72)     //constant word/var byte
24C2             L422:
24C2                     ;;testBitwiseOperators.j(73)     if (0x1234 & b1 == 0x0014) println (34); else println (999);
24C2             L423:
24C2 21 34 12            LD    HL,4660
24C5             L424:
24C5 ED 5B 00 50         LD    DE,(05000H)
24C9 C5                  PUSH  BC
24CA 47                  LD    B,A
24CB 7C                  LD    A,H
24CC A2                  AND   A,D
24CD 67                  LD    H,A
24CE 7D                  LD    A,L
24CF A3                  AND   A,E
24D0 6F                  LD    L,A
24D1 78                  LD    A,B
24D2 C1                  POP   BC
24D3             L425:
24D3 3E 14               LD    A,20
24D5             L426:
24D5 5F                  LD    E,A
24D6 16 00               LD    D,0
24D8 EB                  EX    DE,HL
24D9 B7                  OR    A
24DA ED 52               SBC   HL,DE
24DC             L427:
24DC C2 A7 25            JP    NZ,L499
24DF             L428:
24DF 3E 22               LD    A,34
24E1             L429:
24E1 CD 74 3D            CALL  writeLineA
24E4             L430:
24E4 C3 BB 25            JP    L502
24E7             L431:
24E7 21 E7 03            LD    HL,999
24EA             L432:
24EA CD 4C 3D            CALL  writeLineHL
24ED             L433:
24ED                     ;;testBitwiseOperators.j(74)     if (0x1234 | b1 == 0x123C) println (35); else println (999);
24ED             L434:
24ED 21 34 12            LD    HL,4660
24F0             L435:
24F0 ED 5B 00 50         LD    DE,(05000H)
24F4 47                  LD    B,A
24F5 7C                  LD    A,H
24F6 B2                  OR    A,D
24F7 67                  LD    H,A
24F8 7D                  LD    A,L
24F9 B3                  OR    A,E
24FA 6F                  LD    L,A
24FB 78                  LD    A,B
24FC             L436:
24FC 11 3C 12            LD    DE,4668
24FF B7                  OR    A
2500 ED 52               SBC   HL,DE
2502             L437:
2502 C2 DC 25            JP    NZ,L511
2505             L438:
2505 3E 23               LD    A,35
2507             L439:
2507 CD 74 3D            CALL  writeLineA
250A             L440:
250A C3 E7 25            JP    L514
250D             L441:
250D 21 E7 03            LD    HL,999
2510             L442:
2510 CD 4C 3D            CALL  writeLineHL
2513             L443:
2513                     ;;testBitwiseOperators.j(75)     if (0x1234 ^ b1 == 0x1228) println (36); else println (999);
2513             L444:
2513 21 34 12            LD    HL,4660
2516             L445:
2516 ED 5B 00 50         LD    DE,(05000H)
251A C5                  PUSH  BC
251B 47                  LD    B,A
251C 7C                  LD    A,H
251D AA                  XOR   A,D
251E 67                  LD    H,A
251F 7D                  LD    A,L
2520 AB                  XOR   A,E
2521 6F                  LD    L,A
2522 78                  LD    A,B
2523 C1                  POP   BC
2524             L446:
2524 11 28 12            LD    DE,4648
2527 B7                  OR    A
2528 ED 52               SBC   HL,DE
252A             L447:
252A C2 05 26            JP    NZ,L523
252D             L448:
252D 3E 24               LD    A,36
252F             L449:
252F CD 74 3D            CALL  writeLineA
2532             L450:
2532 C3 1C 26            JP    L530
2535             L451:
2535 21 E7 03            LD    HL,999
2538             L452:
2538 CD 4C 3D            CALL  writeLineHL
253B             L453:
253B                     ;;testBitwiseOperators.j(76)   
253B             L454:
253B                     ;;testBitwiseOperators.j(77)     //constant/final var
253B             L455:
253B                     ;;testBitwiseOperators.j(78)     //*****************
253B             L456:
253B                     ;;testBitwiseOperators.j(79)     //constant byte/final var byte
253B             L457:
253B                     ;;testBitwiseOperators.j(80)     if (0x07 & fb1 == 0x04) println (37); else println (999);
253B             L458:
253B 3E 07               LD    A,7
253D             L459:
253D E6 1C               AND   A,28
253F             L460:
253F D6 04               SUB   A,4
2541             L461:
2541 C2 3D 26            JP    NZ,L539
2544             L462:
2544 3E 25               LD    A,37
2546             L463:
2546 CD 74 3D            CALL  writeLineA
2549             L464:
2549 C3 46 26            JP    L542
254C             L465:
254C 21 E7 03            LD    HL,999
254F             L466:
254F CD 4C 3D            CALL  writeLineHL
2552             L467:
2552                     ;;testBitwiseOperators.j(81)     if (0x07 | fb1 == 0x1F) println (38); else println (999);
2552             L468:
2552 3E 07               LD    A,7
2554             L469:
2554 F6 1C               OR    A,28
2556             L470:
2556 D6 1F               SUB   A,31
2558             L471:
2558 C2 69 26            JP    NZ,L551
255B             L472:
255B 3E 26               LD    A,38
255D             L473:
255D CD 74 3D            CALL  writeLineA
2560             L474:
2560 C3 6F 26            JP    L554
2563             L475:
2563 21 E7 03            LD    HL,999
2566             L476:
2566 CD 4C 3D            CALL  writeLineHL
2569             L477:
2569                     ;;testBitwiseOperators.j(82)     if (0x07 ^ fb1 == 0x1B) println (39); else println (999);
2569             L478:
2569 3E 07               LD    A,7
256B             L479:
256B EE 1C               XOR   A,28
256D             L480:
256D D6 1B               SUB   A,27
256F             L481:
256F C2 93 26            JP    NZ,L563
2572             L482:
2572 3E 27               LD    A,39
2574             L483:
2574 CD 74 3D            CALL  writeLineA
2577             L484:
2577 C3 9C 26            JP    L567
257A             L485:
257A 21 E7 03            LD    HL,999
257D             L486:
257D CD 4C 3D            CALL  writeLineHL
2580             L487:
2580                     ;;testBitwiseOperators.j(83)     //constant word/final var word
2580             L488:
2580                     ;;testBitwiseOperators.j(84)     if (0x1234 & fw1 == 0x0224) println (40); else println (999);
2580             L489:
2580 21 34 12            LD    HL,4660
2583             L490:
2583 11 2C 03            LD    DE,812
2586 C5                  PUSH  BC
2587 47                  LD    B,A
2588 7C                  LD    A,H
2589 A2                  AND   A,D
258A 67                  LD    H,A
258B 7D                  LD    A,L
258C A3                  AND   A,E
258D 6F                  LD    L,A
258E 78                  LD    A,B
258F C1                  POP   BC
2590             L491:
2590 11 24 02            LD    DE,548
2593 B7                  OR    A
2594 ED 52               SBC   HL,DE
2596             L492:
2596 C2 BE 26            JP    NZ,L576
2599             L493:
2599 3E 28               LD    A,40
259B             L494:
259B CD 74 3D            CALL  writeLineA
259E             L495:
259E C3 D4 26            JP    L579
25A1             L496:
25A1 21 E7 03            LD    HL,999
25A4             L497:
25A4 CD 4C 3D            CALL  writeLineHL
25A7             L498:
25A7                     ;;testBitwiseOperators.j(85)     if (0x1234 | fw1 == 0x133C) println (41); else println (999);
25A7             L499:
25A7 21 34 12            LD    HL,4660
25AA             L500:
25AA 11 2C 03            LD    DE,812
25AD 47                  LD    B,A
25AE 7C                  LD    A,H
25AF B2                  OR    A,D
25B0 67                  LD    H,A
25B1 7D                  LD    A,L
25B2 B3                  OR    A,E
25B3 6F                  LD    L,A
25B4 78                  LD    A,B
25B5             L501:
25B5 11 3C 13            LD    DE,4924
25B8 B7                  OR    A
25B9 ED 52               SBC   HL,DE
25BB             L502:
25BB C2 E5 26            JP    NZ,L588
25BE             L503:
25BE 3E 29               LD    A,41
25C0             L504:
25C0 CD 74 3D            CALL  writeLineA
25C3             L505:
25C3 C3 E7 26            JP    L591
25C6             L506:
25C6 21 E7 03            LD    HL,999
25C9             L507:
25C9 CD 4C 3D            CALL  writeLineHL
25CC             L508:
25CC                     ;;testBitwiseOperators.j(86)     if (0x1234 ^ fw1 == 0x1118) println (42); else println (999);
25CC             L509:
25CC 21 34 12            LD    HL,4660
25CF             L510:
25CF 11 2C 03            LD    DE,812
25D2 C5                  PUSH  BC
25D3 47                  LD    B,A
25D4 7C                  LD    A,H
25D5 AA                  XOR   A,D
25D6 67                  LD    H,A
25D7 7D                  LD    A,L
25D8 AB                  XOR   A,E
25D9 6F                  LD    L,A
25DA 78                  LD    A,B
25DB C1                  POP   BC
25DC             L511:
25DC 11 18 11            LD    DE,4376
25DF B7                  OR    A
25E0 ED 52               SBC   HL,DE
25E2             L512:
25E2 C2 FE 26            JP    NZ,L600
25E5             L513:
25E5 3E 2A               LD    A,42
25E7             L514:
25E7 CD 74 3D            CALL  writeLineA
25EA             L515:
25EA C3 04 27            JP    L604
25ED             L516:
25ED 21 E7 03            LD    HL,999
25F0             L517:
25F0 CD 4C 3D            CALL  writeLineHL
25F3             L518:
25F3                     ;;testBitwiseOperators.j(87)     //constant byte/final var word
25F3             L519:
25F3                     ;;testBitwiseOperators.j(88)     if (0x1C & fw2 == 0x0014) println (43); else println (999);
25F3             L520:
25F3 3E 1C               LD    A,28
25F5             L521:
25F5 6F                  LD    L,A
25F6 26 00               LD    H,0
25F8             L522:
25F8 11 34 12            LD    DE,4660
25FB C5                  PUSH  BC
25FC 47                  LD    B,A
25FD 7C                  LD    A,H
25FE A2                  AND   A,D
25FF 67                  LD    H,A
2600 7D                  LD    A,L
2601 A3                  AND   A,E
2602 6F                  LD    L,A
2603 78                  LD    A,B
2604 C1                  POP   BC
2605             L523:
2605 3E 14               LD    A,20
2607             L524:
2607 5F                  LD    E,A
2608 16 00               LD    D,0
260A EB                  EX    DE,HL
260B B7                  OR    A
260C ED 52               SBC   HL,DE
260E             L525:
260E C2 1D 27            JP    NZ,L615
2611             L526:
2611 3E 2B               LD    A,43
2613             L527:
2613 CD 74 3D            CALL  writeLineA
2616             L528:
2616 C3 24 27            JP    L618
2619             L529:
2619 21 E7 03            LD    HL,999
261C             L530:
261C CD 4C 3D            CALL  writeLineHL
261F             L531:
261F                     ;;testBitwiseOperators.j(89)     if (0x1C | fw2 == 0x123C) println (44); else println (999);
261F             L532:
261F 3E 1C               LD    A,28
2621             L533:
2621 6F                  LD    L,A
2622 26 00               LD    H,0
2624             L534:
2624 11 34 12            LD    DE,4660
2627 47                  LD    B,A
2628 7C                  LD    A,H
2629 B2                  OR    A,D
262A 67                  LD    H,A
262B 7D                  LD    A,L
262C B3                  OR    A,E
262D 6F                  LD    L,A
262E 78                  LD    A,B
262F             L535:
262F 11 3C 12            LD    DE,4668
2632 B7                  OR    A
2633 ED 52               SBC   HL,DE
2635             L536:
2635 C2 4A 27            JP    NZ,L628
2638             L537:
2638 3E 2C               LD    A,44
263A             L538:
263A CD 74 3D            CALL  writeLineA
263D             L539:
263D C3 52 27            JP    L631
2640             L540:
2640 21 E7 03            LD    HL,999
2643             L541:
2643 CD 4C 3D            CALL  writeLineHL
2646             L542:
2646                     ;;testBitwiseOperators.j(90)     if (0x1C ^ fw2 == 0x1228) println (45); else println (999);
2646             L543:
2646 3E 1C               LD    A,28
2648             L544:
2648 6F                  LD    L,A
2649 26 00               LD    H,0
264B             L545:
264B 11 34 12            LD    DE,4660
264E C5                  PUSH  BC
264F 47                  LD    B,A
2650 7C                  LD    A,H
2651 AA                  XOR   A,D
2652 67                  LD    H,A
2653 7D                  LD    A,L
2654 AB                  XOR   A,E
2655 6F                  LD    L,A
2656 78                  LD    A,B
2657 C1                  POP   BC
2658             L546:
2658 11 28 12            LD    DE,4648
265B B7                  OR    A
265C ED 52               SBC   HL,DE
265E             L547:
265E C2 78 27            JP    NZ,L641
2661             L548:
2661 3E 2D               LD    A,45
2663             L549:
2663 CD 74 3D            CALL  writeLineA
2666             L550:
2666 C3 84 27            JP    L645
2669             L551:
2669 21 E7 03            LD    HL,999
266C             L552:
266C CD 4C 3D            CALL  writeLineHL
266F             L553:
266F                     ;;testBitwiseOperators.j(91)     //constant word/final var byte
266F             L554:
266F                     ;;testBitwiseOperators.j(92)     if (0x1234 & fb1 == 0x0014) println (46); else println (999);
266F             L555:
266F 21 34 12            LD    HL,4660
2672             L556:
2672 11 1C 00            LD    DE,28
2675 C5                  PUSH  BC
2676 47                  LD    B,A
2677 7C                  LD    A,H
2678 A2                  AND   A,D
2679 67                  LD    H,A
267A 7D                  LD    A,L
267B A3                  AND   A,E
267C 6F                  LD    L,A
267D 78                  LD    A,B
267E C1                  POP   BC
267F             L557:
267F 3E 14               LD    A,20
2681             L558:
2681 5F                  LD    E,A
2682 16 00               LD    D,0
2684 EB                  EX    DE,HL
2685 B7                  OR    A
2686 ED 52               SBC   HL,DE
2688             L559:
2688 C2 AC 27            JP    NZ,L655
268B             L560:
268B 3E 2E               LD    A,46
268D             L561:
268D CD 74 3D            CALL  writeLineA
2690             L562:
2690 C3 AF 27            JP    L658
2693             L563:
2693 21 E7 03            LD    HL,999
2696             L564:
2696 CD 4C 3D            CALL  writeLineHL
2699             L565:
2699                     ;;testBitwiseOperators.j(93)     if (0x1234 | fb1 == 0x123C) println (47); else println (999);
2699             L566:
2699 21 34 12            LD    HL,4660
269C             L567:
269C 11 1C 00            LD    DE,28
269F 47                  LD    B,A
26A0 7C                  LD    A,H
26A1 B2                  OR    A,D
26A2 67                  LD    H,A
26A3 7D                  LD    A,L
26A4 B3                  OR    A,E
26A5 6F                  LD    L,A
26A6 78                  LD    A,B
26A7             L568:
26A7 11 3C 12            LD    DE,4668
26AA B7                  OR    A
26AB ED 52               SBC   HL,DE
26AD             L569:
26AD C2 D4 27            JP    NZ,L667
26B0             L570:
26B0 3E 2F               LD    A,47
26B2             L571:
26B2 CD 74 3D            CALL  writeLineA
26B5             L572:
26B5 C3 DD 27            JP    L670
26B8             L573:
26B8 21 E7 03            LD    HL,999
26BB             L574:
26BB CD 4C 3D            CALL  writeLineHL
26BE             L575:
26BE                     ;;testBitwiseOperators.j(94)     if (0x1234 ^ fb1 == 0x1228) println (48); else println (999);
26BE             L576:
26BE 21 34 12            LD    HL,4660
26C1             L577:
26C1 11 1C 00            LD    DE,28
26C4 C5                  PUSH  BC
26C5 47                  LD    B,A
26C6 7C                  LD    A,H
26C7 AA                  XOR   A,D
26C8 67                  LD    H,A
26C9 7D                  LD    A,L
26CA AB                  XOR   A,E
26CB 6F                  LD    L,A
26CC 78                  LD    A,B
26CD C1                  POP   BC
26CE             L578:
26CE 11 28 12            LD    DE,4648
26D1 B7                  OR    A
26D2 ED 52               SBC   HL,DE
26D4             L579:
26D4 C2 FD 27            JP    NZ,L679
26D7             L580:
26D7 3E 30               LD    A,48
26D9             L581:
26D9 CD 74 3D            CALL  writeLineA
26DC             L582:
26DC C3 0D 28            JP    L686
26DF             L583:
26DF 21 E7 03            LD    HL,999
26E2             L584:
26E2 CD 4C 3D            CALL  writeLineHL
26E5             L585:
26E5                     ;;testBitwiseOperators.j(95)   
26E5             L586:
26E5                     ;;testBitwiseOperators.j(96)     //acc/constant
26E5             L587:
26E5                     ;;testBitwiseOperators.j(97)     //************
26E5             L588:
26E5                     ;;testBitwiseOperators.j(98)     //acc byte/constant byte
26E5             L589:
26E5                     ;;testBitwiseOperators.j(99)     if ((0x04 + 0x03) & 0x1C == 0x04) println (49); else println (999);
26E5             L590:
26E5 3E 04               LD    A,4
26E7             L591:
26E7 C6 03               ADD   A,3
26E9             L592:
26E9 E6 1C               AND   A,28
26EB             L593:
26EB D6 04               SUB   A,4
26ED             L594:
26ED C2 31 28            JP    NZ,L696
26F0             L595:
26F0 3E 31               LD    A,49
26F2             L596:
26F2 CD 74 3D            CALL  writeLineA
26F5             L597:
26F5 C3 45 28            JP    L699
26F8             L598:
26F8 21 E7 03            LD    HL,999
26FB             L599:
26FB CD 4C 3D            CALL  writeLineHL
26FE             L600:
26FE                     ;;testBitwiseOperators.j(100)     if ((0x04 + 0x03) | 0x1C == 0x1F) println (50); else println (999);
26FE             L601:
26FE 3E 04               LD    A,4
2700             L602:
2700 C6 03               ADD   A,3
2702             L603:
2702 F6 1C               OR    A,28
2704             L604:
2704 D6 1F               SUB   A,31
2706             L605:
2706 C2 62 28            JP    NZ,L709
2709             L606:
2709 3E 32               LD    A,50
270B             L607:
270B CD 74 3D            CALL  writeLineA
270E             L608:
270E C3 77 28            JP    L712
2711             L609:
2711 21 E7 03            LD    HL,999
2714             L610:
2714 CD 4C 3D            CALL  writeLineHL
2717             L611:
2717                     ;;testBitwiseOperators.j(101)     if ((0x04 + 0x03) ^ 0x1C == 0x1B) println (51); else println (999);
2717             L612:
2717 3E 04               LD    A,4
2719             L613:
2719 C6 03               ADD   A,3
271B             L614:
271B EE 1C               XOR   A,28
271D             L615:
271D D6 1B               SUB   A,27
271F             L616:
271F C2 9C 28            JP    NZ,L722
2722             L617:
2722 3E 33               LD    A,51
2724             L618:
2724 CD 74 3D            CALL  writeLineA
2727             L619:
2727 C3 AA 28            JP    L726
272A             L620:
272A 21 E7 03            LD    HL,999
272D             L621:
272D CD 4C 3D            CALL  writeLineHL
2730             L622:
2730                     ;;testBitwiseOperators.j(102)     //acc word/constant word
2730             L623:
2730                     ;;testBitwiseOperators.j(103)     if (0x1000 + 0x0234 & 0x032C == 0x0224) println (52); else println (999);
2730             L624:
2730 21 00 10            LD    HL,4096
2733             L625:
2733 11 34 02            LD    DE,564
2736 19                  ADD   HL,DE
2737             L626:
2737 11 2C 03            LD    DE,812
273A C5                  PUSH  BC
273B 47                  LD    B,A
273C 7C                  LD    A,H
273D A2                  AND   A,D
273E 67                  LD    H,A
273F 7D                  LD    A,L
2740 A3                  AND   A,E
2741 6F                  LD    L,A
2742 78                  LD    A,B
2743 C1                  POP   BC
2744             L627:
2744 11 24 02            LD    DE,548
2747 B7                  OR    A
2748 ED 52               SBC   HL,DE
274A             L628:
274A C2 B7 28            JP    NZ,L736
274D             L629:
274D 3E 34               LD    A,52
274F             L630:
274F CD 74 3D            CALL  writeLineA
2752             L631:
2752 C3 BE 28            JP    L739
2755             L632:
2755 21 E7 03            LD    HL,999
2758             L633:
2758 CD 4C 3D            CALL  writeLineHL
275B             L634:
275B                     ;;testBitwiseOperators.j(104)     if (0x1000 + 0x0234 | 0x032C == 0x133C) println (53); else println (999);
275B             L635:
275B 21 00 10            LD    HL,4096
275E             L636:
275E 11 34 02            LD    DE,564
2761 19                  ADD   HL,DE
2762             L637:
2762 11 2C 03            LD    DE,812
2765 47                  LD    B,A
2766 7C                  LD    A,H
2767 B2                  OR    A,D
2768 67                  LD    H,A
2769 7D                  LD    A,L
276A B3                  OR    A,E
276B 6F                  LD    L,A
276C 78                  LD    A,B
276D             L638:
276D 11 3C 13            LD    DE,4924
2770 B7                  OR    A
2771 ED 52               SBC   HL,DE
2773             L639:
2773 C2 D5 28            JP    NZ,L749
2776             L640:
2776 3E 35               LD    A,53
2778             L641:
2778 CD 74 3D            CALL  writeLineA
277B             L642:
277B C3 DC 28            JP    L752
277E             L643:
277E 21 E7 03            LD    HL,999
2781             L644:
2781 CD 4C 3D            CALL  writeLineHL
2784             L645:
2784                     ;;testBitwiseOperators.j(105)     if (0x1000 + 0x0234 ^ 0x032C == 0x1118) println (54); else println (999);
2784             L646:
2784 21 00 10            LD    HL,4096
2787             L647:
2787 11 34 02            LD    DE,564
278A 19                  ADD   HL,DE
278B             L648:
278B 11 2C 03            LD    DE,812
278E C5                  PUSH  BC
278F 47                  LD    B,A
2790 7C                  LD    A,H
2791 AA                  XOR   A,D
2792 67                  LD    H,A
2793 7D                  LD    A,L
2794 AB                  XOR   A,E
2795 6F                  LD    L,A
2796 78                  LD    A,B
2797 C1                  POP   BC
2798             L649:
2798 11 18 11            LD    DE,4376
279B B7                  OR    A
279C ED 52               SBC   HL,DE
279E             L650:
279E C2 F3 28            JP    NZ,L762
27A1             L651:
27A1 3E 36               LD    A,54
27A3             L652:
27A3 CD 74 3D            CALL  writeLineA
27A6             L653:
27A6 C3 FC 28            JP    L766
27A9             L654:
27A9 21 E7 03            LD    HL,999
27AC             L655:
27AC CD 4C 3D            CALL  writeLineHL
27AF             L656:
27AF                     ;;testBitwiseOperators.j(106)     //acc byte/constant word
27AF             L657:
27AF                     ;;testBitwiseOperators.j(107)     if (0x10 + 0x0C & 0x1234 == 0x0014) println (55); else println (999);
27AF             L658:
27AF 3E 10               LD    A,16
27B1             L659:
27B1 C6 0C               ADD   A,12
27B3             L660:
27B3 6F                  LD    L,A
27B4 26 00               LD    H,0
27B6             L661:
27B6 11 34 12            LD    DE,4660
27B9 C5                  PUSH  BC
27BA 47                  LD    B,A
27BB 7C                  LD    A,H
27BC A2                  AND   A,D
27BD 67                  LD    H,A
27BE 7D                  LD    A,L
27BF A3                  AND   A,E
27C0 6F                  LD    L,A
27C1 78                  LD    A,B
27C2 C1                  POP   BC
27C3             L662:
27C3 3E 14               LD    A,20
27C5             L663:
27C5 5F                  LD    E,A
27C6 16 00               LD    D,0
27C8 EB                  EX    DE,HL
27C9 B7                  OR    A
27CA ED 52               SBC   HL,DE
27CC             L664:
27CC C2 1C 29            JP    NZ,L778
27CF             L665:
27CF 3E 37               LD    A,55
27D1             L666:
27D1 CD 74 3D            CALL  writeLineA
27D4             L667:
27D4 C3 30 29            JP    L781
27D7             L668:
27D7 21 E7 03            LD    HL,999
27DA             L669:
27DA CD 4C 3D            CALL  writeLineHL
27DD             L670:
27DD                     ;;testBitwiseOperators.j(108)     if (0x10 + 0x0C | 0x1234 == 0x123C) println (56); else println (999);
27DD             L671:
27DD 3E 10               LD    A,16
27DF             L672:
27DF C6 0C               ADD   A,12
27E1             L673:
27E1 6F                  LD    L,A
27E2 26 00               LD    H,0
27E4             L674:
27E4 11 34 12            LD    DE,4660
27E7 47                  LD    B,A
27E8 7C                  LD    A,H
27E9 B2                  OR    A,D
27EA 67                  LD    H,A
27EB 7D                  LD    A,L
27EC B3                  OR    A,E
27ED 6F                  LD    L,A
27EE 78                  LD    A,B
27EF             L675:
27EF 11 3C 12            LD    DE,4668
27F2 B7                  OR    A
27F3 ED 52               SBC   HL,DE
27F5             L676:
27F5 C2 56 29            JP    NZ,L792
27F8             L677:
27F8 3E 38               LD    A,56
27FA             L678:
27FA CD 74 3D            CALL  writeLineA
27FD             L679:
27FD C3 61 29            JP    L795
2800             L680:
2800 21 E7 03            LD    HL,999
2803             L681:
2803 CD 4C 3D            CALL  writeLineHL
2806             L682:
2806                     ;;testBitwiseOperators.j(109)     if (0x10 + 0x0C ^ 0x1234 == 0x1228) println (57); else println (999);
2806             L683:
2806 3E 10               LD    A,16
2808             L684:
2808 C6 0C               ADD   A,12
280A             L685:
280A 6F                  LD    L,A
280B 26 00               LD    H,0
280D             L686:
280D 11 34 12            LD    DE,4660
2810 C5                  PUSH  BC
2811 47                  LD    B,A
2812 7C                  LD    A,H
2813 AA                  XOR   A,D
2814 67                  LD    H,A
2815 7D                  LD    A,L
2816 AB                  XOR   A,E
2817 6F                  LD    L,A
2818 78                  LD    A,B
2819 C1                  POP   BC
281A             L687:
281A 11 28 12            LD    DE,4648
281D B7                  OR    A
281E ED 52               SBC   HL,DE
2820             L688:
2820 C2 8D 29            JP    NZ,L806
2823             L689:
2823 3E 39               LD    A,57
2825             L690:
2825 CD 74 3D            CALL  writeLineA
2828             L691:
2828 C3 98 29            JP    L810
282B             L692:
282B 21 E7 03            LD    HL,999
282E             L693:
282E CD 4C 3D            CALL  writeLineHL
2831             L694:
2831                     ;;testBitwiseOperators.j(110)     //acc word/constant byte
2831             L695:
2831                     ;;testBitwiseOperators.j(111)     if (0x1000 + 0x0234 & 0x1C == 0x0014) println (58); else println (999);
2831             L696:
2831 21 00 10            LD    HL,4096
2834             L697:
2834 11 34 02            LD    DE,564
2837 19                  ADD   HL,DE
2838             L698:
2838 11 1C 00            LD    DE,28
283B C5                  PUSH  BC
283C 47                  LD    B,A
283D 7C                  LD    A,H
283E A2                  AND   A,D
283F 67                  LD    H,A
2840 7D                  LD    A,L
2841 A3                  AND   A,E
2842 6F                  LD    L,A
2843 78                  LD    A,B
2844 C1                  POP   BC
2845             L699:
2845 3E 14               LD    A,20
2847             L700:
2847 5F                  LD    E,A
2848 16 00               LD    D,0
284A EB                  EX    DE,HL
284B B7                  OR    A
284C ED 52               SBC   HL,DE
284E             L701:
284E C2 B6 29            JP    NZ,L821
2851             L702:
2851 3E 3A               LD    A,58
2853             L703:
2853 CD 74 3D            CALL  writeLineA
2856             L704:
2856 C3 BE 29            JP    L824
2859             L705:
2859 21 E7 03            LD    HL,999
285C             L706:
285C CD 4C 3D            CALL  writeLineHL
285F             L707:
285F                     ;;testBitwiseOperators.j(112)     if (0x1000 + 0x0234 | 0x1C == 0x123C) println (59); else println (999);
285F             L708:
285F 21 00 10            LD    HL,4096
2862             L709:
2862 11 34 02            LD    DE,564
2865 19                  ADD   HL,DE
2866             L710:
2866 11 1C 00            LD    DE,28
2869 47                  LD    B,A
286A 7C                  LD    A,H
286B B2                  OR    A,D
286C 67                  LD    H,A
286D 7D                  LD    A,L
286E B3                  OR    A,E
286F 6F                  LD    L,A
2870 78                  LD    A,B
2871             L711:
2871 11 3C 12            LD    DE,4668
2874 B7                  OR    A
2875 ED 52               SBC   HL,DE
2877             L712:
2877 C2 DA 29            JP    NZ,L834
287A             L713:
287A 3E 3B               LD    A,59
287C             L714:
287C CD 74 3D            CALL  writeLineA
287F             L715:
287F C3 E2 29            JP    L837
2882             L716:
2882 21 E7 03            LD    HL,999
2885             L717:
2885 CD 4C 3D            CALL  writeLineHL
2888             L718:
2888                     ;;testBitwiseOperators.j(113)     if (0x1000 + 0x0234 ^ 0x1C == 0x1228) println (60); else println (999);
2888             L719:
2888 21 00 10            LD    HL,4096
288B             L720:
288B 11 34 02            LD    DE,564
288E 19                  ADD   HL,DE
288F             L721:
288F 11 1C 00            LD    DE,28
2892 C5                  PUSH  BC
2893 47                  LD    B,A
2894 7C                  LD    A,H
2895 AA                  XOR   A,D
2896 67                  LD    H,A
2897 7D                  LD    A,L
2898 AB                  XOR   A,E
2899 6F                  LD    L,A
289A 78                  LD    A,B
289B C1                  POP   BC
289C             L722:
289C 11 28 12            LD    DE,4648
289F B7                  OR    A
28A0 ED 52               SBC   HL,DE
28A2             L723:
28A2 C2 FE 29            JP    NZ,L847
28A5             L724:
28A5 3E 3C               LD    A,60
28A7             L725:
28A7 CD 74 3D            CALL  writeLineA
28AA             L726:
28AA C3 0F 2A            JP    L854
28AD             L727:
28AD 21 E7 03            LD    HL,999
28B0             L728:
28B0 CD 4C 3D            CALL  writeLineHL
28B3             L729:
28B3                     ;;testBitwiseOperators.j(114)   
28B3             L730:
28B3                     ;;testBitwiseOperators.j(115)     //acc/acc
28B3             L731:
28B3                     ;;testBitwiseOperators.j(116)     //*******
28B3             L732:
28B3                     ;;testBitwiseOperators.j(117)     //acc byte/acc byte
28B3             L733:
28B3                     ;;testBitwiseOperators.j(118)     if (0x04 + 0x03 & 0x10 + 0x0C == 0x04) println (61); else println (999);
28B3             L734:
28B3 3E 04               LD    A,4
28B5             L735:
28B5 C6 03               ADD   A,3
28B7             L736:
28B7 F5                  PUSH  AF
28B8 3E 10               LD    A,16
28BA             L737:
28BA C6 0C               ADD   A,12
28BC             L738:
28BC C1                  POP   BC
28BD A0                  AND   A,B
28BE             L739:
28BE D6 04               SUB   A,4
28C0             L740:
28C0 C2 32 2A            JP    NZ,L866
28C3             L741:
28C3 3E 3D               LD    A,61
28C5             L742:
28C5 CD 74 3D            CALL  writeLineA
28C8             L743:
28C8 C3 38 2A            JP    L869
28CB             L744:
28CB 21 E7 03            LD    HL,999
28CE             L745:
28CE CD 4C 3D            CALL  writeLineHL
28D1             L746:
28D1                     ;;testBitwiseOperators.j(119)     if (0x04 + 0x03 | 0x10 + 0x0C == 0x1F) println (62); else println (999);
28D1             L747:
28D1 3E 04               LD    A,4
28D3             L748:
28D3 C6 03               ADD   A,3
28D5             L749:
28D5 F5                  PUSH  AF
28D6 3E 10               LD    A,16
28D8             L750:
28D8 C6 0C               ADD   A,12
28DA             L751:
28DA C1                  POP   BC
28DB B0                  OR    A,B
28DC             L752:
28DC D6 1F               SUB   A,31
28DE             L753:
28DE C2 5C 2A            JP    NZ,L881
28E1             L754:
28E1 3E 3E               LD    A,62
28E3             L755:
28E3 CD 74 3D            CALL  writeLineA
28E6             L756:
28E6 C3 63 2A            JP    L884
28E9             L757:
28E9 21 E7 03            LD    HL,999
28EC             L758:
28EC CD 4C 3D            CALL  writeLineHL
28EF             L759:
28EF                     ;;testBitwiseOperators.j(120)     if (0x04 + 0x03 ^ 0x10 + 0x0C == 0x1B) println (63); else println (999);
28EF             L760:
28EF 3E 04               LD    A,4
28F1             L761:
28F1 C6 03               ADD   A,3
28F3             L762:
28F3 F5                  PUSH  AF
28F4 3E 10               LD    A,16
28F6             L763:
28F6 C6 0C               ADD   A,12
28F8             L764:
28F8 C1                  POP   BC
28F9 A8                  XOR   A,B
28FA             L765:
28FA D6 1B               SUB   A,27
28FC             L766:
28FC C2 80 2A            JP    NZ,L896
28FF             L767:
28FF 3E 3F               LD    A,63
2901             L768:
2901 CD 74 3D            CALL  writeLineA
2904             L769:
2904 C3 82 2A            JP    L900
2907             L770:
2907 21 E7 03            LD    HL,999
290A             L771:
290A CD 4C 3D            CALL  writeLineHL
290D             L772:
290D                     ;;testBitwiseOperators.j(121)     //acc word/acc word
290D             L773:
290D                     ;;testBitwiseOperators.j(122)     if (0x1000 + 0x0234 & 0x0100 + 0x022C == 0x0224) println (64); else println (999);
290D             L774:
290D 21 00 10            LD    HL,4096
2910             L775:
2910 11 34 02            LD    DE,564
2913 19                  ADD   HL,DE
2914             L776:
2914 E5                  PUSH  HL
2915 21 00 01            LD    HL,256
2918             L777:
2918 11 2C 02            LD    DE,556
291B 19                  ADD   HL,DE
291C             L778:
291C D1                  POP   DE
291D C5                  PUSH  BC
291E 47                  LD    B,A
291F 7C                  LD    A,H
2920 A2                  AND   A,D
2921 67                  LD    H,A
2922 7D                  LD    A,L
2923 A3                  AND   A,E
2924 6F                  LD    L,A
2925 78                  LD    A,B
2926 C1                  POP   BC
2927             L779:
2927 11 24 02            LD    DE,548
292A B7                  OR    A
292B ED 52               SBC   HL,DE
292D             L780:
292D C2 A0 2A            JP    NZ,L912
2930             L781:
2930 3E 40               LD    A,64
2932             L782:
2932 CD 74 3D            CALL  writeLineA
2935             L783:
2935 C3 AA 2A            JP    L915
2938             L784:
2938 21 E7 03            LD    HL,999
293B             L785:
293B CD 4C 3D            CALL  writeLineHL
293E             L786:
293E                     ;;testBitwiseOperators.j(123)     if (0x1000 + 0x0234 | 0x0100 + 0x022C == 0x133C) println (65); else println (999);
293E             L787:
293E 21 00 10            LD    HL,4096
2941             L788:
2941 11 34 02            LD    DE,564
2944 19                  ADD   HL,DE
2945             L789:
2945 E5                  PUSH  HL
2946 21 00 01            LD    HL,256
2949             L790:
2949 11 2C 02            LD    DE,556
294C 19                  ADD   HL,DE
294D             L791:
294D D1                  POP   DE
294E 47                  LD    B,A
294F 7C                  LD    A,H
2950 B2                  OR    A,D
2951 67                  LD    H,A
2952 7D                  LD    A,L
2953 B3                  OR    A,E
2954 6F                  LD    L,A
2955 78                  LD    A,B
2956             L792:
2956 11 3C 13            LD    DE,4924
2959 B7                  OR    A
295A ED 52               SBC   HL,DE
295C             L793:
295C C2 C8 2A            JP    NZ,L927
295F             L794:
295F 3E 41               LD    A,65
2961             L795:
2961 CD 74 3D            CALL  writeLineA
2964             L796:
2964 C3 D1 2A            JP    L930
2967             L797:
2967 21 E7 03            LD    HL,999
296A             L798:
296A CD 4C 3D            CALL  writeLineHL
296D             L799:
296D                     ;;testBitwiseOperators.j(124)     if (0x1000 + 0x0234 ^ 0x0100 + 0x022C == 0x1118) println (66); else println (999);
296D             L800:
296D 21 00 10            LD    HL,4096
2970             L801:
2970 11 34 02            LD    DE,564
2973 19                  ADD   HL,DE
2974             L802:
2974 E5                  PUSH  HL
2975 21 00 01            LD    HL,256
2978             L803:
2978 11 2C 02            LD    DE,556
297B 19                  ADD   HL,DE
297C             L804:
297C D1                  POP   DE
297D C5                  PUSH  BC
297E 47                  LD    B,A
297F 7C                  LD    A,H
2980 AA                  XOR   A,D
2981 67                  LD    H,A
2982 7D                  LD    A,L
2983 AB                  XOR   A,E
2984 6F                  LD    L,A
2985 78                  LD    A,B
2986 C1                  POP   BC
2987             L805:
2987 11 18 11            LD    DE,4376
298A B7                  OR    A
298B ED 52               SBC   HL,DE
298D             L806:
298D C2 FD 2A            JP    NZ,L942
2990             L807:
2990 3E 42               LD    A,66
2992             L808:
2992 CD 74 3D            CALL  writeLineA
2995             L809:
2995 C3 07 2B            JP    L946
2998             L810:
2998 21 E7 03            LD    HL,999
299B             L811:
299B CD 4C 3D            CALL  writeLineHL
299E             L812:
299E                     ;;testBitwiseOperators.j(125)     //acc byte/acc word
299E             L813:
299E                     ;;testBitwiseOperators.j(126)     if (0x10 + 0x0C & 0x1000 + 0x0234 == 0x0014) println (67); else println (999);
299E             L814:
299E 3E 10               LD    A,16
29A0             L815:
29A0 C6 0C               ADD   A,12
29A2             L816:
29A2 21 00 10            LD    HL,4096
29A5             L817:
29A5 11 34 02            LD    DE,564
29A8 19                  ADD   HL,DE
29A9             L818:
29A9 A5                  AND   A,L
29AA 6F                  LD    L,A
29AB 26 00               LD    H,0
29AD             L819:
29AD 3E 14               LD    A,20
29AF             L820:
29AF 5F                  LD    E,A
29B0 16 00               LD    D,0
29B2 EB                  EX    DE,HL
29B3 B7                  OR    A
29B4 ED 52               SBC   HL,DE
29B6             L821:
29B6 C2 45 2B            JP    NZ,L959
29B9             L822:
29B9 3E 43               LD    A,67
29BB             L823:
29BB CD 74 3D            CALL  writeLineA
29BE             L824:
29BE C3 4D 2B            JP    L962
29C1             L825:
29C1 21 E7 03            LD    HL,999
29C4             L826:
29C4 CD 4C 3D            CALL  writeLineHL
29C7             L827:
29C7                     ;;testBitwiseOperators.j(127)     if (0x10 + 0x0C | 0x1000 + 0x0234 == 0x123C) println (68); else println (999);
29C7             L828:
29C7 3E 10               LD    A,16
29C9             L829:
29C9 C6 0C               ADD   A,12
29CB             L830:
29CB 21 00 10            LD    HL,4096
29CE             L831:
29CE 11 34 02            LD    DE,564
29D1 19                  ADD   HL,DE
29D2             L832:
29D2 B5                  OR    A,L
29D3 6F                  LD    L,A
29D4             L833:
29D4 11 3C 12            LD    DE,4668
29D7 B7                  OR    A
29D8 ED 52               SBC   HL,DE
29DA             L834:
29DA C2 77 2B            JP    NZ,L974
29DD             L835:
29DD 3E 44               LD    A,68
29DF             L836:
29DF CD 74 3D            CALL  writeLineA
29E2             L837:
29E2 C3 7F 2B            JP    L977
29E5             L838:
29E5 21 E7 03            LD    HL,999
29E8             L839:
29E8 CD 4C 3D            CALL  writeLineHL
29EB             L840:
29EB                     ;;testBitwiseOperators.j(128)     if (0x10 + 0x0C ^ 0x1000 + 0x0234 == 0x1228) println (69); else println (999);
29EB             L841:
29EB 3E 10               LD    A,16
29ED             L842:
29ED C6 0C               ADD   A,12
29EF             L843:
29EF 21 00 10            LD    HL,4096
29F2             L844:
29F2 11 34 02            LD    DE,564
29F5 19                  ADD   HL,DE
29F6             L845:
29F6 AD                  XOR   A,L
29F7 6F                  LD    L,A
29F8             L846:
29F8 11 28 12            LD    DE,4648
29FB B7                  OR    A
29FC ED 52               SBC   HL,DE
29FE             L847:
29FE C2 A9 2B            JP    NZ,L989
2A01             L848:
2A01 3E 45               LD    A,69
2A03             L849:
2A03 CD 74 3D            CALL  writeLineA
2A06             L850:
2A06 C3 B1 2B            JP    L993
2A09             L851:
2A09 21 E7 03            LD    HL,999
2A0C             L852:
2A0C CD 4C 3D            CALL  writeLineHL
2A0F             L853:
2A0F                     ;;testBitwiseOperators.j(129)     //acc word/acc byte
2A0F             L854:
2A0F                     ;;testBitwiseOperators.j(130)     if (0x1000 + 0x0234 & 0x10 + 0x0C == 0x0014) println (70); else println (999);
2A0F             L855:
2A0F 21 00 10            LD    HL,4096
2A12             L856:
2A12 11 34 02            LD    DE,564
2A15 19                  ADD   HL,DE
2A16             L857:
2A16 3E 10               LD    A,16
2A18             L858:
2A18 C6 0C               ADD   A,12
2A1A             L859:
2A1A A5                  AND   A,L
2A1B 6F                  LD    L,A
2A1C 26 00               LD    H,0
2A1E             L860:
2A1E 3E 14               LD    A,20
2A20             L861:
2A20 5F                  LD    E,A
2A21 16 00               LD    D,0
2A23 EB                  EX    DE,HL
2A24 B7                  OR    A
2A25 ED 52               SBC   HL,DE
2A27             L862:
2A27 C2 DE 2B            JP    NZ,L1006
2A2A             L863:
2A2A 3E 46               LD    A,70
2A2C             L864:
2A2C CD 74 3D            CALL  writeLineA
2A2F             L865:
2A2F C3 F2 2B            JP    L1009
2A32             L866:
2A32 21 E7 03            LD    HL,999
2A35             L867:
2A35 CD 4C 3D            CALL  writeLineHL
2A38             L868:
2A38                     ;;testBitwiseOperators.j(131)     if (0x1000 + 0x0234 | 0x10 + 0x0C == 0x123C) println (71); else println (999);
2A38             L869:
2A38 21 00 10            LD    HL,4096
2A3B             L870:
2A3B 11 34 02            LD    DE,564
2A3E 19                  ADD   HL,DE
2A3F             L871:
2A3F 3E 10               LD    A,16
2A41             L872:
2A41 C6 0C               ADD   A,12
2A43             L873:
2A43 B5                  OR    A,L
2A44 6F                  LD    L,A
2A45             L874:
2A45 11 3C 12            LD    DE,4668
2A48 B7                  OR    A
2A49 ED 52               SBC   HL,DE
2A4B             L875:
2A4B C2 23 2C            JP    NZ,L1021
2A4E             L876:
2A4E 3E 47               LD    A,71
2A50             L877:
2A50 CD 74 3D            CALL  writeLineA
2A53             L878:
2A53 C3 2B 2C            JP    L1024
2A56             L879:
2A56 21 E7 03            LD    HL,999
2A59             L880:
2A59 CD 4C 3D            CALL  writeLineHL
2A5C             L881:
2A5C                     ;;testBitwiseOperators.j(132)     if (0x1000 + 0x0234 ^ 0x10 + 0x0C == 0x1228) println (72); else println (999);
2A5C             L882:
2A5C 21 00 10            LD    HL,4096
2A5F             L883:
2A5F 11 34 02            LD    DE,564
2A62 19                  ADD   HL,DE
2A63             L884:
2A63 3E 10               LD    A,16
2A65             L885:
2A65 C6 0C               ADD   A,12
2A67             L886:
2A67 AD                  XOR   A,L
2A68 6F                  LD    L,A
2A69             L887:
2A69 11 28 12            LD    DE,4648
2A6C B7                  OR    A
2A6D ED 52               SBC   HL,DE
2A6F             L888:
2A6F C2 5A 2C            JP    NZ,L1036
2A72             L889:
2A72 3E 48               LD    A,72
2A74             L890:
2A74 CD 74 3D            CALL  writeLineA
2A77             L891:
2A77 C3 60 2C            JP    L1043
2A7A             L892:
2A7A 21 E7 03            LD    HL,999
2A7D             L893:
2A7D CD 4C 3D            CALL  writeLineHL
2A80             L894:
2A80                     ;;testBitwiseOperators.j(133)   
2A80             L895:
2A80                     ;;testBitwiseOperators.j(134)     //acc/var
2A80             L896:
2A80                     ;;testBitwiseOperators.j(135)     //*******
2A80             L897:
2A80                     ;;testBitwiseOperators.j(136)     //acc byte/var byte
2A80             L898:
2A80                     ;;testBitwiseOperators.j(137)     if (0x04 + 0x03 & b1 == 0x04) println (73); else println (999);
2A80             L899:
2A80 3E 04               LD    A,4
2A82             L900:
2A82 C6 03               ADD   A,3
2A84             L901:
2A84 47                  LD    B,A
2A85 3A 00 50            LD    A,(05000H)
2A88 A0                  AND   A,B
2A89             L902:
2A89 D6 04               SUB   A,4
2A8B             L903:
2A8B C2 79 2C            JP    NZ,L1053
2A8E             L904:
2A8E 3E 49               LD    A,73
2A90             L905:
2A90 CD 74 3D            CALL  writeLineA
2A93             L906:
2A93 C3 7D 2C            JP    L1056
2A96             L907:
2A96 21 E7 03            LD    HL,999
2A99             L908:
2A99 CD 4C 3D            CALL  writeLineHL
2A9C             L909:
2A9C                     ;;testBitwiseOperators.j(138)     if (0x04 + 0x03 | b1 == 0x1F) println (74); else println (999);
2A9C             L910:
2A9C 3E 04               LD    A,4
2A9E             L911:
2A9E C6 03               ADD   A,3
2AA0             L912:
2AA0 47                  LD    B,A
2AA1 3A 00 50            LD    A,(05000H)
2AA4 B0                  OR    A,B
2AA5             L913:
2AA5 D6 1F               SUB   A,31
2AA7             L914:
2AA7 C2 94 2C            JP    NZ,L1066
2AAA             L915:
2AAA 3E 4A               LD    A,74
2AAC             L916:
2AAC CD 74 3D            CALL  writeLineA
2AAF             L917:
2AAF C3 9A 2C            JP    L1069
2AB2             L918:
2AB2 21 E7 03            LD    HL,999
2AB5             L919:
2AB5 CD 4C 3D            CALL  writeLineHL
2AB8             L920:
2AB8                     ;;testBitwiseOperators.j(139)     if (0x04 + 0x03 ^ b1 == 0x1B) println (75); else println (999);
2AB8             L921:
2AB8 3E 04               LD    A,4
2ABA             L922:
2ABA C6 03               ADD   A,3
2ABC             L923:
2ABC 47                  LD    B,A
2ABD 3A 00 50            LD    A,(05000H)
2AC0 A8                  XOR   A,B
2AC1             L924:
2AC1 D6 1B               SUB   A,27
2AC3             L925:
2AC3 C2 B2 2C            JP    NZ,L1079
2AC6             L926:
2AC6 3E 4B               LD    A,75
2AC8             L927:
2AC8 CD 74 3D            CALL  writeLineA
2ACB             L928:
2ACB C3 CA 2C            JP    L1083
2ACE             L929:
2ACE 21 E7 03            LD    HL,999
2AD1             L930:
2AD1 CD 4C 3D            CALL  writeLineHL
2AD4             L931:
2AD4                     ;;testBitwiseOperators.j(140)     //acc word/var word
2AD4             L932:
2AD4                     ;;testBitwiseOperators.j(141)     if (0x1000 + 0x0234 & w1 == 0x0224) println (76); else println (999);
2AD4             L933:
2AD4 21 00 10            LD    HL,4096
2AD7             L934:
2AD7 11 34 02            LD    DE,564
2ADA 19                  ADD   HL,DE
2ADB             L935:
2ADB ED 5B 02 50         LD    DE,(05002H)
2ADF C5                  PUSH  BC
2AE0 47                  LD    B,A
2AE1 7C                  LD    A,H
2AE2 A2                  AND   A,D
2AE3 67                  LD    H,A
2AE4 7D                  LD    A,L
2AE5 A3                  AND   A,E
2AE6 6F                  LD    L,A
2AE7 78                  LD    A,B
2AE8 C1                  POP   BC
2AE9             L936:
2AE9 11 24 02            LD    DE,548
2AEC B7                  OR    A
2AED ED 52               SBC   HL,DE
2AEF             L937:
2AEF C2 F1 2C            JP    NZ,L1093
2AF2             L938:
2AF2 3E 4C               LD    A,76
2AF4             L939:
2AF4 CD 74 3D            CALL  writeLineA
2AF7             L940:
2AF7 C3 F9 2C            JP    L1096
2AFA             L941:
2AFA 21 E7 03            LD    HL,999
2AFD             L942:
2AFD CD 4C 3D            CALL  writeLineHL
2B00             L943:
2B00                     ;;testBitwiseOperators.j(142)     if (0x1000 + 0x0234 | w1 == 0x133C) println (77); else println (999);
2B00             L944:
2B00 21 00 10            LD    HL,4096
2B03             L945:
2B03 11 34 02            LD    DE,564
2B06 19                  ADD   HL,DE
2B07             L946:
2B07 ED 5B 02 50         LD    DE,(05002H)
2B0B 47                  LD    B,A
2B0C 7C                  LD    A,H
2B0D B2                  OR    A,D
2B0E 67                  LD    H,A
2B0F 7D                  LD    A,L
2B10 B3                  OR    A,E
2B11 6F                  LD    L,A
2B12 78                  LD    A,B
2B13             L947:
2B13 11 3C 13            LD    DE,4924
2B16 B7                  OR    A
2B17 ED 52               SBC   HL,DE
2B19             L948:
2B19 C2 21 2D            JP    NZ,L1106
2B1C             L949:
2B1C 3E 4D               LD    A,77
2B1E             L950:
2B1E CD 74 3D            CALL  writeLineA
2B21             L951:
2B21 C3 2A 2D            JP    L1109
2B24             L952:
2B24 21 E7 03            LD    HL,999
2B27             L953:
2B27 CD 4C 3D            CALL  writeLineHL
2B2A             L954:
2B2A                     ;;testBitwiseOperators.j(143)     if (0x1000 + 0x0234 ^ w1 == 0x1118) println (78); else println (999);
2B2A             L955:
2B2A 21 00 10            LD    HL,4096
2B2D             L956:
2B2D 11 34 02            LD    DE,564
2B30 19                  ADD   HL,DE
2B31             L957:
2B31 ED 5B 02 50         LD    DE,(05002H)
2B35 C5                  PUSH  BC
2B36 47                  LD    B,A
2B37 7C                  LD    A,H
2B38 AA                  XOR   A,D
2B39 67                  LD    H,A
2B3A 7D                  LD    A,L
2B3B AB                  XOR   A,E
2B3C 6F                  LD    L,A
2B3D 78                  LD    A,B
2B3E C1                  POP   BC
2B3F             L958:
2B3F 11 18 11            LD    DE,4376
2B42 B7                  OR    A
2B43 ED 52               SBC   HL,DE
2B45             L959:
2B45 C2 4C 2D            JP    NZ,L1119
2B48             L960:
2B48 3E 4E               LD    A,78
2B4A             L961:
2B4A CD 74 3D            CALL  writeLineA
2B4D             L962:
2B4D C3 58 2D            JP    L1123
2B50             L963:
2B50 21 E7 03            LD    HL,999
2B53             L964:
2B53 CD 4C 3D            CALL  writeLineHL
2B56             L965:
2B56                     ;;testBitwiseOperators.j(144)     //acc byte/var word
2B56             L966:
2B56                     ;;testBitwiseOperators.j(145)     if (0x10 + 0x0C & w2 == 0x0014) println (79); else println (999);
2B56             L967:
2B56 3E 10               LD    A,16
2B58             L968:
2B58 C6 0C               ADD   A,12
2B5A             L969:
2B5A 6F                  LD    L,A
2B5B 26 00               LD    H,0
2B5D             L970:
2B5D ED 5B 04 50         LD    DE,(05004H)
2B61 C5                  PUSH  BC
2B62 47                  LD    B,A
2B63 7C                  LD    A,H
2B64 A2                  AND   A,D
2B65 67                  LD    H,A
2B66 7D                  LD    A,L
2B67 A3                  AND   A,E
2B68 6F                  LD    L,A
2B69 78                  LD    A,B
2B6A C1                  POP   BC
2B6B             L971:
2B6B 3E 14               LD    A,20
2B6D             L972:
2B6D 5F                  LD    E,A
2B6E 16 00               LD    D,0
2B70 EB                  EX    DE,HL
2B71 B7                  OR    A
2B72 ED 52               SBC   HL,DE
2B74             L973:
2B74 C2 81 2D            JP    NZ,L1135
2B77             L974:
2B77 3E 4F               LD    A,79
2B79             L975:
2B79 CD 74 3D            CALL  writeLineA
2B7C             L976:
2B7C C3 85 2D            JP    L1138
2B7F             L977:
2B7F 21 E7 03            LD    HL,999
2B82             L978:
2B82 CD 4C 3D            CALL  writeLineHL
2B85             L979:
2B85                     ;;testBitwiseOperators.j(146)     if (0x10 + 0x0C | w2 == 0x123C) println (80); else println (999);
2B85             L980:
2B85 3E 10               LD    A,16
2B87             L981:
2B87 C6 0C               ADD   A,12
2B89             L982:
2B89 6F                  LD    L,A
2B8A 26 00               LD    H,0
2B8C             L983:
2B8C ED 5B 04 50         LD    DE,(05004H)
2B90 47                  LD    B,A
2B91 7C                  LD    A,H
2B92 B2                  OR    A,D
2B93 67                  LD    H,A
2B94 7D                  LD    A,L
2B95 B3                  OR    A,E
2B96 6F                  LD    L,A
2B97 78                  LD    A,B
2B98             L984:
2B98 11 3C 12            LD    DE,4668
2B9B B7                  OR    A
2B9C ED 52               SBC   HL,DE
2B9E             L985:
2B9E C2 AC 2D            JP    NZ,L1149
2BA1             L986:
2BA1 3E 50               LD    A,80
2BA3             L987:
2BA3 CD 74 3D            CALL  writeLineA
2BA6             L988:
2BA6 C3 C0 2D            JP    L1152
2BA9             L989:
2BA9 21 E7 03            LD    HL,999
2BAC             L990:
2BAC CD 4C 3D            CALL  writeLineHL
2BAF             L991:
2BAF                     ;;testBitwiseOperators.j(147)     if (0x10 + 0x0C ^ w2 == 0x1228) println (81); else println (999);
2BAF             L992:
2BAF 3E 10               LD    A,16
2BB1             L993:
2BB1 C6 0C               ADD   A,12
2BB3             L994:
2BB3 6F                  LD    L,A
2BB4 26 00               LD    H,0
2BB6             L995:
2BB6 ED 5B 04 50         LD    DE,(05004H)
2BBA C5                  PUSH  BC
2BBB 47                  LD    B,A
2BBC 7C                  LD    A,H
2BBD AA                  XOR   A,D
2BBE 67                  LD    H,A
2BBF 7D                  LD    A,L
2BC0 AB                  XOR   A,E
2BC1 6F                  LD    L,A
2BC2 78                  LD    A,B
2BC3 C1                  POP   BC
2BC4             L996:
2BC4 11 28 12            LD    DE,4648
2BC7 B7                  OR    A
2BC8 ED 52               SBC   HL,DE
2BCA             L997:
2BCA C2 E1 2D            JP    NZ,L1163
2BCD             L998:
2BCD 3E 51               LD    A,81
2BCF             L999:
2BCF CD 74 3D            CALL  writeLineA
2BD2             L1000:
2BD2 C3 F7 2D            JP    L1167
2BD5             L1001:
2BD5 21 E7 03            LD    HL,999
2BD8             L1002:
2BD8 CD 4C 3D            CALL  writeLineHL
2BDB             L1003:
2BDB                     ;;testBitwiseOperators.j(148)     //acc word/var byte
2BDB             L1004:
2BDB                     ;;testBitwiseOperators.j(149)     if (0x1000 + 0x0234 & b1 == 0x0014) println (82); else println (999);
2BDB             L1005:
2BDB 21 00 10            LD    HL,4096
2BDE             L1006:
2BDE 11 34 02            LD    DE,564
2BE1 19                  ADD   HL,DE
2BE2             L1007:
2BE2 ED 5B 00 50         LD    DE,(05000H)
2BE6 C5                  PUSH  BC
2BE7 47                  LD    B,A
2BE8 7C                  LD    A,H
2BE9 A2                  AND   A,D
2BEA 67                  LD    H,A
2BEB 7D                  LD    A,L
2BEC A3                  AND   A,E
2BED 6F                  LD    L,A
2BEE 78                  LD    A,B
2BEF C1                  POP   BC
2BF0             L1008:
2BF0 3E 14               LD    A,20
2BF2             L1009:
2BF2 5F                  LD    E,A
2BF3 16 00               LD    D,0
2BF5 EB                  EX    DE,HL
2BF6 B7                  OR    A
2BF7 ED 52               SBC   HL,DE
2BF9             L1010:
2BF9 C2 22 2E            JP    NZ,L1178
2BFC             L1011:
2BFC 3E 52               LD    A,82
2BFE             L1012:
2BFE CD 74 3D            CALL  writeLineA
2C01             L1013:
2C01 C3 2B 2E            JP    L1181
2C04             L1014:
2C04 21 E7 03            LD    HL,999
2C07             L1015:
2C07 CD 4C 3D            CALL  writeLineHL
2C0A             L1016:
2C0A                     ;;testBitwiseOperators.j(150)     if (0x1000 + 0x0234 | b1 == 0x123C) println (83); else println (999);
2C0A             L1017:
2C0A 21 00 10            LD    HL,4096
2C0D             L1018:
2C0D 11 34 02            LD    DE,564
2C10 19                  ADD   HL,DE
2C11             L1019:
2C11 ED 5B 00 50         LD    DE,(05000H)
2C15 47                  LD    B,A
2C16 7C                  LD    A,H
2C17 B2                  OR    A,D
2C18 67                  LD    H,A
2C19 7D                  LD    A,L
2C1A B3                  OR    A,E
2C1B 6F                  LD    L,A
2C1C 78                  LD    A,B
2C1D             L1020:
2C1D 11 3C 12            LD    DE,4668
2C20 B7                  OR    A
2C21 ED 52               SBC   HL,DE
2C23             L1021:
2C23 C2 38 2E            JP    NZ,L1191
2C26             L1022:
2C26 3E 53               LD    A,83
2C28             L1023:
2C28 CD 74 3D            CALL  writeLineA
2C2B             L1024:
2C2B C3 40 2E            JP    L1194
2C2E             L1025:
2C2E 21 E7 03            LD    HL,999
2C31             L1026:
2C31 CD 4C 3D            CALL  writeLineHL
2C34             L1027:
2C34                     ;;testBitwiseOperators.j(151)     if (0x1000 + 0x0234 ^ b1 == 0x1228) println (84); else println (999);
2C34             L1028:
2C34 21 00 10            LD    HL,4096
2C37             L1029:
2C37 11 34 02            LD    DE,564
2C3A 19                  ADD   HL,DE
2C3B             L1030:
2C3B ED 5B 00 50         LD    DE,(05000H)
2C3F C5                  PUSH  BC
2C40 47                  LD    B,A
2C41 7C                  LD    A,H
2C42 AA                  XOR   A,D
2C43 67                  LD    H,A
2C44 7D                  LD    A,L
2C45 AB                  XOR   A,E
2C46 6F                  LD    L,A
2C47 78                  LD    A,B
2C48 C1                  POP   BC
2C49             L1031:
2C49 11 28 12            LD    DE,4648
2C4C B7                  OR    A
2C4D ED 52               SBC   HL,DE
2C4F             L1032:
2C4F C2 58 2E            JP    NZ,L1204
2C52             L1033:
2C52 3E 54               LD    A,84
2C54             L1034:
2C54 CD 74 3D            CALL  writeLineA
2C57             L1035:
2C57 C3 68 2E            JP    L1211
2C5A             L1036:
2C5A 21 E7 03            LD    HL,999
2C5D             L1037:
2C5D CD 4C 3D            CALL  writeLineHL
2C60             L1038:
2C60                     ;;testBitwiseOperators.j(152)   
2C60             L1039:
2C60                     ;;testBitwiseOperators.j(153)     //acc/final var
2C60             L1040:
2C60                     ;;testBitwiseOperators.j(154)     //*************
2C60             L1041:
2C60                     ;;testBitwiseOperators.j(155)     //acc byte/final var byte
2C60             L1042:
2C60                     ;;testBitwiseOperators.j(156)     if (0x04 + 0x03 & fb1 == 0x04) println (85); else println (999);
2C60             L1043:
2C60 3E 04               LD    A,4
2C62             L1044:
2C62 C6 03               ADD   A,3
2C64             L1045:
2C64 E6 1C               AND   A,28
2C66             L1046:
2C66 D6 04               SUB   A,4
2C68             L1047:
2C68 C2 8C 2E            JP    NZ,L1221
2C6B             L1048:
2C6B 3E 55               LD    A,85
2C6D             L1049:
2C6D CD 74 3D            CALL  writeLineA
2C70             L1050:
2C70 C3 94 2E            JP    L1224
2C73             L1051:
2C73 21 E7 03            LD    HL,999
2C76             L1052:
2C76 CD 4C 3D            CALL  writeLineHL
2C79             L1053:
2C79                     ;;testBitwiseOperators.j(157)     if (0x04 + 0x03 | fb1 == 0x1F) println (86); else println (999);
2C79             L1054:
2C79 3E 04               LD    A,4
2C7B             L1055:
2C7B C6 03               ADD   A,3
2C7D             L1056:
2C7D F6 1C               OR    A,28
2C7F             L1057:
2C7F D6 1F               SUB   A,31
2C81             L1058:
2C81 C2 B9 2E            JP    NZ,L1234
2C84             L1059:
2C84 3E 56               LD    A,86
2C86             L1060:
2C86 CD 74 3D            CALL  writeLineA
2C89             L1061:
2C89 C3 C2 2E            JP    L1237
2C8C             L1062:
2C8C 21 E7 03            LD    HL,999
2C8F             L1063:
2C8F CD 4C 3D            CALL  writeLineHL
2C92             L1064:
2C92                     ;;testBitwiseOperators.j(158)     if (0x04 + 0x03 ^ fb1 == 0x1B) println (87); else println (999);
2C92             L1065:
2C92 3E 04               LD    A,4
2C94             L1066:
2C94 C6 03               ADD   A,3
2C96             L1067:
2C96 EE 1C               XOR   A,28
2C98             L1068:
2C98 D6 1B               SUB   A,27
2C9A             L1069:
2C9A C2 E9 2E            JP    NZ,L1247
2C9D             L1070:
2C9D 3E 57               LD    A,87
2C9F             L1071:
2C9F CD 74 3D            CALL  writeLineA
2CA2             L1072:
2CA2 C3 EF 2E            JP    L1251
2CA5             L1073:
2CA5 21 E7 03            LD    HL,999
2CA8             L1074:
2CA8 CD 4C 3D            CALL  writeLineHL
2CAB             L1075:
2CAB                     ;;testBitwiseOperators.j(159)     //acc word/final var word
2CAB             L1076:
2CAB                     ;;testBitwiseOperators.j(160)     if (0x1000 + 0x0234 & fw1 == 0x0224) println (88); else println (999);
2CAB             L1077:
2CAB 21 00 10            LD    HL,4096
2CAE             L1078:
2CAE 11 34 02            LD    DE,564
2CB1 19                  ADD   HL,DE
2CB2             L1079:
2CB2 11 2C 03            LD    DE,812
2CB5 C5                  PUSH  BC
2CB6 47                  LD    B,A
2CB7 7C                  LD    A,H
2CB8 A2                  AND   A,D
2CB9 67                  LD    H,A
2CBA 7D                  LD    A,L
2CBB A3                  AND   A,E
2CBC 6F                  LD    L,A
2CBD 78                  LD    A,B
2CBE C1                  POP   BC
2CBF             L1080:
2CBF 11 24 02            LD    DE,548
2CC2 B7                  OR    A
2CC3 ED 52               SBC   HL,DE
2CC5             L1081:
2CC5 C2 16 2F            JP    NZ,L1261
2CC8             L1082:
2CC8 3E 58               LD    A,88
2CCA             L1083:
2CCA CD 74 3D            CALL  writeLineA
2CCD             L1084:
2CCD C3 27 2F            JP    L1264
2CD0             L1085:
2CD0 21 E7 03            LD    HL,999
2CD3             L1086:
2CD3 CD 4C 3D            CALL  writeLineHL
2CD6             L1087:
2CD6                     ;;testBitwiseOperators.j(161)     if (0x1000 + 0x0234 | fw1 == 0x133C) println (89); else println (999);
2CD6             L1088:
2CD6 21 00 10            LD    HL,4096
2CD9             L1089:
2CD9 11 34 02            LD    DE,564
2CDC 19                  ADD   HL,DE
2CDD             L1090:
2CDD 11 2C 03            LD    DE,812
2CE0 47                  LD    B,A
2CE1 7C                  LD    A,H
2CE2 B2                  OR    A,D
2CE3 67                  LD    H,A
2CE4 7D                  LD    A,L
2CE5 B3                  OR    A,E
2CE6 6F                  LD    L,A
2CE7 78                  LD    A,B
2CE8             L1091:
2CE8 11 3C 13            LD    DE,4924
2CEB B7                  OR    A
2CEC ED 52               SBC   HL,DE
2CEE             L1092:
2CEE C2 44 2F            JP    NZ,L1274
2CF1             L1093:
2CF1 3E 59               LD    A,89
2CF3             L1094:
2CF3 CD 74 3D            CALL  writeLineA
2CF6             L1095:
2CF6 C3 5A 2F            JP    L1277
2CF9             L1096:
2CF9 21 E7 03            LD    HL,999
2CFC             L1097:
2CFC CD 4C 3D            CALL  writeLineHL
2CFF             L1098:
2CFF                     ;;testBitwiseOperators.j(162)     if (0x1000 + 0x0234 ^ fw1 == 0x1118) println (90); else println (999);
2CFF             L1099:
2CFF 21 00 10            LD    HL,4096
2D02             L1100:
2D02 11 34 02            LD    DE,564
2D05 19                  ADD   HL,DE
2D06             L1101:
2D06 11 2C 03            LD    DE,812
2D09 C5                  PUSH  BC
2D0A 47                  LD    B,A
2D0B 7C                  LD    A,H
2D0C AA                  XOR   A,D
2D0D 67                  LD    H,A
2D0E 7D                  LD    A,L
2D0F AB                  XOR   A,E
2D10 6F                  LD    L,A
2D11 78                  LD    A,B
2D12 C1                  POP   BC
2D13             L1102:
2D13 11 18 11            LD    DE,4376
2D16 B7                  OR    A
2D17 ED 52               SBC   HL,DE
2D19             L1103:
2D19 C2 7A 2F            JP    NZ,L1287
2D1C             L1104:
2D1C 3E 5A               LD    A,90
2D1E             L1105:
2D1E CD 74 3D            CALL  writeLineA
2D21             L1106:
2D21 C3 89 2F            JP    L1291
2D24             L1107:
2D24 21 E7 03            LD    HL,999
2D27             L1108:
2D27 CD 4C 3D            CALL  writeLineHL
2D2A             L1109:
2D2A                     ;;testBitwiseOperators.j(163)     //acc byte/final var word
2D2A             L1110:
2D2A                     ;;testBitwiseOperators.j(164)     if (0x10 + 0x0C & fw2 == 0x0014) println (91); else println (999);
2D2A             L1111:
2D2A 3E 10               LD    A,16
2D2C             L1112:
2D2C C6 0C               ADD   A,12
2D2E             L1113:
2D2E 6F                  LD    L,A
2D2F 26 00               LD    H,0
2D31             L1114:
2D31 11 34 12            LD    DE,4660
2D34 C5                  PUSH  BC
2D35 47                  LD    B,A
2D36 7C                  LD    A,H
2D37 A2                  AND   A,D
2D38 67                  LD    H,A
2D39 7D                  LD    A,L
2D3A A3                  AND   A,E
2D3B 6F                  LD    L,A
2D3C 78                  LD    A,B
2D3D C1                  POP   BC
2D3E             L1115:
2D3E 3E 14               LD    A,20
2D40             L1116:
2D40 5F                  LD    E,A
2D41 16 00               LD    D,0
2D43 EB                  EX    DE,HL
2D44 B7                  OR    A
2D45 ED 52               SBC   HL,DE
2D47             L1117:
2D47 C2 B4 2F            JP    NZ,L1303
2D4A             L1118:
2D4A 3E 5B               LD    A,91
2D4C             L1119:
2D4C CD 74 3D            CALL  writeLineA
2D4F             L1120:
2D4F C3 BA 2F            JP    L1306
2D52             L1121:
2D52 21 E7 03            LD    HL,999
2D55             L1122:
2D55 CD 4C 3D            CALL  writeLineHL
2D58             L1123:
2D58                     ;;testBitwiseOperators.j(165)     if (0x10 + 0x0C | fw2 == 0x123C) println (92); else println (999);
2D58             L1124:
2D58 3E 10               LD    A,16
2D5A             L1125:
2D5A C6 0C               ADD   A,12
2D5C             L1126:
2D5C 6F                  LD    L,A
2D5D 26 00               LD    H,0
2D5F             L1127:
2D5F 11 34 12            LD    DE,4660
2D62 47                  LD    B,A
2D63 7C                  LD    A,H
2D64 B2                  OR    A,D
2D65 67                  LD    H,A
2D66 7D                  LD    A,L
2D67 B3                  OR    A,E
2D68 6F                  LD    L,A
2D69 78                  LD    A,B
2D6A             L1128:
2D6A 11 3C 12            LD    DE,4668
2D6D B7                  OR    A
2D6E ED 52               SBC   HL,DE
2D70             L1129:
2D70 C2 DE 2F            JP    NZ,L1317
2D73             L1130:
2D73 3E 5C               LD    A,92
2D75             L1131:
2D75 CD 74 3D            CALL  writeLineA
2D78             L1132:
2D78 C3 E1 2F            JP    L1320
2D7B             L1133:
2D7B 21 E7 03            LD    HL,999
2D7E             L1134:
2D7E CD 4C 3D            CALL  writeLineHL
2D81             L1135:
2D81                     ;;testBitwiseOperators.j(166)     if (0x10 + 0x0C ^ fw2 == 0x1228) println (93); else println (999);
2D81             L1136:
2D81 3E 10               LD    A,16
2D83             L1137:
2D83 C6 0C               ADD   A,12
2D85             L1138:
2D85 6F                  LD    L,A
2D86 26 00               LD    H,0
2D88             L1139:
2D88 11 34 12            LD    DE,4660
2D8B C5                  PUSH  BC
2D8C 47                  LD    B,A
2D8D 7C                  LD    A,H
2D8E AA                  XOR   A,D
2D8F 67                  LD    H,A
2D90 7D                  LD    A,L
2D91 AB                  XOR   A,E
2D92 6F                  LD    L,A
2D93 78                  LD    A,B
2D94 C1                  POP   BC
2D95             L1140:
2D95 11 28 12            LD    DE,4648
2D98 B7                  OR    A
2D99 ED 52               SBC   HL,DE
2D9B             L1141:
2D9B C2 FB 2F            JP    NZ,L1331
2D9E             L1142:
2D9E 3E 5D               LD    A,93
2DA0             L1143:
2DA0 CD 74 3D            CALL  writeLineA
2DA3             L1144:
2DA3 C3 05 30            JP    L1335
2DA6             L1145:
2DA6 21 E7 03            LD    HL,999
2DA9             L1146:
2DA9 CD 4C 3D            CALL  writeLineHL
2DAC             L1147:
2DAC                     ;;testBitwiseOperators.j(167)     //acc word/final var byte
2DAC             L1148:
2DAC                     ;;testBitwiseOperators.j(168)     if (0x1000 + 0x0234 & fb1 == 0x0014) println (94); else println (999);
2DAC             L1149:
2DAC 21 00 10            LD    HL,4096
2DAF             L1150:
2DAF 11 34 02            LD    DE,564
2DB2 19                  ADD   HL,DE
2DB3             L1151:
2DB3 11 1C 00            LD    DE,28
2DB6 C5                  PUSH  BC
2DB7 47                  LD    B,A
2DB8 7C                  LD    A,H
2DB9 A2                  AND   A,D
2DBA 67                  LD    H,A
2DBB 7D                  LD    A,L
2DBC A3                  AND   A,E
2DBD 6F                  LD    L,A
2DBE 78                  LD    A,B
2DBF C1                  POP   BC
2DC0             L1152:
2DC0 3E 14               LD    A,20
2DC2             L1153:
2DC2 5F                  LD    E,A
2DC3 16 00               LD    D,0
2DC5 EB                  EX    DE,HL
2DC6 B7                  OR    A
2DC7 ED 52               SBC   HL,DE
2DC9             L1154:
2DC9 C2 20 30            JP    NZ,L1346
2DCC             L1155:
2DCC 3E 5E               LD    A,94
2DCE             L1156:
2DCE CD 74 3D            CALL  writeLineA
2DD1             L1157:
2DD1 C3 27 30            JP    L1349
2DD4             L1158:
2DD4 21 E7 03            LD    HL,999
2DD7             L1159:
2DD7 CD 4C 3D            CALL  writeLineHL
2DDA             L1160:
2DDA                     ;;testBitwiseOperators.j(169)     if (0x1000 + 0x0234 | fb1 == 0x123C) println (95); else println (999);
2DDA             L1161:
2DDA 21 00 10            LD    HL,4096
2DDD             L1162:
2DDD 11 34 02            LD    DE,564
2DE0 19                  ADD   HL,DE
2DE1             L1163:
2DE1 11 1C 00            LD    DE,28
2DE4 47                  LD    B,A
2DE5 7C                  LD    A,H
2DE6 B2                  OR    A,D
2DE7 67                  LD    H,A
2DE8 7D                  LD    A,L
2DE9 B3                  OR    A,E
2DEA 6F                  LD    L,A
2DEB 78                  LD    A,B
2DEC             L1164:
2DEC 11 3C 12            LD    DE,4668
2DEF B7                  OR    A
2DF0 ED 52               SBC   HL,DE
2DF2             L1165:
2DF2 C2 40 30            JP    NZ,L1359
2DF5             L1166:
2DF5 3E 5F               LD    A,95
2DF7             L1167:
2DF7 CD 74 3D            CALL  writeLineA
2DFA             L1168:
2DFA C3 54 30            JP    L1362
2DFD             L1169:
2DFD 21 E7 03            LD    HL,999
2E00             L1170:
2E00 CD 4C 3D            CALL  writeLineHL
2E03             L1171:
2E03                     ;;testBitwiseOperators.j(170)     if (0x1000 + 0x0234 ^ fb1 == 0x1228) println (96); else println (999);
2E03             L1172:
2E03 21 00 10            LD    HL,4096
2E06             L1173:
2E06 11 34 02            LD    DE,564
2E09 19                  ADD   HL,DE
2E0A             L1174:
2E0A 11 1C 00            LD    DE,28
2E0D C5                  PUSH  BC
2E0E 47                  LD    B,A
2E0F 7C                  LD    A,H
2E10 AA                  XOR   A,D
2E11 67                  LD    H,A
2E12 7D                  LD    A,L
2E13 AB                  XOR   A,E
2E14 6F                  LD    L,A
2E15 78                  LD    A,B
2E16 C1                  POP   BC
2E17             L1175:
2E17 11 28 12            LD    DE,4648
2E1A B7                  OR    A
2E1B ED 52               SBC   HL,DE
2E1D             L1176:
2E1D C2 76 30            JP    NZ,L1372
2E20             L1177:
2E20 3E 60               LD    A,96
2E22             L1178:
2E22 CD 74 3D            CALL  writeLineA
2E25             L1179:
2E25 C3 8D 30            JP    L1379
2E28             L1180:
2E28 21 E7 03            LD    HL,999
2E2B             L1181:
2E2B CD 4C 3D            CALL  writeLineHL
2E2E             L1182:
2E2E                     ;;testBitwiseOperators.j(171)   
2E2E             L1183:
2E2E                     ;;testBitwiseOperators.j(172)     //var/constant
2E2E             L1184:
2E2E                     ;;testBitwiseOperators.j(173)     //************
2E2E             L1185:
2E2E                     ;;testBitwiseOperators.j(174)     //var byte/constant byte
2E2E             L1186:
2E2E                     ;;testBitwiseOperators.j(175)     if (b2 & 0x1C == 0x04) println (97); else println (999);
2E2E             L1187:
2E2E 3A 01 50            LD    A,(05001H)
2E31             L1188:
2E31 E6 1C               AND   A,28
2E33             L1189:
2E33 D6 04               SUB   A,4
2E35             L1190:
2E35 C2 B1 30            JP    NZ,L1388
2E38             L1191:
2E38 3E 61               LD    A,97
2E3A             L1192:
2E3A CD 74 3D            CALL  writeLineA
2E3D             L1193:
2E3D C3 BA 30            JP    L1391
2E40             L1194:
2E40 21 E7 03            LD    HL,999
2E43             L1195:
2E43 CD 4C 3D            CALL  writeLineHL
2E46             L1196:
2E46                     ;;testBitwiseOperators.j(176)     if (b2 | 0x1C == 0x1F) println (98); else println (999);
2E46             L1197:
2E46 3A 01 50            LD    A,(05001H)
2E49             L1198:
2E49 F6 1C               OR    A,28
2E4B             L1199:
2E4B D6 1F               SUB   A,31
2E4D             L1200:
2E4D C2 D4 30            JP    NZ,L1400
2E50             L1201:
2E50 3E 62               LD    A,98
2E52             L1202:
2E52 CD 74 3D            CALL  writeLineA
2E55             L1203:
2E55 C3 DC 30            JP    L1403
2E58             L1204:
2E58 21 E7 03            LD    HL,999
2E5B             L1205:
2E5B CD 4C 3D            CALL  writeLineHL
2E5E             L1206:
2E5E                     ;;testBitwiseOperators.j(177)     if (b2 ^ 0x1C == 0x1B) println (99); else println (999);
2E5E             L1207:
2E5E 3A 01 50            LD    A,(05001H)
2E61             L1208:
2E61 EE 1C               XOR   A,28
2E63             L1209:
2E63 D6 1B               SUB   A,27
2E65             L1210:
2E65 C2 F7 30            JP    NZ,L1412
2E68             L1211:
2E68 3E 63               LD    A,99
2E6A             L1212:
2E6A CD 74 3D            CALL  writeLineA
2E6D             L1213:
2E6D C3 02 31            JP    L1416
2E70             L1214:
2E70 21 E7 03            LD    HL,999
2E73             L1215:
2E73 CD 4C 3D            CALL  writeLineHL
2E76             L1216:
2E76                     ;;testBitwiseOperators.j(178)     //var word/constant word
2E76             L1217:
2E76                     ;;testBitwiseOperators.j(179)     if (w2 & 0x032C == 0x0224) println (100); else println (999);
2E76             L1218:
2E76 2A 04 50            LD    HL,(05004H)
2E79             L1219:
2E79 11 2C 03            LD    DE,812
2E7C C5                  PUSH  BC
2E7D 47                  LD    B,A
2E7E 7C                  LD    A,H
2E7F A2                  AND   A,D
2E80 67                  LD    H,A
2E81 7D                  LD    A,L
2E82 A3                  AND   A,E
2E83 6F                  LD    L,A
2E84 78                  LD    A,B
2E85 C1                  POP   BC
2E86             L1220:
2E86 11 24 02            LD    DE,548
2E89 B7                  OR    A
2E8A ED 52               SBC   HL,DE
2E8C             L1221:
2E8C C2 1C 31            JP    NZ,L1425
2E8F             L1222:
2E8F 3E 64               LD    A,100
2E91             L1223:
2E91 CD 74 3D            CALL  writeLineA
2E94             L1224:
2E94 C3 25 31            JP    L1428
2E97             L1225:
2E97 21 E7 03            LD    HL,999
2E9A             L1226:
2E9A CD 4C 3D            CALL  writeLineHL
2E9D             L1227:
2E9D                     ;;testBitwiseOperators.j(180)     if (w2 | 0x032C == 0x133C) println (101); else println (999);
2E9D             L1228:
2E9D 2A 04 50            LD    HL,(05004H)
2EA0             L1229:
2EA0 11 2C 03            LD    DE,812
2EA3 47                  LD    B,A
2EA4 7C                  LD    A,H
2EA5 B2                  OR    A,D
2EA6 67                  LD    H,A
2EA7 7D                  LD    A,L
2EA8 B3                  OR    A,E
2EA9 6F                  LD    L,A
2EAA 78                  LD    A,B
2EAB             L1230:
2EAB 11 3C 13            LD    DE,4924
2EAE B7                  OR    A
2EAF ED 52               SBC   HL,DE
2EB1             L1231:
2EB1 C2 3C 31            JP    NZ,L1437
2EB4             L1232:
2EB4 3E 65               LD    A,101
2EB6             L1233:
2EB6 CD 74 3D            CALL  writeLineA
2EB9             L1234:
2EB9 C3 44 31            JP    L1440
2EBC             L1235:
2EBC 21 E7 03            LD    HL,999
2EBF             L1236:
2EBF CD 4C 3D            CALL  writeLineHL
2EC2             L1237:
2EC2                     ;;testBitwiseOperators.j(181)     if (w2 ^ 0x032C == 0x1118) println (102); else println (999);
2EC2             L1238:
2EC2 2A 04 50            LD    HL,(05004H)
2EC5             L1239:
2EC5 11 2C 03            LD    DE,812
2EC8 C5                  PUSH  BC
2EC9 47                  LD    B,A
2ECA 7C                  LD    A,H
2ECB AA                  XOR   A,D
2ECC 67                  LD    H,A
2ECD 7D                  LD    A,L
2ECE AB                  XOR   A,E
2ECF 6F                  LD    L,A
2ED0 78                  LD    A,B
2ED1 C1                  POP   BC
2ED2             L1240:
2ED2 11 18 11            LD    DE,4376
2ED5 B7                  OR    A
2ED6 ED 52               SBC   HL,DE
2ED8             L1241:
2ED8 C2 5C 31            JP    NZ,L1449
2EDB             L1242:
2EDB 3E 66               LD    A,102
2EDD             L1243:
2EDD CD 74 3D            CALL  writeLineA
2EE0             L1244:
2EE0 C3 67 31            JP    L1453
2EE3             L1245:
2EE3 21 E7 03            LD    HL,999
2EE6             L1246:
2EE6 CD 4C 3D            CALL  writeLineHL
2EE9             L1247:
2EE9                     ;;testBitwiseOperators.j(182)     //var byte/constant word
2EE9             L1248:
2EE9                     ;;testBitwiseOperators.j(183)     if (b1 & 0x1234 == 0x0014) println (103); else println (999);
2EE9             L1249:
2EE9 3A 00 50            LD    A,(05000H)
2EEC             L1250:
2EEC 6F                  LD    L,A
2EED 26 00               LD    H,0
2EEF             L1251:
2EEF 11 34 12            LD    DE,4660
2EF2 C5                  PUSH  BC
2EF3 47                  LD    B,A
2EF4 7C                  LD    A,H
2EF5 A2                  AND   A,D
2EF6 67                  LD    H,A
2EF7 7D                  LD    A,L
2EF8 A3                  AND   A,E
2EF9 6F                  LD    L,A
2EFA 78                  LD    A,B
2EFB C1                  POP   BC
2EFC             L1252:
2EFC 3E 14               LD    A,20
2EFE             L1253:
2EFE 5F                  LD    E,A
2EFF 16 00               LD    D,0
2F01 EB                  EX    DE,HL
2F02 B7                  OR    A
2F03 ED 52               SBC   HL,DE
2F05             L1254:
2F05 C2 84 31            JP    NZ,L1464
2F08             L1255:
2F08 3E 67               LD    A,103
2F0A             L1256:
2F0A CD 74 3D            CALL  writeLineA
2F0D             L1257:
2F0D C3 8D 31            JP    L1467
2F10             L1258:
2F10 21 E7 03            LD    HL,999
2F13             L1259:
2F13 CD 4C 3D            CALL  writeLineHL
2F16             L1260:
2F16                     ;;testBitwiseOperators.j(184)     if (b1 | 0x1234 == 0x123C) println (104); else println (999);
2F16             L1261:
2F16 3A 00 50            LD    A,(05000H)
2F19             L1262:
2F19 6F                  LD    L,A
2F1A 26 00               LD    H,0
2F1C             L1263:
2F1C 11 34 12            LD    DE,4660
2F1F 47                  LD    B,A
2F20 7C                  LD    A,H
2F21 B2                  OR    A,D
2F22 67                  LD    H,A
2F23 7D                  LD    A,L
2F24 B3                  OR    A,E
2F25 6F                  LD    L,A
2F26 78                  LD    A,B
2F27             L1264:
2F27 11 3C 12            LD    DE,4668
2F2A B7                  OR    A
2F2B ED 52               SBC   HL,DE
2F2D             L1265:
2F2D C2 9C 31            JP    NZ,L1477
2F30             L1266:
2F30 3E 68               LD    A,104
2F32             L1267:
2F32 CD 74 3D            CALL  writeLineA
2F35             L1268:
2F35 C3 A5 31            JP    L1480
2F38             L1269:
2F38 21 E7 03            LD    HL,999
2F3B             L1270:
2F3B CD 4C 3D            CALL  writeLineHL
2F3E             L1271:
2F3E                     ;;testBitwiseOperators.j(185)     if (b1 ^ 0x1234 == 0x1228) println (105); else println (999);
2F3E             L1272:
2F3E 3A 00 50            LD    A,(05000H)
2F41             L1273:
2F41 6F                  LD    L,A
2F42 26 00               LD    H,0
2F44             L1274:
2F44 11 34 12            LD    DE,4660
2F47 C5                  PUSH  BC
2F48 47                  LD    B,A
2F49 7C                  LD    A,H
2F4A AA                  XOR   A,D
2F4B 67                  LD    H,A
2F4C 7D                  LD    A,L
2F4D AB                  XOR   A,E
2F4E 6F                  LD    L,A
2F4F 78                  LD    A,B
2F50 C1                  POP   BC
2F51             L1275:
2F51 11 28 12            LD    DE,4648
2F54 B7                  OR    A
2F55 ED 52               SBC   HL,DE
2F57             L1276:
2F57 C2 C0 31            JP    NZ,L1490
2F5A             L1277:
2F5A 3E 69               LD    A,105
2F5C             L1278:
2F5C CD 74 3D            CALL  writeLineA
2F5F             L1279:
2F5F C3 CB 31            JP    L1494
2F62             L1280:
2F62 21 E7 03            LD    HL,999
2F65             L1281:
2F65 CD 4C 3D            CALL  writeLineHL
2F68             L1282:
2F68                     ;;testBitwiseOperators.j(186)     //var word/constant byte
2F68             L1283:
2F68                     ;;testBitwiseOperators.j(187)     if (w2 & 0x1C == 0x0014) println (106); else println (999);
2F68             L1284:
2F68 2A 04 50            LD    HL,(05004H)
2F6B             L1285:
2F6B 11 1C 00            LD    DE,28
2F6E C5                  PUSH  BC
2F6F 47                  LD    B,A
2F70 7C                  LD    A,H
2F71 A2                  AND   A,D
2F72 67                  LD    H,A
2F73 7D                  LD    A,L
2F74 A3                  AND   A,E
2F75 6F                  LD    L,A
2F76 78                  LD    A,B
2F77 C1                  POP   BC
2F78             L1286:
2F78 3E 14               LD    A,20
2F7A             L1287:
2F7A 5F                  LD    E,A
2F7B 16 00               LD    D,0
2F7D EB                  EX    DE,HL
2F7E B7                  OR    A
2F7F ED 52               SBC   HL,DE
2F81             L1288:
2F81 C2 E1 31            JP    NZ,L1504
2F84             L1289:
2F84 3E 6A               LD    A,106
2F86             L1290:
2F86 CD 74 3D            CALL  writeLineA
2F89             L1291:
2F89 C3 F8 31            JP    L1507
2F8C             L1292:
2F8C 21 E7 03            LD    HL,999
2F8F             L1293:
2F8F CD 4C 3D            CALL  writeLineHL
2F92             L1294:
2F92                     ;;testBitwiseOperators.j(188)     if (w2 | 0x1C == 0x123C) println (107); else println (999);
2F92             L1295:
2F92 2A 04 50            LD    HL,(05004H)
2F95             L1296:
2F95 11 1C 00            LD    DE,28
2F98 47                  LD    B,A
2F99 7C                  LD    A,H
2F9A B2                  OR    A,D
2F9B 67                  LD    H,A
2F9C 7D                  LD    A,L
2F9D B3                  OR    A,E
2F9E 6F                  LD    L,A
2F9F 78                  LD    A,B
2FA0             L1297:
2FA0 11 3C 12            LD    DE,4668
2FA3 B7                  OR    A
2FA4 ED 52               SBC   HL,DE
2FA6             L1298:
2FA6 C2 1B 32            JP    NZ,L1516
2FA9             L1299:
2FA9 3E 6B               LD    A,107
2FAB             L1300:
2FAB CD 74 3D            CALL  writeLineA
2FAE             L1301:
2FAE C3 23 32            JP    L1519
2FB1             L1302:
2FB1 21 E7 03            LD    HL,999
2FB4             L1303:
2FB4 CD 4C 3D            CALL  writeLineHL
2FB7             L1304:
2FB7                     ;;testBitwiseOperators.j(189)     if (w2 ^ 0x1C == 0x1228) println (108); else println (999);
2FB7             L1305:
2FB7 2A 04 50            LD    HL,(05004H)
2FBA             L1306:
2FBA 11 1C 00            LD    DE,28
2FBD C5                  PUSH  BC
2FBE 47                  LD    B,A
2FBF 7C                  LD    A,H
2FC0 AA                  XOR   A,D
2FC1 67                  LD    H,A
2FC2 7D                  LD    A,L
2FC3 AB                  XOR   A,E
2FC4 6F                  LD    L,A
2FC5 78                  LD    A,B
2FC6 C1                  POP   BC
2FC7             L1307:
2FC7 11 28 12            LD    DE,4648
2FCA B7                  OR    A
2FCB ED 52               SBC   HL,DE
2FCD             L1308:
2FCD C2 48 32            JP    NZ,L1528
2FD0             L1309:
2FD0 3E 6C               LD    A,108
2FD2             L1310:
2FD2 CD 74 3D            CALL  writeLineA
2FD5             L1311:
2FD5 C3 57 32            JP    L1535
2FD8             L1312:
2FD8 21 E7 03            LD    HL,999
2FDB             L1313:
2FDB CD 4C 3D            CALL  writeLineHL
2FDE             L1314:
2FDE                     ;;testBitwiseOperators.j(190)   
2FDE             L1315:
2FDE                     ;;testBitwiseOperators.j(191)     //var/acc
2FDE             L1316:
2FDE                     ;;testBitwiseOperators.j(192)     //*******
2FDE             L1317:
2FDE                     ;;testBitwiseOperators.j(193)     //var byte/acc byte
2FDE             L1318:
2FDE                     ;;testBitwiseOperators.j(194)     if (b2 & (0x10 + 0x0C) == 0x04) println (109); else println (999);
2FDE             L1319:
2FDE 3A 01 50            LD    A,(05001H)
2FE1             L1320:
2FE1 F5                  PUSH  AF
2FE2 3E 10               LD    A,16
2FE4             L1321:
2FE4 C6 0C               ADD   A,12
2FE6             L1322:
2FE6 C1                  POP   BC
2FE7 A0                  AND   A,B
2FE8             L1323:
2FE8 D6 04               SUB   A,4
2FEA             L1324:
2FEA C2 82 32            JP    NZ,L1546
2FED             L1325:
2FED 3E 6D               LD    A,109
2FEF             L1326:
2FEF CD 74 3D            CALL  writeLineA
2FF2             L1327:
2FF2 C3 94 32            JP    L1549
2FF5             L1328:
2FF5 21 E7 03            LD    HL,999
2FF8             L1329:
2FF8 CD 4C 3D            CALL  writeLineHL
2FFB             L1330:
2FFB                     ;;testBitwiseOperators.j(195)     if (b2 | (0x10 + 0x0C) == 0x1F) println (110); else println (999);
2FFB             L1331:
2FFB 3A 01 50            LD    A,(05001H)
2FFE             L1332:
2FFE F5                  PUSH  AF
2FFF 3E 10               LD    A,16
3001             L1333:
3001 C6 0C               ADD   A,12
3003             L1334:
3003 C1                  POP   BC
3004 B0                  OR    A,B
3005             L1335:
3005 D6 1F               SUB   A,31
3007             L1336:
3007 C2 BF 32            JP    NZ,L1560
300A             L1337:
300A 3E 6E               LD    A,110
300C             L1338:
300C CD 74 3D            CALL  writeLineA
300F             L1339:
300F C3 CA 32            JP    L1563
3012             L1340:
3012 21 E7 03            LD    HL,999
3015             L1341:
3015 CD 4C 3D            CALL  writeLineHL
3018             L1342:
3018                     ;;testBitwiseOperators.j(196)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (111); else println (999);
3018             L1343:
3018 3A 01 50            LD    A,(05001H)
301B             L1344:
301B F5                  PUSH  AF
301C 3E 10               LD    A,16
301E             L1345:
301E C6 0C               ADD   A,12
3020             L1346:
3020 C1                  POP   BC
3021 A8                  XOR   A,B
3022             L1347:
3022 D6 1B               SUB   A,27
3024             L1348:
3024 C2 F3 32            JP    NZ,L1574
3027             L1349:
3027 3E 6F               LD    A,111
3029             L1350:
3029 CD 74 3D            CALL  writeLineA
302C             L1351:
302C C3 FE 32            JP    L1578
302F             L1352:
302F 21 E7 03            LD    HL,999
3032             L1353:
3032 CD 4C 3D            CALL  writeLineHL
3035             L1354:
3035                     ;;testBitwiseOperators.j(197)     //var word/acc word
3035             L1355:
3035                     ;;testBitwiseOperators.j(198)     if (w2 & 0x0100 + 0x022C == 0x0224) println (112); else println (999);
3035             L1356:
3035 2A 04 50            LD    HL,(05004H)
3038             L1357:
3038 E5                  PUSH  HL
3039 21 00 01            LD    HL,256
303C             L1358:
303C 11 2C 02            LD    DE,556
303F 19                  ADD   HL,DE
3040             L1359:
3040 D1                  POP   DE
3041 C5                  PUSH  BC
3042 47                  LD    B,A
3043 7C                  LD    A,H
3044 A2                  AND   A,D
3045 67                  LD    H,A
3046 7D                  LD    A,L
3047 A3                  AND   A,E
3048 6F                  LD    L,A
3049 78                  LD    A,B
304A C1                  POP   BC
304B             L1360:
304B 11 24 02            LD    DE,548
304E B7                  OR    A
304F ED 52               SBC   HL,DE
3051             L1361:
3051 C2 27 33            JP    NZ,L1589
3054             L1362:
3054 3E 70               LD    A,112
3056             L1363:
3056 CD 74 3D            CALL  writeLineA
3059             L1364:
3059 C3 38 33            JP    L1592
305C             L1365:
305C 21 E7 03            LD    HL,999
305F             L1366:
305F CD 4C 3D            CALL  writeLineHL
3062             L1367:
3062                     ;;testBitwiseOperators.j(199)     if (w2 | 0x0100 + 0x022C == 0x133C) println (113); else println (999);
3062             L1368:
3062 2A 04 50            LD    HL,(05004H)
3065             L1369:
3065 E5                  PUSH  HL
3066 21 00 01            LD    HL,256
3069             L1370:
3069 11 2C 02            LD    DE,556
306C 19                  ADD   HL,DE
306D             L1371:
306D D1                  POP   DE
306E 47                  LD    B,A
306F 7C                  LD    A,H
3070 B2                  OR    A,D
3071 67                  LD    H,A
3072 7D                  LD    A,L
3073 B3                  OR    A,E
3074 6F                  LD    L,A
3075 78                  LD    A,B
3076             L1372:
3076 11 3C 13            LD    DE,4924
3079 B7                  OR    A
307A ED 52               SBC   HL,DE
307C             L1373:
307C C2 4F 33            JP    NZ,L1603
307F             L1374:
307F 3E 71               LD    A,113
3081             L1375:
3081 CD 74 3D            CALL  writeLineA
3084             L1376:
3084 C3 54 33            JP    L1606
3087             L1377:
3087 21 E7 03            LD    HL,999
308A             L1378:
308A CD 4C 3D            CALL  writeLineHL
308D             L1379:
308D                     ;;testBitwiseOperators.j(200)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (114); else println (999);
308D             L1380:
308D 2A 04 50            LD    HL,(05004H)
3090             L1381:
3090 E5                  PUSH  HL
3091 21 00 01            LD    HL,256
3094             L1382:
3094 11 2C 02            LD    DE,556
3097 19                  ADD   HL,DE
3098             L1383:
3098 D1                  POP   DE
3099 C5                  PUSH  BC
309A 47                  LD    B,A
309B 7C                  LD    A,H
309C AA                  XOR   A,D
309D 67                  LD    H,A
309E 7D                  LD    A,L
309F AB                  XOR   A,E
30A0 6F                  LD    L,A
30A1 78                  LD    A,B
30A2 C1                  POP   BC
30A3             L1384:
30A3 11 18 11            LD    DE,4376
30A6 B7                  OR    A
30A7 ED 52               SBC   HL,DE
30A9             L1385:
30A9 C2 6E 33            JP    NZ,L1617
30AC             L1386:
30AC 3E 72               LD    A,114
30AE             L1387:
30AE CD 74 3D            CALL  writeLineA
30B1             L1388:
30B1 C3 79 33            JP    L1621
30B4             L1389:
30B4 21 E7 03            LD    HL,999
30B7             L1390:
30B7 CD 4C 3D            CALL  writeLineHL
30BA             L1391:
30BA                     ;;testBitwiseOperators.j(201)     //var byte/acc word
30BA             L1392:
30BA                     ;;testBitwiseOperators.j(202)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (115); else println (999);
30BA             L1393:
30BA 3A 00 50            LD    A,(05000H)
30BD             L1394:
30BD 21 00 10            LD    HL,4096
30C0             L1395:
30C0 11 34 02            LD    DE,564
30C3 19                  ADD   HL,DE
30C4             L1396:
30C4 A5                  AND   A,L
30C5 6F                  LD    L,A
30C6 26 00               LD    H,0
30C8             L1397:
30C8 3E 14               LD    A,20
30CA             L1398:
30CA 5F                  LD    E,A
30CB 16 00               LD    D,0
30CD EB                  EX    DE,HL
30CE B7                  OR    A
30CF ED 52               SBC   HL,DE
30D1             L1399:
30D1 C2 97 33            JP    NZ,L1633
30D4             L1400:
30D4 3E 73               LD    A,115
30D6             L1401:
30D6 CD 74 3D            CALL  writeLineA
30D9             L1402:
30D9 C3 9A 33            JP    L1636
30DC             L1403:
30DC 21 E7 03            LD    HL,999
30DF             L1404:
30DF CD 4C 3D            CALL  writeLineHL
30E2             L1405:
30E2                     ;;testBitwiseOperators.j(203)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (116); else println (999);
30E2             L1406:
30E2 3A 00 50            LD    A,(05000H)
30E5             L1407:
30E5 21 00 10            LD    HL,4096
30E8             L1408:
30E8 11 34 02            LD    DE,564
30EB 19                  ADD   HL,DE
30EC             L1409:
30EC B5                  OR    A,L
30ED 6F                  LD    L,A
30EE             L1410:
30EE 11 3C 12            LD    DE,4668
30F1 B7                  OR    A
30F2 ED 52               SBC   HL,DE
30F4             L1411:
30F4 C2 CC 33            JP    NZ,L1647
30F7             L1412:
30F7 3E 74               LD    A,116
30F9             L1413:
30F9 CD 74 3D            CALL  writeLineA
30FC             L1414:
30FC C3 D7 33            JP    L1650
30FF             L1415:
30FF 21 E7 03            LD    HL,999
3102             L1416:
3102 CD 4C 3D            CALL  writeLineHL
3105             L1417:
3105                     ;;testBitwiseOperators.j(204)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (117); else println (999);
3105             L1418:
3105 3A 00 50            LD    A,(05000H)
3108             L1419:
3108 21 00 10            LD    HL,4096
310B             L1420:
310B 11 34 02            LD    DE,564
310E 19                  ADD   HL,DE
310F             L1421:
310F AD                  XOR   A,L
3110 6F                  LD    L,A
3111             L1422:
3111 11 28 12            LD    DE,4648
3114 B7                  OR    A
3115 ED 52               SBC   HL,DE
3117             L1423:
3117 C2 01 34            JP    NZ,L1661
311A             L1424:
311A 3E 75               LD    A,117
311C             L1425:
311C CD 74 3D            CALL  writeLineA
311F             L1426:
311F C3 0A 34            JP    L1665
3122             L1427:
3122 21 E7 03            LD    HL,999
3125             L1428:
3125 CD 4C 3D            CALL  writeLineHL
3128             L1429:
3128                     ;;testBitwiseOperators.j(205)     //var word/acc byte
3128             L1430:
3128                     ;;testBitwiseOperators.j(206)     if (w2 & 0x10 + 0x0C == 0x0014) println (118); else println (999);
3128             L1431:
3128 2A 04 50            LD    HL,(05004H)
312B             L1432:
312B 3E 10               LD    A,16
312D             L1433:
312D C6 0C               ADD   A,12
312F             L1434:
312F A5                  AND   A,L
3130 6F                  LD    L,A
3131 26 00               LD    H,0
3133             L1435:
3133 3E 14               LD    A,20
3135             L1436:
3135 5F                  LD    E,A
3136 16 00               LD    D,0
3138 EB                  EX    DE,HL
3139 B7                  OR    A
313A ED 52               SBC   HL,DE
313C             L1437:
313C C2 37 34            JP    NZ,L1677
313F             L1438:
313F 3E 76               LD    A,118
3141             L1439:
3141 CD 74 3D            CALL  writeLineA
3144             L1440:
3144 C3 3D 34            JP    L1680
3147             L1441:
3147 21 E7 03            LD    HL,999
314A             L1442:
314A CD 4C 3D            CALL  writeLineHL
314D             L1443:
314D                     ;;testBitwiseOperators.j(207)     if (w2 | 0x10 + 0x0C == 0x123C) println (119); else println (999);
314D             L1444:
314D 2A 04 50            LD    HL,(05004H)
3150             L1445:
3150 3E 10               LD    A,16
3152             L1446:
3152 C6 0C               ADD   A,12
3154             L1447:
3154 B5                  OR    A,L
3155 6F                  LD    L,A
3156             L1448:
3156 11 3C 12            LD    DE,4668
3159 B7                  OR    A
315A ED 52               SBC   HL,DE
315C             L1449:
315C C2 65 34            JP    NZ,L1691
315F             L1450:
315F 3E 77               LD    A,119
3161             L1451:
3161 CD 74 3D            CALL  writeLineA
3164             L1452:
3164 C3 7B 34            JP    L1694
3167             L1453:
3167 21 E7 03            LD    HL,999
316A             L1454:
316A CD 4C 3D            CALL  writeLineHL
316D             L1455:
316D                     ;;testBitwiseOperators.j(208)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (120); else println (999);
316D             L1456:
316D 2A 04 50            LD    HL,(05004H)
3170             L1457:
3170 3E 10               LD    A,16
3172             L1458:
3172 C6 0C               ADD   A,12
3174             L1459:
3174 AD                  XOR   A,L
3175 6F                  LD    L,A
3176             L1460:
3176 11 28 12            LD    DE,4648
3179 B7                  OR    A
317A ED 52               SBC   HL,DE
317C             L1461:
317C C2 A2 34            JP    NZ,L1705
317F             L1462:
317F 3E 78               LD    A,120
3181             L1463:
3181 CD 74 3D            CALL  writeLineA
3184             L1464:
3184 C3 B3 34            JP    L1712
3187             L1465:
3187 21 E7 03            LD    HL,999
318A             L1466:
318A CD 4C 3D            CALL  writeLineHL
318D             L1467:
318D                     ;;testBitwiseOperators.j(209)   
318D             L1468:
318D                     ;;testBitwiseOperators.j(210)     //var/var
318D             L1469:
318D                     ;;testBitwiseOperators.j(211)     //*******
318D             L1470:
318D                     ;;testBitwiseOperators.j(212)     //var byte/var byte
318D             L1471:
318D                     ;;testBitwiseOperators.j(213)     if (b2 & b1 == 0x04) println (121); else println (999);
318D             L1472:
318D 3A 01 50            LD    A,(05001H)
3190             L1473:
3190 47                  LD    B,A
3191 3A 00 50            LD    A,(05000H)
3194 A0                  AND   A,B
3195             L1474:
3195 D6 04               SUB   A,4
3197             L1475:
3197 C2 D8 34            JP    NZ,L1721
319A             L1476:
319A 3E 79               LD    A,121
319C             L1477:
319C CD 74 3D            CALL  writeLineA
319F             L1478:
319F C3 E8 34            JP    L1724
31A2             L1479:
31A2 21 E7 03            LD    HL,999
31A5             L1480:
31A5 CD 4C 3D            CALL  writeLineHL
31A8             L1481:
31A8                     ;;testBitwiseOperators.j(214)     if (b2 | b1 == 0x1F) println (122); else println (999);
31A8             L1482:
31A8 3A 01 50            LD    A,(05001H)
31AB             L1483:
31AB 47                  LD    B,A
31AC 3A 00 50            LD    A,(05000H)
31AF B0                  OR    A,B
31B0             L1484:
31B0 D6 1F               SUB   A,31
31B2             L1485:
31B2 C2 FF 34            JP    NZ,L1733
31B5             L1486:
31B5 3E 7A               LD    A,122
31B7             L1487:
31B7 CD 74 3D            CALL  writeLineA
31BA             L1488:
31BA C3 FF 34            JP    L1736
31BD             L1489:
31BD 21 E7 03            LD    HL,999
31C0             L1490:
31C0 CD 4C 3D            CALL  writeLineHL
31C3             L1491:
31C3                     ;;testBitwiseOperators.j(215)     if (b2 ^ b1 == 0x1B) println (123); else println (999);
31C3             L1492:
31C3 3A 01 50            LD    A,(05001H)
31C6             L1493:
31C6 47                  LD    B,A
31C7 3A 00 50            LD    A,(05000H)
31CA A8                  XOR   A,B
31CB             L1494:
31CB D6 1B               SUB   A,27
31CD             L1495:
31CD C2 17 35            JP    NZ,L1745
31D0             L1496:
31D0 3E 7B               LD    A,123
31D2             L1497:
31D2 CD 74 3D            CALL  writeLineA
31D5             L1498:
31D5 C3 1E 35            JP    L1749
31D8             L1499:
31D8 21 E7 03            LD    HL,999
31DB             L1500:
31DB CD 4C 3D            CALL  writeLineHL
31DE             L1501:
31DE                     ;;testBitwiseOperators.j(216)     //var word/var word
31DE             L1502:
31DE                     ;;testBitwiseOperators.j(217)     if (w2 & w1 == 0x0224) println (124); else println (999);
31DE             L1503:
31DE 2A 04 50            LD    HL,(05004H)
31E1             L1504:
31E1 ED 5B 02 50         LD    DE,(05002H)
31E5 C5                  PUSH  BC
31E6 47                  LD    B,A
31E7 7C                  LD    A,H
31E8 A2                  AND   A,D
31E9 67                  LD    H,A
31EA 7D                  LD    A,L
31EB A3                  AND   A,E
31EC 6F                  LD    L,A
31ED 78                  LD    A,B
31EE C1                  POP   BC
31EF             L1505:
31EF 11 24 02            LD    DE,548
31F2 B7                  OR    A
31F3 ED 52               SBC   HL,DE
31F5             L1506:
31F5 C2 34 35            JP    NZ,L1758
31F8             L1507:
31F8 3E 7C               LD    A,124
31FA             L1508:
31FA CD 74 3D            CALL  writeLineA
31FD             L1509:
31FD C3 3B 35            JP    L1761
3200             L1510:
3200 21 E7 03            LD    HL,999
3203             L1511:
3203 CD 4C 3D            CALL  writeLineHL
3206             L1512:
3206                     ;;testBitwiseOperators.j(218)     if (w2 | w1 == 0x133C) println (125); else println (999);
3206             L1513:
3206 2A 04 50            LD    HL,(05004H)
3209             L1514:
3209 ED 5B 02 50         LD    DE,(05002H)
320D 47                  LD    B,A
320E 7C                  LD    A,H
320F B2                  OR    A,D
3210 67                  LD    H,A
3211 7D                  LD    A,L
3212 B3                  OR    A,E
3213 6F                  LD    L,A
3214 78                  LD    A,B
3215             L1515:
3215 11 3C 13            LD    DE,4924
3218 B7                  OR    A
3219 ED 52               SBC   HL,DE
321B             L1516:
321B C2 5D 35            JP    NZ,L1770
321E             L1517:
321E 3E 7D               LD    A,125
3220             L1518:
3220 CD 74 3D            CALL  writeLineA
3223             L1519:
3223 C3 65 35            JP    L1773
3226             L1520:
3226 21 E7 03            LD    HL,999
3229             L1521:
3229 CD 4C 3D            CALL  writeLineHL
322C             L1522:
322C                     ;;testBitwiseOperators.j(219)     if (w2 ^ w1 == 0x1118) println (126); else println (999);
322C             L1523:
322C 2A 04 50            LD    HL,(05004H)
322F             L1524:
322F ED 5B 02 50         LD    DE,(05002H)
3233 C5                  PUSH  BC
3234 47                  LD    B,A
3235 7C                  LD    A,H
3236 AA                  XOR   A,D
3237 67                  LD    H,A
3238 7D                  LD    A,L
3239 AB                  XOR   A,E
323A 6F                  LD    L,A
323B 78                  LD    A,B
323C C1                  POP   BC
323D             L1525:
323D 11 18 11            LD    DE,4376
3240 B7                  OR    A
3241 ED 52               SBC   HL,DE
3243             L1526:
3243 C2 87 35            JP    NZ,L1782
3246             L1527:
3246 3E 7E               LD    A,126
3248             L1528:
3248 CD 74 3D            CALL  writeLineA
324B             L1529:
324B C3 93 35            JP    L1786
324E             L1530:
324E 21 E7 03            LD    HL,999
3251             L1531:
3251 CD 4C 3D            CALL  writeLineHL
3254             L1532:
3254                     ;;testBitwiseOperators.j(220)     //var byte/var word
3254             L1533:
3254                     ;;testBitwiseOperators.j(221)     if (b1 & w2 == 0x0014) println (127); else println (999);
3254             L1534:
3254 3A 00 50            LD    A,(05000H)
3257             L1535:
3257 6F                  LD    L,A
3258 26 00               LD    H,0
325A             L1536:
325A ED 5B 04 50         LD    DE,(05004H)
325E C5                  PUSH  BC
325F 47                  LD    B,A
3260 7C                  LD    A,H
3261 A2                  AND   A,D
3262 67                  LD    H,A
3263 7D                  LD    A,L
3264 A3                  AND   A,E
3265 6F                  LD    L,A
3266 78                  LD    A,B
3267 C1                  POP   BC
3268             L1537:
3268 3E 14               LD    A,20
326A             L1538:
326A 5F                  LD    E,A
326B 16 00               LD    D,0
326D EB                  EX    DE,HL
326E B7                  OR    A
326F ED 52               SBC   HL,DE
3271             L1539:
3271 C2 BA 35            JP    NZ,L1797
3274             L1540:
3274 3E 7F               LD    A,127
3276             L1541:
3276 CD 74 3D            CALL  writeLineA
3279             L1542:
3279 C3 C0 35            JP    L1800
327C             L1543:
327C 21 E7 03            LD    HL,999
327F             L1544:
327F CD 4C 3D            CALL  writeLineHL
3282             L1545:
3282                     ;;testBitwiseOperators.j(222)     if (b1 | w2 == 0x123C) println (128); else println (999);
3282             L1546:
3282 3A 00 50            LD    A,(05000H)
3285             L1547:
3285 6F                  LD    L,A
3286 26 00               LD    H,0
3288             L1548:
3288 ED 5B 04 50         LD    DE,(05004H)
328C 47                  LD    B,A
328D 7C                  LD    A,H
328E B2                  OR    A,D
328F 67                  LD    H,A
3290 7D                  LD    A,L
3291 B3                  OR    A,E
3292 6F                  LD    L,A
3293 78                  LD    A,B
3294             L1549:
3294 11 3C 12            LD    DE,4668
3297 B7                  OR    A
3298 ED 52               SBC   HL,DE
329A             L1550:
329A C2 E7 35            JP    NZ,L1810
329D             L1551:
329D 3E 80               LD    A,128
329F             L1552:
329F CD 74 3D            CALL  writeLineA
32A2             L1553:
32A2 C3 F8 35            JP    L1813
32A5             L1554:
32A5 21 E7 03            LD    HL,999
32A8             L1555:
32A8 CD 4C 3D            CALL  writeLineHL
32AB             L1556:
32AB                     ;;testBitwiseOperators.j(223)     if (b1 ^ w2 == 0x1228) println (129); else println (999);
32AB             L1557:
32AB 3A 00 50            LD    A,(05000H)
32AE             L1558:
32AE 6F                  LD    L,A
32AF 26 00               LD    H,0
32B1             L1559:
32B1 ED 5B 04 50         LD    DE,(05004H)
32B5 C5                  PUSH  BC
32B6 47                  LD    B,A
32B7 7C                  LD    A,H
32B8 AA                  XOR   A,D
32B9 67                  LD    H,A
32BA 7D                  LD    A,L
32BB AB                  XOR   A,E
32BC 6F                  LD    L,A
32BD 78                  LD    A,B
32BE C1                  POP   BC
32BF             L1560:
32BF 11 28 12            LD    DE,4648
32C2 B7                  OR    A
32C3 ED 52               SBC   HL,DE
32C5             L1561:
32C5 C2 15 36            JP    NZ,L1823
32C8             L1562:
32C8 3E 81               LD    A,129
32CA             L1563:
32CA CD 74 3D            CALL  writeLineA
32CD             L1564:
32CD C3 2D 36            JP    L1827
32D0             L1565:
32D0 21 E7 03            LD    HL,999
32D3             L1566:
32D3 CD 4C 3D            CALL  writeLineHL
32D6             L1567:
32D6                     ;;testBitwiseOperators.j(224)     //var word/var byte
32D6             L1568:
32D6                     ;;testBitwiseOperators.j(225)     if (w2 & b1 == 0x0014) println (130); else println (999);
32D6             L1569:
32D6 2A 04 50            LD    HL,(05004H)
32D9             L1570:
32D9 ED 5B 00 50         LD    DE,(05000H)
32DD C5                  PUSH  BC
32DE 47                  LD    B,A
32DF 7C                  LD    A,H
32E0 A2                  AND   A,D
32E1 67                  LD    H,A
32E2 7D                  LD    A,L
32E3 A3                  AND   A,E
32E4 6F                  LD    L,A
32E5 78                  LD    A,B
32E6 C1                  POP   BC
32E7             L1571:
32E7 3E 14               LD    A,20
32E9             L1572:
32E9 5F                  LD    E,A
32EA 16 00               LD    D,0
32EC EB                  EX    DE,HL
32ED B7                  OR    A
32EE ED 52               SBC   HL,DE
32F0             L1573:
32F0 C2 52 36            JP    NZ,L1837
32F3             L1574:
32F3 3E 82               LD    A,130
32F5             L1575:
32F5 CD 74 3D            CALL  writeLineA
32F8             L1576:
32F8 C3 5A 36            JP    L1840
32FB             L1577:
32FB 21 E7 03            LD    HL,999
32FE             L1578:
32FE CD 4C 3D            CALL  writeLineHL
3301             L1579:
3301                     ;;testBitwiseOperators.j(226)     if (w2 | b1 == 0x123C) println (131); else println (999);
3301             L1580:
3301 2A 04 50            LD    HL,(05004H)
3304             L1581:
3304 ED 5B 00 50         LD    DE,(05000H)
3308 47                  LD    B,A
3309 7C                  LD    A,H
330A B2                  OR    A,D
330B 67                  LD    H,A
330C 7D                  LD    A,L
330D B3                  OR    A,E
330E 6F                  LD    L,A
330F 78                  LD    A,B
3310             L1582:
3310 11 3C 12            LD    DE,4668
3313 B7                  OR    A
3314 ED 52               SBC   HL,DE
3316             L1583:
3316 C2 7C 36            JP    NZ,L1849
3319             L1584:
3319 3E 83               LD    A,131
331B             L1585:
331B CD 74 3D            CALL  writeLineA
331E             L1586:
331E C3 85 36            JP    L1852
3321             L1587:
3321 21 E7 03            LD    HL,999
3324             L1588:
3324 CD 4C 3D            CALL  writeLineHL
3327             L1589:
3327                     ;;testBitwiseOperators.j(227)     if (w2 ^ b1 == 0x1228) println (132); else println (999);
3327             L1590:
3327 2A 04 50            LD    HL,(05004H)
332A             L1591:
332A ED 5B 00 50         LD    DE,(05000H)
332E C5                  PUSH  BC
332F 47                  LD    B,A
3330 7C                  LD    A,H
3331 AA                  XOR   A,D
3332 67                  LD    H,A
3333 7D                  LD    A,L
3334 AB                  XOR   A,E
3335 6F                  LD    L,A
3336 78                  LD    A,B
3337 C1                  POP   BC
3338             L1592:
3338 11 28 12            LD    DE,4648
333B B7                  OR    A
333C ED 52               SBC   HL,DE
333E             L1593:
333E C2 A9 36            JP    NZ,L1861
3341             L1594:
3341 3E 84               LD    A,132
3343             L1595:
3343 CD 74 3D            CALL  writeLineA
3346             L1596:
3346 C3 AF 36            JP    L1868
3349             L1597:
3349 21 E7 03            LD    HL,999
334C             L1598:
334C CD 4C 3D            CALL  writeLineHL
334F             L1599:
334F                     ;;testBitwiseOperators.j(228)   
334F             L1600:
334F                     ;;testBitwiseOperators.j(229)     //var/final var
334F             L1601:
334F                     ;;testBitwiseOperators.j(230)     //*************
334F             L1602:
334F                     ;;testBitwiseOperators.j(231)     //var byte/final var byte
334F             L1603:
334F                     ;;testBitwiseOperators.j(232)     if (b2 & fb1 == 0x04) println (133); else println (999);
334F             L1604:
334F 3A 01 50            LD    A,(05001H)
3352             L1605:
3352 E6 1C               AND   A,28
3354             L1606:
3354 D6 04               SUB   A,4
3356             L1607:
3356 C2 C6 36            JP    NZ,L1877
3359             L1608:
3359 3E 85               LD    A,133
335B             L1609:
335B CD 74 3D            CALL  writeLineA
335E             L1610:
335E C3 CC 36            JP    L1880
3361             L1611:
3361 21 E7 03            LD    HL,999
3364             L1612:
3364 CD 4C 3D            CALL  writeLineHL
3367             L1613:
3367                     ;;testBitwiseOperators.j(233)     if (b2 | fb1 == 0x1F) println (134); else println (999);
3367             L1614:
3367 3A 01 50            LD    A,(05001H)
336A             L1615:
336A F6 1C               OR    A,28
336C             L1616:
336C D6 1F               SUB   A,31
336E             L1617:
336E C2 E3 36            JP    NZ,L1889
3371             L1618:
3371 3E 86               LD    A,134
3373             L1619:
3373 CD 74 3D            CALL  writeLineA
3376             L1620:
3376 C3 E9 36            JP    L1892
3379             L1621:
3379 21 E7 03            LD    HL,999
337C             L1622:
337C CD 4C 3D            CALL  writeLineHL
337F             L1623:
337F                     ;;testBitwiseOperators.j(234)     if (b2 ^ fb1 == 0x1B) println (135); else println (999);
337F             L1624:
337F 3A 01 50            LD    A,(05001H)
3382             L1625:
3382 EE 1C               XOR   A,28
3384             L1626:
3384 D6 1B               SUB   A,27
3386             L1627:
3386 C2 00 37            JP    NZ,L1901
3389             L1628:
3389 3E 87               LD    A,135
338B             L1629:
338B CD 74 3D            CALL  writeLineA
338E             L1630:
338E C3 06 37            JP    L1905
3391             L1631:
3391 21 E7 03            LD    HL,999
3394             L1632:
3394 CD 4C 3D            CALL  writeLineHL
3397             L1633:
3397                     ;;testBitwiseOperators.j(235)     //var word/final var word
3397             L1634:
3397                     ;;testBitwiseOperators.j(236)     if (w2 & fw1 == 0x0224) println (136); else println (999);
3397             L1635:
3397 2A 04 50            LD    HL,(05004H)
339A             L1636:
339A 11 2C 03            LD    DE,812
339D C5                  PUSH  BC
339E 47                  LD    B,A
339F 7C                  LD    A,H
33A0 A2                  AND   A,D
33A1 67                  LD    H,A
33A2 7D                  LD    A,L
33A3 A3                  AND   A,E
33A4 6F                  LD    L,A
33A5 78                  LD    A,B
33A6 C1                  POP   BC
33A7             L1637:
33A7 11 24 02            LD    DE,548
33AA B7                  OR    A
33AB ED 52               SBC   HL,DE
33AD             L1638:
33AD C2 2D 37            JP    NZ,L1914
33B0             L1639:
33B0 3E 88               LD    A,136
33B2             L1640:
33B2 CD 74 3D            CALL  writeLineA
33B5             L1641:
33B5 C3 33 37            JP    L1917
33B8             L1642:
33B8 21 E7 03            LD    HL,999
33BB             L1643:
33BB CD 4C 3D            CALL  writeLineHL
33BE             L1644:
33BE                     ;;testBitwiseOperators.j(237)     if (w2 | fw1 == 0x133C) println (137); else println (999);
33BE             L1645:
33BE 2A 04 50            LD    HL,(05004H)
33C1             L1646:
33C1 11 2C 03            LD    DE,812
33C4 47                  LD    B,A
33C5 7C                  LD    A,H
33C6 B2                  OR    A,D
33C7 67                  LD    H,A
33C8 7D                  LD    A,L
33C9 B3                  OR    A,E
33CA 6F                  LD    L,A
33CB 78                  LD    A,B
33CC             L1647:
33CC 11 3C 13            LD    DE,4924
33CF B7                  OR    A
33D0 ED 52               SBC   HL,DE
33D2             L1648:
33D2 C2 58 37            JP    NZ,L1926
33D5             L1649:
33D5 3E 89               LD    A,137
33D7             L1650:
33D7 CD 74 3D            CALL  writeLineA
33DA             L1651:
33DA C3 5E 37            JP    L1929
33DD             L1652:
33DD 21 E7 03            LD    HL,999
33E0             L1653:
33E0 CD 4C 3D            CALL  writeLineHL
33E3             L1654:
33E3                     ;;testBitwiseOperators.j(238)     if (w2 ^ fw1 == 0x1118) println (138); else println (999);
33E3             L1655:
33E3 2A 04 50            LD    HL,(05004H)
33E6             L1656:
33E6 11 2C 03            LD    DE,812
33E9 C5                  PUSH  BC
33EA 47                  LD    B,A
33EB 7C                  LD    A,H
33EC AA                  XOR   A,D
33ED 67                  LD    H,A
33EE 7D                  LD    A,L
33EF AB                  XOR   A,E
33F0 6F                  LD    L,A
33F1 78                  LD    A,B
33F2 C1                  POP   BC
33F3             L1657:
33F3 11 18 11            LD    DE,4376
33F6 B7                  OR    A
33F7 ED 52               SBC   HL,DE
33F9             L1658:
33F9 C2 85 37            JP    NZ,L1938
33FC             L1659:
33FC 3E 8A               LD    A,138
33FE             L1660:
33FE CD 74 3D            CALL  writeLineA
3401             L1661:
3401 C3 8B 37            JP    L1942
3404             L1662:
3404 21 E7 03            LD    HL,999
3407             L1663:
3407 CD 4C 3D            CALL  writeLineHL
340A             L1664:
340A                     ;;testBitwiseOperators.j(239)     //var byte/final var word
340A             L1665:
340A                     ;;testBitwiseOperators.j(240)     if (b1 & fw2 == 0x0014) println (139); else println (999);
340A             L1666:
340A 3A 00 50            LD    A,(05000H)
340D             L1667:
340D 6F                  LD    L,A
340E 26 00               LD    H,0
3410             L1668:
3410 11 34 12            LD    DE,4660
3413 C5                  PUSH  BC
3414 47                  LD    B,A
3415 7C                  LD    A,H
3416 A2                  AND   A,D
3417 67                  LD    H,A
3418 7D                  LD    A,L
3419 A3                  AND   A,E
341A 6F                  LD    L,A
341B 78                  LD    A,B
341C C1                  POP   BC
341D             L1669:
341D 3E 14               LD    A,20
341F             L1670:
341F 5F                  LD    E,A
3420 16 00               LD    D,0
3422 EB                  EX    DE,HL
3423 B7                  OR    A
3424 ED 52               SBC   HL,DE
3426             L1671:
3426 C2 B0 37            JP    NZ,L1953
3429             L1672:
3429 3E 8B               LD    A,139
342B             L1673:
342B CD 74 3D            CALL  writeLineA
342E             L1674:
342E C3 B6 37            JP    L1956
3431             L1675:
3431 21 E7 03            LD    HL,999
3434             L1676:
3434 CD 4C 3D            CALL  writeLineHL
3437             L1677:
3437                     ;;testBitwiseOperators.j(241)     if (b1 | fw2 == 0x123C) println (140); else println (999);
3437             L1678:
3437 3A 00 50            LD    A,(05000H)
343A             L1679:
343A 6F                  LD    L,A
343B 26 00               LD    H,0
343D             L1680:
343D 11 34 12            LD    DE,4660
3440 47                  LD    B,A
3441 7C                  LD    A,H
3442 B2                  OR    A,D
3443 67                  LD    H,A
3444 7D                  LD    A,L
3445 B3                  OR    A,E
3446 6F                  LD    L,A
3447 78                  LD    A,B
3448             L1681:
3448 11 3C 12            LD    DE,4668
344B B7                  OR    A
344C ED 52               SBC   HL,DE
344E             L1682:
344E C2 D6 37            JP    NZ,L1966
3451             L1683:
3451 3E 8C               LD    A,140
3453             L1684:
3453 CD 74 3D            CALL  writeLineA
3456             L1685:
3456 C3 DC 37            JP    L1969
3459             L1686:
3459 21 E7 03            LD    HL,999
345C             L1687:
345C CD 4C 3D            CALL  writeLineHL
345F             L1688:
345F                     ;;testBitwiseOperators.j(242)     if (b1 ^ fw2 == 0x1228) println (141); else println (999);
345F             L1689:
345F 3A 00 50            LD    A,(05000H)
3462             L1690:
3462 6F                  LD    L,A
3463 26 00               LD    H,0
3465             L1691:
3465 11 34 12            LD    DE,4660
3468 C5                  PUSH  BC
3469 47                  LD    B,A
346A 7C                  LD    A,H
346B AA                  XOR   A,D
346C 67                  LD    H,A
346D 7D                  LD    A,L
346E AB                  XOR   A,E
346F 6F                  LD    L,A
3470 78                  LD    A,B
3471 C1                  POP   BC
3472             L1692:
3472 11 28 12            LD    DE,4648
3475 B7                  OR    A
3476 ED 52               SBC   HL,DE
3478             L1693:
3478 C2 F9 37            JP    NZ,L1979
347B             L1694:
347B 3E 8D               LD    A,141
347D             L1695:
347D CD 74 3D            CALL  writeLineA
3480             L1696:
3480 C3 00 38            JP    L1983
3483             L1697:
3483 21 E7 03            LD    HL,999
3486             L1698:
3486 CD 4C 3D            CALL  writeLineHL
3489             L1699:
3489                     ;;testBitwiseOperators.j(243)     //var word/final var byte
3489             L1700:
3489                     ;;testBitwiseOperators.j(244)     if (w2 & fb1 == 0x0014) println (142); else println (999);
3489             L1701:
3489 2A 04 50            LD    HL,(05004H)
348C             L1702:
348C 11 1C 00            LD    DE,28
348F C5                  PUSH  BC
3490 47                  LD    B,A
3491 7C                  LD    A,H
3492 A2                  AND   A,D
3493 67                  LD    H,A
3494 7D                  LD    A,L
3495 A3                  AND   A,E
3496 6F                  LD    L,A
3497 78                  LD    A,B
3498 C1                  POP   BC
3499             L1703:
3499 3E 14               LD    A,20
349B             L1704:
349B 5F                  LD    E,A
349C 16 00               LD    D,0
349E EB                  EX    DE,HL
349F B7                  OR    A
34A0 ED 52               SBC   HL,DE
34A2             L1705:
34A2 C2 1E 38            JP    NZ,L1993
34A5             L1706:
34A5 3E 8E               LD    A,142
34A7             L1707:
34A7 CD 74 3D            CALL  writeLineA
34AA             L1708:
34AA C3 25 38            JP    L1996
34AD             L1709:
34AD 21 E7 03            LD    HL,999
34B0             L1710:
34B0 CD 4C 3D            CALL  writeLineHL
34B3             L1711:
34B3                     ;;testBitwiseOperators.j(245)     if (w2 | fb1 == 0x123C) println (143); else println (999);
34B3             L1712:
34B3 2A 04 50            LD    HL,(05004H)
34B6             L1713:
34B6 11 1C 00            LD    DE,28
34B9 47                  LD    B,A
34BA 7C                  LD    A,H
34BB B2                  OR    A,D
34BC 67                  LD    H,A
34BD 7D                  LD    A,L
34BE B3                  OR    A,E
34BF 6F                  LD    L,A
34C0 78                  LD    A,B
34C1             L1714:
34C1 11 3C 12            LD    DE,4668
34C4 B7                  OR    A
34C5 ED 52               SBC   HL,DE
34C7             L1715:
34C7 C2 3E 38            JP    NZ,L2005
34CA             L1716:
34CA 3E 8F               LD    A,143
34CC             L1717:
34CC CD 74 3D            CALL  writeLineA
34CF             L1718:
34CF C3 45 38            JP    L2008
34D2             L1719:
34D2 21 E7 03            LD    HL,999
34D5             L1720:
34D5 CD 4C 3D            CALL  writeLineHL
34D8             L1721:
34D8                     ;;testBitwiseOperators.j(246)     if (w2 ^ fb1 == 0x1228) println (144); else println (999);
34D8             L1722:
34D8 2A 04 50            LD    HL,(05004H)
34DB             L1723:
34DB 11 1C 00            LD    DE,28
34DE C5                  PUSH  BC
34DF 47                  LD    B,A
34E0 7C                  LD    A,H
34E1 AA                  XOR   A,D
34E2 67                  LD    H,A
34E3 7D                  LD    A,L
34E4 AB                  XOR   A,E
34E5 6F                  LD    L,A
34E6 78                  LD    A,B
34E7 C1                  POP   BC
34E8             L1724:
34E8 11 28 12            LD    DE,4648
34EB B7                  OR    A
34EC ED 52               SBC   HL,DE
34EE             L1725:
34EE C2 5E 38            JP    NZ,L2017
34F1             L1726:
34F1 3E 90               LD    A,144
34F3             L1727:
34F3 CD 74 3D            CALL  writeLineA
34F6             L1728:
34F6 C3 68 38            JP    L2024
34F9             L1729:
34F9 21 E7 03            LD    HL,999
34FC             L1730:
34FC CD 4C 3D            CALL  writeLineHL
34FF             L1731:
34FF                     ;;testBitwiseOperators.j(247)   
34FF             L1732:
34FF                     ;;testBitwiseOperators.j(248)     //final var/constant
34FF             L1733:
34FF                     ;;testBitwiseOperators.j(249)     //******************
34FF             L1734:
34FF                     ;;testBitwiseOperators.j(250)     //final var byte/constant byte
34FF             L1735:
34FF                     ;;testBitwiseOperators.j(251)     if (b2 & 0x1C == 0x04) println (145); else println (999);
34FF             L1736:
34FF 3A 01 50            LD    A,(05001H)
3502             L1737:
3502 E6 1C               AND   A,28
3504             L1738:
3504 D6 04               SUB   A,4
3506             L1739:
3506 C2 81 38            JP    NZ,L2033
3509             L1740:
3509 3E 91               LD    A,145
350B             L1741:
350B CD 74 3D            CALL  writeLineA
350E             L1742:
350E C3 88 38            JP    L2036
3511             L1743:
3511 21 E7 03            LD    HL,999
3514             L1744:
3514 CD 4C 3D            CALL  writeLineHL
3517             L1745:
3517                     ;;testBitwiseOperators.j(252)     if (b2 | 0x1C == 0x1F) println (146); else println (999);
3517             L1746:
3517 3A 01 50            LD    A,(05001H)
351A             L1747:
351A F6 1C               OR    A,28
351C             L1748:
351C D6 1F               SUB   A,31
351E             L1749:
351E C2 A1 38            JP    NZ,L2045
3521             L1750:
3521 3E 92               LD    A,146
3523             L1751:
3523 CD 74 3D            CALL  writeLineA
3526             L1752:
3526 C3 A9 38            JP    L2048
3529             L1753:
3529 21 E7 03            LD    HL,999
352C             L1754:
352C CD 4C 3D            CALL  writeLineHL
352F             L1755:
352F                     ;;testBitwiseOperators.j(253)     if (b2 ^ 0x1C == 0x1B) println (147); else println (999);
352F             L1756:
352F 3A 01 50            LD    A,(05001H)
3532             L1757:
3532 EE 1C               XOR   A,28
3534             L1758:
3534 D6 1B               SUB   A,27
3536             L1759:
3536 C2 CB 38            JP    NZ,L2057
3539             L1760:
3539 3E 93               LD    A,147
353B             L1761:
353B CD 74 3D            CALL  writeLineA
353E             L1762:
353E C3 D7 38            JP    L2061
3541             L1763:
3541 21 E7 03            LD    HL,999
3544             L1764:
3544 CD 4C 3D            CALL  writeLineHL
3547             L1765:
3547                     ;;testBitwiseOperators.j(254)     //final var word/constant word
3547             L1766:
3547                     ;;testBitwiseOperators.j(255)     if (w2 & 0x032C == 0x0224) println (148); else println (999);
3547             L1767:
3547 2A 04 50            LD    HL,(05004H)
354A             L1768:
354A 11 2C 03            LD    DE,812
354D C5                  PUSH  BC
354E 47                  LD    B,A
354F 7C                  LD    A,H
3550 A2                  AND   A,D
3551 67                  LD    H,A
3552 7D                  LD    A,L
3553 A3                  AND   A,E
3554 6F                  LD    L,A
3555 78                  LD    A,B
3556 C1                  POP   BC
3557             L1769:
3557 11 24 02            LD    DE,548
355A B7                  OR    A
355B ED 52               SBC   HL,DE
355D             L1770:
355D C2 FA 38            JP    NZ,L2070
3560             L1771:
3560 3E 94               LD    A,148
3562             L1772:
3562 CD 74 3D            CALL  writeLineA
3565             L1773:
3565 C3 00 39            JP    L2073
3568             L1774:
3568 21 E7 03            LD    HL,999
356B             L1775:
356B CD 4C 3D            CALL  writeLineHL
356E             L1776:
356E                     ;;testBitwiseOperators.j(256)     if (w2 | 0x032C == 0x133C) println (149); else println (999);
356E             L1777:
356E 2A 04 50            LD    HL,(05004H)
3571             L1778:
3571 11 2C 03            LD    DE,812
3574 47                  LD    B,A
3575 7C                  LD    A,H
3576 B2                  OR    A,D
3577 67                  LD    H,A
3578 7D                  LD    A,L
3579 B3                  OR    A,E
357A 6F                  LD    L,A
357B 78                  LD    A,B
357C             L1779:
357C 11 3C 13            LD    DE,4924
357F B7                  OR    A
3580 ED 52               SBC   HL,DE
3582             L1780:
3582 C2 25 39            JP    NZ,L2082
3585             L1781:
3585 3E 95               LD    A,149
3587             L1782:
3587 CD 74 3D            CALL  writeLineA
358A             L1783:
358A C3 2B 39            JP    L2085
358D             L1784:
358D 21 E7 03            LD    HL,999
3590             L1785:
3590 CD 4C 3D            CALL  writeLineHL
3593             L1786:
3593                     ;;testBitwiseOperators.j(257)     if (w2 ^ 0x032C == 0x1118) println (150); else println (999);
3593             L1787:
3593 2A 04 50            LD    HL,(05004H)
3596             L1788:
3596 11 2C 03            LD    DE,812
3599 C5                  PUSH  BC
359A 47                  LD    B,A
359B 7C                  LD    A,H
359C AA                  XOR   A,D
359D 67                  LD    H,A
359E 7D                  LD    A,L
359F AB                  XOR   A,E
35A0 6F                  LD    L,A
35A1 78                  LD    A,B
35A2 C1                  POP   BC
35A3             L1789:
35A3 11 18 11            LD    DE,4376
35A6 B7                  OR    A
35A7 ED 52               SBC   HL,DE
35A9             L1790:
35A9 C2 53 39            JP    NZ,L2094
35AC             L1791:
35AC 3E 96               LD    A,150
35AE             L1792:
35AE CD 74 3D            CALL  writeLineA
35B1             L1793:
35B1 C3 65 39            JP    L2098
35B4             L1794:
35B4 21 E7 03            LD    HL,999
35B7             L1795:
35B7 CD 4C 3D            CALL  writeLineHL
35BA             L1796:
35BA                     ;;testBitwiseOperators.j(258)     //final var byte/constant word
35BA             L1797:
35BA                     ;;testBitwiseOperators.j(259)     if (b1 & 0x1234 == 0x0014) println (151); else println (999);
35BA             L1798:
35BA 3A 00 50            LD    A,(05000H)
35BD             L1799:
35BD 6F                  LD    L,A
35BE 26 00               LD    H,0
35C0             L1800:
35C0 11 34 12            LD    DE,4660
35C3 C5                  PUSH  BC
35C4 47                  LD    B,A
35C5 7C                  LD    A,H
35C6 A2                  AND   A,D
35C7 67                  LD    H,A
35C8 7D                  LD    A,L
35C9 A3                  AND   A,E
35CA 6F                  LD    L,A
35CB 78                  LD    A,B
35CC C1                  POP   BC
35CD             L1801:
35CD 3E 14               LD    A,20
35CF             L1802:
35CF 5F                  LD    E,A
35D0 16 00               LD    D,0
35D2 EB                  EX    DE,HL
35D3 B7                  OR    A
35D4 ED 52               SBC   HL,DE
35D6             L1803:
35D6 C2 90 39            JP    NZ,L2109
35D9             L1804:
35D9 3E 97               LD    A,151
35DB             L1805:
35DB CD 74 3D            CALL  writeLineA
35DE             L1806:
35DE C3 9B 39            JP    L2112
35E1             L1807:
35E1 21 E7 03            LD    HL,999
35E4             L1808:
35E4 CD 4C 3D            CALL  writeLineHL
35E7             L1809:
35E7                     ;;testBitwiseOperators.j(260)     if (b1 | 0x1234 == 0x123C) println (152); else println (999);
35E7             L1810:
35E7 3A 00 50            LD    A,(05000H)
35EA             L1811:
35EA 6F                  LD    L,A
35EB 26 00               LD    H,0
35ED             L1812:
35ED 11 34 12            LD    DE,4660
35F0 47                  LD    B,A
35F1 7C                  LD    A,H
35F2 B2                  OR    A,D
35F3 67                  LD    H,A
35F4 7D                  LD    A,L
35F5 B3                  OR    A,E
35F6 6F                  LD    L,A
35F7 78                  LD    A,B
35F8             L1813:
35F8 11 3C 12            LD    DE,4668
35FB B7                  OR    A
35FC ED 52               SBC   HL,DE
35FE             L1814:
35FE C2 C1 39            JP    NZ,L2122
3601             L1815:
3601 3E 98               LD    A,152
3603             L1816:
3603 CD 74 3D            CALL  writeLineA
3606             L1817:
3606 C3 C9 39            JP    L2125
3609             L1818:
3609 21 E7 03            LD    HL,999
360C             L1819:
360C CD 4C 3D            CALL  writeLineHL
360F             L1820:
360F                     ;;testBitwiseOperators.j(261)     if (b1 ^ 0x1234 == 0x1228) println (153); else println (999);
360F             L1821:
360F 3A 00 50            LD    A,(05000H)
3612             L1822:
3612 6F                  LD    L,A
3613 26 00               LD    H,0
3615             L1823:
3615 11 34 12            LD    DE,4660
3618 C5                  PUSH  BC
3619 47                  LD    B,A
361A 7C                  LD    A,H
361B AA                  XOR   A,D
361C 67                  LD    H,A
361D 7D                  LD    A,L
361E AB                  XOR   A,E
361F 6F                  LD    L,A
3620 78                  LD    A,B
3621 C1                  POP   BC
3622             L1824:
3622 11 28 12            LD    DE,4648
3625 B7                  OR    A
3626 ED 52               SBC   HL,DE
3628             L1825:
3628 C2 EF 39            JP    NZ,L2135
362B             L1826:
362B 3E 99               LD    A,153
362D             L1827:
362D CD 74 3D            CALL  writeLineA
3630             L1828:
3630 C3 F8 39            JP    L2139
3633             L1829:
3633 21 E7 03            LD    HL,999
3636             L1830:
3636 CD 4C 3D            CALL  writeLineHL
3639             L1831:
3639                     ;;testBitwiseOperators.j(262)     //final var word/constant byte
3639             L1832:
3639                     ;;testBitwiseOperators.j(263)     if (w2 & 0x1C == 0x0014) println (154); else println (999);
3639             L1833:
3639 2A 04 50            LD    HL,(05004H)
363C             L1834:
363C 11 1C 00            LD    DE,28
363F C5                  PUSH  BC
3640 47                  LD    B,A
3641 7C                  LD    A,H
3642 A2                  AND   A,D
3643 67                  LD    H,A
3644 7D                  LD    A,L
3645 A3                  AND   A,E
3646 6F                  LD    L,A
3647 78                  LD    A,B
3648 C1                  POP   BC
3649             L1835:
3649 3E 14               LD    A,20
364B             L1836:
364B 5F                  LD    E,A
364C 16 00               LD    D,0
364E EB                  EX    DE,HL
364F B7                  OR    A
3650 ED 52               SBC   HL,DE
3652             L1837:
3652 C2 20 3A            JP    NZ,L2149
3655             L1838:
3655 3E 9A               LD    A,154
3657             L1839:
3657 CD 74 3D            CALL  writeLineA
365A             L1840:
365A C3 20 3A            JP    L2152
365D             L1841:
365D 21 E7 03            LD    HL,999
3660             L1842:
3660 CD 4C 3D            CALL  writeLineHL
3663             L1843:
3663                     ;;testBitwiseOperators.j(264)     if (w2 | 0x1C == 0x123C) println (155); else println (999);
3663             L1844:
3663 2A 04 50            LD    HL,(05004H)
3666             L1845:
3666 11 1C 00            LD    DE,28
3669 47                  LD    B,A
366A 7C                  LD    A,H
366B B2                  OR    A,D
366C 67                  LD    H,A
366D 7D                  LD    A,L
366E B3                  OR    A,E
366F 6F                  LD    L,A
3670 78                  LD    A,B
3671             L1846:
3671 11 3C 12            LD    DE,4668
3674 B7                  OR    A
3675 ED 52               SBC   HL,DE
3677             L1847:
3677 C2 34 3A            JP    NZ,L2161
367A             L1848:
367A 3E 9B               LD    A,155
367C             L1849:
367C CD 74 3D            CALL  writeLineA
367F             L1850:
367F C3 39 3A            JP    L2164
3682             L1851:
3682 21 E7 03            LD    HL,999
3685             L1852:
3685 CD 4C 3D            CALL  writeLineHL
3688             L1853:
3688                     ;;testBitwiseOperators.j(265)     if (w2 ^ 0x1C == 0x1228) println (156); else println (999);
3688             L1854:
3688 2A 04 50            LD    HL,(05004H)
368B             L1855:
368B 11 1C 00            LD    DE,28
368E C5                  PUSH  BC
368F 47                  LD    B,A
3690 7C                  LD    A,H
3691 AA                  XOR   A,D
3692 67                  LD    H,A
3693 7D                  LD    A,L
3694 AB                  XOR   A,E
3695 6F                  LD    L,A
3696 78                  LD    A,B
3697 C1                  POP   BC
3698             L1856:
3698 11 28 12            LD    DE,4648
369B B7                  OR    A
369C ED 52               SBC   HL,DE
369E             L1857:
369E C2 4E 3A            JP    NZ,L2173
36A1             L1858:
36A1 3E 9C               LD    A,156
36A3             L1859:
36A3 CD 74 3D            CALL  writeLineA
36A6             L1860:
36A6 C3 5F 3A            JP    L2180
36A9             L1861:
36A9 21 E7 03            LD    HL,999
36AC             L1862:
36AC CD 4C 3D            CALL  writeLineHL
36AF             L1863:
36AF                     ;;testBitwiseOperators.j(266)   
36AF             L1864:
36AF                     ;;testBitwiseOperators.j(267)     //final var/acc
36AF             L1865:
36AF                     ;;testBitwiseOperators.j(268)     //*************
36AF             L1866:
36AF                     ;;testBitwiseOperators.j(269)     //final var byte/acc byte
36AF             L1867:
36AF                     ;;testBitwiseOperators.j(270)     if (b2 & (0x10 + 0x0C) == 0x04) println (157); else println (999);
36AF             L1868:
36AF 3A 01 50            LD    A,(05001H)
36B2             L1869:
36B2 F5                  PUSH  AF
36B3 3E 10               LD    A,16
36B5             L1870:
36B5 C6 0C               ADD   A,12
36B7             L1871:
36B7 C1                  POP   BC
36B8 A0                  AND   A,B
36B9             L1872:
36B9 D6 04               SUB   A,4
36BB             L1873:
36BB C2 86 3A            JP    NZ,L2191
36BE             L1874:
36BE 3E 9D               LD    A,157
36C0             L1875:
36C0 CD 74 3D            CALL  writeLineA
36C3             L1876:
36C3 C3 8C 3A            JP    L2194
36C6             L1877:
36C6 21 E7 03            LD    HL,999
36C9             L1878:
36C9 CD 4C 3D            CALL  writeLineHL
36CC             L1879:
36CC                     ;;testBitwiseOperators.j(271)     if (b2 | (0x10 + 0x0C) == 0x1F) println (158); else println (999);
36CC             L1880:
36CC 3A 01 50            LD    A,(05001H)
36CF             L1881:
36CF F5                  PUSH  AF
36D0 3E 10               LD    A,16
36D2             L1882:
36D2 C6 0C               ADD   A,12
36D4             L1883:
36D4 C1                  POP   BC
36D5 B0                  OR    A,B
36D6             L1884:
36D6 D6 1F               SUB   A,31
36D8             L1885:
36D8 C2 B4 3A            JP    NZ,L2205
36DB             L1886:
36DB 3E 9E               LD    A,158
36DD             L1887:
36DD CD 74 3D            CALL  writeLineA
36E0             L1888:
36E0 C3 CA 3A            JP    L2208
36E3             L1889:
36E3 21 E7 03            LD    HL,999
36E6             L1890:
36E6 CD 4C 3D            CALL  writeLineHL
36E9             L1891:
36E9                     ;;testBitwiseOperators.j(272)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (159); else println (999);
36E9             L1892:
36E9 3A 01 50            LD    A,(05001H)
36EC             L1893:
36EC F5                  PUSH  AF
36ED 3E 10               LD    A,16
36EF             L1894:
36EF C6 0C               ADD   A,12
36F1             L1895:
36F1 C1                  POP   BC
36F2 A8                  XOR   A,B
36F3             L1896:
36F3 D6 1B               SUB   A,27
36F5             L1897:
36F5 C2 EC 3A            JP    NZ,L2219
36F8             L1898:
36F8 3E 9F               LD    A,159
36FA             L1899:
36FA CD 74 3D            CALL  writeLineA
36FD             L1900:
36FD C3 FB 3A            JP    L2223
3700             L1901:
3700 21 E7 03            LD    HL,999
3703             L1902:
3703 CD 4C 3D            CALL  writeLineHL
3706             L1903:
3706                     ;;testBitwiseOperators.j(273)     //final var word/acc word
3706             L1904:
3706                     ;;testBitwiseOperators.j(274)     if (w2 & 0x0100 + 0x022C == 0x0224) println (160); else println (999);
3706             L1905:
3706 2A 04 50            LD    HL,(05004H)
3709             L1906:
3709 E5                  PUSH  HL
370A 21 00 01            LD    HL,256
370D             L1907:
370D 11 2C 02            LD    DE,556
3710 19                  ADD   HL,DE
3711             L1908:
3711 D1                  POP   DE
3712 C5                  PUSH  BC
3713 47                  LD    B,A
3714 7C                  LD    A,H
3715 A2                  AND   A,D
3716 67                  LD    H,A
3717 7D                  LD    A,L
3718 A3                  AND   A,E
3719 6F                  LD    L,A
371A 78                  LD    A,B
371B C1                  POP   BC
371C             L1909:
371C 11 24 02            LD    DE,548
371F B7                  OR    A
3720 ED 52               SBC   HL,DE
3722             L1910:
3722 C2 22 3B            JP    NZ,L2234
3725             L1911:
3725 3E A0               LD    A,160
3727             L1912:
3727 CD 74 3D            CALL  writeLineA
372A             L1913:
372A C3 2B 3B            JP    L2237
372D             L1914:
372D 21 E7 03            LD    HL,999
3730             L1915:
3730 CD 4C 3D            CALL  writeLineHL
3733             L1916:
3733                     ;;testBitwiseOperators.j(275)     if (w2 | 0x0100 + 0x022C == 0x133C) println (161); else println (999);
3733             L1917:
3733 2A 04 50            LD    HL,(05004H)
3736             L1918:
3736 E5                  PUSH  HL
3737 21 00 01            LD    HL,256
373A             L1919:
373A 11 2C 02            LD    DE,556
373D 19                  ADD   HL,DE
373E             L1920:
373E D1                  POP   DE
373F 47                  LD    B,A
3740 7C                  LD    A,H
3741 B2                  OR    A,D
3742 67                  LD    H,A
3743 7D                  LD    A,L
3744 B3                  OR    A,E
3745 6F                  LD    L,A
3746 78                  LD    A,B
3747             L1921:
3747 11 3C 13            LD    DE,4924
374A B7                  OR    A
374B ED 52               SBC   HL,DE
374D             L1922:
374D C2 54 3B            JP    NZ,L2248
3750             L1923:
3750 3E A1               LD    A,161
3752             L1924:
3752 CD 74 3D            CALL  writeLineA
3755             L1925:
3755 C3 57 3B            JP    L2251
3758             L1926:
3758 21 E7 03            LD    HL,999
375B             L1927:
375B CD 4C 3D            CALL  writeLineHL
375E             L1928:
375E                     ;;testBitwiseOperators.j(276)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (162); else println (999);
375E             L1929:
375E 2A 04 50            LD    HL,(05004H)
3761             L1930:
3761 E5                  PUSH  HL
3762 21 00 01            LD    HL,256
3765             L1931:
3765 11 2C 02            LD    DE,556
3768 19                  ADD   HL,DE
3769             L1932:
3769 D1                  POP   DE
376A C5                  PUSH  BC
376B 47                  LD    B,A
376C 7C                  LD    A,H
376D AA                  XOR   A,D
376E 67                  LD    H,A
376F 7D                  LD    A,L
3770 AB                  XOR   A,E
3771 6F                  LD    L,A
3772 78                  LD    A,B
3773 C1                  POP   BC
3774             L1933:
3774 11 18 11            LD    DE,4376
3777 B7                  OR    A
3778 ED 52               SBC   HL,DE
377A             L1934:
377A C2 81 3B            JP    NZ,L2262
377D             L1935:
377D 3E A2               LD    A,162
377F             L1936:
377F CD 74 3D            CALL  writeLineA
3782             L1937:
3782 C3 97 3B            JP    L2266
3785             L1938:
3785 21 E7 03            LD    HL,999
3788             L1939:
3788 CD 4C 3D            CALL  writeLineHL
378B             L1940:
378B                     ;;testBitwiseOperators.j(277)     //final var byte/acc word
378B             L1941:
378B                     ;;testBitwiseOperators.j(278)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (163); else println (999);
378B             L1942:
378B 3A 00 50            LD    A,(05000H)
378E             L1943:
378E 21 00 10            LD    HL,4096
3791             L1944:
3791 11 34 02            LD    DE,564
3794 19                  ADD   HL,DE
3795             L1945:
3795 A5                  AND   A,L
3796 6F                  LD    L,A
3797 26 00               LD    H,0
3799             L1946:
3799 3E 14               LD    A,20
379B             L1947:
379B 5F                  LD    E,A
379C 16 00               LD    D,0
379E EB                  EX    DE,HL
379F B7                  OR    A
37A0 ED 52               SBC   HL,DE
37A2             L1948:
37A2 C2 C4 3B            JP    NZ,L2278
37A5             L1949:
37A5 3E A3               LD    A,163
37A7             L1950:
37A7 CD 74 3D            CALL  writeLineA
37AA             L1951:
37AA C3 CA 3B            JP    L2281
37AD             L1952:
37AD 21 E7 03            LD    HL,999
37B0             L1953:
37B0 CD 4C 3D            CALL  writeLineHL
37B3             L1954:
37B3                     ;;testBitwiseOperators.j(279)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (164); else println (999);
37B3             L1955:
37B3 3A 00 50            LD    A,(05000H)
37B6             L1956:
37B6 21 00 10            LD    HL,4096
37B9             L1957:
37B9 11 34 02            LD    DE,564
37BC 19                  ADD   HL,DE
37BD             L1958:
37BD B5                  OR    A,L
37BE 6F                  LD    L,A
37BF             L1959:
37BF 11 3C 12            LD    DE,4668
37C2 B7                  OR    A
37C3 ED 52               SBC   HL,DE
37C5             L1960:
37C5 C2 F4 08            JP    NZ,L2292
37C8             L1961:
37C8 3E A4               LD    A,164
37CA             L1962:
37CA CD 74 3D            CALL  writeLineA
37CD             L1963:
37CD C3 F7 08            JP    L2295
37D0             L1964:
37D0 21 E7 03            LD    HL,999
37D3             L1965:
37D3 CD 4C 3D            CALL  writeLineHL
37D6             L1966:
37D6                     ;;testBitwiseOperators.j(280)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (165); else println (999);
37D6             L1967:
37D6 3A 00 50            LD    A,(05000H)
37D9             L1968:
37D9 21 00 10            LD    HL,4096
37DC             L1969:
37DC 11 34 02            LD    DE,564
37DF 19                  ADD   HL,DE
37E0             L1970:
37E0 AD                  XOR   A,L
37E1 6F                  LD    L,A
37E2             L1971:
37E2 11 28 12            LD    DE,4648
37E5 B7                  OR    A
37E6 ED 52               SBC   HL,DE
37E8             L1972:
37E8 C2 02 09            JP    NZ,L2306
37EB             L1973:
37EB 3E A5               LD    A,165
37ED             L1974:
37ED CD 74 3D            CALL  writeLineA
37F0             L1975:
37F0 C3 06 09            JP    L2310
37F3             L1976:
37F3 21 E7 03            LD    HL,999
37F6             L1977:
37F6 CD 4C 3D            CALL  writeLineHL
37F9             L1978:
37F9                     ;;testBitwiseOperators.j(281)     //final var word/acc byte
37F9             L1979:
37F9                     ;;testBitwiseOperators.j(282)     if (w2 & 0x10 + 0x0C == 0x0014) println (166); else println (999);
37F9             L1980:
37F9 2A 04 50            LD    HL,(05004H)
37FC             L1981:
37FC 3E 10               LD    A,16
37FE             L1982:
37FE C6 0C               ADD   A,12
3800             L1983:
3800 A5                  AND   A,L
3801 6F                  LD    L,A
3802 26 00               LD    H,0
3804             L1984:
3804 3E 14               LD    A,20
3806             L1985:
3806 5F                  LD    E,A
3807 16 00               LD    D,0
3809 EB                  EX    DE,HL
380A B7                  OR    A
380B ED 52               SBC   HL,DE
380D             L1986:
380D C2 12 09            JP    NZ,L2322
3810             L1987:
3810 3E A6               LD    A,166
3812             L1988:
3812 CD 74 3D            CALL  writeLineA
3815             L1989:
3815 C3 15 09            JP    L2325
3818             L1990:
3818 21 E7 03            LD    HL,999
381B             L1991:
381B CD 4C 3D            CALL  writeLineHL
381E             L1992:
381E                     ;;testBitwiseOperators.j(283)     if (w2 | 0x10 + 0x0C == 0x123C) println (167); else println (999);
381E             L1993:
381E 2A 04 50            LD    HL,(05004H)
3821             L1994:
3821 3E 10               LD    A,16
3823             L1995:
3823 C6 0C               ADD   A,12
3825             L1996:
3825 B5                  OR    A,L
3826 6F                  LD    L,A
3827             L1997:
3827 11 3C 12            LD    DE,4668
382A B7                  OR    A
382B ED 52               SBC   HL,DE
382D             L1998:
382D C2 20 09            JP    NZ,L2336
3830             L1999:
3830 3E A7               LD    A,167
3832             L2000:
3832 CD 74 3D            CALL  writeLineA
3835             L2001:
3835 C3 23 09            JP    L2339
3838             L2002:
3838 21 E7 03            LD    HL,999
383B             L2003:
383B CD 4C 3D            CALL  writeLineHL
383E             L2004:
383E                     ;;testBitwiseOperators.j(284)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (168); else println (999);
383E             L2005:
383E 2A 04 50            LD    HL,(05004H)
3841             L2006:
3841 3E 10               LD    A,16
3843             L2007:
3843 C6 0C               ADD   A,12
3845             L2008:
3845 AD                  XOR   A,L
3846 6F                  LD    L,A
3847             L2009:
3847 11 28 12            LD    DE,4648
384A B7                  OR    A
384B ED 52               SBC   HL,DE
384D             L2010:
384D C2 2E 09            JP    NZ,L2350
3850             L2011:
3850 3E A8               LD    A,168
3852             L2012:
3852 CD 74 3D            CALL  writeLineA
3855             L2013:
3855 C3 35 09            JP    L2357
3858             L2014:
3858 21 E7 03            LD    HL,999
385B             L2015:
385B CD 4C 3D            CALL  writeLineHL
385E             L2016:
385E                     ;;testBitwiseOperators.j(285)   
385E             L2017:
385E                     ;;testBitwiseOperators.j(286)     //final var/var
385E             L2018:
385E                     ;;testBitwiseOperators.j(287)     //*************
385E             L2019:
385E                     ;;testBitwiseOperators.j(288)     //final var byte/var byte
385E             L2020:
385E                     ;;testBitwiseOperators.j(289)     if (b2 & b1 == 0x04) println (169); else println (999);
385E             L2021:
385E 3A 01 50            LD    A,(05001H)
3861             L2022:
3861 47                  LD    B,A
3862 3A 00 50            LD    A,(05000H)
3865 A0                  AND   A,B
3866             L2023:
3866 D6 04               SUB   A,4
3868             L2024:
3868 C2 3E 09            JP    NZ,L2366
386B             L2025:
386B 3E A9               LD    A,169
386D             L2026:
386D CD 74 3D            CALL  writeLineA
3870             L2027:
3870 C3 41 09            JP    L2369
3873             L2028:
3873 21 E7 03            LD    HL,999
3876             L2029:
3876 CD 4C 3D            CALL  writeLineHL
3879             L2030:
3879                     ;;testBitwiseOperators.j(290)     if (b2 | b1 == 0x1F) println (170); else println (999);
3879             L2031:
3879 3A 01 50            LD    A,(05001H)
387C             L2032:
387C 47                  LD    B,A
387D 3A 00 50            LD    A,(05000H)
3880 B0                  OR    A,B
3881             L2033:
3881 D6 1F               SUB   A,31
3883             L2034:
3883 C2 4A 09            JP    NZ,L2378
3886             L2035:
3886 3E AA               LD    A,170
3888             L2036:
3888 CD 74 3D            CALL  writeLineA
388B             L2037:
388B C3 4D 09            JP    L2381
388E             L2038:
388E 21 E7 03            LD    HL,999
3891             L2039:
3891 CD 4C 3D            CALL  writeLineHL
3894             L2040:
3894                     ;;testBitwiseOperators.j(291)     if (b2 ^ b1 == 0x1B) println (171); else println (999);
3894             L2041:
3894 3A 01 50            LD    A,(05001H)
3897             L2042:
3897 47                  LD    B,A
3898 3A 00 50            LD    A,(05000H)
389B A8                  XOR   A,B
389C             L2043:
389C D6 1B               SUB   A,27
389E             L2044:
389E C2 56 09            JP    NZ,L2390
38A1             L2045:
38A1 3E AB               LD    A,171
38A3             L2046:
38A3 CD 74 3D            CALL  writeLineA
38A6             L2047:
38A6 C3 5A 09            JP    L2394
38A9             L2048:
38A9 21 E7 03            LD    HL,999
38AC             L2049:
38AC CD 4C 3D            CALL  writeLineHL
38AF             L2050:
38AF                     ;;testBitwiseOperators.j(292)     //final var word/var word
38AF             L2051:
38AF                     ;;testBitwiseOperators.j(293)     if (w2 & w1 == 0x0224) println (172); else println (999);
38AF             L2052:
38AF 2A 04 50            LD    HL,(05004H)
38B2             L2053:
38B2 ED 5B 02 50         LD    DE,(05002H)
38B6 C5                  PUSH  BC
38B7 47                  LD    B,A
38B8 7C                  LD    A,H
38B9 A2                  AND   A,D
38BA 67                  LD    H,A
38BB 7D                  LD    A,L
38BC A3                  AND   A,E
38BD 6F                  LD    L,A
38BE 78                  LD    A,B
38BF C1                  POP   BC
38C0             L2054:
38C0 11 24 02            LD    DE,548
38C3 B7                  OR    A
38C4 ED 52               SBC   HL,DE
38C6             L2055:
38C6 C2 63 09            JP    NZ,L2403
38C9             L2056:
38C9 3E AC               LD    A,172
38CB             L2057:
38CB CD 74 3D            CALL  writeLineA
38CE             L2058:
38CE C3 66 09            JP    L2406
38D1             L2059:
38D1 21 E7 03            LD    HL,999
38D4             L2060:
38D4 CD 4C 3D            CALL  writeLineHL
38D7             L2061:
38D7                     ;;testBitwiseOperators.j(294)     if (w2 | w1 == 0x133C) println (173); else println (999);
38D7             L2062:
38D7 2A 04 50            LD    HL,(05004H)
38DA             L2063:
38DA ED 5B 02 50         LD    DE,(05002H)
38DE 47                  LD    B,A
38DF 7C                  LD    A,H
38E0 B2                  OR    A,D
38E1 67                  LD    H,A
38E2 7D                  LD    A,L
38E3 B3                  OR    A,E
38E4 6F                  LD    L,A
38E5 78                  LD    A,B
38E6             L2064:
38E6 11 3C 13            LD    DE,4924
38E9 B7                  OR    A
38EA ED 52               SBC   HL,DE
38EC             L2065:
38EC C2 6F 09            JP    NZ,L2415
38EF             L2066:
38EF 3E AD               LD    A,173
38F1             L2067:
38F1 CD 74 3D            CALL  writeLineA
38F4             L2068:
38F4 C3 72 09            JP    L2418
38F7             L2069:
38F7 21 E7 03            LD    HL,999
38FA             L2070:
38FA CD 4C 3D            CALL  writeLineHL
38FD             L2071:
38FD                     ;;testBitwiseOperators.j(295)     if (w2 ^ w1 == 0x1118) println (174); else println (999);
38FD             L2072:
38FD 2A 04 50            LD    HL,(05004H)
3900             L2073:
3900 ED 5B 02 50         LD    DE,(05002H)
3904 C5                  PUSH  BC
3905 47                  LD    B,A
3906 7C                  LD    A,H
3907 AA                  XOR   A,D
3908 67                  LD    H,A
3909 7D                  LD    A,L
390A AB                  XOR   A,E
390B 6F                  LD    L,A
390C 78                  LD    A,B
390D C1                  POP   BC
390E             L2074:
390E 11 18 11            LD    DE,4376
3911 B7                  OR    A
3912 ED 52               SBC   HL,DE
3914             L2075:
3914 C2 7B 09            JP    NZ,L2427
3917             L2076:
3917 3E AE               LD    A,174
3919             L2077:
3919 CD 74 3D            CALL  writeLineA
391C             L2078:
391C C3 7F 09            JP    L2431
391F             L2079:
391F 21 E7 03            LD    HL,999
3922             L2080:
3922 CD 4C 3D            CALL  writeLineHL
3925             L2081:
3925                     ;;testBitwiseOperators.j(296)     //final var byte/var word
3925             L2082:
3925                     ;;testBitwiseOperators.j(297)     if (b1 & w2 == 0x0014) println (175); else println (999);
3925             L2083:
3925 3A 00 50            LD    A,(05000H)
3928             L2084:
3928 6F                  LD    L,A
3929 26 00               LD    H,0
392B             L2085:
392B ED 5B 04 50         LD    DE,(05004H)
392F C5                  PUSH  BC
3930 47                  LD    B,A
3931 7C                  LD    A,H
3932 A2                  AND   A,D
3933 67                  LD    H,A
3934 7D                  LD    A,L
3935 A3                  AND   A,E
3936 6F                  LD    L,A
3937 78                  LD    A,B
3938 C1                  POP   BC
3939             L2086:
3939 3E 14               LD    A,20
393B             L2087:
393B 5F                  LD    E,A
393C 16 00               LD    D,0
393E EB                  EX    DE,HL
393F B7                  OR    A
3940 ED 52               SBC   HL,DE
3942             L2088:
3942 C2 8A 09            JP    NZ,L2442
3945             L2089:
3945 3E AF               LD    A,175
3947             L2090:
3947 CD 74 3D            CALL  writeLineA
394A             L2091:
394A C3 8D 09            JP    L2445
394D             L2092:
394D 21 E7 03            LD    HL,999
3950             L2093:
3950 CD 4C 3D            CALL  writeLineHL
3953             L2094:
3953                     ;;testBitwiseOperators.j(298)     if (b1 | w2 == 0x123C) println (176); else println (999);
3953             L2095:
3953 3A 00 50            LD    A,(05000H)
3956             L2096:
3956 6F                  LD    L,A
3957 26 00               LD    H,0
3959             L2097:
3959 ED 5B 04 50         LD    DE,(05004H)
395D 47                  LD    B,A
395E 7C                  LD    A,H
395F B2                  OR    A,D
3960 67                  LD    H,A
3961 7D                  LD    A,L
3962 B3                  OR    A,E
3963 6F                  LD    L,A
3964 78                  LD    A,B
3965             L2098:
3965 11 3C 12            LD    DE,4668
3968 B7                  OR    A
3969 ED 52               SBC   HL,DE
396B             L2099:
396B C2 97 09            JP    NZ,L2455
396E             L2100:
396E 3E B0               LD    A,176
3970             L2101:
3970 CD 74 3D            CALL  writeLineA
3973             L2102:
3973 C3 9A 09            JP    L2458
3976             L2103:
3976 21 E7 03            LD    HL,999
3979             L2104:
3979 CD 4C 3D            CALL  writeLineHL
397C             L2105:
397C                     ;;testBitwiseOperators.j(299)     if (b1 ^ w2 == 0x1228) println (177); else println (999);
397C             L2106:
397C 3A 00 50            LD    A,(05000H)
397F             L2107:
397F 6F                  LD    L,A
3980 26 00               LD    H,0
3982             L2108:
3982 ED 5B 04 50         LD    DE,(05004H)
3986 C5                  PUSH  BC
3987 47                  LD    B,A
3988 7C                  LD    A,H
3989 AA                  XOR   A,D
398A 67                  LD    H,A
398B 7D                  LD    A,L
398C AB                  XOR   A,E
398D 6F                  LD    L,A
398E 78                  LD    A,B
398F C1                  POP   BC
3990             L2109:
3990 11 28 12            LD    DE,4648
3993 B7                  OR    A
3994 ED 52               SBC   HL,DE
3996             L2110:
3996 C2 A4 09            JP    NZ,L2468
3999             L2111:
3999 3E B1               LD    A,177
399B             L2112:
399B CD 74 3D            CALL  writeLineA
399E             L2113:
399E C3 A8 09            JP    L2472
39A1             L2114:
39A1 21 E7 03            LD    HL,999
39A4             L2115:
39A4 CD 4C 3D            CALL  writeLineHL
39A7             L2116:
39A7                     ;;testBitwiseOperators.j(300)     //final var word/var byte
39A7             L2117:
39A7                     ;;testBitwiseOperators.j(301)     if (w2 & b1 == 0x0014) println (178); else println (999);
39A7             L2118:
39A7 2A 04 50            LD    HL,(05004H)
39AA             L2119:
39AA ED 5B 00 50         LD    DE,(05000H)
39AE C5                  PUSH  BC
39AF 47                  LD    B,A
39B0 7C                  LD    A,H
39B1 A2                  AND   A,D
39B2 67                  LD    H,A
39B3 7D                  LD    A,L
39B4 A3                  AND   A,E
39B5 6F                  LD    L,A
39B6 78                  LD    A,B
39B7 C1                  POP   BC
39B8             L2120:
39B8 3E 14               LD    A,20
39BA             L2121:
39BA 5F                  LD    E,A
39BB 16 00               LD    D,0
39BD EB                  EX    DE,HL
39BE B7                  OR    A
39BF ED 52               SBC   HL,DE
39C1             L2122:
39C1 C2 B2 09            JP    NZ,L2482
39C4             L2123:
39C4 3E B2               LD    A,178
39C6             L2124:
39C6 CD 74 3D            CALL  writeLineA
39C9             L2125:
39C9 C3 B5 09            JP    L2485
39CC             L2126:
39CC 21 E7 03            LD    HL,999
39CF             L2127:
39CF CD 4C 3D            CALL  writeLineHL
39D2             L2128:
39D2                     ;;testBitwiseOperators.j(302)     if (w2 | b1 == 0x123C) println (179); else println (999);
39D2             L2129:
39D2 2A 04 50            LD    HL,(05004H)
39D5             L2130:
39D5 ED 5B 00 50         LD    DE,(05000H)
39D9 47                  LD    B,A
39DA 7C                  LD    A,H
39DB B2                  OR    A,D
39DC 67                  LD    H,A
39DD 7D                  LD    A,L
39DE B3                  OR    A,E
39DF 6F                  LD    L,A
39E0 78                  LD    A,B
39E1             L2131:
39E1 11 3C 12            LD    DE,4668
39E4 B7                  OR    A
39E5 ED 52               SBC   HL,DE
39E7             L2132:
39E7 C2 BE 09            JP    NZ,L2494
39EA             L2133:
39EA 3E B3               LD    A,179
39EC             L2134:
39EC CD 74 3D            CALL  writeLineA
39EF             L2135:
39EF C3 C1 09            JP    L2497
39F2             L2136:
39F2 21 E7 03            LD    HL,999
39F5             L2137:
39F5 CD 4C 3D            CALL  writeLineHL
39F8             L2138:
39F8                     ;;testBitwiseOperators.j(303)     if (w2 ^ b1 == 0x1228) println (180); else println (999);
39F8             L2139:
39F8 2A 04 50            LD    HL,(05004H)
39FB             L2140:
39FB ED 5B 00 50         LD    DE,(05000H)
39FF C5                  PUSH  BC
3A00 47                  LD    B,A
3A01 7C                  LD    A,H
3A02 AA                  XOR   A,D
3A03 67                  LD    H,A
3A04 7D                  LD    A,L
3A05 AB                  XOR   A,E
3A06 6F                  LD    L,A
3A07 78                  LD    A,B
3A08 C1                  POP   BC
3A09             L2141:
3A09 11 28 12            LD    DE,4648
3A0C B7                  OR    A
3A0D ED 52               SBC   HL,DE
3A0F             L2142:
3A0F C2 CA 09            JP    NZ,L2506
3A12             L2143:
3A12 3E B4               LD    A,180
3A14             L2144:
3A14 CD 74 3D            CALL  writeLineA
3A17             L2145:
3A17 C3 D1 09            JP    L2513
3A1A             L2146:
3A1A 21 E7 03            LD    HL,999
3A1D             L2147:
3A1D CD 4C 3D            CALL  writeLineHL
3A20             L2148:
3A20                     ;;testBitwiseOperators.j(304)   
3A20             L2149:
3A20                     ;;testBitwiseOperators.j(305)     //final var/final var
3A20             L2150:
3A20                     ;;testBitwiseOperators.j(306)     //*******************
3A20             L2151:
3A20                     ;;testBitwiseOperators.j(307)     //final var byte/final var byte
3A20             L2152:
3A20                     ;;testBitwiseOperators.j(308)     if (fb2 & fb1 == 0x04) println (181); else println (999);
3A20             L2153:
3A20 3E 07               LD    A,7
3A22             L2154:
3A22 E6 1C               AND   A,28
3A24             L2155:
3A24 D6 04               SUB   A,4
3A26             L2156:
3A26 C2 DA 09            JP    NZ,L2522
3A29             L2157:
3A29 3E B5               LD    A,181
3A2B             L2158:
3A2B CD 74 3D            CALL  writeLineA
3A2E             L2159:
3A2E C3 DD 09            JP    L2525
3A31             L2160:
3A31 21 E7 03            LD    HL,999
3A34             L2161:
3A34 CD 4C 3D            CALL  writeLineHL
3A37             L2162:
3A37                     ;;testBitwiseOperators.j(309)     if (fb2 | fb1 == 0x1F) println (182); else println (999);
3A37             L2163:
3A37 3E 07               LD    A,7
3A39             L2164:
3A39 F6 1C               OR    A,28
3A3B             L2165:
3A3B D6 1F               SUB   A,31
3A3D             L2166:
3A3D C2 E6 09            JP    NZ,L2534
3A40             L2167:
3A40 3E B6               LD    A,182
3A42             L2168:
3A42 CD 74 3D            CALL  writeLineA
3A45             L2169:
3A45 C3 E9 09            JP    L2537
3A48             L2170:
3A48 21 E7 03            LD    HL,999
3A4B             L2171:
3A4B CD 4C 3D            CALL  writeLineHL
3A4E             L2172:
3A4E                     ;;testBitwiseOperators.j(310)     if (fb2 ^ fb1 == 0x1B) println (183); else println (999);
3A4E             L2173:
3A4E 3E 07               LD    A,7
3A50             L2174:
3A50 EE 1C               XOR   A,28
3A52             L2175:
3A52 D6 1B               SUB   A,27
3A54             L2176:
3A54 C2 F2 09            JP    NZ,L2546
3A57             L2177:
3A57 3E B7               LD    A,183
3A59             L2178:
3A59 CD 74 3D            CALL  writeLineA
3A5C             L2179:
3A5C C3 F6 09            JP    L2550
3A5F             L2180:
3A5F 21 E7 03            LD    HL,999
3A62             L2181:
3A62 CD 4C 3D            CALL  writeLineHL
3A65             L2182:
3A65                     ;;testBitwiseOperators.j(311)     //final var word/final var word
3A65             L2183:
3A65                     ;;testBitwiseOperators.j(312)     if (fw2 & fw1 == 0x0224) println (184); else println (999);
3A65             L2184:
3A65 21 34 12            LD    HL,4660
3A68             L2185:
3A68 11 2C 03            LD    DE,812
3A6B C5                  PUSH  BC
3A6C 47                  LD    B,A
3A6D 7C                  LD    A,H
3A6E A2                  AND   A,D
3A6F 67                  LD    H,A
3A70 7D                  LD    A,L
3A71 A3                  AND   A,E
3A72 6F                  LD    L,A
3A73 78                  LD    A,B
3A74 C1                  POP   BC
3A75             L2186:
3A75 11 24 02            LD    DE,548
3A78 B7                  OR    A
3A79 ED 52               SBC   HL,DE
3A7B             L2187:
3A7B C2 FF 09            JP    NZ,L2559
3A7E             L2188:
3A7E 3E B8               LD    A,184
3A80             L2189:
3A80 CD 74 3D            CALL  writeLineA
3A83             L2190:
3A83 C3 02 0A            JP    L2562
3A86             L2191:
3A86 21 E7 03            LD    HL,999
3A89             L2192:
3A89 CD 4C 3D            CALL  writeLineHL
3A8C             L2193:
3A8C                     ;;testBitwiseOperators.j(313)     if (fw2 | fw1 == 0x133C) println (185); else println (999);
3A8C             L2194:
3A8C 21 34 12            LD    HL,4660
3A8F             L2195:
3A8F 11 2C 03            LD    DE,812
3A92 47                  LD    B,A
3A93 7C                  LD    A,H
3A94 B2                  OR    A,D
3A95 67                  LD    H,A
3A96 7D                  LD    A,L
3A97 B3                  OR    A,E
3A98 6F                  LD    L,A
3A99 78                  LD    A,B
3A9A             L2196:
3A9A 11 3C 13            LD    DE,4924
3A9D B7                  OR    A
3A9E ED 52               SBC   HL,DE
3AA0             L2197:
3AA0 C2 0B 0A            JP    NZ,L2571
3AA3             L2198:
3AA3 3E B9               LD    A,185
3AA5             L2199:
3AA5 CD 74 3D            CALL  writeLineA
3AA8             L2200:
3AA8 C3 0E 0A            JP    L2574
3AAB             L2201:
3AAB 21 E7 03            LD    HL,999
3AAE             L2202:
3AAE CD 4C 3D            CALL  writeLineHL
3AB1             L2203:
3AB1                     ;;testBitwiseOperators.j(314)     if (fw2 ^ fw1 == 0x1118) println (186); else println (999);
3AB1             L2204:
3AB1 21 34 12            LD    HL,4660
3AB4             L2205:
3AB4 11 2C 03            LD    DE,812
3AB7 C5                  PUSH  BC
3AB8 47                  LD    B,A
3AB9 7C                  LD    A,H
3ABA AA                  XOR   A,D
3ABB 67                  LD    H,A
3ABC 7D                  LD    A,L
3ABD AB                  XOR   A,E
3ABE 6F                  LD    L,A
3ABF 78                  LD    A,B
3AC0 C1                  POP   BC
3AC1             L2206:
3AC1 11 18 11            LD    DE,4376
3AC4 B7                  OR    A
3AC5 ED 52               SBC   HL,DE
3AC7             L2207:
3AC7 C2 17 0A            JP    NZ,L2583
3ACA             L2208:
3ACA 3E BA               LD    A,186
3ACC             L2209:
3ACC CD 74 3D            CALL  writeLineA
3ACF             L2210:
3ACF C3 1B 0A            JP    L2587
3AD2             L2211:
3AD2 21 E7 03            LD    HL,999
3AD5             L2212:
3AD5 CD 4C 3D            CALL  writeLineHL
3AD8             L2213:
3AD8                     ;;testBitwiseOperators.j(315)     //final var byte/final var word
3AD8             L2214:
3AD8                     ;;testBitwiseOperators.j(316)     if (fb1 & fw2 == 0x0014) println (187); else println (999);
3AD8             L2215:
3AD8 3E 1C               LD    A,28
3ADA             L2216:
3ADA 6F                  LD    L,A
3ADB 26 00               LD    H,0
3ADD             L2217:
3ADD 11 34 12            LD    DE,4660
3AE0 C5                  PUSH  BC
3AE1 47                  LD    B,A
3AE2 7C                  LD    A,H
3AE3 A2                  AND   A,D
3AE4 67                  LD    H,A
3AE5 7D                  LD    A,L
3AE6 A3                  AND   A,E
3AE7 6F                  LD    L,A
3AE8 78                  LD    A,B
3AE9 C1                  POP   BC
3AEA             L2218:
3AEA 3E 14               LD    A,20
3AEC             L2219:
3AEC 5F                  LD    E,A
3AED 16 00               LD    D,0
3AEF EB                  EX    DE,HL
3AF0 B7                  OR    A
3AF1 ED 52               SBC   HL,DE
3AF3             L2220:
3AF3 C2 26 0A            JP    NZ,L2598
3AF6             L2221:
3AF6 3E BB               LD    A,187
3AF8             L2222:
3AF8 CD 74 3D            CALL  writeLineA
3AFB             L2223:
3AFB C3 29 0A            JP    L2601
3AFE             L2224:
3AFE 21 E7 03            LD    HL,999
3B01             L2225:
3B01 CD 4C 3D            CALL  writeLineHL
3B04             L2226:
3B04                     ;;testBitwiseOperators.j(317)     if (fb1 | fw2 == 0x123C) println (188); else println (999);
3B04             L2227:
3B04 3E 1C               LD    A,28
3B06             L2228:
3B06 6F                  LD    L,A
3B07 26 00               LD    H,0
3B09             L2229:
3B09 11 34 12            LD    DE,4660
3B0C 47                  LD    B,A
3B0D 7C                  LD    A,H
3B0E B2                  OR    A,D
3B0F 67                  LD    H,A
3B10 7D                  LD    A,L
3B11 B3                  OR    A,E
3B12 6F                  LD    L,A
3B13 78                  LD    A,B
3B14             L2230:
3B14 11 3C 12            LD    DE,4668
3B17 B7                  OR    A
3B18 ED 52               SBC   HL,DE
3B1A             L2231:
3B1A C2 33 0A            JP    NZ,L2611
3B1D             L2232:
3B1D 3E BC               LD    A,188
3B1F             L2233:
3B1F CD 74 3D            CALL  writeLineA
3B22             L2234:
3B22 C3 36 0A            JP    L2614
3B25             L2235:
3B25 21 E7 03            LD    HL,999
3B28             L2236:
3B28 CD 4C 3D            CALL  writeLineHL
3B2B             L2237:
3B2B                     ;;testBitwiseOperators.j(318)     if (fb1 ^ fw2 == 0x1228) println (189); else println (999);
3B2B             L2238:
3B2B 3E 1C               LD    A,28
3B2D             L2239:
3B2D 6F                  LD    L,A
3B2E 26 00               LD    H,0
3B30             L2240:
3B30 11 34 12            LD    DE,4660
3B33 C5                  PUSH  BC
3B34 47                  LD    B,A
3B35 7C                  LD    A,H
3B36 AA                  XOR   A,D
3B37 67                  LD    H,A
3B38 7D                  LD    A,L
3B39 AB                  XOR   A,E
3B3A 6F                  LD    L,A
3B3B 78                  LD    A,B
3B3C C1                  POP   BC
3B3D             L2241:
3B3D 11 28 12            LD    DE,4648
3B40 B7                  OR    A
3B41 ED 52               SBC   HL,DE
3B43             L2242:
3B43 C2 40 0A            JP    NZ,L2624
3B46             L2243:
3B46 3E BD               LD    A,189
3B48             L2244:
3B48 CD 74 3D            CALL  writeLineA
3B4B             L2245:
3B4B C3 44 0A            JP    L2628
3B4E             L2246:
3B4E 21 E7 03            LD    HL,999
3B51             L2247:
3B51 CD 4C 3D            CALL  writeLineHL
3B54             L2248:
3B54                     ;;testBitwiseOperators.j(319)     //final var word/final var byte
3B54             L2249:
3B54                     ;;testBitwiseOperators.j(320)     if (fw2 & fb1 == 0x0014) println (190); else println (999);
3B54             L2250:
3B54 21 34 12            LD    HL,4660
3B57             L2251:
3B57 11 1C 00            LD    DE,28
3B5A C5                  PUSH  BC
3B5B 47                  LD    B,A
3B5C 7C                  LD    A,H
3B5D A2                  AND   A,D
3B5E 67                  LD    H,A
3B5F 7D                  LD    A,L
3B60 A3                  AND   A,E
3B61 6F                  LD    L,A
3B62 78                  LD    A,B
3B63 C1                  POP   BC
3B64             L2252:
3B64 3E 14               LD    A,20
3B66             L2253:
3B66 5F                  LD    E,A
3B67 16 00               LD    D,0
3B69 EB                  EX    DE,HL
3B6A B7                  OR    A
3B6B ED 52               SBC   HL,DE
3B6D             L2254:
3B6D C2 4E 0A            JP    NZ,L2638
3B70             L2255:
3B70 3E BE               LD    A,190
3B72             L2256:
3B72 CD 74 3D            CALL  writeLineA
3B75             L2257:
3B75 C3 51 0A            JP    L2641
3B78             L2258:
3B78 21 E7 03            LD    HL,999
3B7B             L2259:
3B7B CD 4C 3D            CALL  writeLineHL
3B7E             L2260:
3B7E                     ;;testBitwiseOperators.j(321)     if (fw2 | fb1 == 0x123C) println (191); else println (999);
3B7E             L2261:
3B7E 21 34 12            LD    HL,4660
3B81             L2262:
3B81 11 1C 00            LD    DE,28
3B84 47                  LD    B,A
3B85 7C                  LD    A,H
3B86 B2                  OR    A,D
3B87 67                  LD    H,A
3B88 7D                  LD    A,L
3B89 B3                  OR    A,E
3B8A 6F                  LD    L,A
3B8B 78                  LD    A,B
3B8C             L2263:
3B8C 11 3C 12            LD    DE,4668
3B8F B7                  OR    A
3B90 ED 52               SBC   HL,DE
3B92             L2264:
3B92 C2 5A 0A            JP    NZ,L2650
3B95             L2265:
3B95 3E BF               LD    A,191
3B97             L2266:
3B97 CD 74 3D            CALL  writeLineA
3B9A             L2267:
3B9A C3 5D 0A            JP    L2653
3B9D             L2268:
3B9D 21 E7 03            LD    HL,999
3BA0             L2269:
3BA0 CD 4C 3D            CALL  writeLineHL
3BA3             L2270:
3BA3                     ;;testBitwiseOperators.j(322)     if (fw2 ^ fb1 == 0x1228) println (192); else println (999);
3BA3             L2271:
3BA3 21 34 12            LD    HL,4660
3BA6             L2272:
3BA6 11 1C 00            LD    DE,28
3BA9 C5                  PUSH  BC
3BAA 47                  LD    B,A
3BAB 7C                  LD    A,H
3BAC AA                  XOR   A,D
3BAD 67                  LD    H,A
3BAE 7D                  LD    A,L
3BAF AB                  XOR   A,E
3BB0 6F                  LD    L,A
3BB1 78                  LD    A,B
3BB2 C1                  POP   BC
3BB3             L2273:
3BB3 11 28 12            LD    DE,4648
3BB6 B7                  OR    A
3BB7 ED 52               SBC   HL,DE
3BB9             L2274:
3BB9 C2 66 0A            JP    NZ,L2662
3BBC             L2275:
3BBC 3E C0               LD    A,192
3BBE             L2276:
3BBE CD 74 3D            CALL  writeLineA
3BC1             L2277:
3BC1 C3 6A 0A            JP    L2666
3BC4             L2278:
3BC4 21 E7 03            LD    HL,999
3BC7             L2279:
3BC7 CD 4C 3D            CALL  writeLineHL
3BCA             L2280:
3BCA                     ;;testBitwiseOperators.j(323)   
3BCA             L2281:
3BCA                     ;;testBitwiseOperators.j(324)     println("Klaar");
3BCA             L2282:
3BCA 21 D5 3B            LD    HL,L2289
3BCD             L2283:
3BCD CD F9 3B            CALL  writeLineStr
3BD0             L2284:
3BD0                     ;;testBitwiseOperators.j(325)   }
3BD0             L2285:
3BD0 DD F9               LD    SP,IX
3BD2             L2286:
3BD2 DD E1               POP   IX
3BD4             L2287:
3BD4 C9                  return
3BD5             L2288:
3BD5                     ;;testBitwiseOperators.j(326) }
3BD5             L2289:
3BD5 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
3BDB             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
3BDB             STAT0   equ 004H          ;147 ASCI0 Status register.
3BDB             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
3BDB             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
3BDB             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
3BDB             TDRE    equ 1             ;STAT0->Tx data register empty bit.
3BDB             OVERRUN equ 6             ;STAT0->OVERRUN bit.
3BDB             RDRF    equ 7             ;STAT0->Rx data register full bit.
3BDB             ;****************
3BDB             ;getChar
3BDB             ;Check if an input character from ASCI0 is available.
3BDB             ;  IN:  none
3BDB             ;  OUT: F: ZERO flag set if no character is available.
3BDB             ;          ZERO flag reset if a character is available.
3BDB             ;       A : character from ASCI0, if available.
3BDB             ;  USES:AF
3BDB             ;****************
3BDB             getChar:
3BDB ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
3BDE CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
3BE0 20 07               JR    NZ,getChar1 ;-yes: reset error flags
3BE2 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
3BE4 C8                  RET   Z           ;-no: return without a character
3BE5 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
3BE8 C9                  RET
3BE9             getChar1:
3BE9 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
3BEC CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
3BEE ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
3BF1 AF                  XOR   A,A
3BF2 C9                  RET               ;return without a character
3BF3             ;****************
3BF3             ;putMsg
3BF3             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
3BF3             ;  IN:  none.
3BF3             ;  OUT: none.
3BF3             ;  USES:none.
3BF3             ;****************
3BF3             putMsg:
3BF3 E3                  EX    (SP),HL     ;save HL and load return address into HL.
3BF4 CD 00 3C            CALL  writeStr
3BF7 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
3BF8 C9                  RET
3BF9             ;****************
3BF9             ;writeLineStr
3BF9             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
3BF9             ;  IN:  HL:address of zero terminated string to be printed.
3BF9             ;  OUT: none.
3BF9             ;  USES:HL (point to byte after zero terminated string)
3BF9             ;****************
3BF9             writeLineStr:
3BF9 CD 00 3C            CALL  writeStr
3BFC CD 1C 3C            CALL  putCRLF
3BFF C9                  RET
3C00             ;****************
3C00             ;writeStr
3C00             ;Print via ASCI0 a zero terminated string, pointed to by HL.
3C00             ;  IN:  HL:address of zero terminated string to be printed.
3C00             ;  OUT: none.
3C00             ;  USES:HL (point to byte after zero terminated string)
3C00             ;****************
3C00             writeStr:
3C00 F5                  PUSH  AF          ;save registers
3C01             putStr1:
3C01 7E                  LD    A,(HL)      ;get next character
3C02 23                  INC   HL
3C03 B7                  OR    A,A         ;is it zer0?
3C04 28 05               JR    Z,putStr2   ;yes ->return
3C06 CD 0F 3C            CALL  putChar     ;no->put it to ASCI0
3C09 18 F6               JR    putStr1
3C0B             putStr2:
3C0B F1                  POP   AF
3C0C C9                  RET
3C0D             ;****************
3C0D             ;putSpace
3C0D             ;Send a space character to ASCI0
3C0D             ;  IN:  none.
3C0D             ;  OUT: none.
3C0D             ;  USES:AF
3C0D             ;****************
3C0D             putSpace:
3C0D 3E 20               LD    A,' '       ;load space and continue with putChar.
3C0F             ;****************
3C0F             ;putChar
3C0F             ;Send one character to ASCI0.
3C0F             ;  IN:  A = character
3C0F             ;  OUT: none.
3C0F             ;  USES:none.
3C0F             ;****************
3C0F             putChar:
3C0F F5                  PUSH  AF          ;send the character via ASCI0
3C10             putChar1:
3C10 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
3C13 CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
3C15 28 F9               JR    Z,putChar1
3C17 F1                  POP   AF          ;restore AF registers
3C18 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
3C1B C9                  RET
3C1C             ;****************
3C1C             ;putCRLF
3C1C             ;Send CR and LF to ASCI0
3C1C             ;  IN:  none.
3C1C             ;  OUT: none.
3C1C             ;  USES:none.
3C1C             ;****************
3C1C             putCRLF:
3C1C F5                  PUSH  AF
3C1D 3E 0D               LD    A,'\r'       ;print carriage return
3C1F CD 0F 3C            CALL  putChar
3C22 3E 0A               LD    A,'\n'       ;print line feed
3C24 CD 0F 3C            CALL  putChar
3C27 F1                  POP   AF
3C28 C9                  RET
3C29             ;****************
3C29             ;putErase
3C29             ;Erase the latest character at ASCI0
3C29             ;  IN:  none.
3C29             ;  OUT: none.
3C29             ;  USES:AF
3C29             ;****************
3C29             putErase:
3C29 3E 08               LD    A,'\b'       ;print backspace
3C2B CD 0F 3C            CALL  putChar
3C2E CD 0D 3C            CALL  putSpace    ;print space (erase character)
3C31 3E 08               LD    A,'\b'      ;print backspace
3C33 18 DA               JR    putChar
3C35             ;****************
3C35             ;putBell
3C35             ;Send a Bell character to ASCI0
3C35             ;  IN:  none.
3C35             ;  OUT: none.
3C35             ;  USES:AF
3C35             ;****************
3C35             putBell:
3C35 3E 07               LD    A,07        ;ring the bell at ASCI0
3C37 18 D6               JR    putChar
3C39             ;****************
3C39             ;putHexHL
3C39             ;Print HL register pair as 4 hex digits
3C39             ;  IN:  HL = word to be printed.
3C39             ;  OUT: none.
3C39             ;  USES:none.
3C39             ;****************
3C39             putHexHL:
3C39 F5                  PUSH  AF          ;save used registers
3C3A 7C                  LD    A,H         ;print H as 2 hex digits
3C3B CD 44 3C            CALL  putHexA
3C3E 7D                  LD    A,L         ;print L as 2 hex digits
3C3F CD 44 3C            CALL  putHexA
3C42 F1                  POP   AF          ;restore used registers
3C43 C9                  RET
3C44             ;****************
3C44             ;putHexA
3C44             ;Print A register as 2 hex digits
3C44             ;  IN:  A = byte to be printed
3C44             ;  OUT: none.
3C44             ;  USES:none.
3C44             ;****************
3C44             putHexA:
3C44 F5                  PUSH  AF          ;save input
3C45 1F                  RRA               ;shift upper nibble to the right
3C46 1F                  RRA
3C47 1F                  RRA
3C48 1F                  RRA
3C49 CD 4D 3C            CALL  putHexA1    ;print upper nibble
3C4C F1                  POP   AF          ;restore input & print lower nibble
3C4D             putHexA1:
3C4D F5                  PUSH  AF          ;save input
3C4E E6 0F               AND   A,00FH      ;mask lower nibble
3C50 C6 30               ADD   A,'0'       ;convert to hex digit
3C52 FE 3A               CP    A,'9'+1
3C54 38 02               JR    C,putHexA2
3C56 C6 07               ADD   A,07
3C58             putHexA2:
3C58 CD 0F 3C            CALL  putChar
3C5B F1                  POP   AF          ;restore input
3C5C C9                  RET               ;and return
3C5D             ;****************
3C5D             ;mul16
3C5D             ;16 by 16 bit unsigned multiplication with 16 bit result.
3C5D             ;  IN:  HL = operand 1
3C5D             ;       DE = operand 2
3C5D             ;  OUT: HL = HL * DE low part
3C5D             ;  USES:DE
3C5D             ;  Size   25 bytes
3C5D             ;  Time  160 cycles
3C5D             ;****************
3C5D             mul16:
3C5D                     ;HL = HL * DE
3C5D                     ;        H  L
3C5D                     ;        D  E
3C5D                     ;    --------*
3C5D                     ;          EL
3C5D                     ;       EH  0
3C5D                     ;       DL  0
3C5D                     ; -----------+
3C5D                     ;        R  S
3C5D                     ;S = ELlow
3C5D                     ;R = ELhigh+EHlow+DLlow
3C5D C5                  PUSH  BC          ;11  11 save BC
3C5E 44                  LD    B,H         ; 4  15 copy HL to BC
3C5F 4D                  LD    C,L         ; 4  19
3C60 63                  LD    H,E         ; 4  23 HL contains EL
3C61 ED 6C               MLT   HL          ;17  40
3C63 E5                  PUSH  HL          ;11  51
3C64 63                  LD    H,E         ; 4  55 HL contains EH aka EB
3C65 68                  LD    L,B         ; 4  59
3C66 ED 6C               MLT   HL          ;17  76
3C68 45                  LD    B,L         ; 4  80 save EHlow in B
3C69 62                  LD    H,D         ; 4  84 HL contains DL aka DC
3C6A 69                  LD    L,C         ; 4  88
3C6B ED 6C               MLT   HL          ;17 105
3C6D 55                  LD    D,L         ; 4 109 DLlow into DE
3C6E 1E 00               LD    E,0         ; 6 115
3C70 E1                  POP   HL          ; 9 124 add EL+DElow
3C71 19                  ADD   HL,DE       ; 7 131
3C72 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
3C73 19                  ADD   HL,DE       ; 7 142
3C74 C1                  POP   BC          ; 9 151 restore BC
3C75 C9                  RET               ; 9 160
3C76             ;****************
3C76             ;mul16_10
3C76             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
3C76             ;  IN:  HL = operand
3C76             ;  OUT: HL = HL * 10; low part
3C76             ;  USES:Flags
3C76             ;  Size   9 bytes
3C76             ;  Time   65 cycles
3C76             ;****************
3C76             mul16_10:
3C76 D5                  PUSH  DE          ;11 11
3C77 54                  LD    D,H         ; 4 15
3C78 5D                  LD    E,L         ; 4 19
3C79 29                  ADD   HL,HL       ; 7 26 times 2
3C7A 29                  ADD   HL,HL       ; 7 33 times 4
3C7B 19                  ADD   HL,DE       ; 7 40 times 5
3C7C 29                  ADD   HL,HL       ; 7 47 times 10
3C7D D1                  POP   DE          ; 9 56
3C7E C9                  RET               ; 9 65
3C7F             ;****************
3C7F             ;mul16_8
3C7F             ;16 by 8 bit unsigned multiplication with 16 bit result.
3C7F             ;  IN:  HL = operand 1
3C7F             ;        A = operand 2
3C7F             ;  OUT: HL = HL * A low part
3C7F             ;  USES:AF
3C7F             ;  Size   .. bytes
3C7F             ;  Time  ... cycles
3C7F             ;****************
3C7F             mul16_8:
3C7F                     ;HL = HL * A
3C7F                     ;        H  L
3C7F                     ;           A
3C7F                     ;    --------*
3C7F                     ;          AL
3C7F                     ;       AH  0
3C7F                     ; -----------+
3C7F                     ;        R  S
3C7F                     ;S = ALlow
3C7F                     ;R = ALhigh+AHlow
3C7F C5                  PUSH  BC          ;11  11 save BC
3C80 44                  LD    B,H         ; 4  15
3C81 4F                  LD    C,A         ; 4  19
3C82 67                  LD    H,A         ; 4  23
3C83 ED 6C               MLT   HL          ;17  40 HL = AL
3C85 ED 4C               MLT   BC          ;17  57 BC = AH
3C87 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
3C88 81                  ADD   A,C         ; 4  65
3C89 67                  LD    H,A         ; 4  69
3C8A C1                  POP   BC          ; 9  78 | 289 restore BC
3C8B C9                  RET               ; 9  87 | 307
3C8C             ;****************
3C8C             ;mul1632
3C8C             ;16 by 16 bit unsigned multiplication with 32 bit result.
3C8C             ;  IN:  HL = operand 1
3C8C             ;       DE = operand 2
3C8C             ;  OUT: HL = HL * DE low part
3C8C             ;       DE = HL * DE high part
3C8C             ;  USES:-
3C8C             ;  Size 49 bytes
3C8C             ;  Time between 303 en 307 cycles
3C8C             ;****************
3C8C             mul1632:
3C8C                     ;HL = HL * DE
3C8C                     ;        H  L
3C8C                     ;        D  E
3C8C                     ;    --------*
3C8C                     ;          EL
3C8C                     ;       EH  0
3C8C                     ;       DL  0
3C8C                     ;    DH  0  0
3C8C                     ; -----------+
3C8C                     ;  P  Q  R  S
3C8C                     ;S = ELlow
3C8C                     ;R = ELhigh+EHlow+DLlow
3C8C                     ;Q = DHlow+EHhigh+DLhigh
3C8C                     ;P = DHhigh
3C8C F5                  PUSH  AF          ;11  11 save AF
3C8D C5                  PUSH  BC          ;11  22 save BC
3C8E 44                  LD    B,H         ; 4  26
3C8F 4D                  LD    C,L         ; 4  30
3C90 62                  LD    H,D         ; 4  34 HL contains DH aka DB
3C91 68                  LD    L,B         ; 4  38
3C92 ED 6C               MLT   HL          ;17  55
3C94 E5                  PUSH  HL          ;11  66
3C95 62                  LD    H,D         ; 4  70 HL contains DL aka DC
3C96 69                  LD    L,C         ; 4  74
3C97 ED 6C               MLT   HL          ;17  91
3C99 E5                  PUSH  HL          ;11 102
3C9A 63                  LD    H,E         ; 4 106 HL contains EH aka EB
3C9B 68                  LD    L,B         ; 4 110
3C9C ED 6C               MLT   HL          ;17 127
3C9E E5                  PUSH  HL          ;11 138
3C9F 63                  LD    H,E         ; 4 142 HL contains EL aka EC
3CA0 69                  LD    L,C         ; 4 146
3CA1 ED 6C               MLT   HL          ;17 163
3CA3 D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
3CA4 06 00               LD    B,0         ; 6 178
3CA6 4A                  LD    C,D         ; 4 182 ..C=EHhigh
3CA7 53                  LD    D,E         ; 4 186 ..D=EHlow
3CA8 1E 00               LD    E,0         ; 6 192
3CAA 19                  ADD   HL,DE       ; 7 199
3CAB 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
3CAD 03                  INC   BC          ;         4 209
3CAE             mul16321:
3CAE D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
3CAF 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
3CB0 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
3CB1 19                  ADD   HL,DE       ; 7 231 | 233
3CB2 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
3CB4 03                  INC   BC          ;         4 243
3CB5             mul16322:
3CB5                                       ;HL=RS=EL+EH0+DL0
3CB5                                       ;C=EHhigh
3CB5                                       ;A=DLhigh
3CB5                                       ;E=0
3CB5 EB                  EX    DE,HL       ; 3 242 | 246
3CB6 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
3CB7 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
3CB8 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
3CB9 C1                  POP   BC          ; 9 266 | 270
3CBA 09                  ADD   HL,BC       ; 7 273 | 277
3CBB EB                  EX    DE,HL       ; 3 276 | 280
3CBC                                       ;D=P=DHhigh
3CBC                                       ;E=Q=DHlow+EHhigh+DLhigh
3CBC                                       ;H=R=ELhigh+EHlow+DLlow
3CBC                                       ;L=S=ELlow
3CBC C1                  POP   BC          ; 9 285 | 289 restore BC
3CBD F1                  POP   AF          ; 9 294 | 298 restore AF
3CBE C9                  RET               ; 9 303 | 307
3CBF             ;****************
3CBF             ;mul16S
3CBF             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
3CBF             ;  IN:  HL = operand 1
3CBF             ;       DE = operand 2
3CBF             ;  OUT: DE = HL * DE high part
3CBF             ;       HL = HL * DE low part
3CBF             ;  USES:none.
3CBF             ;  Size 26 bytes
3CBF             ;  Time between 726 en 998 cycles
3CBF             ;****************
3CBF             mul16S:
3CBF F5                  PUSH  AF          ;11  11 save AF
3CC0 C5                  PUSH  BC          ;11  22 save BC
3CC1 44                  LD    B,H         ; 4  26
3CC2 4D                  LD    C,L         ; 4  30
3CC3 21 00 00            LD    HL,0        ; 9  39
3CC6 3E 10               LD    A,16        ; 6  45
3CC8             mul16S1:
3CC8 29                  ADD   HL,HL       ;16*7=112 157
3CC9 CB 13               RL    E           ;16*7=112 269
3CCB CB 12               RL    D           ;16*7=112 381
3CCD 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
3CCF 09                  ADD   HL,BC       ;             16*7=112 589
3CD0 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
3CD2 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
3CD3             mul16S2:
3CD3 3D                  DEC   A           ;16*4=64    573 | 845 | 813
3CD4 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
3CD6 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
3CD7 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
3CD8 C9                  RET               ; 9         726 | 998 | 966
3CD9             ;****************
3CD9             ;div16
3CD9             ;16 by 16 bit unsigned division.
3CD9             ;  IN:  HL = dividend
3CD9             ;       DE = divisor
3CD9             ;  OUT: HL = quotient
3CD9             ;       DE = remainder
3CD9             ;  USES:-
3CD9             ;  Size   32 bytes
3CD9             ;  Time   between 1073 en 1121 cycles
3CD9             ;pseudo code:
3CD9             ;T = AC = dividend
3CD9             ;D = DE = divisor
3CD9             ;Q = AC = quotient = 0
3CD9             ;R = HL = remainder = 0
3CD9             ;invariante betrekking:
3CD9             ; D/T\Q     
3CD9             ;   R       
3CD9             ; T = QD + R
3CD9             ; T <= 2^N  
3CD9             ;
3CD9             ; D/T'.RT\Q'      
3CD9             ;   R'             
3CD9             ; RT <= 2^N        
3CD9             ; 0<=k<=N          
3CD9             ; RT = T % 2^k     
3CD9             ; T' = (T-RT) / 2^k
3CD9             ; Q' = T' / D      
3CD9             ; R' = T' % D      
3CD9             ;
3CD9             ;for (i=16; i>0; i--) {
3CD9             ;  T = T * 2 (remember MSB in carry)
3CD9             ;  R = R * 2 + carry
3CD9             ;  Q = Q * 2
3CD9             ;  if (R >= D) {
3CD9             ;    R = R - D;
3CD9             ;    Q++;
3CD9             ;  }
3CD9             ;}
3CD9             ;return Q (in HL) and R (in DE)
3CD9             ;****************
3CD9             div16:
3CD9 F5                  PUSH  AF          ;11  11 save registers used
3CDA C5                  PUSH  BC          ;11  22
3CDB 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
3CDC 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
3CDD 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
3CE0 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
3CE2             div16_1:
3CE2 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
3CE4 CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
3CE6 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
3CE8 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
3CE9 ED 52               SBC   HL,DE       ;16*10=160 653
3CEB 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
3CED 0C                  INC   C           ;              16*4= 64 813   Q++
3CEE 18 01               JR    div16_3     ;              16*8=128 941
3CF0             div16_2:
3CF0 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
3CF1             div16_3:
3CF1 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
3CF3 EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
3CF4 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
3CF5 69                  LD    L,C         ; 4 1046 | 1094
3CF6 C1                  POP   BC          ; 9 1055 | 1103
3CF7 F1                  POP   AF          ; 9 1064 | 1112
3CF8 C9                  RET               ; 9 1073 | 1121
3CF9             ;****************
3CF9             ;div16_8
3CF9             ;16 by 8 bit unsigned division.
3CF9             ;  IN:  HL = dividend
3CF9             ;       A  = divisor
3CF9             ;  OUT: HL = quotient
3CF9             ;       A  = remainder
3CF9             ;  USES:F(lags)
3CF9             ;  Size 18 bytes
3CF9             ;  Time between 601 en 697 cycles
3CF9             ;****************
3CF9             div16_8:
3CF9 C5                  PUSH  BC          ;11 11 save registers used
3CFA 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
3CFC 4F                  LD    C,A         ; 4 21 move divisor to C
3CFD AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
3CFE             div16_82:
3CFE 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
3CFF CB 17               RL    A           ;16*7=112 249
3D01 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
3D02 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
3D04 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
3D05 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
3D06             div16_83:
3D06 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
3D08 C1                  POP   BC          ;9 592 688
3D09 C9                  RET               ;9 601 697
3D0A             ;****************
3D0A             ;div8
3D0A             ;8 by 8 bit unsigned division.
3D0A             ;  IN:  A = dividend
3D0A             ;       C = divisor
3D0A             ;  OUT: A = quotient
3D0A             ;       C = remainder
3D0A             ;  USES:F(lags)
3D0A             ;  Size 26 bytes
3D0A             ;  Time between 411 and 459 cycles
3D0A             ;****************
3D0A             ;pseudo code:
3D0A             ;T = dividend
3D0A             ;D = divisor
3D0A             ;Q = quotient = 0
3D0A             ;R = remainder = 0
3D0A             ;invariante betrekking:
3D0A             ; T = QD + R
3D0A             ; T <= 2^8  
3D0A             ;
3D0A             ; D/T'.RT\Q'      
3D0A             ;   R'             
3D0A             ; RT <= 2^8        
3D0A             ; 0<=k<=8          
3D0A             ; RT = T % 2^k     
3D0A             ; T' = (T-RT) / 2^k
3D0A             ; Q' = T' / D      
3D0A             ; R' = T' % D      
3D0A             ;
3D0A             ;for (i=8; i>0; i--) {
3D0A             ;  T = T * 2 (remember MSB in carry)
3D0A             ;  R = R * 2 + carry
3D0A             ;  Q = Q * 2
3D0A             ;  if (R >= D) {
3D0A             ;    R = R - D;
3D0A             ;    Q++;
3D0A             ;  }
3D0A             ;}
3D0A             ;return Q (in A) and R (in C)
3D0A             ;****************
3D0A             ;E = T = dividend
3D0A             ;C = D = divisor
3D0A             ;D = Q = quotient
3D0A             ;A = R = remainder
3D0A             ;****************
3D0A             ;  IN:  A = dividend
3D0A             ;       C  = divisor
3D0A             div8:
3D0A D5                  PUSH  DE          ;11 11 save registers used
3D0B C5                  PUSH  BC          ;11 22 save registers used
3D0C 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
3D0E 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
3D10 5F                  LD    E,A         ; 4 38 E = T = dividend
3D11 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
3D12             div8_1:
3D12 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
3D14 CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
3D16 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
3D18 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
3D19 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
3D1B 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
3D1C 14                  INC   D           ;           8*4=32 354   Q[D]++;
3D1D             div8_2:           ;                      }
3D1D 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
3D1F C1                  POP   BC          ;9        385 433
3D20 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
3D21 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
3D22 D1                  POP   DE          ;9        402 450
3D23 C9                  RET               ;9        411 459
3D24             ;****************
3D24             ;div8_16
3D24             ;8 by 16 bit unsigned division.
3D24             ;  IN:  A = dividend
3D24             ;       HL = divisor
3D24             ;  OUT: A = quotient
3D24             ;       C = remainder
3D24             ;  USES:F(lags)
3D24             ;  Size 13 bytes (plus dependency on div8)
3D24             ;  Time 31 or between 436 and 484 cycles
3D24             ;****************
3D24             ;invariante betrekking:
3D24             ; T = dividend
3D24             ; D = divisor
3D24             ; Q = quotient
3D24             ; R = remainder
3D24             ; T = QD + R
3D24             ;pseudo code:
3D24             ; if D >= 256 {
3D24             ;   R = T
3D24             ;   Q = 0
3D24             ; } else {
3D24             ;   R = T/D (using div8)
3D24             ;   Q = T%D (using div8)
3D24             ; }
3D24             ;****************
3D24             
3D24             
3D24             div8_16:
3D24 4F                  LD    C,A         ;  4  4         save dividend(A) in C
3D25 7C                  LD    A,H         ;  4  8         if D >= 256 {
3D26 B7                  OR    A,A         ;  4 12
3D27 28 02               JR    Z,div8_161  ;  6 18  8  20
3D29 AF                  XOR   A,A         ;  4 22           R = T;
3D2A C9                  RET               ;  9 31           Q = 0;
3D2B             div8_161:                     ;               } else {
3D2B 79                  LD    A,C         ;        4  24    restore dividend into A
3D2C 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
3D2D CD 0A 3D            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
3D30 C9                  RET               ; 9  436/484    }
3D31             ;****************
3D31             ;read
3D31             ;read a 16 bit unsigned number from the input
3D31             ;  IN:  none
3D31             ;  OUT: HL = 16 bit unsigned number
3D31             ;  USES:-
3D31             ;****************
3D31             read:
3D31 F5                  PUSH  AF
3D32 21 00 00            LD    HL,0        ;result = 0;
3D35             read1:
3D35 CD DB 3B            CALL  getChar     ;check if a character is available.
3D38 28 FB               JR    Z,read1     ;-no: wait for it.
3D3A FE 0D               CP    A,'\r'      ;return if char == Carriage Return
3D3C 28 0C               JR    Z,read2
3D3E CD 76 3C            CALL  mul16_10    ;result *= 10;
3D41 D6 30               SUB   A,'0'       ;digit = char - '0';
3D43 85                  ADD   A,L         ;result += digit;
3D44 6F                  LD    L,A
3D45 30 EE               JR    NC,read1     ;get next character
3D47 24                  INC   H
3D48 18 EB               JR    read1        ;get next character
3D4A             read2:
3D4A F1                  POP   AF
3D4B C9                  RET
3D4C             ;****************
3D4C             ;writeLineHL
3D4C             ;write a 16 bit unsigned number to the output, followed by a carriage return
3D4C             ;  IN:  HL = 16 bit unsigned number
3D4C             ;  OUT: none
3D4C             ;  USES:HL
3D4C             ;****************
3D4C             writeLineHL:
3D4C CD 53 3D            CALL  writeHL
3D4F CD 1C 3C            CALL  putCRLF
3D52 C9                  RET
3D53             ;****************
3D53             ;writeHL
3D53             ;write a 16 bit unsigned number to the output
3D53             ;  IN:  HL = 16 bit unsigned number
3D53             ;  OUT: none
3D53             ;  USES:HL
3D53             ;****************
3D53             writeHL:
3D53 C5                  PUSH  BC          ;save registers used
3D54 F5                  PUSH  AF
3D55 06 00               LD    B,0         ;number of digits on stack
3D57 7C                  LD    A,H         ;is HL=0?
3D58 B5                  OR    A,L
3D59 20 03               JR    NZ,writeHL1
3D5B 04                  INC   B           ;write a single digit 0
3D5C 18 0C               JR    writeHL3
3D5E             writeHL1:
3D5E 3E 0A               LD    A,10        ;divide HL by 10
3D60 CD F9 3C            CALL  div16_8
3D63 F5                  PUSH  AF          ;put remainder on stack
3D64 04                  INC   B
3D65 7C                  LD    A,H         ;is quotient 0?
3D66 B5                  OR    A,L
3D67 20 F5               JR    NZ,writeHL1
3D69             writeHL2:
3D69 F1                  POP   AF          ;write digit
3D6A             writeHL3:
3D6A C6 30               ADD   A,'0'
3D6C CD 0F 3C            CALL  putChar
3D6F 10 F8               DJNZ  writeHL2
3D71 F1                  POP   AF          ;restore registers used
3D72 C1                  POP   BC
3D73 C9                  RET
3D74             ;****************
3D74             ;writeLineA
3D74             ;write an 8-bit unsigned number to the output, followed by a carriage return
3D74             ;  IN:  A = 8-bit unsigned number
3D74             ;  OUT: none
3D74             ;  USES:none
3D74             ;****************
3D74             writeLineA:
3D74 CD 7B 3D            CALL  writeA
3D77 CD 1C 3C            CALL  putCRLF
3D7A C9                  RET
3D7B             ;****************
3D7B             ;writeA
3D7B             ;write an 8-bit unsigned number to the output
3D7B             ;  IN:  A = 8-bit unsigned number
3D7B             ;  OUT: none
3D7B             ;  USES:none
3D7B             ;****************
3D7B             writeA:
3D7B E5                  PUSH  HL          ;save registers used
3D7C 26 00               LD    H,0
3D7E 6F                  LD    L,A
3D7F CD 53 3D            CALL  writeHL
3D82 E1                  POP   HL
3D83 C9                  RET

Error: undefined label: L2628
Error: undefined label: L2506
Error: undefined label: L2624
Error: undefined label: L2638
Error: undefined label: L2513
Error: undefined label: L2601
Error: undefined label: L2614
Error: undefined label: L2611
Error: undefined label: L2662
Error: undefined label: L2306
Error: undefined label: L2427
Error: undefined label: L2666
Error: undefined label: L2546
Error: undefined label: L2310
Error: undefined label: L2431
Error: undefined label: L2550
Error: undefined label: L2559
Error: undefined label: L2522
Error: undefined label: L2641
Error: undefined label: L2406
Error: undefined label: L2525
Error: undefined label: L2403
Error: undefined label: L2653
Error: undefined label: L2650
Error: undefined label: L2418
Error: undefined label: L2415
Error: undefined label: L2537
Error: undefined label: L2534
Error: undefined label: L2587
Error: undefined label: L2583
Error: undefined label: L2468
Error: undefined label: L2598
Error: undefined label: L2357
Error: undefined label: L2350
Error: undefined label: L2472
Error: undefined label: L2445
Error: undefined label: L2442
Error: undefined label: L2322
Error: undefined label: L2562
Error: undefined label: L2325
Error: undefined label: L2455
Error: undefined label: L2574
Error: undefined label: L2571
Error: undefined label: L2339
Error: undefined label: L2336
Error: undefined label: L2458
Error: undefined label: L2381
Error: undefined label: L2390
Error: undefined label: L2394
Error: undefined label: L2366
Error: undefined label: L2485
Error: undefined label: L2482
Error: undefined label: L2369
Error: undefined label: L2378
Error: undefined label: L2497
Error: undefined label: L2494
Error: undefined label: L2292
Error: undefined label: L2295

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20E4 :
   L1000 = 2BD2 :
   L1001 = 2BD5 :
   L1002 = 2BD8 :
   L1003 = 2BDB :
   L1004 = 2BDB :
   L1005 = 2BDB :
   L1006 = 2BDE : 2A27
   L1007 = 2BE2 :
   L1008 = 2BF0 :
   L1009 = 2BF2 : 2A2F
    L101 = 20E4 : 20B4
   L1010 = 2BF9 :
   L1011 = 2BFC :
   L1012 = 2BFE :
   L1013 = 2C01 :
   L1014 = 2C04 :
   L1015 = 2C07 :
   L1016 = 2C0A :
   L1017 = 2C0A :
   L1018 = 2C0D :
   L1019 = 2C11 :
    L102 = 20E4 :
   L1020 = 2C1D :
   L1021 = 2C23 : 2A4B
   L1022 = 2C26 :
   L1023 = 2C28 :
   L1024 = 2C2B : 2A53
   L1025 = 2C2E :
   L1026 = 2C31 :
   L1027 = 2C34 :
   L1028 = 2C34 :
   L1029 = 2C37 :
    L103 = 20E4 :
   L1030 = 2C3B :
   L1031 = 2C49 :
   L1032 = 2C4F :
   L1033 = 2C52 :
   L1034 = 2C54 :
   L1035 = 2C57 :
   L1036 = 2C5A : 2A6F
   L1037 = 2C5D :
   L1038 = 2C60 :
   L1039 = 2C60 :
    L104 = 20E6 :
   L1040 = 2C60 :
   L1041 = 2C60 :
   L1042 = 2C60 :
   L1043 = 2C60 : 2A77
   L1044 = 2C62 :
   L1045 = 2C64 :
   L1046 = 2C66 :
   L1047 = 2C68 :
   L1048 = 2C6B :
   L1049 = 2C6D :
    L105 = 20E9 :
   L1050 = 2C70 :
   L1051 = 2C73 :
   L1052 = 2C76 :
   L1053 = 2C79 : 2A8B
   L1054 = 2C79 :
   L1055 = 2C7B :
   L1056 = 2C7D : 2A93
   L1057 = 2C7F :
   L1058 = 2C81 :
   L1059 = 2C84 :
    L106 = 20F6 :
   L1060 = 2C86 :
   L1061 = 2C89 :
   L1062 = 2C8C :
   L1063 = 2C8F :
   L1064 = 2C92 :
   L1065 = 2C92 :
   L1066 = 2C94 : 2AA7
   L1067 = 2C96 :
   L1068 = 2C98 :
   L1069 = 2C9A : 2AAF
    L107 = 20F8 :
   L1070 = 2C9D :
   L1071 = 2C9F :
   L1072 = 2CA2 :
   L1073 = 2CA5 :
   L1074 = 2CA8 :
   L1075 = 2CAB :
   L1076 = 2CAB :
   L1077 = 2CAB :
   L1078 = 2CAE :
   L1079 = 2CB2 : 2AC3
    L108 = 20FF :
   L1080 = 2CBF :
   L1081 = 2CC5 :
   L1082 = 2CC8 :
   L1083 = 2CCA : 2ACB
   L1084 = 2CCD :
   L1085 = 2CD0 :
   L1086 = 2CD3 :
   L1087 = 2CD6 :
   L1088 = 2CD6 :
   L1089 = 2CD9 :
    L109 = 2102 :
   L1090 = 2CDD :
   L1091 = 2CE8 :
   L1092 = 2CEE :
   L1093 = 2CF1 : 2AEF
   L1094 = 2CF3 :
   L1095 = 2CF6 :
   L1096 = 2CF9 : 2AF7
   L1097 = 2CFC :
   L1098 = 2CFF :
   L1099 = 2CFF :
     L11 = 2013 :
    L110 = 2104 : 20D3
   L1100 = 2D02 :
   L1101 = 2D06 :
   L1102 = 2D13 :
   L1103 = 2D19 :
   L1104 = 2D1C :
   L1105 = 2D1E :
   L1106 = 2D21 : 2B19
   L1107 = 2D24 :
   L1108 = 2D27 :
   L1109 = 2D2A : 2B21
    L111 = 2107 :
   L1110 = 2D2A :
   L1111 = 2D2A :
   L1112 = 2D2C :
   L1113 = 2D2E :
   L1114 = 2D31 :
   L1115 = 2D3E :
   L1116 = 2D40 :
   L1117 = 2D47 :
   L1118 = 2D4A :
   L1119 = 2D4C : 2B45
    L112 = 210A :
   L1120 = 2D4F :
   L1121 = 2D52 :
   L1122 = 2D55 :
   L1123 = 2D58 : 2B4D
   L1124 = 2D58 :
   L1125 = 2D5A :
   L1126 = 2D5C :
   L1127 = 2D5F :
   L1128 = 2D6A :
   L1129 = 2D70 :
    L113 = 210D :
   L1130 = 2D73 :
   L1131 = 2D75 :
   L1132 = 2D78 :
   L1133 = 2D7B :
   L1134 = 2D7E :
   L1135 = 2D81 : 2B74
   L1136 = 2D81 :
   L1137 = 2D83 :
   L1138 = 2D85 : 2B7C
   L1139 = 2D88 :
    L114 = 2110 :
   L1140 = 2D95 :
   L1141 = 2D9B :
   L1142 = 2D9E :
   L1143 = 2DA0 :
   L1144 = 2DA3 :
   L1145 = 2DA6 :
   L1146 = 2DA9 :
   L1147 = 2DAC :
   L1148 = 2DAC :
   L1149 = 2DAC : 2B9E
    L115 = 2110 : 20DB
   L1150 = 2DAF :
   L1151 = 2DB3 :
   L1152 = 2DC0 : 2BA6
   L1153 = 2DC2 :
   L1154 = 2DC9 :
   L1155 = 2DCC :
   L1156 = 2DCE :
   L1157 = 2DD1 :
   L1158 = 2DD4 :
   L1159 = 2DD7 :
    L116 = 2112 :
   L1160 = 2DDA :
   L1161 = 2DDA :
   L1162 = 2DDD :
   L1163 = 2DE1 : 2BCA
   L1164 = 2DEC :
   L1165 = 2DF2 :
   L1166 = 2DF5 :
   L1167 = 2DF7 : 2BD2
   L1168 = 2DFA :
   L1169 = 2DFD :
    L117 = 2115 :
   L1170 = 2E00 :
   L1171 = 2E03 :
   L1172 = 2E03 :
   L1173 = 2E06 :
   L1174 = 2E0A :
   L1175 = 2E17 :
   L1176 = 2E1D :
   L1177 = 2E20 :
   L1178 = 2E22 : 2BF9
   L1179 = 2E25 :
    L118 = 2120 :
   L1180 = 2E28 :
   L1181 = 2E2B : 2C01
   L1182 = 2E2E :
   L1183 = 2E2E :
   L1184 = 2E2E :
   L1185 = 2E2E :
   L1186 = 2E2E :
   L1187 = 2E2E :
   L1188 = 2E31 :
   L1189 = 2E33 :
    L119 = 2126 :
   L1190 = 2E35 :
   L1191 = 2E38 : 2C23
   L1192 = 2E3A :
   L1193 = 2E3D :
   L1194 = 2E40 : 2C2B
   L1195 = 2E43 :
   L1196 = 2E46 :
   L1197 = 2E46 :
   L1198 = 2E49 :
   L1199 = 2E4B :
     L12 = 2013 :
    L120 = 2129 :
   L1200 = 2E4D :
   L1201 = 2E50 :
   L1202 = 2E52 :
   L1203 = 2E55 :
   L1204 = 2E58 : 2C4F
   L1205 = 2E5B :
   L1206 = 2E5E :
   L1207 = 2E5E :
   L1208 = 2E61 :
   L1209 = 2E63 :
    L121 = 212B :
   L1210 = 2E65 :
   L1211 = 2E68 : 2C57
   L1212 = 2E6A :
   L1213 = 2E6D :
   L1214 = 2E70 :
   L1215 = 2E73 :
   L1216 = 2E76 :
   L1217 = 2E76 :
   L1218 = 2E76 :
   L1219 = 2E79 :
    L122 = 212E :
   L1220 = 2E86 :
   L1221 = 2E8C : 2C68
   L1222 = 2E8F :
   L1223 = 2E91 :
   L1224 = 2E94 : 2C70
   L1225 = 2E97 :
   L1226 = 2E9A :
   L1227 = 2E9D :
   L1228 = 2E9D :
   L1229 = 2EA0 :
    L123 = 2131 :
   L1230 = 2EAB :
   L1231 = 2EB1 :
   L1232 = 2EB4 :
   L1233 = 2EB6 :
   L1234 = 2EB9 : 2C81
   L1235 = 2EBC :
   L1236 = 2EBF :
   L1237 = 2EC2 : 2C89
   L1238 = 2EC2 :
   L1239 = 2EC5 :
    L124 = 2134 :
   L1240 = 2ED2 :
   L1241 = 2ED8 :
   L1242 = 2EDB :
   L1243 = 2EDD :
   L1244 = 2EE0 :
   L1245 = 2EE3 :
   L1246 = 2EE6 :
   L1247 = 2EE9 : 2C9A
   L1248 = 2EE9 :
   L1249 = 2EE9 :
    L125 = 2137 :
   L1250 = 2EEC :
   L1251 = 2EEF : 2CA2
   L1252 = 2EFC :
   L1253 = 2EFE :
   L1254 = 2F05 :
   L1255 = 2F08 :
   L1256 = 2F0A :
   L1257 = 2F0D :
   L1258 = 2F10 :
   L1259 = 2F13 :
    L126 = 2137 : 20FF
   L1260 = 2F16 :
   L1261 = 2F16 : 2CC5
   L1262 = 2F19 :
   L1263 = 2F1C :
   L1264 = 2F27 : 2CCD
   L1265 = 2F2D :
   L1266 = 2F30 :
   L1267 = 2F32 :
   L1268 = 2F35 :
   L1269 = 2F38 :
    L127 = 2139 :
   L1270 = 2F3B :
   L1271 = 2F3E :
   L1272 = 2F3E :
   L1273 = 2F41 :
   L1274 = 2F44 : 2CEE
   L1275 = 2F51 :
   L1276 = 2F57 :
   L1277 = 2F5A : 2CF6
   L1278 = 2F5C :
   L1279 = 2F5F :
    L128 = 213C :
   L1280 = 2F62 :
   L1281 = 2F65 :
   L1282 = 2F68 :
   L1283 = 2F68 :
   L1284 = 2F68 :
   L1285 = 2F6B :
   L1286 = 2F78 :
   L1287 = 2F7A : 2D19
   L1288 = 2F81 :
   L1289 = 2F84 :
    L129 = 2149 : 2107
   L1290 = 2F86 :
   L1291 = 2F89 : 2D21
   L1292 = 2F8C :
   L1293 = 2F8F :
   L1294 = 2F92 :
   L1295 = 2F92 :
   L1296 = 2F95 :
   L1297 = 2FA0 :
   L1298 = 2FA6 :
   L1299 = 2FA9 :
     L13 = 2016 :
    L130 = 214F :
   L1300 = 2FAB :
   L1301 = 2FAE :
   L1302 = 2FB1 :
   L1303 = 2FB4 : 2D47
   L1304 = 2FB7 :
   L1305 = 2FB7 :
   L1306 = 2FBA : 2D4F
   L1307 = 2FC7 :
   L1308 = 2FCD :
   L1309 = 2FD0 :
    L131 = 2152 :
   L1310 = 2FD2 :
   L1311 = 2FD5 :
   L1312 = 2FD8 :
   L1313 = 2FDB :
   L1314 = 2FDE :
   L1315 = 2FDE :
   L1316 = 2FDE :
   L1317 = 2FDE : 2D70
   L1318 = 2FDE :
   L1319 = 2FDE :
    L132 = 2154 :
   L1320 = 2FE1 : 2D78
   L1321 = 2FE4 :
   L1322 = 2FE6 :
   L1323 = 2FE8 :
   L1324 = 2FEA :
   L1325 = 2FED :
   L1326 = 2FEF :
   L1327 = 2FF2 :
   L1328 = 2FF5 :
   L1329 = 2FF8 :
    L133 = 2157 :
   L1330 = 2FFB :
   L1331 = 2FFB : 2D9B
   L1332 = 2FFE :
   L1333 = 3001 :
   L1334 = 3003 :
   L1335 = 3005 : 2DA3
   L1336 = 3007 :
   L1337 = 300A :
   L1338 = 300C :
   L1339 = 300F :
    L134 = 215A :
   L1340 = 3012 :
   L1341 = 3015 :
   L1342 = 3018 :
   L1343 = 3018 :
   L1344 = 301B :
   L1345 = 301E :
   L1346 = 3020 : 2DC9
   L1347 = 3022 :
   L1348 = 3024 :
   L1349 = 3027 : 2DD1
    L135 = 215D :
   L1350 = 3029 :
   L1351 = 302C :
   L1352 = 302F :
   L1353 = 3032 :
   L1354 = 3035 :
   L1355 = 3035 :
   L1356 = 3035 :
   L1357 = 3038 :
   L1358 = 303C :
   L1359 = 3040 : 2DF2
    L136 = 2160 :
   L1360 = 304B :
   L1361 = 3051 :
   L1362 = 3054 : 2DFA
   L1363 = 3056 :
   L1364 = 3059 :
   L1365 = 305C :
   L1366 = 305F :
   L1367 = 3062 :
   L1368 = 3062 :
   L1369 = 3065 :
    L137 = 2160 :
   L1370 = 3069 :
   L1371 = 306D :
   L1372 = 3076 : 2E1D
   L1373 = 307C :
   L1374 = 307F :
   L1375 = 3081 :
   L1376 = 3084 :
   L1377 = 3087 :
   L1378 = 308A :
   L1379 = 308D : 2E25
    L138 = 2160 :
   L1380 = 308D :
   L1381 = 3090 :
   L1382 = 3094 :
   L1383 = 3098 :
   L1384 = 30A3 :
   L1385 = 30A9 :
   L1386 = 30AC :
   L1387 = 30AE :
   L1388 = 30B1 : 2E35
   L1389 = 30B4 :
    L139 = 2163 : 2126
   L1390 = 30B7 :
   L1391 = 30BA : 2E3D
   L1392 = 30BA :
   L1393 = 30BA :
   L1394 = 30BD :
   L1395 = 30C0 :
   L1396 = 30C4 :
   L1397 = 30C8 :
   L1398 = 30CA :
   L1399 = 30D1 :
     L14 = 2019 :
    L140 = 2170 :
   L1400 = 30D4 : 2E4D
   L1401 = 30D6 :
   L1402 = 30D9 :
   L1403 = 30DC : 2E55
   L1404 = 30DF :
   L1405 = 30E2 :
   L1406 = 30E2 :
   L1407 = 30E5 :
   L1408 = 30E8 :
   L1409 = 30EC :
    L141 = 2172 :
   L1410 = 30EE :
   L1411 = 30F4 :
   L1412 = 30F7 : 2E65
   L1413 = 30F9 :
   L1414 = 30FC :
   L1415 = 30FF :
   L1416 = 3102 : 2E6D
   L1417 = 3105 :
   L1418 = 3105 :
   L1419 = 3108 :
    L142 = 2179 : 212E
   L1420 = 310B :
   L1421 = 310F :
   L1422 = 3111 :
   L1423 = 3117 :
   L1424 = 311A :
   L1425 = 311C : 2E8C
   L1426 = 311F :
   L1427 = 3122 :
   L1428 = 3125 : 2E94
   L1429 = 3128 :
    L143 = 217C :
   L1430 = 3128 :
   L1431 = 3128 :
   L1432 = 312B :
   L1433 = 312D :
   L1434 = 312F :
   L1435 = 3133 :
   L1436 = 3135 :
   L1437 = 313C : 2EB1
   L1438 = 313F :
   L1439 = 3141 :
    L144 = 217E :
   L1440 = 3144 : 2EB9
   L1441 = 3147 :
   L1442 = 314A :
   L1443 = 314D :
   L1444 = 314D :
   L1445 = 3150 :
   L1446 = 3152 :
   L1447 = 3154 :
   L1448 = 3156 :
   L1449 = 315C : 2ED8
    L145 = 2181 :
   L1450 = 315F :
   L1451 = 3161 :
   L1452 = 3164 :
   L1453 = 3167 : 2EE0
   L1454 = 316A :
   L1455 = 316D :
   L1456 = 316D :
   L1457 = 3170 :
   L1458 = 3172 :
   L1459 = 3174 :
    L146 = 2184 :
   L1460 = 3176 :
   L1461 = 317C :
   L1462 = 317F :
   L1463 = 3181 :
   L1464 = 3184 : 2F05
   L1465 = 3187 :
   L1466 = 318A :
   L1467 = 318D : 2F0D
   L1468 = 318D :
   L1469 = 318D :
    L147 = 2187 :
   L1470 = 318D :
   L1471 = 318D :
   L1472 = 318D :
   L1473 = 3190 :
   L1474 = 3195 :
   L1475 = 3197 :
   L1476 = 319A :
   L1477 = 319C : 2F2D
   L1478 = 319F :
   L1479 = 31A2 :
    L148 = 218A :
   L1480 = 31A5 : 2F35
   L1481 = 31A8 :
   L1482 = 31A8 :
   L1483 = 31AB :
   L1484 = 31B0 :
   L1485 = 31B2 :
   L1486 = 31B5 :
   L1487 = 31B7 :
   L1488 = 31BA :
   L1489 = 31BD :
    L149 = 218A :
   L1490 = 31C0 : 2F57
   L1491 = 31C3 :
   L1492 = 31C3 :
   L1493 = 31C6 :
   L1494 = 31CB : 2F5F
   L1495 = 31CD :
   L1496 = 31D0 :
   L1497 = 31D2 :
   L1498 = 31D5 :
   L1499 = 31D8 :
     L15 = 2019 :
    L150 = 218D :
   L1500 = 31DB :
   L1501 = 31DE :
   L1502 = 31DE :
   L1503 = 31DE :
   L1504 = 31E1 : 2F81
   L1505 = 31EF :
   L1506 = 31F5 :
   L1507 = 31F8 : 2F89
   L1508 = 31FA :
   L1509 = 31FD :
    L151 = 2198 :
   L1510 = 3200 :
   L1511 = 3203 :
   L1512 = 3206 :
   L1513 = 3206 :
   L1514 = 3209 :
   L1515 = 3215 :
   L1516 = 321B : 2FA6
   L1517 = 321E :
   L1518 = 3220 :
   L1519 = 3223 : 2FAE
    L152 = 219E : 214F
   L1520 = 3226 :
   L1521 = 3229 :
   L1522 = 322C :
   L1523 = 322C :
   L1524 = 322F :
   L1525 = 323D :
   L1526 = 3243 :
   L1527 = 3246 :
   L1528 = 3248 : 2FCD
   L1529 = 324B :
    L153 = 21A1 :
   L1530 = 324E :
   L1531 = 3251 :
   L1532 = 3254 :
   L1533 = 3254 :
   L1534 = 3254 :
   L1535 = 3257 : 2FD5
   L1536 = 325A :
   L1537 = 3268 :
   L1538 = 326A :
   L1539 = 3271 :
    L154 = 21A3 :
   L1540 = 3274 :
   L1541 = 3276 :
   L1542 = 3279 :
   L1543 = 327C :
   L1544 = 327F :
   L1545 = 3282 :
   L1546 = 3282 : 2FEA
   L1547 = 3285 :
   L1548 = 3288 :
   L1549 = 3294 : 2FF2
    L155 = 21A6 :
   L1550 = 329A :
   L1551 = 329D :
   L1552 = 329F :
   L1553 = 32A2 :
   L1554 = 32A5 :
   L1555 = 32A8 :
   L1556 = 32AB :
   L1557 = 32AB :
   L1558 = 32AE :
   L1559 = 32B1 :
    L156 = 21A9 : 2157
   L1560 = 32BF : 3007
   L1561 = 32C5 :
   L1562 = 32C8 :
   L1563 = 32CA : 300F
   L1564 = 32CD :
   L1565 = 32D0 :
   L1566 = 32D3 :
   L1567 = 32D6 :
   L1568 = 32D6 :
   L1569 = 32D6 :
    L157 = 21AC :
   L1570 = 32D9 :
   L1571 = 32E7 :
   L1572 = 32E9 :
   L1573 = 32F0 :
   L1574 = 32F3 : 3024
   L1575 = 32F5 :
   L1576 = 32F8 :
   L1577 = 32FB :
   L1578 = 32FE : 302C
   L1579 = 3301 :
    L158 = 21AF :
   L1580 = 3301 :
   L1581 = 3304 :
   L1582 = 3310 :
   L1583 = 3316 :
   L1584 = 3319 :
   L1585 = 331B :
   L1586 = 331E :
   L1587 = 3321 :
   L1588 = 3324 :
   L1589 = 3327 : 3051
    L159 = 21AF :
   L1590 = 3327 :
   L1591 = 332A :
   L1592 = 3338 : 3059
   L1593 = 333E :
   L1594 = 3341 :
   L1595 = 3343 :
   L1596 = 3346 :
   L1597 = 3349 :
   L1598 = 334C :
   L1599 = 334F :
     L16 = 201C :
    L160 = 21B2 :
   L1600 = 334F :
   L1601 = 334F :
   L1602 = 334F :
   L1603 = 334F : 307C
   L1604 = 334F :
   L1605 = 3352 :
   L1606 = 3354 : 3084
   L1607 = 3356 :
   L1608 = 3359 :
   L1609 = 335B :
    L161 = 21BF :
   L1610 = 335E :
   L1611 = 3361 :
   L1612 = 3364 :
   L1613 = 3367 :
   L1614 = 3367 :
   L1615 = 336A :
   L1616 = 336C :
   L1617 = 336E : 30A9
   L1618 = 3371 :
   L1619 = 3373 :
    L162 = 21C5 :
   L1620 = 3376 :
   L1621 = 3379 : 30B1
   L1622 = 337C :
   L1623 = 337F :
   L1624 = 337F :
   L1625 = 3382 :
   L1626 = 3384 :
   L1627 = 3386 :
   L1628 = 3389 :
   L1629 = 338B :
    L163 = 21C8 :
   L1630 = 338E :
   L1631 = 3391 :
   L1632 = 3394 :
   L1633 = 3397 : 30D1
   L1634 = 3397 :
   L1635 = 3397 :
   L1636 = 339A : 30D9
   L1637 = 33A7 :
   L1638 = 33AD :
   L1639 = 33B0 :
    L164 = 21CA :
   L1640 = 33B2 :
   L1641 = 33B5 :
   L1642 = 33B8 :
   L1643 = 33BB :
   L1644 = 33BE :
   L1645 = 33BE :
   L1646 = 33C1 :
   L1647 = 33CC : 30F4
   L1648 = 33D2 :
   L1649 = 33D5 :
    L165 = 21CD :
   L1650 = 33D7 : 30FC
   L1651 = 33DA :
   L1652 = 33DD :
   L1653 = 33E0 :
   L1654 = 33E3 :
   L1655 = 33E3 :
   L1656 = 33E6 :
   L1657 = 33F3 :
   L1658 = 33F9 :
   L1659 = 33FC :
    L166 = 21D0 : 2179
   L1660 = 33FE :
   L1661 = 3401 : 3117
   L1662 = 3404 :
   L1663 = 3407 :
   L1664 = 340A :
   L1665 = 340A : 311F
   L1666 = 340A :
   L1667 = 340D :
   L1668 = 3410 :
   L1669 = 341D :
    L167 = 21D3 :
   L1670 = 341F :
   L1671 = 3426 :
   L1672 = 3429 :
   L1673 = 342B :
   L1674 = 342E :
   L1675 = 3431 :
   L1676 = 3434 :
   L1677 = 3437 : 313C
   L1678 = 3437 :
   L1679 = 343A :
    L168 = 21D6 :
   L1680 = 343D : 3144
   L1681 = 3448 :
   L1682 = 344E :
   L1683 = 3451 :
   L1684 = 3453 :
   L1685 = 3456 :
   L1686 = 3459 :
   L1687 = 345C :
   L1688 = 345F :
   L1689 = 345F :
    L169 = 21D6 : 2181
   L1690 = 3462 :
   L1691 = 3465 : 315C
   L1692 = 3472 :
   L1693 = 3478 :
   L1694 = 347B : 3164
   L1695 = 347D :
   L1696 = 3480 :
   L1697 = 3483 :
   L1698 = 3486 :
   L1699 = 3489 :
     L17 = 201F :
    L170 = 21D6 :
   L1700 = 3489 :
   L1701 = 3489 :
   L1702 = 348C :
   L1703 = 3499 :
   L1704 = 349B :
   L1705 = 34A2 : 317C
   L1706 = 34A5 :
   L1707 = 34A7 :
   L1708 = 34AA :
   L1709 = 34AD :
    L171 = 21D6 :
   L1710 = 34B0 :
   L1711 = 34B3 :
   L1712 = 34B3 : 3184
   L1713 = 34B6 :
   L1714 = 34C1 :
   L1715 = 34C7 :
   L1716 = 34CA :
   L1717 = 34CC :
   L1718 = 34CF :
   L1719 = 34D2 :
    L172 = 21D6 :
   L1720 = 34D5 :
   L1721 = 34D8 : 3197
   L1722 = 34D8 :
   L1723 = 34DB :
   L1724 = 34E8 : 319F
   L1725 = 34EE :
   L1726 = 34F1 :
   L1727 = 34F3 :
   L1728 = 34F6 :
   L1729 = 34F9 :
    L173 = 21D6 :
   L1730 = 34FC :
   L1731 = 34FF :
   L1732 = 34FF :
   L1733 = 34FF : 31B2
   L1734 = 34FF :
   L1735 = 34FF :
   L1736 = 34FF : 31BA
   L1737 = 3502 :
   L1738 = 3504 :
   L1739 = 3506 :
    L174 = 21D8 :
   L1740 = 3509 :
   L1741 = 350B :
   L1742 = 350E :
   L1743 = 3511 :
   L1744 = 3514 :
   L1745 = 3517 : 31CD
   L1746 = 3517 :
   L1747 = 351A :
   L1748 = 351C :
   L1749 = 351E : 31D5
    L175 = 21DB :
   L1750 = 3521 :
   L1751 = 3523 :
   L1752 = 3526 :
   L1753 = 3529 :
   L1754 = 352C :
   L1755 = 352F :
   L1756 = 352F :
   L1757 = 3532 :
   L1758 = 3534 : 31F5
   L1759 = 3536 :
    L176 = 21DD :
   L1760 = 3539 :
   L1761 = 353B : 31FD
   L1762 = 353E :
   L1763 = 3541 :
   L1764 = 3544 :
   L1765 = 3547 :
   L1766 = 3547 :
   L1767 = 3547 :
   L1768 = 354A :
   L1769 = 3557 :
    L177 = 21DF :
   L1770 = 355D : 321B
   L1771 = 3560 :
   L1772 = 3562 :
   L1773 = 3565 : 3223
   L1774 = 3568 :
   L1775 = 356B :
   L1776 = 356E :
   L1777 = 356E :
   L1778 = 3571 :
   L1779 = 357C :
    L178 = 21E1 : 219E
   L1780 = 3582 :
   L1781 = 3585 :
   L1782 = 3587 : 3243
   L1783 = 358A :
   L1784 = 358D :
   L1785 = 3590 :
   L1786 = 3593 : 324B
   L1787 = 3593 :
   L1788 = 3596 :
   L1789 = 35A3 :
    L179 = 21E4 :
   L1790 = 35A9 :
   L1791 = 35AC :
   L1792 = 35AE :
   L1793 = 35B1 :
   L1794 = 35B4 :
   L1795 = 35B7 :
   L1796 = 35BA :
   L1797 = 35BA : 3271
   L1798 = 35BA :
   L1799 = 35BD :
     L18 = 201F :
    L180 = 21E6 :
   L1800 = 35C0 : 3279
   L1801 = 35CD :
   L1802 = 35CF :
   L1803 = 35D6 :
   L1804 = 35D9 :
   L1805 = 35DB :
   L1806 = 35DE :
   L1807 = 35E1 :
   L1808 = 35E4 :
   L1809 = 35E7 :
    L181 = 21E9 : 21A6
   L1810 = 35E7 : 329A
   L1811 = 35EA :
   L1812 = 35ED :
   L1813 = 35F8 : 32A2
   L1814 = 35FE :
   L1815 = 3601 :
   L1816 = 3603 :
   L1817 = 3606 :
   L1818 = 3609 :
   L1819 = 360C :
    L182 = 21EC :
   L1820 = 360F :
   L1821 = 360F :
   L1822 = 3612 :
   L1823 = 3615 : 32C5
   L1824 = 3622 :
   L1825 = 3628 :
   L1826 = 362B :
   L1827 = 362D : 32CD
   L1828 = 3630 :
   L1829 = 3633 :
    L183 = 21EF :
   L1830 = 3636 :
   L1831 = 3639 :
   L1832 = 3639 :
   L1833 = 3639 :
   L1834 = 363C :
   L1835 = 3649 :
   L1836 = 364B :
   L1837 = 3652 : 32F0
   L1838 = 3655 :
   L1839 = 3657 :
    L184 = 21F2 :
   L1840 = 365A : 32F8
   L1841 = 365D :
   L1842 = 3660 :
   L1843 = 3663 :
   L1844 = 3663 :
   L1845 = 3666 :
   L1846 = 3671 :
   L1847 = 3677 :
   L1848 = 367A :
   L1849 = 367C : 3316
    L185 = 21F2 :
   L1850 = 367F :
   L1851 = 3682 :
   L1852 = 3685 : 331E
   L1853 = 3688 :
   L1854 = 3688 :
   L1855 = 368B :
   L1856 = 3698 :
   L1857 = 369E :
   L1858 = 36A1 :
   L1859 = 36A3 :
    L186 = 21F4 :
   L1860 = 36A6 :
   L1861 = 36A9 : 333E
   L1862 = 36AC :
   L1863 = 36AF :
   L1864 = 36AF :
   L1865 = 36AF :
   L1866 = 36AF :
   L1867 = 36AF :
   L1868 = 36AF : 3346
   L1869 = 36B2 :
    L187 = 21F7 :
   L1870 = 36B5 :
   L1871 = 36B7 :
   L1872 = 36B9 :
   L1873 = 36BB :
   L1874 = 36BE :
   L1875 = 36C0 :
   L1876 = 36C3 :
   L1877 = 36C6 : 3356
   L1878 = 36C9 :
   L1879 = 36CC :
    L188 = 21F9 :
   L1880 = 36CC : 335E
   L1881 = 36CF :
   L1882 = 36D2 :
   L1883 = 36D4 :
   L1884 = 36D6 :
   L1885 = 36D8 :
   L1886 = 36DB :
   L1887 = 36DD :
   L1888 = 36E0 :
   L1889 = 36E3 : 336E
    L189 = 21FB :
   L1890 = 36E6 :
   L1891 = 36E9 :
   L1892 = 36E9 : 3376
   L1893 = 36EC :
   L1894 = 36EF :
   L1895 = 36F1 :
   L1896 = 36F3 :
   L1897 = 36F5 :
   L1898 = 36F8 :
   L1899 = 36FA :
     L19 = 201F :
    L190 = 21FD : 21C5
   L1900 = 36FD :
   L1901 = 3700 : 3386
   L1902 = 3703 :
   L1903 = 3706 :
   L1904 = 3706 :
   L1905 = 3706 : 338E
   L1906 = 3709 :
   L1907 = 370D :
   L1908 = 3711 :
   L1909 = 371C :
    L191 = 2200 :
   L1910 = 3722 :
   L1911 = 3725 :
   L1912 = 3727 :
   L1913 = 372A :
   L1914 = 372D : 33AD
   L1915 = 3730 :
   L1916 = 3733 :
   L1917 = 3733 : 33B5
   L1918 = 3736 :
   L1919 = 373A :
    L192 = 2202 :
   L1920 = 373E :
   L1921 = 3747 :
   L1922 = 374D :
   L1923 = 3750 :
   L1924 = 3752 :
   L1925 = 3755 :
   L1926 = 3758 : 33D2
   L1927 = 375B :
   L1928 = 375E :
   L1929 = 375E : 33DA
    L193 = 2205 :
   L1930 = 3761 :
   L1931 = 3765 :
   L1932 = 3769 :
   L1933 = 3774 :
   L1934 = 377A :
   L1935 = 377D :
   L1936 = 377F :
   L1937 = 3782 :
   L1938 = 3785 : 33F9
   L1939 = 3788 :
    L194 = 2208 :
   L1940 = 378B :
   L1941 = 378B :
   L1942 = 378B : 3401
   L1943 = 378E :
   L1944 = 3791 :
   L1945 = 3795 :
   L1946 = 3799 :
   L1947 = 379B :
   L1948 = 37A2 :
   L1949 = 37A5 :
    L195 = 220B :
   L1950 = 37A7 :
   L1951 = 37AA :
   L1952 = 37AD :
   L1953 = 37B0 : 3426
   L1954 = 37B3 :
   L1955 = 37B3 :
   L1956 = 37B6 : 342E
   L1957 = 37B9 :
   L1958 = 37BD :
   L1959 = 37BF :
    L196 = 220E :
   L1960 = 37C5 :
   L1961 = 37C8 :
   L1962 = 37CA :
   L1963 = 37CD :
   L1964 = 37D0 :
   L1965 = 37D3 :
   L1966 = 37D6 : 344E
   L1967 = 37D6 :
   L1968 = 37D9 :
   L1969 = 37DC : 3456
    L197 = 220E : 21CD
   L1970 = 37E0 :
   L1971 = 37E2 :
   L1972 = 37E8 :
   L1973 = 37EB :
   L1974 = 37ED :
   L1975 = 37F0 :
   L1976 = 37F3 :
   L1977 = 37F6 :
   L1978 = 37F9 :
   L1979 = 37F9 : 3478
    L198 = 2210 :
   L1980 = 37F9 :
   L1981 = 37FC :
   L1982 = 37FE :
   L1983 = 3800 : 3480
   L1984 = 3804 :
   L1985 = 3806 :
   L1986 = 380D :
   L1987 = 3810 :
   L1988 = 3812 :
   L1989 = 3815 :
    L199 = 2213 :
   L1990 = 3818 :
   L1991 = 381B :
   L1992 = 381E :
   L1993 = 381E : 34A2
   L1994 = 3821 :
   L1995 = 3823 :
   L1996 = 3825 : 34AA
   L1997 = 3827 :
   L1998 = 382D :
   L1999 = 3830 :
      L2 = 2009 :
     L20 = 201F :
    L200 = 2215 :
   L2000 = 3832 :
   L2001 = 3835 :
   L2002 = 3838 :
   L2003 = 383B :
   L2004 = 383E :
   L2005 = 383E : 34C7
   L2006 = 3841 :
   L2007 = 3843 :
   L2008 = 3845 : 34CF
   L2009 = 3847 :
    L201 = 2217 :
   L2010 = 384D :
   L2011 = 3850 :
   L2012 = 3852 :
   L2013 = 3855 :
   L2014 = 3858 :
   L2015 = 385B :
   L2016 = 385E :
   L2017 = 385E : 34EE
   L2018 = 385E :
   L2019 = 385E :
    L202 = 2219 :
   L2020 = 385E :
   L2021 = 385E :
   L2022 = 3861 :
   L2023 = 3866 :
   L2024 = 3868 : 34F6
   L2025 = 386B :
   L2026 = 386D :
   L2027 = 3870 :
   L2028 = 3873 :
   L2029 = 3876 :
    L203 = 221C :
   L2030 = 3879 :
   L2031 = 3879 :
   L2032 = 387C :
   L2033 = 3881 : 3506
   L2034 = 3883 :
   L2035 = 3886 :
   L2036 = 3888 : 350E
   L2037 = 388B :
   L2038 = 388E :
   L2039 = 3891 :
    L204 = 221E :
   L2040 = 3894 :
   L2041 = 3894 :
   L2042 = 3897 :
   L2043 = 389C :
   L2044 = 389E :
   L2045 = 38A1 : 351E
   L2046 = 38A3 :
   L2047 = 38A6 :
   L2048 = 38A9 : 3526
   L2049 = 38AC :
    L205 = 2221 :
   L2050 = 38AF :
   L2051 = 38AF :
   L2052 = 38AF :
   L2053 = 38B2 :
   L2054 = 38C0 :
   L2055 = 38C6 :
   L2056 = 38C9 :
   L2057 = 38CB : 3536
   L2058 = 38CE :
   L2059 = 38D1 :
    L206 = 2224 :
   L2060 = 38D4 :
   L2061 = 38D7 : 353E
   L2062 = 38D7 :
   L2063 = 38DA :
   L2064 = 38E6 :
   L2065 = 38EC :
   L2066 = 38EF :
   L2067 = 38F1 :
   L2068 = 38F4 :
   L2069 = 38F7 :
    L207 = 2227 :
   L2070 = 38FA : 355D
   L2071 = 38FD :
   L2072 = 38FD :
   L2073 = 3900 : 3565
   L2074 = 390E :
   L2075 = 3914 :
   L2076 = 3917 :
   L2077 = 3919 :
   L2078 = 391C :
   L2079 = 391F :
    L208 = 222A : 21E1
   L2080 = 3922 :
   L2081 = 3925 :
   L2082 = 3925 : 3582
   L2083 = 3925 :
   L2084 = 3928 :
   L2085 = 392B : 358A
   L2086 = 3939 :
   L2087 = 393B :
   L2088 = 3942 :
   L2089 = 3945 :
    L209 = 222A :
   L2090 = 3947 :
   L2091 = 394A :
   L2092 = 394D :
   L2093 = 3950 :
   L2094 = 3953 : 35A9
   L2095 = 3953 :
   L2096 = 3956 :
   L2097 = 3959 :
   L2098 = 3965 : 35B1
   L2099 = 396B :
     L21 = 201F :
    L210 = 222A :
   L2100 = 396E :
   L2101 = 3970 :
   L2102 = 3973 :
   L2103 = 3976 :
   L2104 = 3979 :
   L2105 = 397C :
   L2106 = 397C :
   L2107 = 397F :
   L2108 = 3982 :
   L2109 = 3990 : 35D6
    L211 = 222D : 21E9
   L2110 = 3996 :
   L2111 = 3999 :
   L2112 = 399B : 35DE
   L2113 = 399E :
   L2114 = 39A1 :
   L2115 = 39A4 :
   L2116 = 39A7 :
   L2117 = 39A7 :
   L2118 = 39A7 :
   L2119 = 39AA :
    L212 = 2231 :
   L2120 = 39B8 :
   L2121 = 39BA :
   L2122 = 39C1 : 35FE
   L2123 = 39C4 :
   L2124 = 39C6 :
   L2125 = 39C9 : 3606
   L2126 = 39CC :
   L2127 = 39CF :
   L2128 = 39D2 :
   L2129 = 39D2 :
    L213 = 2235 :
   L2130 = 39D5 :
   L2131 = 39E1 :
   L2132 = 39E7 :
   L2133 = 39EA :
   L2134 = 39EC :
   L2135 = 39EF : 3628
   L2136 = 39F2 :
   L2137 = 39F5 :
   L2138 = 39F8 :
   L2139 = 39F8 : 3630
    L214 = 2240 :
   L2140 = 39FB :
   L2141 = 3A09 :
   L2142 = 3A0F :
   L2143 = 3A12 :
   L2144 = 3A14 :
   L2145 = 3A17 :
   L2146 = 3A1A :
   L2147 = 3A1D :
   L2148 = 3A20 :
   L2149 = 3A20 : 3652
    L215 = 2246 :
   L2150 = 3A20 :
   L2151 = 3A20 :
   L2152 = 3A20 : 365A
   L2153 = 3A20 :
   L2154 = 3A22 :
   L2155 = 3A24 :
   L2156 = 3A26 :
   L2157 = 3A29 :
   L2158 = 3A2B :
   L2159 = 3A2E :
    L216 = 2249 :
   L2160 = 3A31 :
   L2161 = 3A34 : 3677
   L2162 = 3A37 :
   L2163 = 3A37 :
   L2164 = 3A39 : 367F
   L2165 = 3A3B :
   L2166 = 3A3D :
   L2167 = 3A40 :
   L2168 = 3A42 :
   L2169 = 3A45 :
    L217 = 224B :
   L2170 = 3A48 :
   L2171 = 3A4B :
   L2172 = 3A4E :
   L2173 = 3A4E : 369E
   L2174 = 3A50 :
   L2175 = 3A52 :
   L2176 = 3A54 :
   L2177 = 3A57 :
   L2178 = 3A59 :
   L2179 = 3A5C :
    L218 = 224E :
   L2180 = 3A5F : 36A6
   L2181 = 3A62 :
   L2182 = 3A65 :
   L2183 = 3A65 :
   L2184 = 3A65 :
   L2185 = 3A68 :
   L2186 = 3A75 :
   L2187 = 3A7B :
   L2188 = 3A7E :
   L2189 = 3A80 :
    L219 = 2251 :
   L2190 = 3A83 :
   L2191 = 3A86 : 36BB
   L2192 = 3A89 :
   L2193 = 3A8C :
   L2194 = 3A8C : 36C3
   L2195 = 3A8F :
   L2196 = 3A9A :
   L2197 = 3AA0 :
   L2198 = 3AA3 :
   L2199 = 3AA5 :
     L22 = 201F :
    L220 = 2254 :
   L2200 = 3AA8 :
   L2201 = 3AAB :
   L2202 = 3AAE :
   L2203 = 3AB1 :
   L2204 = 3AB1 :
   L2205 = 3AB4 : 36D8
   L2206 = 3AC1 :
   L2207 = 3AC7 :
   L2208 = 3ACA : 36E0
   L2209 = 3ACC :
    L221 = 2257 :
   L2210 = 3ACF :
   L2211 = 3AD2 :
   L2212 = 3AD5 :
   L2213 = 3AD8 :
   L2214 = 3AD8 :
   L2215 = 3AD8 :
   L2216 = 3ADA :
   L2217 = 3ADD :
   L2218 = 3AEA :
   L2219 = 3AEC : 36F5
    L222 = 2257 : 21FD
   L2220 = 3AF3 :
   L2221 = 3AF6 :
   L2222 = 3AF8 :
   L2223 = 3AFB : 36FD
   L2224 = 3AFE :
   L2225 = 3B01 :
   L2226 = 3B04 :
   L2227 = 3B04 :
   L2228 = 3B06 :
   L2229 = 3B09 :
    L223 = 225A :
   L2230 = 3B14 :
   L2231 = 3B1A :
   L2232 = 3B1D :
   L2233 = 3B1F :
   L2234 = 3B22 : 3722
   L2235 = 3B25 :
   L2236 = 3B28 :
   L2237 = 3B2B : 372A
   L2238 = 3B2B :
   L2239 = 3B2D :
    L224 = 225E :
   L2240 = 3B30 :
   L2241 = 3B3D :
   L2242 = 3B43 :
   L2243 = 3B46 :
   L2244 = 3B48 :
   L2245 = 3B4B :
   L2246 = 3B4E :
   L2247 = 3B51 :
   L2248 = 3B54 : 374D
   L2249 = 3B54 :
    L225 = 2262 : 2205
   L2250 = 3B54 :
   L2251 = 3B57 : 3755
   L2252 = 3B64 :
   L2253 = 3B66 :
   L2254 = 3B6D :
   L2255 = 3B70 :
   L2256 = 3B72 :
   L2257 = 3B75 :
   L2258 = 3B78 :
   L2259 = 3B7B :
    L226 = 226B :
   L2260 = 3B7E :
   L2261 = 3B7E :
   L2262 = 3B81 : 377A
   L2263 = 3B8C :
   L2264 = 3B92 :
   L2265 = 3B95 :
   L2266 = 3B97 : 3782
   L2267 = 3B9A :
   L2268 = 3B9D :
   L2269 = 3BA0 :
    L227 = 2271 :
   L2270 = 3BA3 :
   L2271 = 3BA3 :
   L2272 = 3BA6 :
   L2273 = 3BB3 :
   L2274 = 3BB9 :
   L2275 = 3BBC :
   L2276 = 3BBE :
   L2277 = 3BC1 :
   L2278 = 3BC4 : 37A2
   L2279 = 3BC7 :
    L228 = 2274 :
   L2280 = 3BCA :
   L2281 = 3BCA : 37AA
   L2282 = 3BCA :
   L2283 = 3BCD :
   L2284 = 3BD0 :
   L2285 = 3BD0 :
   L2286 = 3BD2 :
   L2287 = 3BD4 :
   L2288 = 3BD5 :
   L2289 = 3BD5 : 3BCA
    L229 = 2276 :
     L23 = 201F : 2003
    L230 = 2279 :
    L231 = 227C :
    L232 = 227F :
    L233 = 2282 :
    L234 = 2282 :
    L235 = 2285 :
    L236 = 2289 : 2219
    L237 = 228D :
    L238 = 2298 :
    L239 = 229E :
     L24 = 201F :
    L240 = 22A1 : 2221
    L241 = 22A3 :
    L242 = 22A6 :
    L243 = 22A9 :
    L244 = 22AC :
    L245 = 22AF :
    L246 = 22AF :
    L247 = 22AF :
    L248 = 22B1 :
    L249 = 22B4 :
     L25 = 2021 :
    L250 = 22B8 :
    L251 = 22BC : 2246
    L252 = 22BE :
    L253 = 22C5 :
    L254 = 22C8 : 224E
    L255 = 22CA :
    L256 = 22CD :
    L257 = 22D0 :
    L258 = 22D3 :
    L259 = 22D6 :
     L26 = 2027 :
    L260 = 22D6 :
    L261 = 22D8 :
    L262 = 22DB :
    L263 = 22DF :
    L264 = 22E1 :
    L265 = 22E7 : 2271
    L266 = 22EA :
    L267 = 22EC :
    L268 = 22EF : 2279
    L269 = 22F2 :
     L27 = 2027 :
    L270 = 22F5 :
    L271 = 22F8 :
    L272 = 22F8 :
    L273 = 22FA :
    L274 = 22FD :
    L275 = 2301 :
    L276 = 2303 :
    L277 = 2309 :
    L278 = 230C :
    L279 = 230E : 229E
     L28 = 2027 :
    L280 = 2311 :
    L281 = 2314 :
    L282 = 2317 :
    L283 = 231A : 22A6
    L284 = 231A :
    L285 = 231A :
    L286 = 231D :
    L287 = 231F :
    L288 = 2321 :
    L289 = 2325 :
     L29 = 2029 :
    L290 = 2327 :
    L291 = 232E :
    L292 = 2331 :
    L293 = 2333 :
    L294 = 2336 :
    L295 = 2339 : 22C5
    L296 = 233C :
    L297 = 233F :
    L298 = 233F : 22CD
    L299 = 2342 :
      L3 = 2009 :
     L30 = 202C :
    L300 = 2344 :
    L301 = 2346 :
    L302 = 2348 :
    L303 = 234E :
    L304 = 2351 :
    L305 = 2353 :
    L306 = 2356 :
    L307 = 2359 :
    L308 = 235C :
    L309 = 235F : 22E7
     L31 = 202C :
    L310 = 235F :
    L311 = 2362 :
    L312 = 2364 : 22EF
    L313 = 2366 :
    L314 = 2368 :
    L315 = 236E :
    L316 = 2371 :
    L317 = 2373 :
    L318 = 2376 :
    L319 = 2379 :
     L32 = 202C :
    L320 = 237C :
    L321 = 237F :
    L322 = 237F :
    L323 = 237F : 2309
    L324 = 237F :
    L325 = 237F :
    L326 = 237F :
    L327 = 2381 : 2311
    L328 = 2386 :
    L329 = 2388 :
     L33 = 202C :
    L330 = 238B :
    L331 = 238D :
    L332 = 2390 :
    L333 = 2393 :
    L334 = 2396 :
    L335 = 2399 :
    L336 = 2399 :
    L337 = 239B :
    L338 = 23A0 :
    L339 = 23A2 : 232E
     L34 = 202C :
    L340 = 23A5 :
    L341 = 23A7 :
    L342 = 23AA : 2336
    L343 = 23AD :
    L344 = 23B0 :
    L345 = 23B3 :
    L346 = 23B3 :
    L347 = 23B5 :
    L348 = 23BA :
    L349 = 23BC :
     L35 = 202C :
    L350 = 23BF :
    L351 = 23C1 :
    L352 = 23C4 :
    L353 = 23C7 : 234E
    L354 = 23CA :
    L355 = 23CD :
    L356 = 23CD : 2356
    L357 = 23CD :
    L358 = 23D0 :
    L359 = 23DE :
     L36 = 202C :
    L360 = 23E4 :
    L361 = 23E7 :
    L362 = 23E9 :
    L363 = 23EC :
    L364 = 23EF :
    L365 = 23F2 :
    L366 = 23F5 :
    L367 = 23F5 : 236E
    L368 = 23F8 :
    L369 = 2404 :
     L37 = 202C :
    L370 = 240A :
    L371 = 240D :
    L372 = 240F :
    L373 = 2412 :
    L374 = 2415 : 2376
    L375 = 2418 :
    L376 = 241B :
    L377 = 241B :
    L378 = 241E :
    L379 = 242C :
     L38 = 202C :
    L380 = 2432 :
    L381 = 2435 :
    L382 = 2437 :
    L383 = 243A : 2388
    L384 = 243D :
    L385 = 2440 :
    L386 = 2443 : 2390
    L387 = 2443 :
    L388 = 2443 :
    L389 = 2445 :
     L39 = 202E :
    L390 = 2448 :
    L391 = 2456 :
    L392 = 2458 :
    L393 = 245F :
    L394 = 2462 :
    L395 = 2464 : 23A2
    L396 = 2467 :
    L397 = 246A :
    L398 = 246D : 23AA
    L399 = 2470 :
      L4 = 2009 :
     L40 = 2030 :
    L400 = 2470 :
    L401 = 2472 :
    L402 = 2475 :
    L403 = 2481 :
    L404 = 2487 :
    L405 = 248A :
    L406 = 248C :
    L407 = 248F : 23BC
    L408 = 2492 :
    L409 = 2495 :
     L41 = 2032 :
    L410 = 2498 :
    L411 = 2498 : 23C4
    L412 = 249A :
    L413 = 249D :
    L414 = 24AB :
    L415 = 24B1 :
    L416 = 24B4 :
    L417 = 24B6 :
    L418 = 24B9 :
    L419 = 24BC :
     L42 = 2035 :
    L420 = 24BF : 23E4
    L421 = 24C2 :
    L422 = 24C2 :
    L423 = 24C2 : 23EC
    L424 = 24C5 :
    L425 = 24D3 :
    L426 = 24D5 :
    L427 = 24DC :
    L428 = 24DF :
    L429 = 24E1 :
     L43 = 2037 :
    L430 = 24E4 :
    L431 = 24E7 :
    L432 = 24EA : 240A
    L433 = 24ED :
    L434 = 24ED :
    L435 = 24F0 : 2412
    L436 = 24FC :
    L437 = 2502 :
    L438 = 2505 :
    L439 = 2507 :
     L44 = 203A :
    L440 = 250A :
    L441 = 250D :
    L442 = 2510 :
    L443 = 2513 :
    L444 = 2513 : 2432
    L445 = 2516 :
    L446 = 2524 :
    L447 = 252A :
    L448 = 252D : 243A
    L449 = 252F :
     L45 = 203D :
    L450 = 2532 :
    L451 = 2535 :
    L452 = 2538 :
    L453 = 253B :
    L454 = 253B :
    L455 = 253B :
    L456 = 253B :
    L457 = 253B :
    L458 = 253B :
    L459 = 253D : 245F
     L46 = 2040 :
    L460 = 253F :
    L461 = 2541 :
    L462 = 2544 : 2467
    L463 = 2546 :
    L464 = 2549 :
    L465 = 254C :
    L466 = 254F :
    L467 = 2552 :
    L468 = 2552 :
    L469 = 2554 :
     L47 = 2043 : 2032
    L470 = 2556 :
    L471 = 2558 :
    L472 = 255B : 2487
    L473 = 255D :
    L474 = 2560 :
    L475 = 2563 : 248F
    L476 = 2566 :
    L477 = 2569 :
    L478 = 2569 :
    L479 = 256B :
     L48 = 2043 :
    L480 = 256D :
    L481 = 256F :
    L482 = 2572 :
    L483 = 2574 :
    L484 = 2577 :
    L485 = 257A : 24B1
    L486 = 257D :
    L487 = 2580 :
    L488 = 2580 :
    L489 = 2580 : 24B9
     L49 = 2045 :
    L490 = 2583 :
    L491 = 2590 :
    L492 = 2596 :
    L493 = 2599 :
    L494 = 259B :
    L495 = 259E :
    L496 = 25A1 :
    L497 = 25A4 :
    L498 = 25A7 :
    L499 = 25A7 : 24DC
      L5 = 2009 :
     L50 = 2047 : 203A
    L500 = 25AA :
    L501 = 25B5 :
    L502 = 25BB : 24E4
    L503 = 25BE :
    L504 = 25C0 :
    L505 = 25C3 :
    L506 = 25C6 :
    L507 = 25C9 :
    L508 = 25CC :
    L509 = 25CC :
     L51 = 2049 :
    L510 = 25CF :
    L511 = 25DC : 2502
    L512 = 25E2 :
    L513 = 25E5 :
    L514 = 25E7 : 250A
    L515 = 25EA :
    L516 = 25ED :
    L517 = 25F0 :
    L518 = 25F3 :
    L519 = 25F3 :
     L52 = 204C :
    L520 = 25F3 :
    L521 = 25F5 :
    L522 = 25F8 :
    L523 = 2605 : 252A
    L524 = 2607 :
    L525 = 260E :
    L526 = 2611 :
    L527 = 2613 :
    L528 = 2616 :
    L529 = 2619 :
     L53 = 204E :
    L530 = 261C : 2532
    L531 = 261F :
    L532 = 261F :
    L533 = 2621 :
    L534 = 2624 :
    L535 = 262F :
    L536 = 2635 :
    L537 = 2638 :
    L538 = 263A :
    L539 = 263D : 2541
     L54 = 2051 :
    L540 = 2640 :
    L541 = 2643 :
    L542 = 2646 : 2549
    L543 = 2646 :
    L544 = 2648 :
    L545 = 264B :
    L546 = 2658 :
    L547 = 265E :
    L548 = 2661 :
    L549 = 2663 :
     L55 = 2054 :
    L550 = 2666 :
    L551 = 2669 : 2558
    L552 = 266C :
    L553 = 266F :
    L554 = 266F : 2560
    L555 = 266F :
    L556 = 2672 :
    L557 = 267F :
    L558 = 2681 :
    L559 = 2688 :
     L56 = 2057 :
    L560 = 268B :
    L561 = 268D :
    L562 = 2690 :
    L563 = 2693 : 256F
    L564 = 2696 :
    L565 = 2699 :
    L566 = 2699 :
    L567 = 269C : 2577
    L568 = 26A7 :
    L569 = 26AD :
     L57 = 205A :
    L570 = 26B0 :
    L571 = 26B2 :
    L572 = 26B5 :
    L573 = 26B8 :
    L574 = 26BB :
    L575 = 26BE :
    L576 = 26BE : 2596
    L577 = 26C1 :
    L578 = 26CE :
    L579 = 26D4 : 259E
     L58 = 205A :
    L580 = 26D7 :
    L581 = 26D9 :
    L582 = 26DC :
    L583 = 26DF :
    L584 = 26E2 :
    L585 = 26E5 :
    L586 = 26E5 :
    L587 = 26E5 :
    L588 = 26E5 : 25BB
    L589 = 26E5 :
     L59 = 205C : 2049
    L590 = 26E5 :
    L591 = 26E7 : 25C3
    L592 = 26E9 :
    L593 = 26EB :
    L594 = 26ED :
    L595 = 26F0 :
    L596 = 26F2 :
    L597 = 26F5 :
    L598 = 26F8 :
    L599 = 26FB :
      L6 = 2009 :
     L60 = 205E :
    L600 = 26FE : 25E2
    L601 = 26FE :
    L602 = 2700 :
    L603 = 2702 :
    L604 = 2704 : 25EA
    L605 = 2706 :
    L606 = 2709 :
    L607 = 270B :
    L608 = 270E :
    L609 = 2711 :
     L61 = 2060 :
    L610 = 2714 :
    L611 = 2717 :
    L612 = 2717 :
    L613 = 2719 :
    L614 = 271B :
    L615 = 271D : 260E
    L616 = 271F :
    L617 = 2722 :
    L618 = 2724 : 2616
    L619 = 2727 :
     L62 = 2063 : 2051
    L620 = 272A :
    L621 = 272D :
    L622 = 2730 :
    L623 = 2730 :
    L624 = 2730 :
    L625 = 2733 :
    L626 = 2737 :
    L627 = 2744 :
    L628 = 274A : 2635
    L629 = 274D :
     L63 = 2065 :
    L630 = 274F :
    L631 = 2752 : 263D
    L632 = 2755 :
    L633 = 2758 :
    L634 = 275B :
    L635 = 275B :
    L636 = 275E :
    L637 = 2762 :
    L638 = 276D :
    L639 = 2773 :
     L64 = 2068 :
    L640 = 2776 :
    L641 = 2778 : 265E
    L642 = 277B :
    L643 = 277E :
    L644 = 2781 :
    L645 = 2784 : 2666
    L646 = 2784 :
    L647 = 2787 :
    L648 = 278B :
    L649 = 2798 :
     L65 = 206B :
    L650 = 279E :
    L651 = 27A1 :
    L652 = 27A3 :
    L653 = 27A6 :
    L654 = 27A9 :
    L655 = 27AC : 2688
    L656 = 27AF :
    L657 = 27AF :
    L658 = 27AF : 2690
    L659 = 27B1 :
     L66 = 206E :
    L660 = 27B3 :
    L661 = 27B6 :
    L662 = 27C3 :
    L663 = 27C5 :
    L664 = 27CC :
    L665 = 27CF :
    L666 = 27D1 :
    L667 = 27D4 : 26AD
    L668 = 27D7 :
    L669 = 27DA :
     L67 = 2071 :
    L670 = 27DD : 26B5
    L671 = 27DD :
    L672 = 27DF :
    L673 = 27E1 :
    L674 = 27E4 :
    L675 = 27EF :
    L676 = 27F5 :
    L677 = 27F8 :
    L678 = 27FA :
    L679 = 27FD : 26D4
     L68 = 2071 :
    L680 = 2800 :
    L681 = 2803 :
    L682 = 2806 :
    L683 = 2806 :
    L684 = 2808 :
    L685 = 280A :
    L686 = 280D : 26DC
    L687 = 281A :
    L688 = 2820 :
    L689 = 2823 :
     L69 = 2071 :
    L690 = 2825 :
    L691 = 2828 :
    L692 = 282B :
    L693 = 282E :
    L694 = 2831 :
    L695 = 2831 :
    L696 = 2831 : 26ED
    L697 = 2834 :
    L698 = 2838 :
    L699 = 2845 : 26F5
      L7 = 200B :
     L70 = 2074 :
    L700 = 2847 :
    L701 = 284E :
    L702 = 2851 :
    L703 = 2853 :
    L704 = 2856 :
    L705 = 2859 :
    L706 = 285C :
    L707 = 285F :
    L708 = 285F :
    L709 = 2862 : 2706
     L71 = 2081 : 2060
    L710 = 2866 :
    L711 = 2871 :
    L712 = 2877 : 270E
    L713 = 287A :
    L714 = 287C :
    L715 = 287F :
    L716 = 2882 :
    L717 = 2885 :
    L718 = 2888 :
    L719 = 2888 :
     L72 = 2087 :
    L720 = 288B :
    L721 = 288F :
    L722 = 289C : 271F
    L723 = 28A2 :
    L724 = 28A5 :
    L725 = 28A7 :
    L726 = 28AA : 2727
    L727 = 28AD :
    L728 = 28B0 :
    L729 = 28B3 :
     L73 = 208A :
    L730 = 28B3 :
    L731 = 28B3 :
    L732 = 28B3 :
    L733 = 28B3 :
    L734 = 28B3 :
    L735 = 28B5 :
    L736 = 28B7 : 274A
    L737 = 28BA :
    L738 = 28BC :
    L739 = 28BE : 2752
     L74 = 208C :
    L740 = 28C0 :
    L741 = 28C3 :
    L742 = 28C5 :
    L743 = 28C8 :
    L744 = 28CB :
    L745 = 28CE :
    L746 = 28D1 :
    L747 = 28D1 :
    L748 = 28D3 :
    L749 = 28D5 : 2773
     L75 = 208F : 2068
    L750 = 28D8 :
    L751 = 28DA :
    L752 = 28DC : 277B
    L753 = 28DE :
    L754 = 28E1 :
    L755 = 28E3 :
    L756 = 28E6 :
    L757 = 28E9 :
    L758 = 28EC :
    L759 = 28EF :
     L76 = 2092 :
    L760 = 28EF :
    L761 = 28F1 :
    L762 = 28F3 : 279E
    L763 = 28F6 :
    L764 = 28F8 :
    L765 = 28FA :
    L766 = 28FC : 27A6
    L767 = 28FF :
    L768 = 2901 :
    L769 = 2904 :
     L77 = 2095 :
    L770 = 2907 :
    L771 = 290A :
    L772 = 290D :
    L773 = 290D :
    L774 = 290D :
    L775 = 2910 :
    L776 = 2914 :
    L777 = 2918 :
    L778 = 291C : 27CC
    L779 = 2927 :
     L78 = 2098 :
    L780 = 292D :
    L781 = 2930 : 27D4
    L782 = 2932 :
    L783 = 2935 :
    L784 = 2938 :
    L785 = 293B :
    L786 = 293E :
    L787 = 293E :
    L788 = 2941 :
    L789 = 2945 :
     L79 = 2098 :
    L790 = 2949 :
    L791 = 294D :
    L792 = 2956 : 27F5
    L793 = 295C :
    L794 = 295F :
    L795 = 2961 : 27FD
    L796 = 2964 :
    L797 = 2967 :
    L798 = 296A :
    L799 = 296D :
      L8 = 200E :
     L80 = 2098 :
    L800 = 296D :
    L801 = 2970 :
    L802 = 2974 :
    L803 = 2978 :
    L804 = 297C :
    L805 = 2987 :
    L806 = 298D : 2820
    L807 = 2990 :
    L808 = 2992 :
    L809 = 2995 :
     L81 = 209B :
    L810 = 2998 : 2828
    L811 = 299B :
    L812 = 299E :
    L813 = 299E :
    L814 = 299E :
    L815 = 29A0 :
    L816 = 29A2 :
    L817 = 29A5 :
    L818 = 29A9 :
    L819 = 29AD :
     L82 = 20A6 :
    L820 = 29AF :
    L821 = 29B6 : 284E
    L822 = 29B9 :
    L823 = 29BB :
    L824 = 29BE : 2856
    L825 = 29C1 :
    L826 = 29C4 :
    L827 = 29C7 :
    L828 = 29C7 :
    L829 = 29C9 :
     L83 = 20AC :
    L830 = 29CB :
    L831 = 29CE :
    L832 = 29D2 :
    L833 = 29D4 :
    L834 = 29DA : 2877
    L835 = 29DD :
    L836 = 29DF :
    L837 = 29E2 : 287F
    L838 = 29E5 :
    L839 = 29E8 :
     L84 = 20AF : 2087
    L840 = 29EB :
    L841 = 29EB :
    L842 = 29ED :
    L843 = 29EF :
    L844 = 29F2 :
    L845 = 29F6 :
    L846 = 29F8 :
    L847 = 29FE : 28A2
    L848 = 2A01 :
    L849 = 2A03 :
     L85 = 20B1 :
    L850 = 2A06 :
    L851 = 2A09 :
    L852 = 2A0C :
    L853 = 2A0F :
    L854 = 2A0F : 28AA
    L855 = 2A0F :
    L856 = 2A12 :
    L857 = 2A16 :
    L858 = 2A18 :
    L859 = 2A1A :
     L86 = 20B4 :
    L860 = 2A1E :
    L861 = 2A20 :
    L862 = 2A27 :
    L863 = 2A2A :
    L864 = 2A2C :
    L865 = 2A2F :
    L866 = 2A32 : 28C0
    L867 = 2A35 :
    L868 = 2A38 :
    L869 = 2A38 : 28C8
     L87 = 20B7 :
    L870 = 2A3B :
    L871 = 2A3F :
    L872 = 2A41 :
    L873 = 2A43 :
    L874 = 2A45 :
    L875 = 2A4B :
    L876 = 2A4E :
    L877 = 2A50 :
    L878 = 2A53 :
    L879 = 2A56 :
     L88 = 20BA : 208F
    L880 = 2A59 :
    L881 = 2A5C : 28DE
    L882 = 2A5C :
    L883 = 2A5F :
    L884 = 2A63 : 28E6
    L885 = 2A65 :
    L886 = 2A67 :
    L887 = 2A69 :
    L888 = 2A6F :
    L889 = 2A72 :
     L89 = 20BD :
    L890 = 2A74 :
    L891 = 2A77 :
    L892 = 2A7A :
    L893 = 2A7D :
    L894 = 2A80 :
    L895 = 2A80 :
    L896 = 2A80 : 28FC
    L897 = 2A80 :
    L898 = 2A80 :
    L899 = 2A80 :
      L9 = 200E :
     L90 = 20BD :
    L900 = 2A82 : 2904
    L901 = 2A84 :
    L902 = 2A89 :
    L903 = 2A8B :
    L904 = 2A8E :
    L905 = 2A90 :
    L906 = 2A93 :
    L907 = 2A96 :
    L908 = 2A99 :
    L909 = 2A9C :
     L91 = 20BD :
    L910 = 2A9C :
    L911 = 2A9E :
    L912 = 2AA0 : 292D
    L913 = 2AA5 :
    L914 = 2AA7 :
    L915 = 2AAA : 2935
    L916 = 2AAC :
    L917 = 2AAF :
    L918 = 2AB2 :
    L919 = 2AB5 :
     L92 = 20C0 :
    L920 = 2AB8 :
    L921 = 2AB8 :
    L922 = 2ABA :
    L923 = 2ABC :
    L924 = 2AC1 :
    L925 = 2AC3 :
    L926 = 2AC6 :
    L927 = 2AC8 : 295C
    L928 = 2ACB :
    L929 = 2ACE :
     L93 = 20CD :
    L930 = 2AD1 : 2964
    L931 = 2AD4 :
    L932 = 2AD4 :
    L933 = 2AD4 :
    L934 = 2AD7 :
    L935 = 2ADB :
    L936 = 2AE9 :
    L937 = 2AEF :
    L938 = 2AF2 :
    L939 = 2AF4 :
     L94 = 20D3 :
    L940 = 2AF7 :
    L941 = 2AFA :
    L942 = 2AFD : 298D
    L943 = 2B00 :
    L944 = 2B00 :
    L945 = 2B03 :
    L946 = 2B07 : 2995
    L947 = 2B13 :
    L948 = 2B19 :
    L949 = 2B1C :
     L95 = 20D6 :
    L950 = 2B1E :
    L951 = 2B21 :
    L952 = 2B24 :
    L953 = 2B27 :
    L954 = 2B2A :
    L955 = 2B2A :
    L956 = 2B2D :
    L957 = 2B31 :
    L958 = 2B3F :
    L959 = 2B45 : 29B6
     L96 = 20D8 :
    L960 = 2B48 :
    L961 = 2B4A :
    L962 = 2B4D : 29BE
    L963 = 2B50 :
    L964 = 2B53 :
    L965 = 2B56 :
    L966 = 2B56 :
    L967 = 2B56 :
    L968 = 2B58 :
    L969 = 2B5A :
     L97 = 20DB : 20AC
    L970 = 2B5D :
    L971 = 2B6B :
    L972 = 2B6D :
    L973 = 2B74 :
    L974 = 2B77 : 29DA
    L975 = 2B79 :
    L976 = 2B7C :
    L977 = 2B7F : 29E2
    L978 = 2B82 :
    L979 = 2B85 :
     L98 = 20DE :
    L980 = 2B85 :
    L981 = 2B87 :
    L982 = 2B89 :
    L983 = 2B8C :
    L984 = 2B98 :
    L985 = 2B9E :
    L986 = 2BA1 :
    L987 = 2BA3 :
    L988 = 2BA6 :
    L989 = 2BA9 : 29FE
     L99 = 20E1 :
    L990 = 2BAC :
    L991 = 2BAF :
    L992 = 2BAF :
    L993 = 2BB1 : 2A06
    L994 = 2BB3 :
    L995 = 2BB6 :
    L996 = 2BC4 :
    L997 = 2BCA :
    L998 = 2BCD :
    L999 = 2BCF :
   div16 = 3CD9 :
 div16_1 = 3CE2 : 3CF1
 div16_2 = 3CF0 : 3CEB
 div16_3 = 3CF1 : 3CEE
 div16_8 = 3CF9 : 3D60
div16_82 = 3CFE : 3D06
div16_83 = 3D06 : 3D02
    div8 = 3D0A : 3D2D
  div8_1 = 3D12 : 3D1D
 div8_16 = 3D24 :
div8_161 = 3D2B : 3D27
  div8_2 = 3D1D : 3D19
 getChar = 3BDB : 3D35
getChar1 = 3BE9 : 3BE0
   mul16 = 3C5D :
 mul1632 = 3C8C :
mul16321 = 3CAE : 3CAB
mul16322 = 3CB5 : 3CB2
  mul16S = 3CBF :
 mul16S1 = 3CC8 : 3CD4
 mul16S2 = 3CD3 : 3CCD 3CD0
mul16_10 = 3C76 : 3D3E
 mul16_8 = 3C7F :
 putBell = 3C35 :
 putCRLF = 3C1C : 3BFC 3D4F 3D77
 putChar = 3C0F : 3C06 3C1F 3C24 3C2B 3C33 3C37 3C58 3D6C
putChar1 = 3C10 : 3C15
putErase = 3C29 :
 putHexA = 3C44 : 3C3B 3C3F
putHexA1 = 3C4D : 3C49
putHexA2 = 3C58 : 3C54
putHexHL = 3C39 :
  putMsg = 3BF3 :
putSpace = 3C0D : 3C2E
 putStr1 = 3C01 : 3C09
 putStr2 = 3C0B : 3C04
    read = 3D31 :
   read1 = 3D35 : 3D38 3D45 3D48
   read2 = 3D4A : 3D3C
   start = 2000 :
  writeA = 3D7B : 3D74
 writeHL = 3D53 : 3D4C 3D7F
writeHL1 = 3D5E : 3D59 3D67
writeHL2 = 3D69 : 3D6F
writeHL3 = 3D6A : 3D5C
writeLineA = 3D74 : 2029 2037 204E 2065 208C 20B1 20D8 2104 212B 2154 217E 21A3
                : 21CA 21E6 2202 221E 224B 2276 22A3 22CA 22EC 230E 2333 2353
                : 2373 238D 23A7 23C1 23E9 240F 2437 2464 248C 24B6 24E1 2507
                : 252F 2546 255D 2574 259B 25C0 25E7 2613 263A 2663 268D 26B2
                : 26D9 26F2 270B 2724 274F 2778 27A3 27D1 27FA 2825 2853 287C
                : 28A7 28C5 28E3 2901 2932 2961 2992 29BB 29DF 2A03 2A2C 2A50
                : 2A74 2A90 2AAC 2AC8 2AF4 2B1E 2B4A 2B79 2BA3 2BCF 2BFE 2C28
                : 2C54 2C6D 2C86 2C9F 2CCA 2CF3 2D1E 2D4C 2D75 2DA0 2DCE 2DF7
                : 2E22 2E3A 2E52 2E6A 2E91 2EB6 2EDD 2F0A 2F32 2F5C 2F86 2FAB
                : 2FD2 2FEF 300C 3029 3056 3081 30AE 30D6 30F9 311C 3141 3161
                : 3181 319C 31B7 31D2 31FA 3220 3248 3276 329F 32CA 32F5 331B
                : 3343 335B 3373 338B 33B2 33D7 33FE 342B 3453 347D 34A7 34CC
                : 34F3 350B 3523 353B 3562 3587 35AE 35DB 3603 362D 3657 367C
                : 36A3 36C0 36DD 36FA 3727 3752 377F 37A7 37CA 37ED 3812 3832
                : 3852 386D 3888 38A3 38CB 38F1 3919 3947 3970 399B 39C6 39EC
                : 3A14 3A2B 3A42 3A59 3A80 3AA5 3ACC 3AF8 3B1F 3B48 3B72 3B97
                : 3BBE
writeLineHL = 3D4C : 2040 2057 206E 2095 20BA 20E1 210D 2134 215D 2187 21AC 21D3
                : 21EF 220B 2227 2254 227F 22AC 22D3 22F5 2317 233C 235C 237C
                : 2396 23B0 23CA 23F2 2418 2440 246D 2495 24BF 24EA 2510 2538
                : 254F 2566 257D 25A4 25C9 25F0 261C 2643 266C 2696 26BB 26E2
                : 26FB 2714 272D 2758 2781 27AC 27DA 2803 282E 285C 2885 28B0
                : 28CE 28EC 290A 293B 296A 299B 29C4 29E8 2A0C 2A35 2A59 2A7D
                : 2A99 2AB5 2AD1 2AFD 2B27 2B53 2B82 2BAC 2BD8 2C07 2C31 2C5D
                : 2C76 2C8F 2CA8 2CD3 2CFC 2D27 2D55 2D7E 2DA9 2DD7 2E00 2E2B
                : 2E43 2E5B 2E73 2E9A 2EBF 2EE6 2F13 2F3B 2F65 2F8F 2FB4 2FDB
                : 2FF8 3015 3032 305F 308A 30B7 30DF 3102 3125 314A 316A 318A
                : 31A5 31C0 31DB 3203 3229 3251 327F 32A8 32D3 32FE 3324 334C
                : 3364 337C 3394 33BB 33E0 3407 3434 345C 3486 34B0 34D5 34FC
                : 3514 352C 3544 356B 3590 35B7 35E4 360C 3636 3660 3685 36AC
                : 36C9 36E6 3703 3730 375B 3788 37B0 37D3 37F6 381B 383B 385B
                : 3876 3891 38AC 38D4 38FA 3922 3950 3979 39A4 39CF 39F5 3A1D
                : 3A34 3A4B 3A62 3A89 3AAE 3AD5 3B01 3B28 3B51 3B7B 3BA0 3BC7
                :
writeLineStr = 3BF9 : 3BCD
writeStr = 3C00 : 3BF4 3BF9
