2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testBitwiseOperators.j(0) /* Program to test bitwise operators and, or and xor. */
2009             L3:
2009                     ;;testBitwiseOperators.j(1) class TestBitwiseOperators {
2009             L4:
2009                     ;class TestBitwiseOperators []
2009             L5:
2009                     ;;testBitwiseOperators.j(2)   private static byte b1 = 0x1C;
2009             L6:
2009 3E 1C               LD    A,28
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testBitwiseOperators.j(3)   private static byte b2 = 0x07;
200E             L9:
200E 3E 07               LD    A,7
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testBitwiseOperators.j(4)   private static word w1 = 0x032C;
2013             L12:
2013 21 2C 03            LD    HL,812
2016             L13:
2016 22 02 50            LD    (05002H),HL
2019             L14:
2019                     ;;testBitwiseOperators.j(5)   private static word w2 = 0x1234;
2019             L15:
2019 21 34 12            LD    HL,4660
201C             L16:
201C 22 04 50            LD    (05004H),HL
201F             L17:
201F C3 22 20            JP    L24
2022             L18:
2022                     ;;testBitwiseOperators.j(6)   private static final byte fb1 = 0x1C;
2022             L19:
2022                     ;;testBitwiseOperators.j(7)   private static final byte fb2 = 0x07;
2022             L20:
2022                     ;;testBitwiseOperators.j(8)   private static final word fw1 = 0x032C;
2022             L21:
2022                     ;;testBitwiseOperators.j(9)   private static final word fw2 = 0x1234;
2022             L22:
2022                     ;;testBitwiseOperators.j(10) 
2022             L23:
2022                     ;;testBitwiseOperators.j(11)   public static void main() {
2022             L24:
2022                     ;method TestBitwiseOperators.main [public, static] void ()
2022             L25:
2022 DD E5               PUSH  IX
2024             L26:
2024 DD 21 00 00         LD    IX,0x0000
2028 DD 39               ADD   IX,SP
202A             L27:
202A             L28:
202A                     ;;testBitwiseOperators.j(12)     println(0);
202A             L29:
202A 3E 00               LD    A,0
202C             L30:
202C CD 5F 3D            CALL  writeLineA
202F             L31:
202F                     ;;testBitwiseOperators.j(13)     
202F             L32:
202F                     ;;testBitwiseOperators.j(14)     // Possible operand types: constant, acc, var, final var, stack8, stack16.
202F             L33:
202F                     ;;testBitwiseOperators.j(15)     // Possible data types: byte, word.
202F             L34:
202F                     ;;testBitwiseOperators.j(16)   
202F             L35:
202F                     ;;testBitwiseOperators.j(17)     //constant/constant
202F             L36:
202F                     ;;testBitwiseOperators.j(18)     //*****************
202F             L37:
202F                     ;;testBitwiseOperators.j(19)     //constant byte/constant byte
202F             L38:
202F                     ;;testBitwiseOperators.j(20)     if (0x07 & 0x1C == 0x04) println (1); else println (999); //0000.0111 & 0001.1100 = 0000.0100
202F             L39:
202F 3E 07               LD    A,7
2031             L40:
2031 E6 1C               AND   A,28
2033             L41:
2033 D6 04               SUB   A,4
2035             L42:
2035 C2 40 20            JP    NZ,L46
2038             L43:
2038 3E 01               LD    A,1
203A             L44:
203A CD 5F 3D            CALL  writeLineA
203D             L45:
203D C3 46 20            JP    L49
2040             L46:
2040 21 E7 03            LD    HL,999
2043             L47:
2043 CD 37 3D            CALL  writeLineHL
2046             L48:
2046                     ;;testBitwiseOperators.j(21)     if (0x07 | 0x1C == 0x1F) println (2); else println (999); //0000.0111 | 0001.1100 = 0001.1111
2046             L49:
2046 3E 07               LD    A,7
2048             L50:
2048 F6 1C               OR    A,28
204A             L51:
204A D6 1F               SUB   A,31
204C             L52:
204C C2 57 20            JP    NZ,L56
204F             L53:
204F 3E 02               LD    A,2
2051             L54:
2051 CD 5F 3D            CALL  writeLineA
2054             L55:
2054 C3 5D 20            JP    L59
2057             L56:
2057 21 E7 03            LD    HL,999
205A             L57:
205A CD 37 3D            CALL  writeLineHL
205D             L58:
205D                     ;;testBitwiseOperators.j(22)     if (0x07 ^ 0x1C == 0x1B) println (3); else println (999); //0000.0111 ^ 0001.1100 = 0001.1011
205D             L59:
205D 3E 07               LD    A,7
205F             L60:
205F EE 1C               XOR   A,28
2061             L61:
2061 D6 1B               SUB   A,27
2063             L62:
2063 C2 6E 20            JP    NZ,L66
2066             L63:
2066 3E 03               LD    A,3
2068             L64:
2068 CD 5F 3D            CALL  writeLineA
206B             L65:
206B C3 74 20            JP    L70
206E             L66:
206E 21 E7 03            LD    HL,999
2071             L67:
2071 CD 37 3D            CALL  writeLineHL
2074             L68:
2074                     ;;testBitwiseOperators.j(23)     //constant word/constant word
2074             L69:
2074                     ;;testBitwiseOperators.j(24)     if (0x1234 & 0x032C == 0x0224) println (4); else println (999);
2074             L70:
2074 21 34 12            LD    HL,4660
2077             L71:
2077 11 2C 03            LD    DE,812
207A C5                  PUSH  BC
207B 47                  LD    B,A
207C 7C                  LD    A,H
207D A2                  AND   A,D
207E 67                  LD    H,A
207F 7D                  LD    A,L
2080 A3                  AND   A,E
2081 6F                  LD    L,A
2082 78                  LD    A,B
2083 C1                  POP   BC
2084             L72:
2084 11 24 02            LD    DE,548
2087 B7                  OR    A
2088 ED 52               SBC   HL,DE
208A             L73:
208A C2 95 20            JP    NZ,L77
208D             L74:
208D 3E 04               LD    A,4
208F             L75:
208F CD 5F 3D            CALL  writeLineA
2092             L76:
2092 C3 9B 20            JP    L81
2095             L77:
2095 21 E7 03            LD    HL,999
2098             L78:
2098 CD 37 3D            CALL  writeLineHL
209B             L79:
209B                     ;;testBitwiseOperators.j(25)     //0001.0010.0011.0100 & 0000.0011.0010.1100 = 0000.0010.0010.0100
209B             L80:
209B                     ;;testBitwiseOperators.j(26)     if (0x1234 | 0x032C == 0x133C) println (5); else println (999);
209B             L81:
209B 21 34 12            LD    HL,4660
209E             L82:
209E 11 2C 03            LD    DE,812
20A1 47                  LD    B,A
20A2 7C                  LD    A,H
20A3 B2                  OR    A,D
20A4 67                  LD    H,A
20A5 7D                  LD    A,L
20A6 B3                  OR    A,E
20A7 6F                  LD    L,A
20A8 78                  LD    A,B
20A9             L83:
20A9 11 3C 13            LD    DE,4924
20AC B7                  OR    A
20AD ED 52               SBC   HL,DE
20AF             L84:
20AF C2 BA 20            JP    NZ,L88
20B2             L85:
20B2 3E 05               LD    A,5
20B4             L86:
20B4 CD 5F 3D            CALL  writeLineA
20B7             L87:
20B7 C3 C0 20            JP    L92
20BA             L88:
20BA 21 E7 03            LD    HL,999
20BD             L89:
20BD CD 37 3D            CALL  writeLineHL
20C0             L90:
20C0                     ;;testBitwiseOperators.j(27)     //0001.0010.0011.0100 | 0000.0011.0010.1100 = 0001.0011.0011.1100
20C0             L91:
20C0                     ;;testBitwiseOperators.j(28)     if (0x1234 ^ 0x032C == 0x1118) println (6); else println (999);
20C0             L92:
20C0 21 34 12            LD    HL,4660
20C3             L93:
20C3 11 2C 03            LD    DE,812
20C6 C5                  PUSH  BC
20C7 47                  LD    B,A
20C8 7C                  LD    A,H
20C9 AA                  XOR   A,D
20CA 67                  LD    H,A
20CB 7D                  LD    A,L
20CC AB                  XOR   A,E
20CD 6F                  LD    L,A
20CE 78                  LD    A,B
20CF C1                  POP   BC
20D0             L94:
20D0 11 18 11            LD    DE,4376
20D3 B7                  OR    A
20D4 ED 52               SBC   HL,DE
20D6             L95:
20D6 C2 E1 20            JP    NZ,L99
20D9             L96:
20D9 3E 06               LD    A,6
20DB             L97:
20DB CD 5F 3D            CALL  writeLineA
20DE             L98:
20DE C3 E7 20            JP    L104
20E1             L99:
20E1 21 E7 03            LD    HL,999
20E4             L100:
20E4 CD 37 3D            CALL  writeLineHL
20E7             L101:
20E7                     ;;testBitwiseOperators.j(29)     //0001.0010.0011.0100 ^ 0000.0011.0010.1100 = 0001.0001.0001.1000
20E7             L102:
20E7                     ;;testBitwiseOperators.j(30)     //constant byte/constant word
20E7             L103:
20E7                     ;;testBitwiseOperators.j(31)     if (0x1C & 0x1234 == 0x0014) println (7); else println (999); //0001.1100 & 0001.0010.0011.0100 = 0000.0000.0001.0100
20E7             L104:
20E7 3E 1C               LD    A,28
20E9             L105:
20E9 6F                  LD    L,A
20EA 26 00               LD    H,0
20EC             L106:
20EC 11 34 12            LD    DE,4660
20EF C5                  PUSH  BC
20F0 47                  LD    B,A
20F1 7C                  LD    A,H
20F2 A2                  AND   A,D
20F3 67                  LD    H,A
20F4 7D                  LD    A,L
20F5 A3                  AND   A,E
20F6 6F                  LD    L,A
20F7 78                  LD    A,B
20F8 C1                  POP   BC
20F9             L107:
20F9 3E 14               LD    A,20
20FB             L108:
20FB 5F                  LD    E,A
20FC 16 00               LD    D,0
20FE EB                  EX    DE,HL
20FF B7                  OR    A
2100 ED 52               SBC   HL,DE
2102             L109:
2102 C2 0D 21            JP    NZ,L113
2105             L110:
2105 3E 07               LD    A,7
2107             L111:
2107 CD 5F 3D            CALL  writeLineA
210A             L112:
210A C3 13 21            JP    L116
210D             L113:
210D 21 E7 03            LD    HL,999
2110             L114:
2110 CD 37 3D            CALL  writeLineHL
2113             L115:
2113                     ;;testBitwiseOperators.j(32)     if (0x1C | 0x1234 == 0x123C) println (8); else println (999); //0001.1100 | 0001.0010.0011.0100 = 0001.0010.0011.1100
2113             L116:
2113 3E 1C               LD    A,28
2115             L117:
2115 6F                  LD    L,A
2116 26 00               LD    H,0
2118             L118:
2118 11 34 12            LD    DE,4660
211B 47                  LD    B,A
211C 7C                  LD    A,H
211D B2                  OR    A,D
211E 67                  LD    H,A
211F 7D                  LD    A,L
2120 B3                  OR    A,E
2121 6F                  LD    L,A
2122 78                  LD    A,B
2123             L119:
2123 11 3C 12            LD    DE,4668
2126 B7                  OR    A
2127 ED 52               SBC   HL,DE
2129             L120:
2129 C2 34 21            JP    NZ,L124
212C             L121:
212C 3E 08               LD    A,8
212E             L122:
212E CD 5F 3D            CALL  writeLineA
2131             L123:
2131 C3 3A 21            JP    L127
2134             L124:
2134 21 E7 03            LD    HL,999
2137             L125:
2137 CD 37 3D            CALL  writeLineHL
213A             L126:
213A                     ;;testBitwiseOperators.j(33)     if (0x1C ^ 0x1234 == 0x1228) println (9); else println (999); //0001.1100 ^ 0001.0010.0011.0100 = 0001.0010.0010.1000
213A             L127:
213A 3E 1C               LD    A,28
213C             L128:
213C 6F                  LD    L,A
213D 26 00               LD    H,0
213F             L129:
213F 11 34 12            LD    DE,4660
2142 C5                  PUSH  BC
2143 47                  LD    B,A
2144 7C                  LD    A,H
2145 AA                  XOR   A,D
2146 67                  LD    H,A
2147 7D                  LD    A,L
2148 AB                  XOR   A,E
2149 6F                  LD    L,A
214A 78                  LD    A,B
214B C1                  POP   BC
214C             L130:
214C 11 28 12            LD    DE,4648
214F B7                  OR    A
2150 ED 52               SBC   HL,DE
2152             L131:
2152 C2 5D 21            JP    NZ,L135
2155             L132:
2155 3E 09               LD    A,9
2157             L133:
2157 CD 5F 3D            CALL  writeLineA
215A             L134:
215A C3 63 21            JP    L139
215D             L135:
215D 21 E7 03            LD    HL,999
2160             L136:
2160 CD 37 3D            CALL  writeLineHL
2163             L137:
2163                     ;;testBitwiseOperators.j(34)     //constant word/constant byte
2163             L138:
2163                     ;;testBitwiseOperators.j(35)     if (0x1234 & 0x1C == 0x0014) println (10); else println (999); //0001.0010.0011.0100 & 0001.1100 = 0000.0000.0001.0100
2163             L139:
2163 21 34 12            LD    HL,4660
2166             L140:
2166 5F                  LD    E,A
2167 3E 1C               LD    A,28
2169 A5                  AND   A,L
216A 6F                  LD    L,A
216B 7B                  LD    A,E
216C 26 00               LD    H,0
216E             L141:
216E 3E 14               LD    A,20
2170             L142:
2170 5F                  LD    E,A
2171 16 00               LD    D,0
2173 EB                  EX    DE,HL
2174 B7                  OR    A
2175 ED 52               SBC   HL,DE
2177             L143:
2177 C2 82 21            JP    NZ,L147
217A             L144:
217A 3E 0A               LD    A,10
217C             L145:
217C CD 5F 3D            CALL  writeLineA
217F             L146:
217F C3 88 21            JP    L150
2182             L147:
2182 21 E7 03            LD    HL,999
2185             L148:
2185 CD 37 3D            CALL  writeLineHL
2188             L149:
2188                     ;;testBitwiseOperators.j(36)     if (0x1234 | 0x1C == 0x123C) println (11); else println (999); //0001.0010.0011.0100 | 0001.1100 = 0001.0010.0011.1100
2188             L150:
2188 21 34 12            LD    HL,4660
218B             L151:
218B 11 1C 00            LD    DE,28
218E 47                  LD    B,A
218F 7C                  LD    A,H
2190 B2                  OR    A,D
2191 67                  LD    H,A
2192 7D                  LD    A,L
2193 B3                  OR    A,E
2194 6F                  LD    L,A
2195 78                  LD    A,B
2196             L152:
2196 11 3C 12            LD    DE,4668
2199 B7                  OR    A
219A ED 52               SBC   HL,DE
219C             L153:
219C C2 A7 21            JP    NZ,L157
219F             L154:
219F 3E 0B               LD    A,11
21A1             L155:
21A1 CD 5F 3D            CALL  writeLineA
21A4             L156:
21A4 C3 AD 21            JP    L160
21A7             L157:
21A7 21 E7 03            LD    HL,999
21AA             L158:
21AA CD 37 3D            CALL  writeLineHL
21AD             L159:
21AD                     ;;testBitwiseOperators.j(37)     if (0x1234 ^ 0x1C == 0x1228) println (12); else println (999); //0001.0010.0011.0100 ^ 0001.1100 = 0001.0010.0010.1000
21AD             L160:
21AD 21 34 12            LD    HL,4660
21B0             L161:
21B0 11 1C 00            LD    DE,28
21B3 C5                  PUSH  BC
21B4 47                  LD    B,A
21B5 7C                  LD    A,H
21B6 AA                  XOR   A,D
21B7 67                  LD    H,A
21B8 7D                  LD    A,L
21B9 AB                  XOR   A,E
21BA 6F                  LD    L,A
21BB 78                  LD    A,B
21BC C1                  POP   BC
21BD             L162:
21BD 11 28 12            LD    DE,4648
21C0 B7                  OR    A
21C1 ED 52               SBC   HL,DE
21C3             L163:
21C3 C2 CE 21            JP    NZ,L167
21C6             L164:
21C6 3E 0C               LD    A,12
21C8             L165:
21C8 CD 5F 3D            CALL  writeLineA
21CB             L166:
21CB C3 D4 21            JP    L174
21CE             L167:
21CE 21 E7 03            LD    HL,999
21D1             L168:
21D1 CD 37 3D            CALL  writeLineHL
21D4             L169:
21D4                     ;;testBitwiseOperators.j(38)   
21D4             L170:
21D4                     ;;testBitwiseOperators.j(39)     //constant/acc
21D4             L171:
21D4                     ;;testBitwiseOperators.j(40)     //************
21D4             L172:
21D4                     ;;testBitwiseOperators.j(41)     //constant byte/acc byte
21D4             L173:
21D4                     ;;testBitwiseOperators.j(42)     if (0x07 & (0x10 + 0x0C) == 0x04) println (13); else println (999);
21D4             L174:
21D4 3E 07               LD    A,7
21D6             L175:
21D6 F5                  PUSH  AF
21D7 3E 10               LD    A,16
21D9             L176:
21D9 C6 0C               ADD   A,12
21DB             L177:
21DB C1                  POP   BC
21DC A0                  AND   A,B
21DD             L178:
21DD D6 04               SUB   A,4
21DF             L179:
21DF C2 EA 21            JP    NZ,L183
21E2             L180:
21E2 3E 0D               LD    A,13
21E4             L181:
21E4 CD 5F 3D            CALL  writeLineA
21E7             L182:
21E7 C3 F0 21            JP    L186
21EA             L183:
21EA 21 E7 03            LD    HL,999
21ED             L184:
21ED CD 37 3D            CALL  writeLineHL
21F0             L185:
21F0                     ;;testBitwiseOperators.j(43)     if (0x07 | (0x10 + 0x0C) == 0x1F) println (14); else println (999);
21F0             L186:
21F0 3E 07               LD    A,7
21F2             L187:
21F2 F5                  PUSH  AF
21F3 3E 10               LD    A,16
21F5             L188:
21F5 C6 0C               ADD   A,12
21F7             L189:
21F7 C1                  POP   BC
21F8 B0                  OR    A,B
21F9             L190:
21F9 D6 1F               SUB   A,31
21FB             L191:
21FB C2 06 22            JP    NZ,L195
21FE             L192:
21FE 3E 0E               LD    A,14
2200             L193:
2200 CD 5F 3D            CALL  writeLineA
2203             L194:
2203 C3 0C 22            JP    L198
2206             L195:
2206 21 E7 03            LD    HL,999
2209             L196:
2209 CD 37 3D            CALL  writeLineHL
220C             L197:
220C                     ;;testBitwiseOperators.j(44)     if (0x07 ^ (0x10 + 0x0C) == 0x1B) println (15); else println (999);
220C             L198:
220C 3E 07               LD    A,7
220E             L199:
220E F5                  PUSH  AF
220F 3E 10               LD    A,16
2211             L200:
2211 C6 0C               ADD   A,12
2213             L201:
2213 C1                  POP   BC
2214 A8                  XOR   A,B
2215             L202:
2215 D6 1B               SUB   A,27
2217             L203:
2217 C2 22 22            JP    NZ,L207
221A             L204:
221A 3E 0F               LD    A,15
221C             L205:
221C CD 5F 3D            CALL  writeLineA
221F             L206:
221F C3 28 22            JP    L211
2222             L207:
2222 21 E7 03            LD    HL,999
2225             L208:
2225 CD 37 3D            CALL  writeLineHL
2228             L209:
2228                     ;;testBitwiseOperators.j(45)     //constant word/acc word
2228             L210:
2228                     ;;testBitwiseOperators.j(46)     if (0x1234 & 0x0100 + 0x022C == 0x0224) println (16); else println (999);
2228             L211:
2228 21 34 12            LD    HL,4660
222B             L212:
222B E5                  PUSH  HL
222C 21 00 01            LD    HL,256
222F             L213:
222F 11 2C 02            LD    DE,556
2232 19                  ADD   HL,DE
2233             L214:
2233 D1                  POP   DE
2234 C5                  PUSH  BC
2235 47                  LD    B,A
2236 7C                  LD    A,H
2237 A2                  AND   A,D
2238 67                  LD    H,A
2239 7D                  LD    A,L
223A A3                  AND   A,E
223B 6F                  LD    L,A
223C 78                  LD    A,B
223D C1                  POP   BC
223E             L215:
223E 11 24 02            LD    DE,548
2241 B7                  OR    A
2242 ED 52               SBC   HL,DE
2244             L216:
2244 C2 4F 22            JP    NZ,L220
2247             L217:
2247 3E 10               LD    A,16
2249             L218:
2249 CD 5F 3D            CALL  writeLineA
224C             L219:
224C C3 55 22            JP    L223
224F             L220:
224F 21 E7 03            LD    HL,999
2252             L221:
2252 CD 37 3D            CALL  writeLineHL
2255             L222:
2255                     ;;testBitwiseOperators.j(47)     if (0x1234 | 0x0100 + 0x022C == 0x133C) println (17); else println (999);
2255             L223:
2255 21 34 12            LD    HL,4660
2258             L224:
2258 E5                  PUSH  HL
2259 21 00 01            LD    HL,256
225C             L225:
225C 11 2C 02            LD    DE,556
225F 19                  ADD   HL,DE
2260             L226:
2260 D1                  POP   DE
2261 47                  LD    B,A
2262 7C                  LD    A,H
2263 B2                  OR    A,D
2264 67                  LD    H,A
2265 7D                  LD    A,L
2266 B3                  OR    A,E
2267 6F                  LD    L,A
2268 78                  LD    A,B
2269             L227:
2269 11 3C 13            LD    DE,4924
226C B7                  OR    A
226D ED 52               SBC   HL,DE
226F             L228:
226F C2 7A 22            JP    NZ,L232
2272             L229:
2272 3E 11               LD    A,17
2274             L230:
2274 CD 5F 3D            CALL  writeLineA
2277             L231:
2277 C3 80 22            JP    L235
227A             L232:
227A 21 E7 03            LD    HL,999
227D             L233:
227D CD 37 3D            CALL  writeLineHL
2280             L234:
2280                     ;;testBitwiseOperators.j(48)     if (0x1234 ^ 0x0100 + 0x022C == 0x1118) println (18); else println (999);
2280             L235:
2280 21 34 12            LD    HL,4660
2283             L236:
2283 E5                  PUSH  HL
2284 21 00 01            LD    HL,256
2287             L237:
2287 11 2C 02            LD    DE,556
228A 19                  ADD   HL,DE
228B             L238:
228B D1                  POP   DE
228C C5                  PUSH  BC
228D 47                  LD    B,A
228E 7C                  LD    A,H
228F AA                  XOR   A,D
2290 67                  LD    H,A
2291 7D                  LD    A,L
2292 AB                  XOR   A,E
2293 6F                  LD    L,A
2294 78                  LD    A,B
2295 C1                  POP   BC
2296             L239:
2296 11 18 11            LD    DE,4376
2299 B7                  OR    A
229A ED 52               SBC   HL,DE
229C             L240:
229C C2 A7 22            JP    NZ,L244
229F             L241:
229F 3E 12               LD    A,18
22A1             L242:
22A1 CD 5F 3D            CALL  writeLineA
22A4             L243:
22A4 C3 AD 22            JP    L248
22A7             L244:
22A7 21 E7 03            LD    HL,999
22AA             L245:
22AA CD 37 3D            CALL  writeLineHL
22AD             L246:
22AD                     ;;testBitwiseOperators.j(49)     //constant byte/acc word
22AD             L247:
22AD                     ;;testBitwiseOperators.j(50)     if (0x1C & 0x1000 + 0x0234 == 0x0014) println (19); else println (999);
22AD             L248:
22AD 3E 1C               LD    A,28
22AF             L249:
22AF 21 00 10            LD    HL,4096
22B2             L250:
22B2 11 34 02            LD    DE,564
22B5 19                  ADD   HL,DE
22B6             L251:
22B6 5F                  LD    E,A
22B7 A5                  AND   A,L
22B8 6F                  LD    L,A
22B9 7B                  LD    A,E
22BA 26 00               LD    H,0
22BC             L252:
22BC 3E 14               LD    A,20
22BE             L253:
22BE 5F                  LD    E,A
22BF 16 00               LD    D,0
22C1 EB                  EX    DE,HL
22C2 B7                  OR    A
22C3 ED 52               SBC   HL,DE
22C5             L254:
22C5 C2 D0 22            JP    NZ,L258
22C8             L255:
22C8 3E 13               LD    A,19
22CA             L256:
22CA CD 5F 3D            CALL  writeLineA
22CD             L257:
22CD C3 D6 22            JP    L261
22D0             L258:
22D0 21 E7 03            LD    HL,999
22D3             L259:
22D3 CD 37 3D            CALL  writeLineHL
22D6             L260:
22D6                     ;;testBitwiseOperators.j(51)     if (0x1C | 0x1000 + 0x0234 == 0x123C) println (20); else println (999);
22D6             L261:
22D6 3E 1C               LD    A,28
22D8             L262:
22D8 21 00 10            LD    HL,4096
22DB             L263:
22DB 11 34 02            LD    DE,564
22DE 19                  ADD   HL,DE
22DF             L264:
22DF B5                  OR    A,L
22E0 6F                  LD    L,A
22E1             L265:
22E1 11 3C 12            LD    DE,4668
22E4 B7                  OR    A
22E5 ED 52               SBC   HL,DE
22E7             L266:
22E7 C2 F2 22            JP    NZ,L270
22EA             L267:
22EA 3E 14               LD    A,20
22EC             L268:
22EC CD 5F 3D            CALL  writeLineA
22EF             L269:
22EF C3 F8 22            JP    L273
22F2             L270:
22F2 21 E7 03            LD    HL,999
22F5             L271:
22F5 CD 37 3D            CALL  writeLineHL
22F8             L272:
22F8                     ;;testBitwiseOperators.j(52)     if (0x1C ^ 0x1000 + 0x0234 == 0x1228) println (21); else println (999);
22F8             L273:
22F8 3E 1C               LD    A,28
22FA             L274:
22FA 21 00 10            LD    HL,4096
22FD             L275:
22FD 11 34 02            LD    DE,564
2300 19                  ADD   HL,DE
2301             L276:
2301 AD                  XOR   A,L
2302 6F                  LD    L,A
2303             L277:
2303 11 28 12            LD    DE,4648
2306 B7                  OR    A
2307 ED 52               SBC   HL,DE
2309             L278:
2309 C2 14 23            JP    NZ,L282
230C             L279:
230C 3E 15               LD    A,21
230E             L280:
230E CD 5F 3D            CALL  writeLineA
2311             L281:
2311 C3 1A 23            JP    L286
2314             L282:
2314 21 E7 03            LD    HL,999
2317             L283:
2317 CD 37 3D            CALL  writeLineHL
231A             L284:
231A                     ;;testBitwiseOperators.j(53)     //constant word/acc byte
231A             L285:
231A                     ;;testBitwiseOperators.j(54)     if (0x1234 & 0x10 + 0x0C == 0x0014) println (22); else println (999);
231A             L286:
231A 21 34 12            LD    HL,4660
231D             L287:
231D 3E 10               LD    A,16
231F             L288:
231F C6 0C               ADD   A,12
2321             L289:
2321 5F                  LD    E,A
2322 A5                  AND   A,L
2323 6F                  LD    L,A
2324 7B                  LD    A,E
2325 26 00               LD    H,0
2327             L290:
2327 3E 14               LD    A,20
2329             L291:
2329 5F                  LD    E,A
232A 16 00               LD    D,0
232C EB                  EX    DE,HL
232D B7                  OR    A
232E ED 52               SBC   HL,DE
2330             L292:
2330 C2 3B 23            JP    NZ,L296
2333             L293:
2333 3E 16               LD    A,22
2335             L294:
2335 CD 5F 3D            CALL  writeLineA
2338             L295:
2338 C3 41 23            JP    L299
233B             L296:
233B 21 E7 03            LD    HL,999
233E             L297:
233E CD 37 3D            CALL  writeLineHL
2341             L298:
2341                     ;;testBitwiseOperators.j(55)     if (0x1234 | 0x10 + 0x0C == 0x123C) println (23); else println (999);
2341             L299:
2341 21 34 12            LD    HL,4660
2344             L300:
2344 3E 10               LD    A,16
2346             L301:
2346 C6 0C               ADD   A,12
2348             L302:
2348 B5                  OR    A,L
2349 6F                  LD    L,A
234A             L303:
234A 11 3C 12            LD    DE,4668
234D B7                  OR    A
234E ED 52               SBC   HL,DE
2350             L304:
2350 C2 5B 23            JP    NZ,L308
2353             L305:
2353 3E 17               LD    A,23
2355             L306:
2355 CD 5F 3D            CALL  writeLineA
2358             L307:
2358 C3 61 23            JP    L311
235B             L308:
235B 21 E7 03            LD    HL,999
235E             L309:
235E CD 37 3D            CALL  writeLineHL
2361             L310:
2361                     ;;testBitwiseOperators.j(56)     if (0x1234 ^ 0x10 + 0x0C == 0x1228) println (24); else println (999);
2361             L311:
2361 21 34 12            LD    HL,4660
2364             L312:
2364 3E 10               LD    A,16
2366             L313:
2366 C6 0C               ADD   A,12
2368             L314:
2368 AD                  XOR   A,L
2369 6F                  LD    L,A
236A             L315:
236A 11 28 12            LD    DE,4648
236D B7                  OR    A
236E ED 52               SBC   HL,DE
2370             L316:
2370 C2 7B 23            JP    NZ,L320
2373             L317:
2373 3E 18               LD    A,24
2375             L318:
2375 CD 5F 3D            CALL  writeLineA
2378             L319:
2378 C3 81 23            JP    L327
237B             L320:
237B 21 E7 03            LD    HL,999
237E             L321:
237E CD 37 3D            CALL  writeLineHL
2381             L322:
2381                     ;;testBitwiseOperators.j(57)   
2381             L323:
2381                     ;;testBitwiseOperators.j(58)     //constant/var
2381             L324:
2381                     ;;testBitwiseOperators.j(59)     //*****************
2381             L325:
2381                     ;;testBitwiseOperators.j(60)     //constant byte/var byte
2381             L326:
2381                     ;;testBitwiseOperators.j(61)     if (0x07 & b1 == 0x04) println (25); else println (999);
2381             L327:
2381 3E 07               LD    A,7
2383             L328:
2383 47                  LD    B,A
2384 3A 00 50            LD    A,(05000H)
2387 A0                  AND   A,B
2388             L329:
2388 D6 04               SUB   A,4
238A             L330:
238A C2 95 23            JP    NZ,L334
238D             L331:
238D 3E 19               LD    A,25
238F             L332:
238F CD 5F 3D            CALL  writeLineA
2392             L333:
2392 C3 9B 23            JP    L337
2395             L334:
2395 21 E7 03            LD    HL,999
2398             L335:
2398 CD 37 3D            CALL  writeLineHL
239B             L336:
239B                     ;;testBitwiseOperators.j(62)     if (0x07 | b1 == 0x1F) println (26); else println (999);
239B             L337:
239B 3E 07               LD    A,7
239D             L338:
239D 47                  LD    B,A
239E 3A 00 50            LD    A,(05000H)
23A1 B0                  OR    A,B
23A2             L339:
23A2 D6 1F               SUB   A,31
23A4             L340:
23A4 C2 AF 23            JP    NZ,L344
23A7             L341:
23A7 3E 1A               LD    A,26
23A9             L342:
23A9 CD 5F 3D            CALL  writeLineA
23AC             L343:
23AC C3 B5 23            JP    L347
23AF             L344:
23AF 21 E7 03            LD    HL,999
23B2             L345:
23B2 CD 37 3D            CALL  writeLineHL
23B5             L346:
23B5                     ;;testBitwiseOperators.j(63)     if (0x07 ^ b1 == 0x1B) println (27); else println (999);
23B5             L347:
23B5 3E 07               LD    A,7
23B7             L348:
23B7 47                  LD    B,A
23B8 3A 00 50            LD    A,(05000H)
23BB A8                  XOR   A,B
23BC             L349:
23BC D6 1B               SUB   A,27
23BE             L350:
23BE C2 C9 23            JP    NZ,L354
23C1             L351:
23C1 3E 1B               LD    A,27
23C3             L352:
23C3 CD 5F 3D            CALL  writeLineA
23C6             L353:
23C6 C3 CF 23            JP    L358
23C9             L354:
23C9 21 E7 03            LD    HL,999
23CC             L355:
23CC CD 37 3D            CALL  writeLineHL
23CF             L356:
23CF                     ;;testBitwiseOperators.j(64)     //constant word/var word
23CF             L357:
23CF                     ;;testBitwiseOperators.j(65)     if (0x1234 & w1 == 0x0224) println (28); else println (999);
23CF             L358:
23CF 21 34 12            LD    HL,4660
23D2             L359:
23D2 ED 5B 02 50         LD    DE,(05002H)
23D6 C5                  PUSH  BC
23D7 47                  LD    B,A
23D8 7C                  LD    A,H
23D9 A2                  AND   A,D
23DA 67                  LD    H,A
23DB 7D                  LD    A,L
23DC A3                  AND   A,E
23DD 6F                  LD    L,A
23DE 78                  LD    A,B
23DF C1                  POP   BC
23E0             L360:
23E0 11 24 02            LD    DE,548
23E3 B7                  OR    A
23E4 ED 52               SBC   HL,DE
23E6             L361:
23E6 C2 F1 23            JP    NZ,L365
23E9             L362:
23E9 3E 1C               LD    A,28
23EB             L363:
23EB CD 5F 3D            CALL  writeLineA
23EE             L364:
23EE C3 F7 23            JP    L368
23F1             L365:
23F1 21 E7 03            LD    HL,999
23F4             L366:
23F4 CD 37 3D            CALL  writeLineHL
23F7             L367:
23F7                     ;;testBitwiseOperators.j(66)     if (0x1234 | w1 == 0x133C) println (29); else println (999);
23F7             L368:
23F7 21 34 12            LD    HL,4660
23FA             L369:
23FA ED 5B 02 50         LD    DE,(05002H)
23FE 47                  LD    B,A
23FF 7C                  LD    A,H
2400 B2                  OR    A,D
2401 67                  LD    H,A
2402 7D                  LD    A,L
2403 B3                  OR    A,E
2404 6F                  LD    L,A
2405 78                  LD    A,B
2406             L370:
2406 11 3C 13            LD    DE,4924
2409 B7                  OR    A
240A ED 52               SBC   HL,DE
240C             L371:
240C C2 17 24            JP    NZ,L375
240F             L372:
240F 3E 1D               LD    A,29
2411             L373:
2411 CD 5F 3D            CALL  writeLineA
2414             L374:
2414 C3 1D 24            JP    L378
2417             L375:
2417 21 E7 03            LD    HL,999
241A             L376:
241A CD 37 3D            CALL  writeLineHL
241D             L377:
241D                     ;;testBitwiseOperators.j(67)     if (0x1234 ^ w1 == 0x1118) println (30); else println (999);
241D             L378:
241D 21 34 12            LD    HL,4660
2420             L379:
2420 ED 5B 02 50         LD    DE,(05002H)
2424 C5                  PUSH  BC
2425 47                  LD    B,A
2426 7C                  LD    A,H
2427 AA                  XOR   A,D
2428 67                  LD    H,A
2429 7D                  LD    A,L
242A AB                  XOR   A,E
242B 6F                  LD    L,A
242C 78                  LD    A,B
242D C1                  POP   BC
242E             L380:
242E 11 18 11            LD    DE,4376
2431 B7                  OR    A
2432 ED 52               SBC   HL,DE
2434             L381:
2434 C2 3F 24            JP    NZ,L385
2437             L382:
2437 3E 1E               LD    A,30
2439             L383:
2439 CD 5F 3D            CALL  writeLineA
243C             L384:
243C C3 45 24            JP    L389
243F             L385:
243F 21 E7 03            LD    HL,999
2442             L386:
2442 CD 37 3D            CALL  writeLineHL
2445             L387:
2445                     ;;testBitwiseOperators.j(68)     //constant byte/var word
2445             L388:
2445                     ;;testBitwiseOperators.j(69)     if (0x1C & w2 == 0x0014) println (31); else println (999);
2445             L389:
2445 3E 1C               LD    A,28
2447             L390:
2447 6F                  LD    L,A
2448 26 00               LD    H,0
244A             L391:
244A ED 5B 04 50         LD    DE,(05004H)
244E C5                  PUSH  BC
244F 47                  LD    B,A
2450 7C                  LD    A,H
2451 A2                  AND   A,D
2452 67                  LD    H,A
2453 7D                  LD    A,L
2454 A3                  AND   A,E
2455 6F                  LD    L,A
2456 78                  LD    A,B
2457 C1                  POP   BC
2458             L392:
2458 3E 14               LD    A,20
245A             L393:
245A 5F                  LD    E,A
245B 16 00               LD    D,0
245D EB                  EX    DE,HL
245E B7                  OR    A
245F ED 52               SBC   HL,DE
2461             L394:
2461 C2 6C 24            JP    NZ,L398
2464             L395:
2464 3E 1F               LD    A,31
2466             L396:
2466 CD 5F 3D            CALL  writeLineA
2469             L397:
2469 C3 72 24            JP    L401
246C             L398:
246C 21 E7 03            LD    HL,999
246F             L399:
246F CD 37 3D            CALL  writeLineHL
2472             L400:
2472                     ;;testBitwiseOperators.j(70)     if (0x1C | w2 == 0x123C) println (32); else println (999);
2472             L401:
2472 3E 1C               LD    A,28
2474             L402:
2474 6F                  LD    L,A
2475 26 00               LD    H,0
2477             L403:
2477 ED 5B 04 50         LD    DE,(05004H)
247B 47                  LD    B,A
247C 7C                  LD    A,H
247D B2                  OR    A,D
247E 67                  LD    H,A
247F 7D                  LD    A,L
2480 B3                  OR    A,E
2481 6F                  LD    L,A
2482 78                  LD    A,B
2483             L404:
2483 11 3C 12            LD    DE,4668
2486 B7                  OR    A
2487 ED 52               SBC   HL,DE
2489             L405:
2489 C2 94 24            JP    NZ,L409
248C             L406:
248C 3E 20               LD    A,32
248E             L407:
248E CD 5F 3D            CALL  writeLineA
2491             L408:
2491 C3 9A 24            JP    L412
2494             L409:
2494 21 E7 03            LD    HL,999
2497             L410:
2497 CD 37 3D            CALL  writeLineHL
249A             L411:
249A                     ;;testBitwiseOperators.j(71)     if (0x1C ^ w2 == 0x1228) println (33); else println (999);
249A             L412:
249A 3E 1C               LD    A,28
249C             L413:
249C 6F                  LD    L,A
249D 26 00               LD    H,0
249F             L414:
249F ED 5B 04 50         LD    DE,(05004H)
24A3 C5                  PUSH  BC
24A4 47                  LD    B,A
24A5 7C                  LD    A,H
24A6 AA                  XOR   A,D
24A7 67                  LD    H,A
24A8 7D                  LD    A,L
24A9 AB                  XOR   A,E
24AA 6F                  LD    L,A
24AB 78                  LD    A,B
24AC C1                  POP   BC
24AD             L415:
24AD 11 28 12            LD    DE,4648
24B0 B7                  OR    A
24B1 ED 52               SBC   HL,DE
24B3             L416:
24B3 C2 BE 24            JP    NZ,L420
24B6             L417:
24B6 3E 21               LD    A,33
24B8             L418:
24B8 CD 5F 3D            CALL  writeLineA
24BB             L419:
24BB C3 C4 24            JP    L424
24BE             L420:
24BE 21 E7 03            LD    HL,999
24C1             L421:
24C1 CD 37 3D            CALL  writeLineHL
24C4             L422:
24C4                     ;;testBitwiseOperators.j(72)     //constant word/var byte
24C4             L423:
24C4                     ;;testBitwiseOperators.j(73)     if (0x1234 & b1 == 0x0014) println (34); else println (999);
24C4             L424:
24C4 21 34 12            LD    HL,4660
24C7             L425:
24C7 ED 5B 00 50         LD    DE,(05000H)
24CB C5                  PUSH  BC
24CC 47                  LD    B,A
24CD 7C                  LD    A,H
24CE A2                  AND   A,D
24CF 67                  LD    H,A
24D0 7D                  LD    A,L
24D1 A3                  AND   A,E
24D2 6F                  LD    L,A
24D3 78                  LD    A,B
24D4 C1                  POP   BC
24D5             L426:
24D5 3E 14               LD    A,20
24D7             L427:
24D7 5F                  LD    E,A
24D8 16 00               LD    D,0
24DA EB                  EX    DE,HL
24DB B7                  OR    A
24DC ED 52               SBC   HL,DE
24DE             L428:
24DE C2 E9 24            JP    NZ,L432
24E1             L429:
24E1 3E 22               LD    A,34
24E3             L430:
24E3 CD 5F 3D            CALL  writeLineA
24E6             L431:
24E6 C3 EF 24            JP    L435
24E9             L432:
24E9 21 E7 03            LD    HL,999
24EC             L433:
24EC CD 37 3D            CALL  writeLineHL
24EF             L434:
24EF                     ;;testBitwiseOperators.j(74)     if (0x1234 | b1 == 0x123C) println (35); else println (999);
24EF             L435:
24EF 21 34 12            LD    HL,4660
24F2             L436:
24F2 ED 5B 00 50         LD    DE,(05000H)
24F6 47                  LD    B,A
24F7 7C                  LD    A,H
24F8 B2                  OR    A,D
24F9 67                  LD    H,A
24FA 7D                  LD    A,L
24FB B3                  OR    A,E
24FC 6F                  LD    L,A
24FD 78                  LD    A,B
24FE             L437:
24FE 11 3C 12            LD    DE,4668
2501 B7                  OR    A
2502 ED 52               SBC   HL,DE
2504             L438:
2504 C2 0F 25            JP    NZ,L442
2507             L439:
2507 3E 23               LD    A,35
2509             L440:
2509 CD 5F 3D            CALL  writeLineA
250C             L441:
250C C3 15 25            JP    L445
250F             L442:
250F 21 E7 03            LD    HL,999
2512             L443:
2512 CD 37 3D            CALL  writeLineHL
2515             L444:
2515                     ;;testBitwiseOperators.j(75)     if (0x1234 ^ b1 == 0x1228) println (36); else println (999);
2515             L445:
2515 21 34 12            LD    HL,4660
2518             L446:
2518 ED 5B 00 50         LD    DE,(05000H)
251C C5                  PUSH  BC
251D 47                  LD    B,A
251E 7C                  LD    A,H
251F AA                  XOR   A,D
2520 67                  LD    H,A
2521 7D                  LD    A,L
2522 AB                  XOR   A,E
2523 6F                  LD    L,A
2524 78                  LD    A,B
2525 C1                  POP   BC
2526             L447:
2526 11 28 12            LD    DE,4648
2529 B7                  OR    A
252A ED 52               SBC   HL,DE
252C             L448:
252C C2 37 25            JP    NZ,L452
252F             L449:
252F 3E 24               LD    A,36
2531             L450:
2531 CD 5F 3D            CALL  writeLineA
2534             L451:
2534 C3 3D 25            JP    L459
2537             L452:
2537 21 E7 03            LD    HL,999
253A             L453:
253A CD 37 3D            CALL  writeLineHL
253D             L454:
253D                     ;;testBitwiseOperators.j(76)   
253D             L455:
253D                     ;;testBitwiseOperators.j(77)     //constant/final var
253D             L456:
253D                     ;;testBitwiseOperators.j(78)     //*****************
253D             L457:
253D                     ;;testBitwiseOperators.j(79)     //constant byte/final var byte
253D             L458:
253D                     ;;testBitwiseOperators.j(80)     if (0x07 & fb1 == 0x04) println (37); else println (999);
253D             L459:
253D 3E 07               LD    A,7
253F             L460:
253F E6 1C               AND   A,28
2541             L461:
2541 D6 04               SUB   A,4
2543             L462:
2543 C2 4E 25            JP    NZ,L466
2546             L463:
2546 3E 25               LD    A,37
2548             L464:
2548 CD 5F 3D            CALL  writeLineA
254B             L465:
254B C3 54 25            JP    L469
254E             L466:
254E 21 E7 03            LD    HL,999
2551             L467:
2551 CD 37 3D            CALL  writeLineHL
2554             L468:
2554                     ;;testBitwiseOperators.j(81)     if (0x07 | fb1 == 0x1F) println (38); else println (999);
2554             L469:
2554 3E 07               LD    A,7
2556             L470:
2556 F6 1C               OR    A,28
2558             L471:
2558 D6 1F               SUB   A,31
255A             L472:
255A C2 65 25            JP    NZ,L476
255D             L473:
255D 3E 26               LD    A,38
255F             L474:
255F CD 5F 3D            CALL  writeLineA
2562             L475:
2562 C3 6B 25            JP    L479
2565             L476:
2565 21 E7 03            LD    HL,999
2568             L477:
2568 CD 37 3D            CALL  writeLineHL
256B             L478:
256B                     ;;testBitwiseOperators.j(82)     if (0x07 ^ fb1 == 0x1B) println (39); else println (999);
256B             L479:
256B 3E 07               LD    A,7
256D             L480:
256D EE 1C               XOR   A,28
256F             L481:
256F D6 1B               SUB   A,27
2571             L482:
2571 C2 7C 25            JP    NZ,L486
2574             L483:
2574 3E 27               LD    A,39
2576             L484:
2576 CD 5F 3D            CALL  writeLineA
2579             L485:
2579 C3 82 25            JP    L490
257C             L486:
257C 21 E7 03            LD    HL,999
257F             L487:
257F CD 37 3D            CALL  writeLineHL
2582             L488:
2582                     ;;testBitwiseOperators.j(83)     //constant word/final var word
2582             L489:
2582                     ;;testBitwiseOperators.j(84)     if (0x1234 & fw1 == 0x0224) println (40); else println (999);
2582             L490:
2582 21 34 12            LD    HL,4660
2585             L491:
2585 11 2C 03            LD    DE,812
2588 C5                  PUSH  BC
2589 47                  LD    B,A
258A 7C                  LD    A,H
258B A2                  AND   A,D
258C 67                  LD    H,A
258D 7D                  LD    A,L
258E A3                  AND   A,E
258F 6F                  LD    L,A
2590 78                  LD    A,B
2591 C1                  POP   BC
2592             L492:
2592 11 24 02            LD    DE,548
2595 B7                  OR    A
2596 ED 52               SBC   HL,DE
2598             L493:
2598 C2 A3 25            JP    NZ,L497
259B             L494:
259B 3E 28               LD    A,40
259D             L495:
259D CD 5F 3D            CALL  writeLineA
25A0             L496:
25A0 C3 A9 25            JP    L500
25A3             L497:
25A3 21 E7 03            LD    HL,999
25A6             L498:
25A6 CD 37 3D            CALL  writeLineHL
25A9             L499:
25A9                     ;;testBitwiseOperators.j(85)     if (0x1234 | fw1 == 0x133C) println (41); else println (999);
25A9             L500:
25A9 21 34 12            LD    HL,4660
25AC             L501:
25AC 11 2C 03            LD    DE,812
25AF 47                  LD    B,A
25B0 7C                  LD    A,H
25B1 B2                  OR    A,D
25B2 67                  LD    H,A
25B3 7D                  LD    A,L
25B4 B3                  OR    A,E
25B5 6F                  LD    L,A
25B6 78                  LD    A,B
25B7             L502:
25B7 11 3C 13            LD    DE,4924
25BA B7                  OR    A
25BB ED 52               SBC   HL,DE
25BD             L503:
25BD C2 C8 25            JP    NZ,L507
25C0             L504:
25C0 3E 29               LD    A,41
25C2             L505:
25C2 CD 5F 3D            CALL  writeLineA
25C5             L506:
25C5 C3 CE 25            JP    L510
25C8             L507:
25C8 21 E7 03            LD    HL,999
25CB             L508:
25CB CD 37 3D            CALL  writeLineHL
25CE             L509:
25CE                     ;;testBitwiseOperators.j(86)     if (0x1234 ^ fw1 == 0x1118) println (42); else println (999);
25CE             L510:
25CE 21 34 12            LD    HL,4660
25D1             L511:
25D1 11 2C 03            LD    DE,812
25D4 C5                  PUSH  BC
25D5 47                  LD    B,A
25D6 7C                  LD    A,H
25D7 AA                  XOR   A,D
25D8 67                  LD    H,A
25D9 7D                  LD    A,L
25DA AB                  XOR   A,E
25DB 6F                  LD    L,A
25DC 78                  LD    A,B
25DD C1                  POP   BC
25DE             L512:
25DE 11 18 11            LD    DE,4376
25E1 B7                  OR    A
25E2 ED 52               SBC   HL,DE
25E4             L513:
25E4 C2 EF 25            JP    NZ,L517
25E7             L514:
25E7 3E 2A               LD    A,42
25E9             L515:
25E9 CD 5F 3D            CALL  writeLineA
25EC             L516:
25EC C3 F5 25            JP    L521
25EF             L517:
25EF 21 E7 03            LD    HL,999
25F2             L518:
25F2 CD 37 3D            CALL  writeLineHL
25F5             L519:
25F5                     ;;testBitwiseOperators.j(87)     //constant byte/final var word
25F5             L520:
25F5                     ;;testBitwiseOperators.j(88)     if (0x1C & fw2 == 0x0014) println (43); else println (999);
25F5             L521:
25F5 3E 1C               LD    A,28
25F7             L522:
25F7 6F                  LD    L,A
25F8 26 00               LD    H,0
25FA             L523:
25FA 11 34 12            LD    DE,4660
25FD C5                  PUSH  BC
25FE 47                  LD    B,A
25FF 7C                  LD    A,H
2600 A2                  AND   A,D
2601 67                  LD    H,A
2602 7D                  LD    A,L
2603 A3                  AND   A,E
2604 6F                  LD    L,A
2605 78                  LD    A,B
2606 C1                  POP   BC
2607             L524:
2607 3E 14               LD    A,20
2609             L525:
2609 5F                  LD    E,A
260A 16 00               LD    D,0
260C EB                  EX    DE,HL
260D B7                  OR    A
260E ED 52               SBC   HL,DE
2610             L526:
2610 C2 1B 26            JP    NZ,L530
2613             L527:
2613 3E 2B               LD    A,43
2615             L528:
2615 CD 5F 3D            CALL  writeLineA
2618             L529:
2618 C3 21 26            JP    L533
261B             L530:
261B 21 E7 03            LD    HL,999
261E             L531:
261E CD 37 3D            CALL  writeLineHL
2621             L532:
2621                     ;;testBitwiseOperators.j(89)     if (0x1C | fw2 == 0x123C) println (44); else println (999);
2621             L533:
2621 3E 1C               LD    A,28
2623             L534:
2623 6F                  LD    L,A
2624 26 00               LD    H,0
2626             L535:
2626 11 34 12            LD    DE,4660
2629 47                  LD    B,A
262A 7C                  LD    A,H
262B B2                  OR    A,D
262C 67                  LD    H,A
262D 7D                  LD    A,L
262E B3                  OR    A,E
262F 6F                  LD    L,A
2630 78                  LD    A,B
2631             L536:
2631 11 3C 12            LD    DE,4668
2634 B7                  OR    A
2635 ED 52               SBC   HL,DE
2637             L537:
2637 C2 42 26            JP    NZ,L541
263A             L538:
263A 3E 2C               LD    A,44
263C             L539:
263C CD 5F 3D            CALL  writeLineA
263F             L540:
263F C3 48 26            JP    L544
2642             L541:
2642 21 E7 03            LD    HL,999
2645             L542:
2645 CD 37 3D            CALL  writeLineHL
2648             L543:
2648                     ;;testBitwiseOperators.j(90)     if (0x1C ^ fw2 == 0x1228) println (45); else println (999);
2648             L544:
2648 3E 1C               LD    A,28
264A             L545:
264A 6F                  LD    L,A
264B 26 00               LD    H,0
264D             L546:
264D 11 34 12            LD    DE,4660
2650 C5                  PUSH  BC
2651 47                  LD    B,A
2652 7C                  LD    A,H
2653 AA                  XOR   A,D
2654 67                  LD    H,A
2655 7D                  LD    A,L
2656 AB                  XOR   A,E
2657 6F                  LD    L,A
2658 78                  LD    A,B
2659 C1                  POP   BC
265A             L547:
265A 11 28 12            LD    DE,4648
265D B7                  OR    A
265E ED 52               SBC   HL,DE
2660             L548:
2660 C2 6B 26            JP    NZ,L552
2663             L549:
2663 3E 2D               LD    A,45
2665             L550:
2665 CD 5F 3D            CALL  writeLineA
2668             L551:
2668 C3 71 26            JP    L556
266B             L552:
266B 21 E7 03            LD    HL,999
266E             L553:
266E CD 37 3D            CALL  writeLineHL
2671             L554:
2671                     ;;testBitwiseOperators.j(91)     //constant word/final var byte
2671             L555:
2671                     ;;testBitwiseOperators.j(92)     if (0x1234 & fb1 == 0x0014) println (46); else println (999);
2671             L556:
2671 21 34 12            LD    HL,4660
2674             L557:
2674 5F                  LD    E,A
2675 3E 1C               LD    A,28
2677 A5                  AND   A,L
2678 6F                  LD    L,A
2679 7B                  LD    A,E
267A 26 00               LD    H,0
267C             L558:
267C 3E 14               LD    A,20
267E             L559:
267E 5F                  LD    E,A
267F 16 00               LD    D,0
2681 EB                  EX    DE,HL
2682 B7                  OR    A
2683 ED 52               SBC   HL,DE
2685             L560:
2685 C2 90 26            JP    NZ,L564
2688             L561:
2688 3E 2E               LD    A,46
268A             L562:
268A CD 5F 3D            CALL  writeLineA
268D             L563:
268D C3 96 26            JP    L567
2690             L564:
2690 21 E7 03            LD    HL,999
2693             L565:
2693 CD 37 3D            CALL  writeLineHL
2696             L566:
2696                     ;;testBitwiseOperators.j(93)     if (0x1234 | fb1 == 0x123C) println (47); else println (999);
2696             L567:
2696 21 34 12            LD    HL,4660
2699             L568:
2699 11 1C 00            LD    DE,28
269C 47                  LD    B,A
269D 7C                  LD    A,H
269E B2                  OR    A,D
269F 67                  LD    H,A
26A0 7D                  LD    A,L
26A1 B3                  OR    A,E
26A2 6F                  LD    L,A
26A3 78                  LD    A,B
26A4             L569:
26A4 11 3C 12            LD    DE,4668
26A7 B7                  OR    A
26A8 ED 52               SBC   HL,DE
26AA             L570:
26AA C2 B5 26            JP    NZ,L574
26AD             L571:
26AD 3E 2F               LD    A,47
26AF             L572:
26AF CD 5F 3D            CALL  writeLineA
26B2             L573:
26B2 C3 BB 26            JP    L577
26B5             L574:
26B5 21 E7 03            LD    HL,999
26B8             L575:
26B8 CD 37 3D            CALL  writeLineHL
26BB             L576:
26BB                     ;;testBitwiseOperators.j(94)     if (0x1234 ^ fb1 == 0x1228) println (48); else println (999);
26BB             L577:
26BB 21 34 12            LD    HL,4660
26BE             L578:
26BE 11 1C 00            LD    DE,28
26C1 C5                  PUSH  BC
26C2 47                  LD    B,A
26C3 7C                  LD    A,H
26C4 AA                  XOR   A,D
26C5 67                  LD    H,A
26C6 7D                  LD    A,L
26C7 AB                  XOR   A,E
26C8 6F                  LD    L,A
26C9 78                  LD    A,B
26CA C1                  POP   BC
26CB             L579:
26CB 11 28 12            LD    DE,4648
26CE B7                  OR    A
26CF ED 52               SBC   HL,DE
26D1             L580:
26D1 C2 DC 26            JP    NZ,L584
26D4             L581:
26D4 3E 30               LD    A,48
26D6             L582:
26D6 CD 5F 3D            CALL  writeLineA
26D9             L583:
26D9 C3 E2 26            JP    L591
26DC             L584:
26DC 21 E7 03            LD    HL,999
26DF             L585:
26DF CD 37 3D            CALL  writeLineHL
26E2             L586:
26E2                     ;;testBitwiseOperators.j(95)   
26E2             L587:
26E2                     ;;testBitwiseOperators.j(96)     //acc/constant
26E2             L588:
26E2                     ;;testBitwiseOperators.j(97)     //************
26E2             L589:
26E2                     ;;testBitwiseOperators.j(98)     //acc byte/constant byte
26E2             L590:
26E2                     ;;testBitwiseOperators.j(99)     if ((0x04 + 0x03) & 0x1C == 0x04) println (49); else println (999);
26E2             L591:
26E2 3E 04               LD    A,4
26E4             L592:
26E4 C6 03               ADD   A,3
26E6             L593:
26E6 E6 1C               AND   A,28
26E8             L594:
26E8 D6 04               SUB   A,4
26EA             L595:
26EA C2 F5 26            JP    NZ,L599
26ED             L596:
26ED 3E 31               LD    A,49
26EF             L597:
26EF CD 5F 3D            CALL  writeLineA
26F2             L598:
26F2 C3 FB 26            JP    L602
26F5             L599:
26F5 21 E7 03            LD    HL,999
26F8             L600:
26F8 CD 37 3D            CALL  writeLineHL
26FB             L601:
26FB                     ;;testBitwiseOperators.j(100)     if ((0x04 + 0x03) | 0x1C == 0x1F) println (50); else println (999);
26FB             L602:
26FB 3E 04               LD    A,4
26FD             L603:
26FD C6 03               ADD   A,3
26FF             L604:
26FF F6 1C               OR    A,28
2701             L605:
2701 D6 1F               SUB   A,31
2703             L606:
2703 C2 0E 27            JP    NZ,L610
2706             L607:
2706 3E 32               LD    A,50
2708             L608:
2708 CD 5F 3D            CALL  writeLineA
270B             L609:
270B C3 14 27            JP    L613
270E             L610:
270E 21 E7 03            LD    HL,999
2711             L611:
2711 CD 37 3D            CALL  writeLineHL
2714             L612:
2714                     ;;testBitwiseOperators.j(101)     if ((0x04 + 0x03) ^ 0x1C == 0x1B) println (51); else println (999);
2714             L613:
2714 3E 04               LD    A,4
2716             L614:
2716 C6 03               ADD   A,3
2718             L615:
2718 EE 1C               XOR   A,28
271A             L616:
271A D6 1B               SUB   A,27
271C             L617:
271C C2 27 27            JP    NZ,L621
271F             L618:
271F 3E 33               LD    A,51
2721             L619:
2721 CD 5F 3D            CALL  writeLineA
2724             L620:
2724 C3 2D 27            JP    L625
2727             L621:
2727 21 E7 03            LD    HL,999
272A             L622:
272A CD 37 3D            CALL  writeLineHL
272D             L623:
272D                     ;;testBitwiseOperators.j(102)     //acc word/constant word
272D             L624:
272D                     ;;testBitwiseOperators.j(103)     if (0x1000 + 0x0234 & 0x032C == 0x0224) println (52); else println (999);
272D             L625:
272D 21 00 10            LD    HL,4096
2730             L626:
2730 11 34 02            LD    DE,564
2733 19                  ADD   HL,DE
2734             L627:
2734 11 2C 03            LD    DE,812
2737 C5                  PUSH  BC
2738 47                  LD    B,A
2739 7C                  LD    A,H
273A A2                  AND   A,D
273B 67                  LD    H,A
273C 7D                  LD    A,L
273D A3                  AND   A,E
273E 6F                  LD    L,A
273F 78                  LD    A,B
2740 C1                  POP   BC
2741             L628:
2741 11 24 02            LD    DE,548
2744 B7                  OR    A
2745 ED 52               SBC   HL,DE
2747             L629:
2747 C2 52 27            JP    NZ,L633
274A             L630:
274A 3E 34               LD    A,52
274C             L631:
274C CD 5F 3D            CALL  writeLineA
274F             L632:
274F C3 58 27            JP    L636
2752             L633:
2752 21 E7 03            LD    HL,999
2755             L634:
2755 CD 37 3D            CALL  writeLineHL
2758             L635:
2758                     ;;testBitwiseOperators.j(104)     if (0x1000 + 0x0234 | 0x032C == 0x133C) println (53); else println (999);
2758             L636:
2758 21 00 10            LD    HL,4096
275B             L637:
275B 11 34 02            LD    DE,564
275E 19                  ADD   HL,DE
275F             L638:
275F 11 2C 03            LD    DE,812
2762 47                  LD    B,A
2763 7C                  LD    A,H
2764 B2                  OR    A,D
2765 67                  LD    H,A
2766 7D                  LD    A,L
2767 B3                  OR    A,E
2768 6F                  LD    L,A
2769 78                  LD    A,B
276A             L639:
276A 11 3C 13            LD    DE,4924
276D B7                  OR    A
276E ED 52               SBC   HL,DE
2770             L640:
2770 C2 7B 27            JP    NZ,L644
2773             L641:
2773 3E 35               LD    A,53
2775             L642:
2775 CD 5F 3D            CALL  writeLineA
2778             L643:
2778 C3 81 27            JP    L647
277B             L644:
277B 21 E7 03            LD    HL,999
277E             L645:
277E CD 37 3D            CALL  writeLineHL
2781             L646:
2781                     ;;testBitwiseOperators.j(105)     if (0x1000 + 0x0234 ^ 0x032C == 0x1118) println (54); else println (999);
2781             L647:
2781 21 00 10            LD    HL,4096
2784             L648:
2784 11 34 02            LD    DE,564
2787 19                  ADD   HL,DE
2788             L649:
2788 11 2C 03            LD    DE,812
278B C5                  PUSH  BC
278C 47                  LD    B,A
278D 7C                  LD    A,H
278E AA                  XOR   A,D
278F 67                  LD    H,A
2790 7D                  LD    A,L
2791 AB                  XOR   A,E
2792 6F                  LD    L,A
2793 78                  LD    A,B
2794 C1                  POP   BC
2795             L650:
2795 11 18 11            LD    DE,4376
2798 B7                  OR    A
2799 ED 52               SBC   HL,DE
279B             L651:
279B C2 A6 27            JP    NZ,L655
279E             L652:
279E 3E 36               LD    A,54
27A0             L653:
27A0 CD 5F 3D            CALL  writeLineA
27A3             L654:
27A3 C3 AC 27            JP    L659
27A6             L655:
27A6 21 E7 03            LD    HL,999
27A9             L656:
27A9 CD 37 3D            CALL  writeLineHL
27AC             L657:
27AC                     ;;testBitwiseOperators.j(106)     //acc byte/constant word
27AC             L658:
27AC                     ;;testBitwiseOperators.j(107)     if (0x10 + 0x0C & 0x1234 == 0x0014) println (55); else println (999);
27AC             L659:
27AC 3E 10               LD    A,16
27AE             L660:
27AE C6 0C               ADD   A,12
27B0             L661:
27B0 6F                  LD    L,A
27B1 26 00               LD    H,0
27B3             L662:
27B3 11 34 12            LD    DE,4660
27B6 C5                  PUSH  BC
27B7 47                  LD    B,A
27B8 7C                  LD    A,H
27B9 A2                  AND   A,D
27BA 67                  LD    H,A
27BB 7D                  LD    A,L
27BC A3                  AND   A,E
27BD 6F                  LD    L,A
27BE 78                  LD    A,B
27BF C1                  POP   BC
27C0             L663:
27C0 3E 14               LD    A,20
27C2             L664:
27C2 5F                  LD    E,A
27C3 16 00               LD    D,0
27C5 EB                  EX    DE,HL
27C6 B7                  OR    A
27C7 ED 52               SBC   HL,DE
27C9             L665:
27C9 C2 D4 27            JP    NZ,L669
27CC             L666:
27CC 3E 37               LD    A,55
27CE             L667:
27CE CD 5F 3D            CALL  writeLineA
27D1             L668:
27D1 C3 DA 27            JP    L672
27D4             L669:
27D4 21 E7 03            LD    HL,999
27D7             L670:
27D7 CD 37 3D            CALL  writeLineHL
27DA             L671:
27DA                     ;;testBitwiseOperators.j(108)     if (0x10 + 0x0C | 0x1234 == 0x123C) println (56); else println (999);
27DA             L672:
27DA 3E 10               LD    A,16
27DC             L673:
27DC C6 0C               ADD   A,12
27DE             L674:
27DE 6F                  LD    L,A
27DF 26 00               LD    H,0
27E1             L675:
27E1 11 34 12            LD    DE,4660
27E4 47                  LD    B,A
27E5 7C                  LD    A,H
27E6 B2                  OR    A,D
27E7 67                  LD    H,A
27E8 7D                  LD    A,L
27E9 B3                  OR    A,E
27EA 6F                  LD    L,A
27EB 78                  LD    A,B
27EC             L676:
27EC 11 3C 12            LD    DE,4668
27EF B7                  OR    A
27F0 ED 52               SBC   HL,DE
27F2             L677:
27F2 C2 FD 27            JP    NZ,L681
27F5             L678:
27F5 3E 38               LD    A,56
27F7             L679:
27F7 CD 5F 3D            CALL  writeLineA
27FA             L680:
27FA C3 03 28            JP    L684
27FD             L681:
27FD 21 E7 03            LD    HL,999
2800             L682:
2800 CD 37 3D            CALL  writeLineHL
2803             L683:
2803                     ;;testBitwiseOperators.j(109)     if (0x10 + 0x0C ^ 0x1234 == 0x1228) println (57); else println (999);
2803             L684:
2803 3E 10               LD    A,16
2805             L685:
2805 C6 0C               ADD   A,12
2807             L686:
2807 6F                  LD    L,A
2808 26 00               LD    H,0
280A             L687:
280A 11 34 12            LD    DE,4660
280D C5                  PUSH  BC
280E 47                  LD    B,A
280F 7C                  LD    A,H
2810 AA                  XOR   A,D
2811 67                  LD    H,A
2812 7D                  LD    A,L
2813 AB                  XOR   A,E
2814 6F                  LD    L,A
2815 78                  LD    A,B
2816 C1                  POP   BC
2817             L688:
2817 11 28 12            LD    DE,4648
281A B7                  OR    A
281B ED 52               SBC   HL,DE
281D             L689:
281D C2 28 28            JP    NZ,L693
2820             L690:
2820 3E 39               LD    A,57
2822             L691:
2822 CD 5F 3D            CALL  writeLineA
2825             L692:
2825 C3 2E 28            JP    L697
2828             L693:
2828 21 E7 03            LD    HL,999
282B             L694:
282B CD 37 3D            CALL  writeLineHL
282E             L695:
282E                     ;;testBitwiseOperators.j(110)     //acc word/constant byte
282E             L696:
282E                     ;;testBitwiseOperators.j(111)     if (0x1000 + 0x0234 & 0x1C == 0x0014) println (58); else println (999);
282E             L697:
282E 21 00 10            LD    HL,4096
2831             L698:
2831 11 34 02            LD    DE,564
2834 19                  ADD   HL,DE
2835             L699:
2835 5F                  LD    E,A
2836 3E 1C               LD    A,28
2838 A5                  AND   A,L
2839 6F                  LD    L,A
283A 7B                  LD    A,E
283B 26 00               LD    H,0
283D             L700:
283D 3E 14               LD    A,20
283F             L701:
283F 5F                  LD    E,A
2840 16 00               LD    D,0
2842 EB                  EX    DE,HL
2843 B7                  OR    A
2844 ED 52               SBC   HL,DE
2846             L702:
2846 C2 51 28            JP    NZ,L706
2849             L703:
2849 3E 3A               LD    A,58
284B             L704:
284B CD 5F 3D            CALL  writeLineA
284E             L705:
284E C3 57 28            JP    L709
2851             L706:
2851 21 E7 03            LD    HL,999
2854             L707:
2854 CD 37 3D            CALL  writeLineHL
2857             L708:
2857                     ;;testBitwiseOperators.j(112)     if (0x1000 + 0x0234 | 0x1C == 0x123C) println (59); else println (999);
2857             L709:
2857 21 00 10            LD    HL,4096
285A             L710:
285A 11 34 02            LD    DE,564
285D 19                  ADD   HL,DE
285E             L711:
285E 11 1C 00            LD    DE,28
2861 47                  LD    B,A
2862 7C                  LD    A,H
2863 B2                  OR    A,D
2864 67                  LD    H,A
2865 7D                  LD    A,L
2866 B3                  OR    A,E
2867 6F                  LD    L,A
2868 78                  LD    A,B
2869             L712:
2869 11 3C 12            LD    DE,4668
286C B7                  OR    A
286D ED 52               SBC   HL,DE
286F             L713:
286F C2 7A 28            JP    NZ,L717
2872             L714:
2872 3E 3B               LD    A,59
2874             L715:
2874 CD 5F 3D            CALL  writeLineA
2877             L716:
2877 C3 80 28            JP    L720
287A             L717:
287A 21 E7 03            LD    HL,999
287D             L718:
287D CD 37 3D            CALL  writeLineHL
2880             L719:
2880                     ;;testBitwiseOperators.j(113)     if (0x1000 + 0x0234 ^ 0x1C == 0x1228) println (60); else println (999);
2880             L720:
2880 21 00 10            LD    HL,4096
2883             L721:
2883 11 34 02            LD    DE,564
2886 19                  ADD   HL,DE
2887             L722:
2887 11 1C 00            LD    DE,28
288A C5                  PUSH  BC
288B 47                  LD    B,A
288C 7C                  LD    A,H
288D AA                  XOR   A,D
288E 67                  LD    H,A
288F 7D                  LD    A,L
2890 AB                  XOR   A,E
2891 6F                  LD    L,A
2892 78                  LD    A,B
2893 C1                  POP   BC
2894             L723:
2894 11 28 12            LD    DE,4648
2897 B7                  OR    A
2898 ED 52               SBC   HL,DE
289A             L724:
289A C2 A5 28            JP    NZ,L728
289D             L725:
289D 3E 3C               LD    A,60
289F             L726:
289F CD 5F 3D            CALL  writeLineA
28A2             L727:
28A2 C3 AB 28            JP    L735
28A5             L728:
28A5 21 E7 03            LD    HL,999
28A8             L729:
28A8 CD 37 3D            CALL  writeLineHL
28AB             L730:
28AB                     ;;testBitwiseOperators.j(114)   
28AB             L731:
28AB                     ;;testBitwiseOperators.j(115)     //acc/acc
28AB             L732:
28AB                     ;;testBitwiseOperators.j(116)     //*******
28AB             L733:
28AB                     ;;testBitwiseOperators.j(117)     //acc byte/acc byte
28AB             L734:
28AB                     ;;testBitwiseOperators.j(118)     if (0x04 + 0x03 & 0x10 + 0x0C == 0x04) println (61); else println (999);
28AB             L735:
28AB 3E 04               LD    A,4
28AD             L736:
28AD C6 03               ADD   A,3
28AF             L737:
28AF F5                  PUSH  AF
28B0 3E 10               LD    A,16
28B2             L738:
28B2 C6 0C               ADD   A,12
28B4             L739:
28B4 C1                  POP   BC
28B5 A0                  AND   A,B
28B6             L740:
28B6 D6 04               SUB   A,4
28B8             L741:
28B8 C2 C3 28            JP    NZ,L745
28BB             L742:
28BB 3E 3D               LD    A,61
28BD             L743:
28BD CD 5F 3D            CALL  writeLineA
28C0             L744:
28C0 C3 C9 28            JP    L748
28C3             L745:
28C3 21 E7 03            LD    HL,999
28C6             L746:
28C6 CD 37 3D            CALL  writeLineHL
28C9             L747:
28C9                     ;;testBitwiseOperators.j(119)     if (0x04 + 0x03 | 0x10 + 0x0C == 0x1F) println (62); else println (999);
28C9             L748:
28C9 3E 04               LD    A,4
28CB             L749:
28CB C6 03               ADD   A,3
28CD             L750:
28CD F5                  PUSH  AF
28CE 3E 10               LD    A,16
28D0             L751:
28D0 C6 0C               ADD   A,12
28D2             L752:
28D2 C1                  POP   BC
28D3 B0                  OR    A,B
28D4             L753:
28D4 D6 1F               SUB   A,31
28D6             L754:
28D6 C2 E1 28            JP    NZ,L758
28D9             L755:
28D9 3E 3E               LD    A,62
28DB             L756:
28DB CD 5F 3D            CALL  writeLineA
28DE             L757:
28DE C3 E7 28            JP    L761
28E1             L758:
28E1 21 E7 03            LD    HL,999
28E4             L759:
28E4 CD 37 3D            CALL  writeLineHL
28E7             L760:
28E7                     ;;testBitwiseOperators.j(120)     if (0x04 + 0x03 ^ 0x10 + 0x0C == 0x1B) println (63); else println (999);
28E7             L761:
28E7 3E 04               LD    A,4
28E9             L762:
28E9 C6 03               ADD   A,3
28EB             L763:
28EB F5                  PUSH  AF
28EC 3E 10               LD    A,16
28EE             L764:
28EE C6 0C               ADD   A,12
28F0             L765:
28F0 C1                  POP   BC
28F1 A8                  XOR   A,B
28F2             L766:
28F2 D6 1B               SUB   A,27
28F4             L767:
28F4 C2 FF 28            JP    NZ,L771
28F7             L768:
28F7 3E 3F               LD    A,63
28F9             L769:
28F9 CD 5F 3D            CALL  writeLineA
28FC             L770:
28FC C3 05 29            JP    L775
28FF             L771:
28FF 21 E7 03            LD    HL,999
2902             L772:
2902 CD 37 3D            CALL  writeLineHL
2905             L773:
2905                     ;;testBitwiseOperators.j(121)     //acc word/acc word
2905             L774:
2905                     ;;testBitwiseOperators.j(122)     if (0x1000 + 0x0234 & 0x0100 + 0x022C == 0x0224) println (64); else println (999);
2905             L775:
2905 21 00 10            LD    HL,4096
2908             L776:
2908 11 34 02            LD    DE,564
290B 19                  ADD   HL,DE
290C             L777:
290C E5                  PUSH  HL
290D 21 00 01            LD    HL,256
2910             L778:
2910 11 2C 02            LD    DE,556
2913 19                  ADD   HL,DE
2914             L779:
2914 D1                  POP   DE
2915 C5                  PUSH  BC
2916 47                  LD    B,A
2917 7C                  LD    A,H
2918 A2                  AND   A,D
2919 67                  LD    H,A
291A 7D                  LD    A,L
291B A3                  AND   A,E
291C 6F                  LD    L,A
291D 78                  LD    A,B
291E C1                  POP   BC
291F             L780:
291F 11 24 02            LD    DE,548
2922 B7                  OR    A
2923 ED 52               SBC   HL,DE
2925             L781:
2925 C2 30 29            JP    NZ,L785
2928             L782:
2928 3E 40               LD    A,64
292A             L783:
292A CD 5F 3D            CALL  writeLineA
292D             L784:
292D C3 36 29            JP    L788
2930             L785:
2930 21 E7 03            LD    HL,999
2933             L786:
2933 CD 37 3D            CALL  writeLineHL
2936             L787:
2936                     ;;testBitwiseOperators.j(123)     if (0x1000 + 0x0234 | 0x0100 + 0x022C == 0x133C) println (65); else println (999);
2936             L788:
2936 21 00 10            LD    HL,4096
2939             L789:
2939 11 34 02            LD    DE,564
293C 19                  ADD   HL,DE
293D             L790:
293D E5                  PUSH  HL
293E 21 00 01            LD    HL,256
2941             L791:
2941 11 2C 02            LD    DE,556
2944 19                  ADD   HL,DE
2945             L792:
2945 D1                  POP   DE
2946 47                  LD    B,A
2947 7C                  LD    A,H
2948 B2                  OR    A,D
2949 67                  LD    H,A
294A 7D                  LD    A,L
294B B3                  OR    A,E
294C 6F                  LD    L,A
294D 78                  LD    A,B
294E             L793:
294E 11 3C 13            LD    DE,4924
2951 B7                  OR    A
2952 ED 52               SBC   HL,DE
2954             L794:
2954 C2 5F 29            JP    NZ,L798
2957             L795:
2957 3E 41               LD    A,65
2959             L796:
2959 CD 5F 3D            CALL  writeLineA
295C             L797:
295C C3 65 29            JP    L801
295F             L798:
295F 21 E7 03            LD    HL,999
2962             L799:
2962 CD 37 3D            CALL  writeLineHL
2965             L800:
2965                     ;;testBitwiseOperators.j(124)     if (0x1000 + 0x0234 ^ 0x0100 + 0x022C == 0x1118) println (66); else println (999);
2965             L801:
2965 21 00 10            LD    HL,4096
2968             L802:
2968 11 34 02            LD    DE,564
296B 19                  ADD   HL,DE
296C             L803:
296C E5                  PUSH  HL
296D 21 00 01            LD    HL,256
2970             L804:
2970 11 2C 02            LD    DE,556
2973 19                  ADD   HL,DE
2974             L805:
2974 D1                  POP   DE
2975 C5                  PUSH  BC
2976 47                  LD    B,A
2977 7C                  LD    A,H
2978 AA                  XOR   A,D
2979 67                  LD    H,A
297A 7D                  LD    A,L
297B AB                  XOR   A,E
297C 6F                  LD    L,A
297D 78                  LD    A,B
297E C1                  POP   BC
297F             L806:
297F 11 18 11            LD    DE,4376
2982 B7                  OR    A
2983 ED 52               SBC   HL,DE
2985             L807:
2985 C2 90 29            JP    NZ,L811
2988             L808:
2988 3E 42               LD    A,66
298A             L809:
298A CD 5F 3D            CALL  writeLineA
298D             L810:
298D C3 96 29            JP    L815
2990             L811:
2990 21 E7 03            LD    HL,999
2993             L812:
2993 CD 37 3D            CALL  writeLineHL
2996             L813:
2996                     ;;testBitwiseOperators.j(125)     //acc byte/acc word
2996             L814:
2996                     ;;testBitwiseOperators.j(126)     if (0x10 + 0x0C & 0x1000 + 0x0234 == 0x0014) println (67); else println (999);
2996             L815:
2996 3E 10               LD    A,16
2998             L816:
2998 C6 0C               ADD   A,12
299A             L817:
299A 21 00 10            LD    HL,4096
299D             L818:
299D 11 34 02            LD    DE,564
29A0 19                  ADD   HL,DE
29A1             L819:
29A1 5F                  LD    E,A
29A2 A5                  AND   A,L
29A3 6F                  LD    L,A
29A4 7B                  LD    A,E
29A5 26 00               LD    H,0
29A7             L820:
29A7 3E 14               LD    A,20
29A9             L821:
29A9 5F                  LD    E,A
29AA 16 00               LD    D,0
29AC EB                  EX    DE,HL
29AD B7                  OR    A
29AE ED 52               SBC   HL,DE
29B0             L822:
29B0 C2 BB 29            JP    NZ,L826
29B3             L823:
29B3 3E 43               LD    A,67
29B5             L824:
29B5 CD 5F 3D            CALL  writeLineA
29B8             L825:
29B8 C3 C1 29            JP    L829
29BB             L826:
29BB 21 E7 03            LD    HL,999
29BE             L827:
29BE CD 37 3D            CALL  writeLineHL
29C1             L828:
29C1                     ;;testBitwiseOperators.j(127)     if (0x10 + 0x0C | 0x1000 + 0x0234 == 0x123C) println (68); else println (999);
29C1             L829:
29C1 3E 10               LD    A,16
29C3             L830:
29C3 C6 0C               ADD   A,12
29C5             L831:
29C5 21 00 10            LD    HL,4096
29C8             L832:
29C8 11 34 02            LD    DE,564
29CB 19                  ADD   HL,DE
29CC             L833:
29CC B5                  OR    A,L
29CD 6F                  LD    L,A
29CE             L834:
29CE 11 3C 12            LD    DE,4668
29D1 B7                  OR    A
29D2 ED 52               SBC   HL,DE
29D4             L835:
29D4 C2 DF 29            JP    NZ,L839
29D7             L836:
29D7 3E 44               LD    A,68
29D9             L837:
29D9 CD 5F 3D            CALL  writeLineA
29DC             L838:
29DC C3 E5 29            JP    L842
29DF             L839:
29DF 21 E7 03            LD    HL,999
29E2             L840:
29E2 CD 37 3D            CALL  writeLineHL
29E5             L841:
29E5                     ;;testBitwiseOperators.j(128)     if (0x10 + 0x0C ^ 0x1000 + 0x0234 == 0x1228) println (69); else println (999);
29E5             L842:
29E5 3E 10               LD    A,16
29E7             L843:
29E7 C6 0C               ADD   A,12
29E9             L844:
29E9 21 00 10            LD    HL,4096
29EC             L845:
29EC 11 34 02            LD    DE,564
29EF 19                  ADD   HL,DE
29F0             L846:
29F0 AD                  XOR   A,L
29F1 6F                  LD    L,A
29F2             L847:
29F2 11 28 12            LD    DE,4648
29F5 B7                  OR    A
29F6 ED 52               SBC   HL,DE
29F8             L848:
29F8 C2 03 2A            JP    NZ,L852
29FB             L849:
29FB 3E 45               LD    A,69
29FD             L850:
29FD CD 5F 3D            CALL  writeLineA
2A00             L851:
2A00 C3 09 2A            JP    L856
2A03             L852:
2A03 21 E7 03            LD    HL,999
2A06             L853:
2A06 CD 37 3D            CALL  writeLineHL
2A09             L854:
2A09                     ;;testBitwiseOperators.j(129)     //acc word/acc byte
2A09             L855:
2A09                     ;;testBitwiseOperators.j(130)     if (0x1000 + 0x0234 & 0x10 + 0x0C == 0x0014) println (70); else println (999);
2A09             L856:
2A09 21 00 10            LD    HL,4096
2A0C             L857:
2A0C 11 34 02            LD    DE,564
2A0F 19                  ADD   HL,DE
2A10             L858:
2A10 3E 10               LD    A,16
2A12             L859:
2A12 C6 0C               ADD   A,12
2A14             L860:
2A14 5F                  LD    E,A
2A15 A5                  AND   A,L
2A16 6F                  LD    L,A
2A17 7B                  LD    A,E
2A18 26 00               LD    H,0
2A1A             L861:
2A1A 3E 14               LD    A,20
2A1C             L862:
2A1C 5F                  LD    E,A
2A1D 16 00               LD    D,0
2A1F EB                  EX    DE,HL
2A20 B7                  OR    A
2A21 ED 52               SBC   HL,DE
2A23             L863:
2A23 C2 2E 2A            JP    NZ,L867
2A26             L864:
2A26 3E 46               LD    A,70
2A28             L865:
2A28 CD 5F 3D            CALL  writeLineA
2A2B             L866:
2A2B C3 34 2A            JP    L870
2A2E             L867:
2A2E 21 E7 03            LD    HL,999
2A31             L868:
2A31 CD 37 3D            CALL  writeLineHL
2A34             L869:
2A34                     ;;testBitwiseOperators.j(131)     if (0x1000 + 0x0234 | 0x10 + 0x0C == 0x123C) println (71); else println (999);
2A34             L870:
2A34 21 00 10            LD    HL,4096
2A37             L871:
2A37 11 34 02            LD    DE,564
2A3A 19                  ADD   HL,DE
2A3B             L872:
2A3B 3E 10               LD    A,16
2A3D             L873:
2A3D C6 0C               ADD   A,12
2A3F             L874:
2A3F B5                  OR    A,L
2A40 6F                  LD    L,A
2A41             L875:
2A41 11 3C 12            LD    DE,4668
2A44 B7                  OR    A
2A45 ED 52               SBC   HL,DE
2A47             L876:
2A47 C2 52 2A            JP    NZ,L880
2A4A             L877:
2A4A 3E 47               LD    A,71
2A4C             L878:
2A4C CD 5F 3D            CALL  writeLineA
2A4F             L879:
2A4F C3 58 2A            JP    L883
2A52             L880:
2A52 21 E7 03            LD    HL,999
2A55             L881:
2A55 CD 37 3D            CALL  writeLineHL
2A58             L882:
2A58                     ;;testBitwiseOperators.j(132)     if (0x1000 + 0x0234 ^ 0x10 + 0x0C == 0x1228) println (72); else println (999);
2A58             L883:
2A58 21 00 10            LD    HL,4096
2A5B             L884:
2A5B 11 34 02            LD    DE,564
2A5E 19                  ADD   HL,DE
2A5F             L885:
2A5F 3E 10               LD    A,16
2A61             L886:
2A61 C6 0C               ADD   A,12
2A63             L887:
2A63 AD                  XOR   A,L
2A64 6F                  LD    L,A
2A65             L888:
2A65 11 28 12            LD    DE,4648
2A68 B7                  OR    A
2A69 ED 52               SBC   HL,DE
2A6B             L889:
2A6B C2 76 2A            JP    NZ,L893
2A6E             L890:
2A6E 3E 48               LD    A,72
2A70             L891:
2A70 CD 5F 3D            CALL  writeLineA
2A73             L892:
2A73 C3 7C 2A            JP    L900
2A76             L893:
2A76 21 E7 03            LD    HL,999
2A79             L894:
2A79 CD 37 3D            CALL  writeLineHL
2A7C             L895:
2A7C                     ;;testBitwiseOperators.j(133)   
2A7C             L896:
2A7C                     ;;testBitwiseOperators.j(134)     //acc/var
2A7C             L897:
2A7C                     ;;testBitwiseOperators.j(135)     //*******
2A7C             L898:
2A7C                     ;;testBitwiseOperators.j(136)     //acc byte/var byte
2A7C             L899:
2A7C                     ;;testBitwiseOperators.j(137)     if (0x04 + 0x03 & b1 == 0x04) println (73); else println (999);
2A7C             L900:
2A7C 3E 04               LD    A,4
2A7E             L901:
2A7E C6 03               ADD   A,3
2A80             L902:
2A80 47                  LD    B,A
2A81 3A 00 50            LD    A,(05000H)
2A84 A0                  AND   A,B
2A85             L903:
2A85 D6 04               SUB   A,4
2A87             L904:
2A87 C2 92 2A            JP    NZ,L908
2A8A             L905:
2A8A 3E 49               LD    A,73
2A8C             L906:
2A8C CD 5F 3D            CALL  writeLineA
2A8F             L907:
2A8F C3 98 2A            JP    L911
2A92             L908:
2A92 21 E7 03            LD    HL,999
2A95             L909:
2A95 CD 37 3D            CALL  writeLineHL
2A98             L910:
2A98                     ;;testBitwiseOperators.j(138)     if (0x04 + 0x03 | b1 == 0x1F) println (74); else println (999);
2A98             L911:
2A98 3E 04               LD    A,4
2A9A             L912:
2A9A C6 03               ADD   A,3
2A9C             L913:
2A9C 47                  LD    B,A
2A9D 3A 00 50            LD    A,(05000H)
2AA0 B0                  OR    A,B
2AA1             L914:
2AA1 D6 1F               SUB   A,31
2AA3             L915:
2AA3 C2 AE 2A            JP    NZ,L919
2AA6             L916:
2AA6 3E 4A               LD    A,74
2AA8             L917:
2AA8 CD 5F 3D            CALL  writeLineA
2AAB             L918:
2AAB C3 B4 2A            JP    L922
2AAE             L919:
2AAE 21 E7 03            LD    HL,999
2AB1             L920:
2AB1 CD 37 3D            CALL  writeLineHL
2AB4             L921:
2AB4                     ;;testBitwiseOperators.j(139)     if (0x04 + 0x03 ^ b1 == 0x1B) println (75); else println (999);
2AB4             L922:
2AB4 3E 04               LD    A,4
2AB6             L923:
2AB6 C6 03               ADD   A,3
2AB8             L924:
2AB8 47                  LD    B,A
2AB9 3A 00 50            LD    A,(05000H)
2ABC A8                  XOR   A,B
2ABD             L925:
2ABD D6 1B               SUB   A,27
2ABF             L926:
2ABF C2 CA 2A            JP    NZ,L930
2AC2             L927:
2AC2 3E 4B               LD    A,75
2AC4             L928:
2AC4 CD 5F 3D            CALL  writeLineA
2AC7             L929:
2AC7 C3 D0 2A            JP    L934
2ACA             L930:
2ACA 21 E7 03            LD    HL,999
2ACD             L931:
2ACD CD 37 3D            CALL  writeLineHL
2AD0             L932:
2AD0                     ;;testBitwiseOperators.j(140)     //acc word/var word
2AD0             L933:
2AD0                     ;;testBitwiseOperators.j(141)     if (0x1000 + 0x0234 & w1 == 0x0224) println (76); else println (999);
2AD0             L934:
2AD0 21 00 10            LD    HL,4096
2AD3             L935:
2AD3 11 34 02            LD    DE,564
2AD6 19                  ADD   HL,DE
2AD7             L936:
2AD7 ED 5B 02 50         LD    DE,(05002H)
2ADB C5                  PUSH  BC
2ADC 47                  LD    B,A
2ADD 7C                  LD    A,H
2ADE A2                  AND   A,D
2ADF 67                  LD    H,A
2AE0 7D                  LD    A,L
2AE1 A3                  AND   A,E
2AE2 6F                  LD    L,A
2AE3 78                  LD    A,B
2AE4 C1                  POP   BC
2AE5             L937:
2AE5 11 24 02            LD    DE,548
2AE8 B7                  OR    A
2AE9 ED 52               SBC   HL,DE
2AEB             L938:
2AEB C2 F6 2A            JP    NZ,L942
2AEE             L939:
2AEE 3E 4C               LD    A,76
2AF0             L940:
2AF0 CD 5F 3D            CALL  writeLineA
2AF3             L941:
2AF3 C3 FC 2A            JP    L945
2AF6             L942:
2AF6 21 E7 03            LD    HL,999
2AF9             L943:
2AF9 CD 37 3D            CALL  writeLineHL
2AFC             L944:
2AFC                     ;;testBitwiseOperators.j(142)     if (0x1000 + 0x0234 | w1 == 0x133C) println (77); else println (999);
2AFC             L945:
2AFC 21 00 10            LD    HL,4096
2AFF             L946:
2AFF 11 34 02            LD    DE,564
2B02 19                  ADD   HL,DE
2B03             L947:
2B03 ED 5B 02 50         LD    DE,(05002H)
2B07 47                  LD    B,A
2B08 7C                  LD    A,H
2B09 B2                  OR    A,D
2B0A 67                  LD    H,A
2B0B 7D                  LD    A,L
2B0C B3                  OR    A,E
2B0D 6F                  LD    L,A
2B0E 78                  LD    A,B
2B0F             L948:
2B0F 11 3C 13            LD    DE,4924
2B12 B7                  OR    A
2B13 ED 52               SBC   HL,DE
2B15             L949:
2B15 C2 20 2B            JP    NZ,L953
2B18             L950:
2B18 3E 4D               LD    A,77
2B1A             L951:
2B1A CD 5F 3D            CALL  writeLineA
2B1D             L952:
2B1D C3 26 2B            JP    L956
2B20             L953:
2B20 21 E7 03            LD    HL,999
2B23             L954:
2B23 CD 37 3D            CALL  writeLineHL
2B26             L955:
2B26                     ;;testBitwiseOperators.j(143)     if (0x1000 + 0x0234 ^ w1 == 0x1118) println (78); else println (999);
2B26             L956:
2B26 21 00 10            LD    HL,4096
2B29             L957:
2B29 11 34 02            LD    DE,564
2B2C 19                  ADD   HL,DE
2B2D             L958:
2B2D ED 5B 02 50         LD    DE,(05002H)
2B31 C5                  PUSH  BC
2B32 47                  LD    B,A
2B33 7C                  LD    A,H
2B34 AA                  XOR   A,D
2B35 67                  LD    H,A
2B36 7D                  LD    A,L
2B37 AB                  XOR   A,E
2B38 6F                  LD    L,A
2B39 78                  LD    A,B
2B3A C1                  POP   BC
2B3B             L959:
2B3B 11 18 11            LD    DE,4376
2B3E B7                  OR    A
2B3F ED 52               SBC   HL,DE
2B41             L960:
2B41 C2 4C 2B            JP    NZ,L964
2B44             L961:
2B44 3E 4E               LD    A,78
2B46             L962:
2B46 CD 5F 3D            CALL  writeLineA
2B49             L963:
2B49 C3 52 2B            JP    L968
2B4C             L964:
2B4C 21 E7 03            LD    HL,999
2B4F             L965:
2B4F CD 37 3D            CALL  writeLineHL
2B52             L966:
2B52                     ;;testBitwiseOperators.j(144)     //acc byte/var word
2B52             L967:
2B52                     ;;testBitwiseOperators.j(145)     if (0x10 + 0x0C & w2 == 0x0014) println (79); else println (999);
2B52             L968:
2B52 3E 10               LD    A,16
2B54             L969:
2B54 C6 0C               ADD   A,12
2B56             L970:
2B56 6F                  LD    L,A
2B57 26 00               LD    H,0
2B59             L971:
2B59 ED 5B 04 50         LD    DE,(05004H)
2B5D C5                  PUSH  BC
2B5E 47                  LD    B,A
2B5F 7C                  LD    A,H
2B60 A2                  AND   A,D
2B61 67                  LD    H,A
2B62 7D                  LD    A,L
2B63 A3                  AND   A,E
2B64 6F                  LD    L,A
2B65 78                  LD    A,B
2B66 C1                  POP   BC
2B67             L972:
2B67 3E 14               LD    A,20
2B69             L973:
2B69 5F                  LD    E,A
2B6A 16 00               LD    D,0
2B6C EB                  EX    DE,HL
2B6D B7                  OR    A
2B6E ED 52               SBC   HL,DE
2B70             L974:
2B70 C2 7B 2B            JP    NZ,L978
2B73             L975:
2B73 3E 4F               LD    A,79
2B75             L976:
2B75 CD 5F 3D            CALL  writeLineA
2B78             L977:
2B78 C3 81 2B            JP    L981
2B7B             L978:
2B7B 21 E7 03            LD    HL,999
2B7E             L979:
2B7E CD 37 3D            CALL  writeLineHL
2B81             L980:
2B81                     ;;testBitwiseOperators.j(146)     if (0x10 + 0x0C | w2 == 0x123C) println (80); else println (999);
2B81             L981:
2B81 3E 10               LD    A,16
2B83             L982:
2B83 C6 0C               ADD   A,12
2B85             L983:
2B85 6F                  LD    L,A
2B86 26 00               LD    H,0
2B88             L984:
2B88 ED 5B 04 50         LD    DE,(05004H)
2B8C 47                  LD    B,A
2B8D 7C                  LD    A,H
2B8E B2                  OR    A,D
2B8F 67                  LD    H,A
2B90 7D                  LD    A,L
2B91 B3                  OR    A,E
2B92 6F                  LD    L,A
2B93 78                  LD    A,B
2B94             L985:
2B94 11 3C 12            LD    DE,4668
2B97 B7                  OR    A
2B98 ED 52               SBC   HL,DE
2B9A             L986:
2B9A C2 A5 2B            JP    NZ,L990
2B9D             L987:
2B9D 3E 50               LD    A,80
2B9F             L988:
2B9F CD 5F 3D            CALL  writeLineA
2BA2             L989:
2BA2 C3 AB 2B            JP    L993
2BA5             L990:
2BA5 21 E7 03            LD    HL,999
2BA8             L991:
2BA8 CD 37 3D            CALL  writeLineHL
2BAB             L992:
2BAB                     ;;testBitwiseOperators.j(147)     if (0x10 + 0x0C ^ w2 == 0x1228) println (81); else println (999);
2BAB             L993:
2BAB 3E 10               LD    A,16
2BAD             L994:
2BAD C6 0C               ADD   A,12
2BAF             L995:
2BAF 6F                  LD    L,A
2BB0 26 00               LD    H,0
2BB2             L996:
2BB2 ED 5B 04 50         LD    DE,(05004H)
2BB6 C5                  PUSH  BC
2BB7 47                  LD    B,A
2BB8 7C                  LD    A,H
2BB9 AA                  XOR   A,D
2BBA 67                  LD    H,A
2BBB 7D                  LD    A,L
2BBC AB                  XOR   A,E
2BBD 6F                  LD    L,A
2BBE 78                  LD    A,B
2BBF C1                  POP   BC
2BC0             L997:
2BC0 11 28 12            LD    DE,4648
2BC3 B7                  OR    A
2BC4 ED 52               SBC   HL,DE
2BC6             L998:
2BC6 C2 D1 2B            JP    NZ,L1002
2BC9             L999:
2BC9 3E 51               LD    A,81
2BCB             L1000:
2BCB CD 5F 3D            CALL  writeLineA
2BCE             L1001:
2BCE C3 D7 2B            JP    L1006
2BD1             L1002:
2BD1 21 E7 03            LD    HL,999
2BD4             L1003:
2BD4 CD 37 3D            CALL  writeLineHL
2BD7             L1004:
2BD7                     ;;testBitwiseOperators.j(148)     //acc word/var byte
2BD7             L1005:
2BD7                     ;;testBitwiseOperators.j(149)     if (0x1000 + 0x0234 & b1 == 0x0014) println (82); else println (999);
2BD7             L1006:
2BD7 21 00 10            LD    HL,4096
2BDA             L1007:
2BDA 11 34 02            LD    DE,564
2BDD 19                  ADD   HL,DE
2BDE             L1008:
2BDE ED 5B 00 50         LD    DE,(05000H)
2BE2 C5                  PUSH  BC
2BE3 47                  LD    B,A
2BE4 7C                  LD    A,H
2BE5 A2                  AND   A,D
2BE6 67                  LD    H,A
2BE7 7D                  LD    A,L
2BE8 A3                  AND   A,E
2BE9 6F                  LD    L,A
2BEA 78                  LD    A,B
2BEB C1                  POP   BC
2BEC             L1009:
2BEC 3E 14               LD    A,20
2BEE             L1010:
2BEE 5F                  LD    E,A
2BEF 16 00               LD    D,0
2BF1 EB                  EX    DE,HL
2BF2 B7                  OR    A
2BF3 ED 52               SBC   HL,DE
2BF5             L1011:
2BF5 C2 00 2C            JP    NZ,L1015
2BF8             L1012:
2BF8 3E 52               LD    A,82
2BFA             L1013:
2BFA CD 5F 3D            CALL  writeLineA
2BFD             L1014:
2BFD C3 06 2C            JP    L1018
2C00             L1015:
2C00 21 E7 03            LD    HL,999
2C03             L1016:
2C03 CD 37 3D            CALL  writeLineHL
2C06             L1017:
2C06                     ;;testBitwiseOperators.j(150)     if (0x1000 + 0x0234 | b1 == 0x123C) println (83); else println (999);
2C06             L1018:
2C06 21 00 10            LD    HL,4096
2C09             L1019:
2C09 11 34 02            LD    DE,564
2C0C 19                  ADD   HL,DE
2C0D             L1020:
2C0D ED 5B 00 50         LD    DE,(05000H)
2C11 47                  LD    B,A
2C12 7C                  LD    A,H
2C13 B2                  OR    A,D
2C14 67                  LD    H,A
2C15 7D                  LD    A,L
2C16 B3                  OR    A,E
2C17 6F                  LD    L,A
2C18 78                  LD    A,B
2C19             L1021:
2C19 11 3C 12            LD    DE,4668
2C1C B7                  OR    A
2C1D ED 52               SBC   HL,DE
2C1F             L1022:
2C1F C2 2A 2C            JP    NZ,L1026
2C22             L1023:
2C22 3E 53               LD    A,83
2C24             L1024:
2C24 CD 5F 3D            CALL  writeLineA
2C27             L1025:
2C27 C3 30 2C            JP    L1029
2C2A             L1026:
2C2A 21 E7 03            LD    HL,999
2C2D             L1027:
2C2D CD 37 3D            CALL  writeLineHL
2C30             L1028:
2C30                     ;;testBitwiseOperators.j(151)     if (0x1000 + 0x0234 ^ b1 == 0x1228) println (84); else println (999);
2C30             L1029:
2C30 21 00 10            LD    HL,4096
2C33             L1030:
2C33 11 34 02            LD    DE,564
2C36 19                  ADD   HL,DE
2C37             L1031:
2C37 ED 5B 00 50         LD    DE,(05000H)
2C3B C5                  PUSH  BC
2C3C 47                  LD    B,A
2C3D 7C                  LD    A,H
2C3E AA                  XOR   A,D
2C3F 67                  LD    H,A
2C40 7D                  LD    A,L
2C41 AB                  XOR   A,E
2C42 6F                  LD    L,A
2C43 78                  LD    A,B
2C44 C1                  POP   BC
2C45             L1032:
2C45 11 28 12            LD    DE,4648
2C48 B7                  OR    A
2C49 ED 52               SBC   HL,DE
2C4B             L1033:
2C4B C2 56 2C            JP    NZ,L1037
2C4E             L1034:
2C4E 3E 54               LD    A,84
2C50             L1035:
2C50 CD 5F 3D            CALL  writeLineA
2C53             L1036:
2C53 C3 5C 2C            JP    L1044
2C56             L1037:
2C56 21 E7 03            LD    HL,999
2C59             L1038:
2C59 CD 37 3D            CALL  writeLineHL
2C5C             L1039:
2C5C                     ;;testBitwiseOperators.j(152)   
2C5C             L1040:
2C5C                     ;;testBitwiseOperators.j(153)     //acc/final var
2C5C             L1041:
2C5C                     ;;testBitwiseOperators.j(154)     //*************
2C5C             L1042:
2C5C                     ;;testBitwiseOperators.j(155)     //acc byte/final var byte
2C5C             L1043:
2C5C                     ;;testBitwiseOperators.j(156)     if (0x04 + 0x03 & fb1 == 0x04) println (85); else println (999);
2C5C             L1044:
2C5C 3E 04               LD    A,4
2C5E             L1045:
2C5E C6 03               ADD   A,3
2C60             L1046:
2C60 E6 1C               AND   A,28
2C62             L1047:
2C62 D6 04               SUB   A,4
2C64             L1048:
2C64 C2 6F 2C            JP    NZ,L1052
2C67             L1049:
2C67 3E 55               LD    A,85
2C69             L1050:
2C69 CD 5F 3D            CALL  writeLineA
2C6C             L1051:
2C6C C3 75 2C            JP    L1055
2C6F             L1052:
2C6F 21 E7 03            LD    HL,999
2C72             L1053:
2C72 CD 37 3D            CALL  writeLineHL
2C75             L1054:
2C75                     ;;testBitwiseOperators.j(157)     if (0x04 + 0x03 | fb1 == 0x1F) println (86); else println (999);
2C75             L1055:
2C75 3E 04               LD    A,4
2C77             L1056:
2C77 C6 03               ADD   A,3
2C79             L1057:
2C79 F6 1C               OR    A,28
2C7B             L1058:
2C7B D6 1F               SUB   A,31
2C7D             L1059:
2C7D C2 88 2C            JP    NZ,L1063
2C80             L1060:
2C80 3E 56               LD    A,86
2C82             L1061:
2C82 CD 5F 3D            CALL  writeLineA
2C85             L1062:
2C85 C3 8E 2C            JP    L1066
2C88             L1063:
2C88 21 E7 03            LD    HL,999
2C8B             L1064:
2C8B CD 37 3D            CALL  writeLineHL
2C8E             L1065:
2C8E                     ;;testBitwiseOperators.j(158)     if (0x04 + 0x03 ^ fb1 == 0x1B) println (87); else println (999);
2C8E             L1066:
2C8E 3E 04               LD    A,4
2C90             L1067:
2C90 C6 03               ADD   A,3
2C92             L1068:
2C92 EE 1C               XOR   A,28
2C94             L1069:
2C94 D6 1B               SUB   A,27
2C96             L1070:
2C96 C2 A1 2C            JP    NZ,L1074
2C99             L1071:
2C99 3E 57               LD    A,87
2C9B             L1072:
2C9B CD 5F 3D            CALL  writeLineA
2C9E             L1073:
2C9E C3 A7 2C            JP    L1078
2CA1             L1074:
2CA1 21 E7 03            LD    HL,999
2CA4             L1075:
2CA4 CD 37 3D            CALL  writeLineHL
2CA7             L1076:
2CA7                     ;;testBitwiseOperators.j(159)     //acc word/final var word
2CA7             L1077:
2CA7                     ;;testBitwiseOperators.j(160)     if (0x1000 + 0x0234 & fw1 == 0x0224) println (88); else println (999);
2CA7             L1078:
2CA7 21 00 10            LD    HL,4096
2CAA             L1079:
2CAA 11 34 02            LD    DE,564
2CAD 19                  ADD   HL,DE
2CAE             L1080:
2CAE 11 2C 03            LD    DE,812
2CB1 C5                  PUSH  BC
2CB2 47                  LD    B,A
2CB3 7C                  LD    A,H
2CB4 A2                  AND   A,D
2CB5 67                  LD    H,A
2CB6 7D                  LD    A,L
2CB7 A3                  AND   A,E
2CB8 6F                  LD    L,A
2CB9 78                  LD    A,B
2CBA C1                  POP   BC
2CBB             L1081:
2CBB 11 24 02            LD    DE,548
2CBE B7                  OR    A
2CBF ED 52               SBC   HL,DE
2CC1             L1082:
2CC1 C2 CC 2C            JP    NZ,L1086
2CC4             L1083:
2CC4 3E 58               LD    A,88
2CC6             L1084:
2CC6 CD 5F 3D            CALL  writeLineA
2CC9             L1085:
2CC9 C3 D2 2C            JP    L1089
2CCC             L1086:
2CCC 21 E7 03            LD    HL,999
2CCF             L1087:
2CCF CD 37 3D            CALL  writeLineHL
2CD2             L1088:
2CD2                     ;;testBitwiseOperators.j(161)     if (0x1000 + 0x0234 | fw1 == 0x133C) println (89); else println (999);
2CD2             L1089:
2CD2 21 00 10            LD    HL,4096
2CD5             L1090:
2CD5 11 34 02            LD    DE,564
2CD8 19                  ADD   HL,DE
2CD9             L1091:
2CD9 11 2C 03            LD    DE,812
2CDC 47                  LD    B,A
2CDD 7C                  LD    A,H
2CDE B2                  OR    A,D
2CDF 67                  LD    H,A
2CE0 7D                  LD    A,L
2CE1 B3                  OR    A,E
2CE2 6F                  LD    L,A
2CE3 78                  LD    A,B
2CE4             L1092:
2CE4 11 3C 13            LD    DE,4924
2CE7 B7                  OR    A
2CE8 ED 52               SBC   HL,DE
2CEA             L1093:
2CEA C2 F5 2C            JP    NZ,L1097
2CED             L1094:
2CED 3E 59               LD    A,89
2CEF             L1095:
2CEF CD 5F 3D            CALL  writeLineA
2CF2             L1096:
2CF2 C3 FB 2C            JP    L1100
2CF5             L1097:
2CF5 21 E7 03            LD    HL,999
2CF8             L1098:
2CF8 CD 37 3D            CALL  writeLineHL
2CFB             L1099:
2CFB                     ;;testBitwiseOperators.j(162)     if (0x1000 + 0x0234 ^ fw1 == 0x1118) println (90); else println (999);
2CFB             L1100:
2CFB 21 00 10            LD    HL,4096
2CFE             L1101:
2CFE 11 34 02            LD    DE,564
2D01 19                  ADD   HL,DE
2D02             L1102:
2D02 11 2C 03            LD    DE,812
2D05 C5                  PUSH  BC
2D06 47                  LD    B,A
2D07 7C                  LD    A,H
2D08 AA                  XOR   A,D
2D09 67                  LD    H,A
2D0A 7D                  LD    A,L
2D0B AB                  XOR   A,E
2D0C 6F                  LD    L,A
2D0D 78                  LD    A,B
2D0E C1                  POP   BC
2D0F             L1103:
2D0F 11 18 11            LD    DE,4376
2D12 B7                  OR    A
2D13 ED 52               SBC   HL,DE
2D15             L1104:
2D15 C2 20 2D            JP    NZ,L1108
2D18             L1105:
2D18 3E 5A               LD    A,90
2D1A             L1106:
2D1A CD 5F 3D            CALL  writeLineA
2D1D             L1107:
2D1D C3 26 2D            JP    L1112
2D20             L1108:
2D20 21 E7 03            LD    HL,999
2D23             L1109:
2D23 CD 37 3D            CALL  writeLineHL
2D26             L1110:
2D26                     ;;testBitwiseOperators.j(163)     //acc byte/final var word
2D26             L1111:
2D26                     ;;testBitwiseOperators.j(164)     if (0x10 + 0x0C & fw2 == 0x0014) println (91); else println (999);
2D26             L1112:
2D26 3E 10               LD    A,16
2D28             L1113:
2D28 C6 0C               ADD   A,12
2D2A             L1114:
2D2A 6F                  LD    L,A
2D2B 26 00               LD    H,0
2D2D             L1115:
2D2D 11 34 12            LD    DE,4660
2D30 C5                  PUSH  BC
2D31 47                  LD    B,A
2D32 7C                  LD    A,H
2D33 A2                  AND   A,D
2D34 67                  LD    H,A
2D35 7D                  LD    A,L
2D36 A3                  AND   A,E
2D37 6F                  LD    L,A
2D38 78                  LD    A,B
2D39 C1                  POP   BC
2D3A             L1116:
2D3A 3E 14               LD    A,20
2D3C             L1117:
2D3C 5F                  LD    E,A
2D3D 16 00               LD    D,0
2D3F EB                  EX    DE,HL
2D40 B7                  OR    A
2D41 ED 52               SBC   HL,DE
2D43             L1118:
2D43 C2 4E 2D            JP    NZ,L1122
2D46             L1119:
2D46 3E 5B               LD    A,91
2D48             L1120:
2D48 CD 5F 3D            CALL  writeLineA
2D4B             L1121:
2D4B C3 54 2D            JP    L1125
2D4E             L1122:
2D4E 21 E7 03            LD    HL,999
2D51             L1123:
2D51 CD 37 3D            CALL  writeLineHL
2D54             L1124:
2D54                     ;;testBitwiseOperators.j(165)     if (0x10 + 0x0C | fw2 == 0x123C) println (92); else println (999);
2D54             L1125:
2D54 3E 10               LD    A,16
2D56             L1126:
2D56 C6 0C               ADD   A,12
2D58             L1127:
2D58 6F                  LD    L,A
2D59 26 00               LD    H,0
2D5B             L1128:
2D5B 11 34 12            LD    DE,4660
2D5E 47                  LD    B,A
2D5F 7C                  LD    A,H
2D60 B2                  OR    A,D
2D61 67                  LD    H,A
2D62 7D                  LD    A,L
2D63 B3                  OR    A,E
2D64 6F                  LD    L,A
2D65 78                  LD    A,B
2D66             L1129:
2D66 11 3C 12            LD    DE,4668
2D69 B7                  OR    A
2D6A ED 52               SBC   HL,DE
2D6C             L1130:
2D6C C2 77 2D            JP    NZ,L1134
2D6F             L1131:
2D6F 3E 5C               LD    A,92
2D71             L1132:
2D71 CD 5F 3D            CALL  writeLineA
2D74             L1133:
2D74 C3 7D 2D            JP    L1137
2D77             L1134:
2D77 21 E7 03            LD    HL,999
2D7A             L1135:
2D7A CD 37 3D            CALL  writeLineHL
2D7D             L1136:
2D7D                     ;;testBitwiseOperators.j(166)     if (0x10 + 0x0C ^ fw2 == 0x1228) println (93); else println (999);
2D7D             L1137:
2D7D 3E 10               LD    A,16
2D7F             L1138:
2D7F C6 0C               ADD   A,12
2D81             L1139:
2D81 6F                  LD    L,A
2D82 26 00               LD    H,0
2D84             L1140:
2D84 11 34 12            LD    DE,4660
2D87 C5                  PUSH  BC
2D88 47                  LD    B,A
2D89 7C                  LD    A,H
2D8A AA                  XOR   A,D
2D8B 67                  LD    H,A
2D8C 7D                  LD    A,L
2D8D AB                  XOR   A,E
2D8E 6F                  LD    L,A
2D8F 78                  LD    A,B
2D90 C1                  POP   BC
2D91             L1141:
2D91 11 28 12            LD    DE,4648
2D94 B7                  OR    A
2D95 ED 52               SBC   HL,DE
2D97             L1142:
2D97 C2 A2 2D            JP    NZ,L1146
2D9A             L1143:
2D9A 3E 5D               LD    A,93
2D9C             L1144:
2D9C CD 5F 3D            CALL  writeLineA
2D9F             L1145:
2D9F C3 A8 2D            JP    L1150
2DA2             L1146:
2DA2 21 E7 03            LD    HL,999
2DA5             L1147:
2DA5 CD 37 3D            CALL  writeLineHL
2DA8             L1148:
2DA8                     ;;testBitwiseOperators.j(167)     //acc word/final var byte
2DA8             L1149:
2DA8                     ;;testBitwiseOperators.j(168)     if (0x1000 + 0x0234 & fb1 == 0x0014) println (94); else println (999);
2DA8             L1150:
2DA8 21 00 10            LD    HL,4096
2DAB             L1151:
2DAB 11 34 02            LD    DE,564
2DAE 19                  ADD   HL,DE
2DAF             L1152:
2DAF 5F                  LD    E,A
2DB0 3E 1C               LD    A,28
2DB2 A5                  AND   A,L
2DB3 6F                  LD    L,A
2DB4 7B                  LD    A,E
2DB5 26 00               LD    H,0
2DB7             L1153:
2DB7 3E 14               LD    A,20
2DB9             L1154:
2DB9 5F                  LD    E,A
2DBA 16 00               LD    D,0
2DBC EB                  EX    DE,HL
2DBD B7                  OR    A
2DBE ED 52               SBC   HL,DE
2DC0             L1155:
2DC0 C2 CB 2D            JP    NZ,L1159
2DC3             L1156:
2DC3 3E 5E               LD    A,94
2DC5             L1157:
2DC5 CD 5F 3D            CALL  writeLineA
2DC8             L1158:
2DC8 C3 D1 2D            JP    L1162
2DCB             L1159:
2DCB 21 E7 03            LD    HL,999
2DCE             L1160:
2DCE CD 37 3D            CALL  writeLineHL
2DD1             L1161:
2DD1                     ;;testBitwiseOperators.j(169)     if (0x1000 + 0x0234 | fb1 == 0x123C) println (95); else println (999);
2DD1             L1162:
2DD1 21 00 10            LD    HL,4096
2DD4             L1163:
2DD4 11 34 02            LD    DE,564
2DD7 19                  ADD   HL,DE
2DD8             L1164:
2DD8 11 1C 00            LD    DE,28
2DDB 47                  LD    B,A
2DDC 7C                  LD    A,H
2DDD B2                  OR    A,D
2DDE 67                  LD    H,A
2DDF 7D                  LD    A,L
2DE0 B3                  OR    A,E
2DE1 6F                  LD    L,A
2DE2 78                  LD    A,B
2DE3             L1165:
2DE3 11 3C 12            LD    DE,4668
2DE6 B7                  OR    A
2DE7 ED 52               SBC   HL,DE
2DE9             L1166:
2DE9 C2 F4 2D            JP    NZ,L1170
2DEC             L1167:
2DEC 3E 5F               LD    A,95
2DEE             L1168:
2DEE CD 5F 3D            CALL  writeLineA
2DF1             L1169:
2DF1 C3 FA 2D            JP    L1173
2DF4             L1170:
2DF4 21 E7 03            LD    HL,999
2DF7             L1171:
2DF7 CD 37 3D            CALL  writeLineHL
2DFA             L1172:
2DFA                     ;;testBitwiseOperators.j(170)     if (0x1000 + 0x0234 ^ fb1 == 0x1228) println (96); else println (999);
2DFA             L1173:
2DFA 21 00 10            LD    HL,4096
2DFD             L1174:
2DFD 11 34 02            LD    DE,564
2E00 19                  ADD   HL,DE
2E01             L1175:
2E01 11 1C 00            LD    DE,28
2E04 C5                  PUSH  BC
2E05 47                  LD    B,A
2E06 7C                  LD    A,H
2E07 AA                  XOR   A,D
2E08 67                  LD    H,A
2E09 7D                  LD    A,L
2E0A AB                  XOR   A,E
2E0B 6F                  LD    L,A
2E0C 78                  LD    A,B
2E0D C1                  POP   BC
2E0E             L1176:
2E0E 11 28 12            LD    DE,4648
2E11 B7                  OR    A
2E12 ED 52               SBC   HL,DE
2E14             L1177:
2E14 C2 1F 2E            JP    NZ,L1181
2E17             L1178:
2E17 3E 60               LD    A,96
2E19             L1179:
2E19 CD 5F 3D            CALL  writeLineA
2E1C             L1180:
2E1C C3 25 2E            JP    L1188
2E1F             L1181:
2E1F 21 E7 03            LD    HL,999
2E22             L1182:
2E22 CD 37 3D            CALL  writeLineHL
2E25             L1183:
2E25                     ;;testBitwiseOperators.j(171)   
2E25             L1184:
2E25                     ;;testBitwiseOperators.j(172)     //var/constant
2E25             L1185:
2E25                     ;;testBitwiseOperators.j(173)     //************
2E25             L1186:
2E25                     ;;testBitwiseOperators.j(174)     //var byte/constant byte
2E25             L1187:
2E25                     ;;testBitwiseOperators.j(175)     if (b2 & 0x1C == 0x04) println (97); else println (999);
2E25             L1188:
2E25 3A 01 50            LD    A,(05001H)
2E28             L1189:
2E28 E6 1C               AND   A,28
2E2A             L1190:
2E2A D6 04               SUB   A,4
2E2C             L1191:
2E2C C2 37 2E            JP    NZ,L1195
2E2F             L1192:
2E2F 3E 61               LD    A,97
2E31             L1193:
2E31 CD 5F 3D            CALL  writeLineA
2E34             L1194:
2E34 C3 3D 2E            JP    L1198
2E37             L1195:
2E37 21 E7 03            LD    HL,999
2E3A             L1196:
2E3A CD 37 3D            CALL  writeLineHL
2E3D             L1197:
2E3D                     ;;testBitwiseOperators.j(176)     if (b2 | 0x1C == 0x1F) println (98); else println (999);
2E3D             L1198:
2E3D 3A 01 50            LD    A,(05001H)
2E40             L1199:
2E40 F6 1C               OR    A,28
2E42             L1200:
2E42 D6 1F               SUB   A,31
2E44             L1201:
2E44 C2 4F 2E            JP    NZ,L1205
2E47             L1202:
2E47 3E 62               LD    A,98
2E49             L1203:
2E49 CD 5F 3D            CALL  writeLineA
2E4C             L1204:
2E4C C3 55 2E            JP    L1208
2E4F             L1205:
2E4F 21 E7 03            LD    HL,999
2E52             L1206:
2E52 CD 37 3D            CALL  writeLineHL
2E55             L1207:
2E55                     ;;testBitwiseOperators.j(177)     if (b2 ^ 0x1C == 0x1B) println (99); else println (999);
2E55             L1208:
2E55 3A 01 50            LD    A,(05001H)
2E58             L1209:
2E58 EE 1C               XOR   A,28
2E5A             L1210:
2E5A D6 1B               SUB   A,27
2E5C             L1211:
2E5C C2 67 2E            JP    NZ,L1215
2E5F             L1212:
2E5F 3E 63               LD    A,99
2E61             L1213:
2E61 CD 5F 3D            CALL  writeLineA
2E64             L1214:
2E64 C3 6D 2E            JP    L1219
2E67             L1215:
2E67 21 E7 03            LD    HL,999
2E6A             L1216:
2E6A CD 37 3D            CALL  writeLineHL
2E6D             L1217:
2E6D                     ;;testBitwiseOperators.j(178)     //var word/constant word
2E6D             L1218:
2E6D                     ;;testBitwiseOperators.j(179)     if (w2 & 0x032C == 0x0224) println (100); else println (999);
2E6D             L1219:
2E6D 2A 04 50            LD    HL,(05004H)
2E70             L1220:
2E70 11 2C 03            LD    DE,812
2E73 C5                  PUSH  BC
2E74 47                  LD    B,A
2E75 7C                  LD    A,H
2E76 A2                  AND   A,D
2E77 67                  LD    H,A
2E78 7D                  LD    A,L
2E79 A3                  AND   A,E
2E7A 6F                  LD    L,A
2E7B 78                  LD    A,B
2E7C C1                  POP   BC
2E7D             L1221:
2E7D 11 24 02            LD    DE,548
2E80 B7                  OR    A
2E81 ED 52               SBC   HL,DE
2E83             L1222:
2E83 C2 8E 2E            JP    NZ,L1226
2E86             L1223:
2E86 3E 64               LD    A,100
2E88             L1224:
2E88 CD 5F 3D            CALL  writeLineA
2E8B             L1225:
2E8B C3 94 2E            JP    L1229
2E8E             L1226:
2E8E 21 E7 03            LD    HL,999
2E91             L1227:
2E91 CD 37 3D            CALL  writeLineHL
2E94             L1228:
2E94                     ;;testBitwiseOperators.j(180)     if (w2 | 0x032C == 0x133C) println (101); else println (999);
2E94             L1229:
2E94 2A 04 50            LD    HL,(05004H)
2E97             L1230:
2E97 11 2C 03            LD    DE,812
2E9A 47                  LD    B,A
2E9B 7C                  LD    A,H
2E9C B2                  OR    A,D
2E9D 67                  LD    H,A
2E9E 7D                  LD    A,L
2E9F B3                  OR    A,E
2EA0 6F                  LD    L,A
2EA1 78                  LD    A,B
2EA2             L1231:
2EA2 11 3C 13            LD    DE,4924
2EA5 B7                  OR    A
2EA6 ED 52               SBC   HL,DE
2EA8             L1232:
2EA8 C2 B3 2E            JP    NZ,L1236
2EAB             L1233:
2EAB 3E 65               LD    A,101
2EAD             L1234:
2EAD CD 5F 3D            CALL  writeLineA
2EB0             L1235:
2EB0 C3 B9 2E            JP    L1239
2EB3             L1236:
2EB3 21 E7 03            LD    HL,999
2EB6             L1237:
2EB6 CD 37 3D            CALL  writeLineHL
2EB9             L1238:
2EB9                     ;;testBitwiseOperators.j(181)     if (w2 ^ 0x032C == 0x1118) println (102); else println (999);
2EB9             L1239:
2EB9 2A 04 50            LD    HL,(05004H)
2EBC             L1240:
2EBC 11 2C 03            LD    DE,812
2EBF C5                  PUSH  BC
2EC0 47                  LD    B,A
2EC1 7C                  LD    A,H
2EC2 AA                  XOR   A,D
2EC3 67                  LD    H,A
2EC4 7D                  LD    A,L
2EC5 AB                  XOR   A,E
2EC6 6F                  LD    L,A
2EC7 78                  LD    A,B
2EC8 C1                  POP   BC
2EC9             L1241:
2EC9 11 18 11            LD    DE,4376
2ECC B7                  OR    A
2ECD ED 52               SBC   HL,DE
2ECF             L1242:
2ECF C2 DA 2E            JP    NZ,L1246
2ED2             L1243:
2ED2 3E 66               LD    A,102
2ED4             L1244:
2ED4 CD 5F 3D            CALL  writeLineA
2ED7             L1245:
2ED7 C3 E0 2E            JP    L1250
2EDA             L1246:
2EDA 21 E7 03            LD    HL,999
2EDD             L1247:
2EDD CD 37 3D            CALL  writeLineHL
2EE0             L1248:
2EE0                     ;;testBitwiseOperators.j(182)     //var byte/constant word
2EE0             L1249:
2EE0                     ;;testBitwiseOperators.j(183)     if (b1 & 0x1234 == 0x0014) println (103); else println (999);
2EE0             L1250:
2EE0 3A 00 50            LD    A,(05000H)
2EE3             L1251:
2EE3 6F                  LD    L,A
2EE4 26 00               LD    H,0
2EE6             L1252:
2EE6 11 34 12            LD    DE,4660
2EE9 C5                  PUSH  BC
2EEA 47                  LD    B,A
2EEB 7C                  LD    A,H
2EEC A2                  AND   A,D
2EED 67                  LD    H,A
2EEE 7D                  LD    A,L
2EEF A3                  AND   A,E
2EF0 6F                  LD    L,A
2EF1 78                  LD    A,B
2EF2 C1                  POP   BC
2EF3             L1253:
2EF3 3E 14               LD    A,20
2EF5             L1254:
2EF5 5F                  LD    E,A
2EF6 16 00               LD    D,0
2EF8 EB                  EX    DE,HL
2EF9 B7                  OR    A
2EFA ED 52               SBC   HL,DE
2EFC             L1255:
2EFC C2 07 2F            JP    NZ,L1259
2EFF             L1256:
2EFF 3E 67               LD    A,103
2F01             L1257:
2F01 CD 5F 3D            CALL  writeLineA
2F04             L1258:
2F04 C3 0D 2F            JP    L1262
2F07             L1259:
2F07 21 E7 03            LD    HL,999
2F0A             L1260:
2F0A CD 37 3D            CALL  writeLineHL
2F0D             L1261:
2F0D                     ;;testBitwiseOperators.j(184)     if (b1 | 0x1234 == 0x123C) println (104); else println (999);
2F0D             L1262:
2F0D 3A 00 50            LD    A,(05000H)
2F10             L1263:
2F10 6F                  LD    L,A
2F11 26 00               LD    H,0
2F13             L1264:
2F13 11 34 12            LD    DE,4660
2F16 47                  LD    B,A
2F17 7C                  LD    A,H
2F18 B2                  OR    A,D
2F19 67                  LD    H,A
2F1A 7D                  LD    A,L
2F1B B3                  OR    A,E
2F1C 6F                  LD    L,A
2F1D 78                  LD    A,B
2F1E             L1265:
2F1E 11 3C 12            LD    DE,4668
2F21 B7                  OR    A
2F22 ED 52               SBC   HL,DE
2F24             L1266:
2F24 C2 2F 2F            JP    NZ,L1270
2F27             L1267:
2F27 3E 68               LD    A,104
2F29             L1268:
2F29 CD 5F 3D            CALL  writeLineA
2F2C             L1269:
2F2C C3 35 2F            JP    L1273
2F2F             L1270:
2F2F 21 E7 03            LD    HL,999
2F32             L1271:
2F32 CD 37 3D            CALL  writeLineHL
2F35             L1272:
2F35                     ;;testBitwiseOperators.j(185)     if (b1 ^ 0x1234 == 0x1228) println (105); else println (999);
2F35             L1273:
2F35 3A 00 50            LD    A,(05000H)
2F38             L1274:
2F38 6F                  LD    L,A
2F39 26 00               LD    H,0
2F3B             L1275:
2F3B 11 34 12            LD    DE,4660
2F3E C5                  PUSH  BC
2F3F 47                  LD    B,A
2F40 7C                  LD    A,H
2F41 AA                  XOR   A,D
2F42 67                  LD    H,A
2F43 7D                  LD    A,L
2F44 AB                  XOR   A,E
2F45 6F                  LD    L,A
2F46 78                  LD    A,B
2F47 C1                  POP   BC
2F48             L1276:
2F48 11 28 12            LD    DE,4648
2F4B B7                  OR    A
2F4C ED 52               SBC   HL,DE
2F4E             L1277:
2F4E C2 59 2F            JP    NZ,L1281
2F51             L1278:
2F51 3E 69               LD    A,105
2F53             L1279:
2F53 CD 5F 3D            CALL  writeLineA
2F56             L1280:
2F56 C3 5F 2F            JP    L1285
2F59             L1281:
2F59 21 E7 03            LD    HL,999
2F5C             L1282:
2F5C CD 37 3D            CALL  writeLineHL
2F5F             L1283:
2F5F                     ;;testBitwiseOperators.j(186)     //var word/constant byte
2F5F             L1284:
2F5F                     ;;testBitwiseOperators.j(187)     if (w2 & 0x1C == 0x0014) println (106); else println (999);
2F5F             L1285:
2F5F 2A 04 50            LD    HL,(05004H)
2F62             L1286:
2F62 5F                  LD    E,A
2F63 3E 1C               LD    A,28
2F65 A5                  AND   A,L
2F66 6F                  LD    L,A
2F67 7B                  LD    A,E
2F68 26 00               LD    H,0
2F6A             L1287:
2F6A 3E 14               LD    A,20
2F6C             L1288:
2F6C 5F                  LD    E,A
2F6D 16 00               LD    D,0
2F6F EB                  EX    DE,HL
2F70 B7                  OR    A
2F71 ED 52               SBC   HL,DE
2F73             L1289:
2F73 C2 7E 2F            JP    NZ,L1293
2F76             L1290:
2F76 3E 6A               LD    A,106
2F78             L1291:
2F78 CD 5F 3D            CALL  writeLineA
2F7B             L1292:
2F7B C3 84 2F            JP    L1296
2F7E             L1293:
2F7E 21 E7 03            LD    HL,999
2F81             L1294:
2F81 CD 37 3D            CALL  writeLineHL
2F84             L1295:
2F84                     ;;testBitwiseOperators.j(188)     if (w2 | 0x1C == 0x123C) println (107); else println (999);
2F84             L1296:
2F84 2A 04 50            LD    HL,(05004H)
2F87             L1297:
2F87 11 1C 00            LD    DE,28
2F8A 47                  LD    B,A
2F8B 7C                  LD    A,H
2F8C B2                  OR    A,D
2F8D 67                  LD    H,A
2F8E 7D                  LD    A,L
2F8F B3                  OR    A,E
2F90 6F                  LD    L,A
2F91 78                  LD    A,B
2F92             L1298:
2F92 11 3C 12            LD    DE,4668
2F95 B7                  OR    A
2F96 ED 52               SBC   HL,DE
2F98             L1299:
2F98 C2 A3 2F            JP    NZ,L1303
2F9B             L1300:
2F9B 3E 6B               LD    A,107
2F9D             L1301:
2F9D CD 5F 3D            CALL  writeLineA
2FA0             L1302:
2FA0 C3 A9 2F            JP    L1306
2FA3             L1303:
2FA3 21 E7 03            LD    HL,999
2FA6             L1304:
2FA6 CD 37 3D            CALL  writeLineHL
2FA9             L1305:
2FA9                     ;;testBitwiseOperators.j(189)     if (w2 ^ 0x1C == 0x1228) println (108); else println (999);
2FA9             L1306:
2FA9 2A 04 50            LD    HL,(05004H)
2FAC             L1307:
2FAC 11 1C 00            LD    DE,28
2FAF C5                  PUSH  BC
2FB0 47                  LD    B,A
2FB1 7C                  LD    A,H
2FB2 AA                  XOR   A,D
2FB3 67                  LD    H,A
2FB4 7D                  LD    A,L
2FB5 AB                  XOR   A,E
2FB6 6F                  LD    L,A
2FB7 78                  LD    A,B
2FB8 C1                  POP   BC
2FB9             L1308:
2FB9 11 28 12            LD    DE,4648
2FBC B7                  OR    A
2FBD ED 52               SBC   HL,DE
2FBF             L1309:
2FBF C2 CA 2F            JP    NZ,L1313
2FC2             L1310:
2FC2 3E 6C               LD    A,108
2FC4             L1311:
2FC4 CD 5F 3D            CALL  writeLineA
2FC7             L1312:
2FC7 C3 D0 2F            JP    L1320
2FCA             L1313:
2FCA 21 E7 03            LD    HL,999
2FCD             L1314:
2FCD CD 37 3D            CALL  writeLineHL
2FD0             L1315:
2FD0                     ;;testBitwiseOperators.j(190)   
2FD0             L1316:
2FD0                     ;;testBitwiseOperators.j(191)     //var/acc
2FD0             L1317:
2FD0                     ;;testBitwiseOperators.j(192)     //*******
2FD0             L1318:
2FD0                     ;;testBitwiseOperators.j(193)     //var byte/acc byte
2FD0             L1319:
2FD0                     ;;testBitwiseOperators.j(194)     if (b2 & (0x10 + 0x0C) == 0x04) println (109); else println (999);
2FD0             L1320:
2FD0 3A 01 50            LD    A,(05001H)
2FD3             L1321:
2FD3 F5                  PUSH  AF
2FD4 3E 10               LD    A,16
2FD6             L1322:
2FD6 C6 0C               ADD   A,12
2FD8             L1323:
2FD8 C1                  POP   BC
2FD9 A0                  AND   A,B
2FDA             L1324:
2FDA D6 04               SUB   A,4
2FDC             L1325:
2FDC C2 E7 2F            JP    NZ,L1329
2FDF             L1326:
2FDF 3E 6D               LD    A,109
2FE1             L1327:
2FE1 CD 5F 3D            CALL  writeLineA
2FE4             L1328:
2FE4 C3 ED 2F            JP    L1332
2FE7             L1329:
2FE7 21 E7 03            LD    HL,999
2FEA             L1330:
2FEA CD 37 3D            CALL  writeLineHL
2FED             L1331:
2FED                     ;;testBitwiseOperators.j(195)     if (b2 | (0x10 + 0x0C) == 0x1F) println (110); else println (999);
2FED             L1332:
2FED 3A 01 50            LD    A,(05001H)
2FF0             L1333:
2FF0 F5                  PUSH  AF
2FF1 3E 10               LD    A,16
2FF3             L1334:
2FF3 C6 0C               ADD   A,12
2FF5             L1335:
2FF5 C1                  POP   BC
2FF6 B0                  OR    A,B
2FF7             L1336:
2FF7 D6 1F               SUB   A,31
2FF9             L1337:
2FF9 C2 04 30            JP    NZ,L1341
2FFC             L1338:
2FFC 3E 6E               LD    A,110
2FFE             L1339:
2FFE CD 5F 3D            CALL  writeLineA
3001             L1340:
3001 C3 0A 30            JP    L1344
3004             L1341:
3004 21 E7 03            LD    HL,999
3007             L1342:
3007 CD 37 3D            CALL  writeLineHL
300A             L1343:
300A                     ;;testBitwiseOperators.j(196)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (111); else println (999);
300A             L1344:
300A 3A 01 50            LD    A,(05001H)
300D             L1345:
300D F5                  PUSH  AF
300E 3E 10               LD    A,16
3010             L1346:
3010 C6 0C               ADD   A,12
3012             L1347:
3012 C1                  POP   BC
3013 A8                  XOR   A,B
3014             L1348:
3014 D6 1B               SUB   A,27
3016             L1349:
3016 C2 21 30            JP    NZ,L1353
3019             L1350:
3019 3E 6F               LD    A,111
301B             L1351:
301B CD 5F 3D            CALL  writeLineA
301E             L1352:
301E C3 27 30            JP    L1357
3021             L1353:
3021 21 E7 03            LD    HL,999
3024             L1354:
3024 CD 37 3D            CALL  writeLineHL
3027             L1355:
3027                     ;;testBitwiseOperators.j(197)     //var word/acc word
3027             L1356:
3027                     ;;testBitwiseOperators.j(198)     if (w2 & 0x0100 + 0x022C == 0x0224) println (112); else println (999);
3027             L1357:
3027 2A 04 50            LD    HL,(05004H)
302A             L1358:
302A E5                  PUSH  HL
302B 21 00 01            LD    HL,256
302E             L1359:
302E 11 2C 02            LD    DE,556
3031 19                  ADD   HL,DE
3032             L1360:
3032 D1                  POP   DE
3033 C5                  PUSH  BC
3034 47                  LD    B,A
3035 7C                  LD    A,H
3036 A2                  AND   A,D
3037 67                  LD    H,A
3038 7D                  LD    A,L
3039 A3                  AND   A,E
303A 6F                  LD    L,A
303B 78                  LD    A,B
303C C1                  POP   BC
303D             L1361:
303D 11 24 02            LD    DE,548
3040 B7                  OR    A
3041 ED 52               SBC   HL,DE
3043             L1362:
3043 C2 4E 30            JP    NZ,L1366
3046             L1363:
3046 3E 70               LD    A,112
3048             L1364:
3048 CD 5F 3D            CALL  writeLineA
304B             L1365:
304B C3 54 30            JP    L1369
304E             L1366:
304E 21 E7 03            LD    HL,999
3051             L1367:
3051 CD 37 3D            CALL  writeLineHL
3054             L1368:
3054                     ;;testBitwiseOperators.j(199)     if (w2 | 0x0100 + 0x022C == 0x133C) println (113); else println (999);
3054             L1369:
3054 2A 04 50            LD    HL,(05004H)
3057             L1370:
3057 E5                  PUSH  HL
3058 21 00 01            LD    HL,256
305B             L1371:
305B 11 2C 02            LD    DE,556
305E 19                  ADD   HL,DE
305F             L1372:
305F D1                  POP   DE
3060 47                  LD    B,A
3061 7C                  LD    A,H
3062 B2                  OR    A,D
3063 67                  LD    H,A
3064 7D                  LD    A,L
3065 B3                  OR    A,E
3066 6F                  LD    L,A
3067 78                  LD    A,B
3068             L1373:
3068 11 3C 13            LD    DE,4924
306B B7                  OR    A
306C ED 52               SBC   HL,DE
306E             L1374:
306E C2 79 30            JP    NZ,L1378
3071             L1375:
3071 3E 71               LD    A,113
3073             L1376:
3073 CD 5F 3D            CALL  writeLineA
3076             L1377:
3076 C3 7F 30            JP    L1381
3079             L1378:
3079 21 E7 03            LD    HL,999
307C             L1379:
307C CD 37 3D            CALL  writeLineHL
307F             L1380:
307F                     ;;testBitwiseOperators.j(200)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (114); else println (999);
307F             L1381:
307F 2A 04 50            LD    HL,(05004H)
3082             L1382:
3082 E5                  PUSH  HL
3083 21 00 01            LD    HL,256
3086             L1383:
3086 11 2C 02            LD    DE,556
3089 19                  ADD   HL,DE
308A             L1384:
308A D1                  POP   DE
308B C5                  PUSH  BC
308C 47                  LD    B,A
308D 7C                  LD    A,H
308E AA                  XOR   A,D
308F 67                  LD    H,A
3090 7D                  LD    A,L
3091 AB                  XOR   A,E
3092 6F                  LD    L,A
3093 78                  LD    A,B
3094 C1                  POP   BC
3095             L1385:
3095 11 18 11            LD    DE,4376
3098 B7                  OR    A
3099 ED 52               SBC   HL,DE
309B             L1386:
309B C2 A6 30            JP    NZ,L1390
309E             L1387:
309E 3E 72               LD    A,114
30A0             L1388:
30A0 CD 5F 3D            CALL  writeLineA
30A3             L1389:
30A3 C3 AC 30            JP    L1394
30A6             L1390:
30A6 21 E7 03            LD    HL,999
30A9             L1391:
30A9 CD 37 3D            CALL  writeLineHL
30AC             L1392:
30AC                     ;;testBitwiseOperators.j(201)     //var byte/acc word
30AC             L1393:
30AC                     ;;testBitwiseOperators.j(202)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (115); else println (999);
30AC             L1394:
30AC 3A 00 50            LD    A,(05000H)
30AF             L1395:
30AF 21 00 10            LD    HL,4096
30B2             L1396:
30B2 11 34 02            LD    DE,564
30B5 19                  ADD   HL,DE
30B6             L1397:
30B6 5F                  LD    E,A
30B7 A5                  AND   A,L
30B8 6F                  LD    L,A
30B9 7B                  LD    A,E
30BA 26 00               LD    H,0
30BC             L1398:
30BC 3E 14               LD    A,20
30BE             L1399:
30BE 5F                  LD    E,A
30BF 16 00               LD    D,0
30C1 EB                  EX    DE,HL
30C2 B7                  OR    A
30C3 ED 52               SBC   HL,DE
30C5             L1400:
30C5 C2 D0 30            JP    NZ,L1404
30C8             L1401:
30C8 3E 73               LD    A,115
30CA             L1402:
30CA CD 5F 3D            CALL  writeLineA
30CD             L1403:
30CD C3 D6 30            JP    L1407
30D0             L1404:
30D0 21 E7 03            LD    HL,999
30D3             L1405:
30D3 CD 37 3D            CALL  writeLineHL
30D6             L1406:
30D6                     ;;testBitwiseOperators.j(203)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (116); else println (999);
30D6             L1407:
30D6 3A 00 50            LD    A,(05000H)
30D9             L1408:
30D9 21 00 10            LD    HL,4096
30DC             L1409:
30DC 11 34 02            LD    DE,564
30DF 19                  ADD   HL,DE
30E0             L1410:
30E0 B5                  OR    A,L
30E1 6F                  LD    L,A
30E2             L1411:
30E2 11 3C 12            LD    DE,4668
30E5 B7                  OR    A
30E6 ED 52               SBC   HL,DE
30E8             L1412:
30E8 C2 F3 30            JP    NZ,L1416
30EB             L1413:
30EB 3E 74               LD    A,116
30ED             L1414:
30ED CD 5F 3D            CALL  writeLineA
30F0             L1415:
30F0 C3 F9 30            JP    L1419
30F3             L1416:
30F3 21 E7 03            LD    HL,999
30F6             L1417:
30F6 CD 37 3D            CALL  writeLineHL
30F9             L1418:
30F9                     ;;testBitwiseOperators.j(204)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (117); else println (999);
30F9             L1419:
30F9 3A 00 50            LD    A,(05000H)
30FC             L1420:
30FC 21 00 10            LD    HL,4096
30FF             L1421:
30FF 11 34 02            LD    DE,564
3102 19                  ADD   HL,DE
3103             L1422:
3103 AD                  XOR   A,L
3104 6F                  LD    L,A
3105             L1423:
3105 11 28 12            LD    DE,4648
3108 B7                  OR    A
3109 ED 52               SBC   HL,DE
310B             L1424:
310B C2 16 31            JP    NZ,L1428
310E             L1425:
310E 3E 75               LD    A,117
3110             L1426:
3110 CD 5F 3D            CALL  writeLineA
3113             L1427:
3113 C3 1C 31            JP    L1432
3116             L1428:
3116 21 E7 03            LD    HL,999
3119             L1429:
3119 CD 37 3D            CALL  writeLineHL
311C             L1430:
311C                     ;;testBitwiseOperators.j(205)     //var word/acc byte
311C             L1431:
311C                     ;;testBitwiseOperators.j(206)     if (w2 & 0x10 + 0x0C == 0x0014) println (118); else println (999);
311C             L1432:
311C 2A 04 50            LD    HL,(05004H)
311F             L1433:
311F 3E 10               LD    A,16
3121             L1434:
3121 C6 0C               ADD   A,12
3123             L1435:
3123 5F                  LD    E,A
3124 A5                  AND   A,L
3125 6F                  LD    L,A
3126 7B                  LD    A,E
3127 26 00               LD    H,0
3129             L1436:
3129 3E 14               LD    A,20
312B             L1437:
312B 5F                  LD    E,A
312C 16 00               LD    D,0
312E EB                  EX    DE,HL
312F B7                  OR    A
3130 ED 52               SBC   HL,DE
3132             L1438:
3132 C2 3D 31            JP    NZ,L1442
3135             L1439:
3135 3E 76               LD    A,118
3137             L1440:
3137 CD 5F 3D            CALL  writeLineA
313A             L1441:
313A C3 43 31            JP    L1445
313D             L1442:
313D 21 E7 03            LD    HL,999
3140             L1443:
3140 CD 37 3D            CALL  writeLineHL
3143             L1444:
3143                     ;;testBitwiseOperators.j(207)     if (w2 | 0x10 + 0x0C == 0x123C) println (119); else println (999);
3143             L1445:
3143 2A 04 50            LD    HL,(05004H)
3146             L1446:
3146 3E 10               LD    A,16
3148             L1447:
3148 C6 0C               ADD   A,12
314A             L1448:
314A B5                  OR    A,L
314B 6F                  LD    L,A
314C             L1449:
314C 11 3C 12            LD    DE,4668
314F B7                  OR    A
3150 ED 52               SBC   HL,DE
3152             L1450:
3152 C2 5D 31            JP    NZ,L1454
3155             L1451:
3155 3E 77               LD    A,119
3157             L1452:
3157 CD 5F 3D            CALL  writeLineA
315A             L1453:
315A C3 63 31            JP    L1457
315D             L1454:
315D 21 E7 03            LD    HL,999
3160             L1455:
3160 CD 37 3D            CALL  writeLineHL
3163             L1456:
3163                     ;;testBitwiseOperators.j(208)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (120); else println (999);
3163             L1457:
3163 2A 04 50            LD    HL,(05004H)
3166             L1458:
3166 3E 10               LD    A,16
3168             L1459:
3168 C6 0C               ADD   A,12
316A             L1460:
316A AD                  XOR   A,L
316B 6F                  LD    L,A
316C             L1461:
316C 11 28 12            LD    DE,4648
316F B7                  OR    A
3170 ED 52               SBC   HL,DE
3172             L1462:
3172 C2 7D 31            JP    NZ,L1466
3175             L1463:
3175 3E 78               LD    A,120
3177             L1464:
3177 CD 5F 3D            CALL  writeLineA
317A             L1465:
317A C3 83 31            JP    L1473
317D             L1466:
317D 21 E7 03            LD    HL,999
3180             L1467:
3180 CD 37 3D            CALL  writeLineHL
3183             L1468:
3183                     ;;testBitwiseOperators.j(209)   
3183             L1469:
3183                     ;;testBitwiseOperators.j(210)     //var/var
3183             L1470:
3183                     ;;testBitwiseOperators.j(211)     //*******
3183             L1471:
3183                     ;;testBitwiseOperators.j(212)     //var byte/var byte
3183             L1472:
3183                     ;;testBitwiseOperators.j(213)     if (b2 & b1 == 0x04) println (121); else println (999);
3183             L1473:
3183 3A 01 50            LD    A,(05001H)
3186             L1474:
3186 47                  LD    B,A
3187 3A 00 50            LD    A,(05000H)
318A A0                  AND   A,B
318B             L1475:
318B D6 04               SUB   A,4
318D             L1476:
318D C2 98 31            JP    NZ,L1480
3190             L1477:
3190 3E 79               LD    A,121
3192             L1478:
3192 CD 5F 3D            CALL  writeLineA
3195             L1479:
3195 C3 9E 31            JP    L1483
3198             L1480:
3198 21 E7 03            LD    HL,999
319B             L1481:
319B CD 37 3D            CALL  writeLineHL
319E             L1482:
319E                     ;;testBitwiseOperators.j(214)     if (b2 | b1 == 0x1F) println (122); else println (999);
319E             L1483:
319E 3A 01 50            LD    A,(05001H)
31A1             L1484:
31A1 47                  LD    B,A
31A2 3A 00 50            LD    A,(05000H)
31A5 B0                  OR    A,B
31A6             L1485:
31A6 D6 1F               SUB   A,31
31A8             L1486:
31A8 C2 B3 31            JP    NZ,L1490
31AB             L1487:
31AB 3E 7A               LD    A,122
31AD             L1488:
31AD CD 5F 3D            CALL  writeLineA
31B0             L1489:
31B0 C3 B9 31            JP    L1493
31B3             L1490:
31B3 21 E7 03            LD    HL,999
31B6             L1491:
31B6 CD 37 3D            CALL  writeLineHL
31B9             L1492:
31B9                     ;;testBitwiseOperators.j(215)     if (b2 ^ b1 == 0x1B) println (123); else println (999);
31B9             L1493:
31B9 3A 01 50            LD    A,(05001H)
31BC             L1494:
31BC 47                  LD    B,A
31BD 3A 00 50            LD    A,(05000H)
31C0 A8                  XOR   A,B
31C1             L1495:
31C1 D6 1B               SUB   A,27
31C3             L1496:
31C3 C2 CE 31            JP    NZ,L1500
31C6             L1497:
31C6 3E 7B               LD    A,123
31C8             L1498:
31C8 CD 5F 3D            CALL  writeLineA
31CB             L1499:
31CB C3 D4 31            JP    L1504
31CE             L1500:
31CE 21 E7 03            LD    HL,999
31D1             L1501:
31D1 CD 37 3D            CALL  writeLineHL
31D4             L1502:
31D4                     ;;testBitwiseOperators.j(216)     //var word/var word
31D4             L1503:
31D4                     ;;testBitwiseOperators.j(217)     if (w2 & w1 == 0x0224) println (124); else println (999);
31D4             L1504:
31D4 2A 04 50            LD    HL,(05004H)
31D7             L1505:
31D7 ED 5B 02 50         LD    DE,(05002H)
31DB C5                  PUSH  BC
31DC 47                  LD    B,A
31DD 7C                  LD    A,H
31DE A2                  AND   A,D
31DF 67                  LD    H,A
31E0 7D                  LD    A,L
31E1 A3                  AND   A,E
31E2 6F                  LD    L,A
31E3 78                  LD    A,B
31E4 C1                  POP   BC
31E5             L1506:
31E5 11 24 02            LD    DE,548
31E8 B7                  OR    A
31E9 ED 52               SBC   HL,DE
31EB             L1507:
31EB C2 F6 31            JP    NZ,L1511
31EE             L1508:
31EE 3E 7C               LD    A,124
31F0             L1509:
31F0 CD 5F 3D            CALL  writeLineA
31F3             L1510:
31F3 C3 FC 31            JP    L1514
31F6             L1511:
31F6 21 E7 03            LD    HL,999
31F9             L1512:
31F9 CD 37 3D            CALL  writeLineHL
31FC             L1513:
31FC                     ;;testBitwiseOperators.j(218)     if (w2 | w1 == 0x133C) println (125); else println (999);
31FC             L1514:
31FC 2A 04 50            LD    HL,(05004H)
31FF             L1515:
31FF ED 5B 02 50         LD    DE,(05002H)
3203 47                  LD    B,A
3204 7C                  LD    A,H
3205 B2                  OR    A,D
3206 67                  LD    H,A
3207 7D                  LD    A,L
3208 B3                  OR    A,E
3209 6F                  LD    L,A
320A 78                  LD    A,B
320B             L1516:
320B 11 3C 13            LD    DE,4924
320E B7                  OR    A
320F ED 52               SBC   HL,DE
3211             L1517:
3211 C2 1C 32            JP    NZ,L1521
3214             L1518:
3214 3E 7D               LD    A,125
3216             L1519:
3216 CD 5F 3D            CALL  writeLineA
3219             L1520:
3219 C3 22 32            JP    L1524
321C             L1521:
321C 21 E7 03            LD    HL,999
321F             L1522:
321F CD 37 3D            CALL  writeLineHL
3222             L1523:
3222                     ;;testBitwiseOperators.j(219)     if (w2 ^ w1 == 0x1118) println (126); else println (999);
3222             L1524:
3222 2A 04 50            LD    HL,(05004H)
3225             L1525:
3225 ED 5B 02 50         LD    DE,(05002H)
3229 C5                  PUSH  BC
322A 47                  LD    B,A
322B 7C                  LD    A,H
322C AA                  XOR   A,D
322D 67                  LD    H,A
322E 7D                  LD    A,L
322F AB                  XOR   A,E
3230 6F                  LD    L,A
3231 78                  LD    A,B
3232 C1                  POP   BC
3233             L1526:
3233 11 18 11            LD    DE,4376
3236 B7                  OR    A
3237 ED 52               SBC   HL,DE
3239             L1527:
3239 C2 44 32            JP    NZ,L1531
323C             L1528:
323C 3E 7E               LD    A,126
323E             L1529:
323E CD 5F 3D            CALL  writeLineA
3241             L1530:
3241 C3 4A 32            JP    L1535
3244             L1531:
3244 21 E7 03            LD    HL,999
3247             L1532:
3247 CD 37 3D            CALL  writeLineHL
324A             L1533:
324A                     ;;testBitwiseOperators.j(220)     //var byte/var word
324A             L1534:
324A                     ;;testBitwiseOperators.j(221)     if (b1 & w2 == 0x0014) println (127); else println (999);
324A             L1535:
324A 3A 00 50            LD    A,(05000H)
324D             L1536:
324D 6F                  LD    L,A
324E 26 00               LD    H,0
3250             L1537:
3250 ED 5B 04 50         LD    DE,(05004H)
3254 C5                  PUSH  BC
3255 47                  LD    B,A
3256 7C                  LD    A,H
3257 A2                  AND   A,D
3258 67                  LD    H,A
3259 7D                  LD    A,L
325A A3                  AND   A,E
325B 6F                  LD    L,A
325C 78                  LD    A,B
325D C1                  POP   BC
325E             L1538:
325E 3E 14               LD    A,20
3260             L1539:
3260 5F                  LD    E,A
3261 16 00               LD    D,0
3263 EB                  EX    DE,HL
3264 B7                  OR    A
3265 ED 52               SBC   HL,DE
3267             L1540:
3267 C2 72 32            JP    NZ,L1544
326A             L1541:
326A 3E 7F               LD    A,127
326C             L1542:
326C CD 5F 3D            CALL  writeLineA
326F             L1543:
326F C3 78 32            JP    L1547
3272             L1544:
3272 21 E7 03            LD    HL,999
3275             L1545:
3275 CD 37 3D            CALL  writeLineHL
3278             L1546:
3278                     ;;testBitwiseOperators.j(222)     if (b1 | w2 == 0x123C) println (128); else println (999);
3278             L1547:
3278 3A 00 50            LD    A,(05000H)
327B             L1548:
327B 6F                  LD    L,A
327C 26 00               LD    H,0
327E             L1549:
327E ED 5B 04 50         LD    DE,(05004H)
3282 47                  LD    B,A
3283 7C                  LD    A,H
3284 B2                  OR    A,D
3285 67                  LD    H,A
3286 7D                  LD    A,L
3287 B3                  OR    A,E
3288 6F                  LD    L,A
3289 78                  LD    A,B
328A             L1550:
328A 11 3C 12            LD    DE,4668
328D B7                  OR    A
328E ED 52               SBC   HL,DE
3290             L1551:
3290 C2 9B 32            JP    NZ,L1555
3293             L1552:
3293 3E 80               LD    A,128
3295             L1553:
3295 CD 5F 3D            CALL  writeLineA
3298             L1554:
3298 C3 A1 32            JP    L1558
329B             L1555:
329B 21 E7 03            LD    HL,999
329E             L1556:
329E CD 37 3D            CALL  writeLineHL
32A1             L1557:
32A1                     ;;testBitwiseOperators.j(223)     if (b1 ^ w2 == 0x1228) println (129); else println (999);
32A1             L1558:
32A1 3A 00 50            LD    A,(05000H)
32A4             L1559:
32A4 6F                  LD    L,A
32A5 26 00               LD    H,0
32A7             L1560:
32A7 ED 5B 04 50         LD    DE,(05004H)
32AB C5                  PUSH  BC
32AC 47                  LD    B,A
32AD 7C                  LD    A,H
32AE AA                  XOR   A,D
32AF 67                  LD    H,A
32B0 7D                  LD    A,L
32B1 AB                  XOR   A,E
32B2 6F                  LD    L,A
32B3 78                  LD    A,B
32B4 C1                  POP   BC
32B5             L1561:
32B5 11 28 12            LD    DE,4648
32B8 B7                  OR    A
32B9 ED 52               SBC   HL,DE
32BB             L1562:
32BB C2 C6 32            JP    NZ,L1566
32BE             L1563:
32BE 3E 81               LD    A,129
32C0             L1564:
32C0 CD 5F 3D            CALL  writeLineA
32C3             L1565:
32C3 C3 CC 32            JP    L1570
32C6             L1566:
32C6 21 E7 03            LD    HL,999
32C9             L1567:
32C9 CD 37 3D            CALL  writeLineHL
32CC             L1568:
32CC                     ;;testBitwiseOperators.j(224)     //var word/var byte
32CC             L1569:
32CC                     ;;testBitwiseOperators.j(225)     if (w2 & b1 == 0x0014) println (130); else println (999);
32CC             L1570:
32CC 2A 04 50            LD    HL,(05004H)
32CF             L1571:
32CF ED 5B 00 50         LD    DE,(05000H)
32D3 C5                  PUSH  BC
32D4 47                  LD    B,A
32D5 7C                  LD    A,H
32D6 A2                  AND   A,D
32D7 67                  LD    H,A
32D8 7D                  LD    A,L
32D9 A3                  AND   A,E
32DA 6F                  LD    L,A
32DB 78                  LD    A,B
32DC C1                  POP   BC
32DD             L1572:
32DD 3E 14               LD    A,20
32DF             L1573:
32DF 5F                  LD    E,A
32E0 16 00               LD    D,0
32E2 EB                  EX    DE,HL
32E3 B7                  OR    A
32E4 ED 52               SBC   HL,DE
32E6             L1574:
32E6 C2 F1 32            JP    NZ,L1578
32E9             L1575:
32E9 3E 82               LD    A,130
32EB             L1576:
32EB CD 5F 3D            CALL  writeLineA
32EE             L1577:
32EE C3 F7 32            JP    L1581
32F1             L1578:
32F1 21 E7 03            LD    HL,999
32F4             L1579:
32F4 CD 37 3D            CALL  writeLineHL
32F7             L1580:
32F7                     ;;testBitwiseOperators.j(226)     if (w2 | b1 == 0x123C) println (131); else println (999);
32F7             L1581:
32F7 2A 04 50            LD    HL,(05004H)
32FA             L1582:
32FA ED 5B 00 50         LD    DE,(05000H)
32FE 47                  LD    B,A
32FF 7C                  LD    A,H
3300 B2                  OR    A,D
3301 67                  LD    H,A
3302 7D                  LD    A,L
3303 B3                  OR    A,E
3304 6F                  LD    L,A
3305 78                  LD    A,B
3306             L1583:
3306 11 3C 12            LD    DE,4668
3309 B7                  OR    A
330A ED 52               SBC   HL,DE
330C             L1584:
330C C2 17 33            JP    NZ,L1588
330F             L1585:
330F 3E 83               LD    A,131
3311             L1586:
3311 CD 5F 3D            CALL  writeLineA
3314             L1587:
3314 C3 1D 33            JP    L1591
3317             L1588:
3317 21 E7 03            LD    HL,999
331A             L1589:
331A CD 37 3D            CALL  writeLineHL
331D             L1590:
331D                     ;;testBitwiseOperators.j(227)     if (w2 ^ b1 == 0x1228) println (132); else println (999);
331D             L1591:
331D 2A 04 50            LD    HL,(05004H)
3320             L1592:
3320 ED 5B 00 50         LD    DE,(05000H)
3324 C5                  PUSH  BC
3325 47                  LD    B,A
3326 7C                  LD    A,H
3327 AA                  XOR   A,D
3328 67                  LD    H,A
3329 7D                  LD    A,L
332A AB                  XOR   A,E
332B 6F                  LD    L,A
332C 78                  LD    A,B
332D C1                  POP   BC
332E             L1593:
332E 11 28 12            LD    DE,4648
3331 B7                  OR    A
3332 ED 52               SBC   HL,DE
3334             L1594:
3334 C2 3F 33            JP    NZ,L1598
3337             L1595:
3337 3E 84               LD    A,132
3339             L1596:
3339 CD 5F 3D            CALL  writeLineA
333C             L1597:
333C C3 45 33            JP    L1605
333F             L1598:
333F 21 E7 03            LD    HL,999
3342             L1599:
3342 CD 37 3D            CALL  writeLineHL
3345             L1600:
3345                     ;;testBitwiseOperators.j(228)   
3345             L1601:
3345                     ;;testBitwiseOperators.j(229)     //var/final var
3345             L1602:
3345                     ;;testBitwiseOperators.j(230)     //*************
3345             L1603:
3345                     ;;testBitwiseOperators.j(231)     //var byte/final var byte
3345             L1604:
3345                     ;;testBitwiseOperators.j(232)     if (b2 & fb1 == 0x04) println (133); else println (999);
3345             L1605:
3345 3A 01 50            LD    A,(05001H)
3348             L1606:
3348 E6 1C               AND   A,28
334A             L1607:
334A D6 04               SUB   A,4
334C             L1608:
334C C2 57 33            JP    NZ,L1612
334F             L1609:
334F 3E 85               LD    A,133
3351             L1610:
3351 CD 5F 3D            CALL  writeLineA
3354             L1611:
3354 C3 5D 33            JP    L1615
3357             L1612:
3357 21 E7 03            LD    HL,999
335A             L1613:
335A CD 37 3D            CALL  writeLineHL
335D             L1614:
335D                     ;;testBitwiseOperators.j(233)     if (b2 | fb1 == 0x1F) println (134); else println (999);
335D             L1615:
335D 3A 01 50            LD    A,(05001H)
3360             L1616:
3360 F6 1C               OR    A,28
3362             L1617:
3362 D6 1F               SUB   A,31
3364             L1618:
3364 C2 6F 33            JP    NZ,L1622
3367             L1619:
3367 3E 86               LD    A,134
3369             L1620:
3369 CD 5F 3D            CALL  writeLineA
336C             L1621:
336C C3 75 33            JP    L1625
336F             L1622:
336F 21 E7 03            LD    HL,999
3372             L1623:
3372 CD 37 3D            CALL  writeLineHL
3375             L1624:
3375                     ;;testBitwiseOperators.j(234)     if (b2 ^ fb1 == 0x1B) println (135); else println (999);
3375             L1625:
3375 3A 01 50            LD    A,(05001H)
3378             L1626:
3378 EE 1C               XOR   A,28
337A             L1627:
337A D6 1B               SUB   A,27
337C             L1628:
337C C2 87 33            JP    NZ,L1632
337F             L1629:
337F 3E 87               LD    A,135
3381             L1630:
3381 CD 5F 3D            CALL  writeLineA
3384             L1631:
3384 C3 8D 33            JP    L1636
3387             L1632:
3387 21 E7 03            LD    HL,999
338A             L1633:
338A CD 37 3D            CALL  writeLineHL
338D             L1634:
338D                     ;;testBitwiseOperators.j(235)     //var word/final var word
338D             L1635:
338D                     ;;testBitwiseOperators.j(236)     if (w2 & fw1 == 0x0224) println (136); else println (999);
338D             L1636:
338D 2A 04 50            LD    HL,(05004H)
3390             L1637:
3390 11 2C 03            LD    DE,812
3393 C5                  PUSH  BC
3394 47                  LD    B,A
3395 7C                  LD    A,H
3396 A2                  AND   A,D
3397 67                  LD    H,A
3398 7D                  LD    A,L
3399 A3                  AND   A,E
339A 6F                  LD    L,A
339B 78                  LD    A,B
339C C1                  POP   BC
339D             L1638:
339D 11 24 02            LD    DE,548
33A0 B7                  OR    A
33A1 ED 52               SBC   HL,DE
33A3             L1639:
33A3 C2 AE 33            JP    NZ,L1643
33A6             L1640:
33A6 3E 88               LD    A,136
33A8             L1641:
33A8 CD 5F 3D            CALL  writeLineA
33AB             L1642:
33AB C3 B4 33            JP    L1646
33AE             L1643:
33AE 21 E7 03            LD    HL,999
33B1             L1644:
33B1 CD 37 3D            CALL  writeLineHL
33B4             L1645:
33B4                     ;;testBitwiseOperators.j(237)     if (w2 | fw1 == 0x133C) println (137); else println (999);
33B4             L1646:
33B4 2A 04 50            LD    HL,(05004H)
33B7             L1647:
33B7 11 2C 03            LD    DE,812
33BA 47                  LD    B,A
33BB 7C                  LD    A,H
33BC B2                  OR    A,D
33BD 67                  LD    H,A
33BE 7D                  LD    A,L
33BF B3                  OR    A,E
33C0 6F                  LD    L,A
33C1 78                  LD    A,B
33C2             L1648:
33C2 11 3C 13            LD    DE,4924
33C5 B7                  OR    A
33C6 ED 52               SBC   HL,DE
33C8             L1649:
33C8 C2 D3 33            JP    NZ,L1653
33CB             L1650:
33CB 3E 89               LD    A,137
33CD             L1651:
33CD CD 5F 3D            CALL  writeLineA
33D0             L1652:
33D0 C3 D9 33            JP    L1656
33D3             L1653:
33D3 21 E7 03            LD    HL,999
33D6             L1654:
33D6 CD 37 3D            CALL  writeLineHL
33D9             L1655:
33D9                     ;;testBitwiseOperators.j(238)     if (w2 ^ fw1 == 0x1118) println (138); else println (999);
33D9             L1656:
33D9 2A 04 50            LD    HL,(05004H)
33DC             L1657:
33DC 11 2C 03            LD    DE,812
33DF C5                  PUSH  BC
33E0 47                  LD    B,A
33E1 7C                  LD    A,H
33E2 AA                  XOR   A,D
33E3 67                  LD    H,A
33E4 7D                  LD    A,L
33E5 AB                  XOR   A,E
33E6 6F                  LD    L,A
33E7 78                  LD    A,B
33E8 C1                  POP   BC
33E9             L1658:
33E9 11 18 11            LD    DE,4376
33EC B7                  OR    A
33ED ED 52               SBC   HL,DE
33EF             L1659:
33EF C2 FA 33            JP    NZ,L1663
33F2             L1660:
33F2 3E 8A               LD    A,138
33F4             L1661:
33F4 CD 5F 3D            CALL  writeLineA
33F7             L1662:
33F7 C3 00 34            JP    L1667
33FA             L1663:
33FA 21 E7 03            LD    HL,999
33FD             L1664:
33FD CD 37 3D            CALL  writeLineHL
3400             L1665:
3400                     ;;testBitwiseOperators.j(239)     //var byte/final var word
3400             L1666:
3400                     ;;testBitwiseOperators.j(240)     if (b1 & fw2 == 0x0014) println (139); else println (999);
3400             L1667:
3400 3A 00 50            LD    A,(05000H)
3403             L1668:
3403 6F                  LD    L,A
3404 26 00               LD    H,0
3406             L1669:
3406 11 34 12            LD    DE,4660
3409 C5                  PUSH  BC
340A 47                  LD    B,A
340B 7C                  LD    A,H
340C A2                  AND   A,D
340D 67                  LD    H,A
340E 7D                  LD    A,L
340F A3                  AND   A,E
3410 6F                  LD    L,A
3411 78                  LD    A,B
3412 C1                  POP   BC
3413             L1670:
3413 3E 14               LD    A,20
3415             L1671:
3415 5F                  LD    E,A
3416 16 00               LD    D,0
3418 EB                  EX    DE,HL
3419 B7                  OR    A
341A ED 52               SBC   HL,DE
341C             L1672:
341C C2 27 34            JP    NZ,L1676
341F             L1673:
341F 3E 8B               LD    A,139
3421             L1674:
3421 CD 5F 3D            CALL  writeLineA
3424             L1675:
3424 C3 2D 34            JP    L1679
3427             L1676:
3427 21 E7 03            LD    HL,999
342A             L1677:
342A CD 37 3D            CALL  writeLineHL
342D             L1678:
342D                     ;;testBitwiseOperators.j(241)     if (b1 | fw2 == 0x123C) println (140); else println (999);
342D             L1679:
342D 3A 00 50            LD    A,(05000H)
3430             L1680:
3430 6F                  LD    L,A
3431 26 00               LD    H,0
3433             L1681:
3433 11 34 12            LD    DE,4660
3436 47                  LD    B,A
3437 7C                  LD    A,H
3438 B2                  OR    A,D
3439 67                  LD    H,A
343A 7D                  LD    A,L
343B B3                  OR    A,E
343C 6F                  LD    L,A
343D 78                  LD    A,B
343E             L1682:
343E 11 3C 12            LD    DE,4668
3441 B7                  OR    A
3442 ED 52               SBC   HL,DE
3444             L1683:
3444 C2 4F 34            JP    NZ,L1687
3447             L1684:
3447 3E 8C               LD    A,140
3449             L1685:
3449 CD 5F 3D            CALL  writeLineA
344C             L1686:
344C C3 55 34            JP    L1690
344F             L1687:
344F 21 E7 03            LD    HL,999
3452             L1688:
3452 CD 37 3D            CALL  writeLineHL
3455             L1689:
3455                     ;;testBitwiseOperators.j(242)     if (b1 ^ fw2 == 0x1228) println (141); else println (999);
3455             L1690:
3455 3A 00 50            LD    A,(05000H)
3458             L1691:
3458 6F                  LD    L,A
3459 26 00               LD    H,0
345B             L1692:
345B 11 34 12            LD    DE,4660
345E C5                  PUSH  BC
345F 47                  LD    B,A
3460 7C                  LD    A,H
3461 AA                  XOR   A,D
3462 67                  LD    H,A
3463 7D                  LD    A,L
3464 AB                  XOR   A,E
3465 6F                  LD    L,A
3466 78                  LD    A,B
3467 C1                  POP   BC
3468             L1693:
3468 11 28 12            LD    DE,4648
346B B7                  OR    A
346C ED 52               SBC   HL,DE
346E             L1694:
346E C2 79 34            JP    NZ,L1698
3471             L1695:
3471 3E 8D               LD    A,141
3473             L1696:
3473 CD 5F 3D            CALL  writeLineA
3476             L1697:
3476 C3 7F 34            JP    L1702
3479             L1698:
3479 21 E7 03            LD    HL,999
347C             L1699:
347C CD 37 3D            CALL  writeLineHL
347F             L1700:
347F                     ;;testBitwiseOperators.j(243)     //var word/final var byte
347F             L1701:
347F                     ;;testBitwiseOperators.j(244)     if (w2 & fb1 == 0x0014) println (142); else println (999);
347F             L1702:
347F 2A 04 50            LD    HL,(05004H)
3482             L1703:
3482 5F                  LD    E,A
3483 3E 1C               LD    A,28
3485 A5                  AND   A,L
3486 6F                  LD    L,A
3487 7B                  LD    A,E
3488 26 00               LD    H,0
348A             L1704:
348A 3E 14               LD    A,20
348C             L1705:
348C 5F                  LD    E,A
348D 16 00               LD    D,0
348F EB                  EX    DE,HL
3490 B7                  OR    A
3491 ED 52               SBC   HL,DE
3493             L1706:
3493 C2 9E 34            JP    NZ,L1710
3496             L1707:
3496 3E 8E               LD    A,142
3498             L1708:
3498 CD 5F 3D            CALL  writeLineA
349B             L1709:
349B C3 A4 34            JP    L1713
349E             L1710:
349E 21 E7 03            LD    HL,999
34A1             L1711:
34A1 CD 37 3D            CALL  writeLineHL
34A4             L1712:
34A4                     ;;testBitwiseOperators.j(245)     if (w2 | fb1 == 0x123C) println (143); else println (999);
34A4             L1713:
34A4 2A 04 50            LD    HL,(05004H)
34A7             L1714:
34A7 11 1C 00            LD    DE,28
34AA 47                  LD    B,A
34AB 7C                  LD    A,H
34AC B2                  OR    A,D
34AD 67                  LD    H,A
34AE 7D                  LD    A,L
34AF B3                  OR    A,E
34B0 6F                  LD    L,A
34B1 78                  LD    A,B
34B2             L1715:
34B2 11 3C 12            LD    DE,4668
34B5 B7                  OR    A
34B6 ED 52               SBC   HL,DE
34B8             L1716:
34B8 C2 C3 34            JP    NZ,L1720
34BB             L1717:
34BB 3E 8F               LD    A,143
34BD             L1718:
34BD CD 5F 3D            CALL  writeLineA
34C0             L1719:
34C0 C3 C9 34            JP    L1723
34C3             L1720:
34C3 21 E7 03            LD    HL,999
34C6             L1721:
34C6 CD 37 3D            CALL  writeLineHL
34C9             L1722:
34C9                     ;;testBitwiseOperators.j(246)     if (w2 ^ fb1 == 0x1228) println (144); else println (999);
34C9             L1723:
34C9 2A 04 50            LD    HL,(05004H)
34CC             L1724:
34CC 11 1C 00            LD    DE,28
34CF C5                  PUSH  BC
34D0 47                  LD    B,A
34D1 7C                  LD    A,H
34D2 AA                  XOR   A,D
34D3 67                  LD    H,A
34D4 7D                  LD    A,L
34D5 AB                  XOR   A,E
34D6 6F                  LD    L,A
34D7 78                  LD    A,B
34D8 C1                  POP   BC
34D9             L1725:
34D9 11 28 12            LD    DE,4648
34DC B7                  OR    A
34DD ED 52               SBC   HL,DE
34DF             L1726:
34DF C2 EA 34            JP    NZ,L1730
34E2             L1727:
34E2 3E 90               LD    A,144
34E4             L1728:
34E4 CD 5F 3D            CALL  writeLineA
34E7             L1729:
34E7 C3 F0 34            JP    L1737
34EA             L1730:
34EA 21 E7 03            LD    HL,999
34ED             L1731:
34ED CD 37 3D            CALL  writeLineHL
34F0             L1732:
34F0                     ;;testBitwiseOperators.j(247)   
34F0             L1733:
34F0                     ;;testBitwiseOperators.j(248)     //final var/constant
34F0             L1734:
34F0                     ;;testBitwiseOperators.j(249)     //******************
34F0             L1735:
34F0                     ;;testBitwiseOperators.j(250)     //final var byte/constant byte
34F0             L1736:
34F0                     ;;testBitwiseOperators.j(251)     if (b2 & 0x1C == 0x04) println (145); else println (999);
34F0             L1737:
34F0 3A 01 50            LD    A,(05001H)
34F3             L1738:
34F3 E6 1C               AND   A,28
34F5             L1739:
34F5 D6 04               SUB   A,4
34F7             L1740:
34F7 C2 02 35            JP    NZ,L1744
34FA             L1741:
34FA 3E 91               LD    A,145
34FC             L1742:
34FC CD 5F 3D            CALL  writeLineA
34FF             L1743:
34FF C3 08 35            JP    L1747
3502             L1744:
3502 21 E7 03            LD    HL,999
3505             L1745:
3505 CD 37 3D            CALL  writeLineHL
3508             L1746:
3508                     ;;testBitwiseOperators.j(252)     if (b2 | 0x1C == 0x1F) println (146); else println (999);
3508             L1747:
3508 3A 01 50            LD    A,(05001H)
350B             L1748:
350B F6 1C               OR    A,28
350D             L1749:
350D D6 1F               SUB   A,31
350F             L1750:
350F C2 1A 35            JP    NZ,L1754
3512             L1751:
3512 3E 92               LD    A,146
3514             L1752:
3514 CD 5F 3D            CALL  writeLineA
3517             L1753:
3517 C3 20 35            JP    L1757
351A             L1754:
351A 21 E7 03            LD    HL,999
351D             L1755:
351D CD 37 3D            CALL  writeLineHL
3520             L1756:
3520                     ;;testBitwiseOperators.j(253)     if (b2 ^ 0x1C == 0x1B) println (147); else println (999);
3520             L1757:
3520 3A 01 50            LD    A,(05001H)
3523             L1758:
3523 EE 1C               XOR   A,28
3525             L1759:
3525 D6 1B               SUB   A,27
3527             L1760:
3527 C2 32 35            JP    NZ,L1764
352A             L1761:
352A 3E 93               LD    A,147
352C             L1762:
352C CD 5F 3D            CALL  writeLineA
352F             L1763:
352F C3 38 35            JP    L1768
3532             L1764:
3532 21 E7 03            LD    HL,999
3535             L1765:
3535 CD 37 3D            CALL  writeLineHL
3538             L1766:
3538                     ;;testBitwiseOperators.j(254)     //final var word/constant word
3538             L1767:
3538                     ;;testBitwiseOperators.j(255)     if (w2 & 0x032C == 0x0224) println (148); else println (999);
3538             L1768:
3538 2A 04 50            LD    HL,(05004H)
353B             L1769:
353B 11 2C 03            LD    DE,812
353E C5                  PUSH  BC
353F 47                  LD    B,A
3540 7C                  LD    A,H
3541 A2                  AND   A,D
3542 67                  LD    H,A
3543 7D                  LD    A,L
3544 A3                  AND   A,E
3545 6F                  LD    L,A
3546 78                  LD    A,B
3547 C1                  POP   BC
3548             L1770:
3548 11 24 02            LD    DE,548
354B B7                  OR    A
354C ED 52               SBC   HL,DE
354E             L1771:
354E C2 59 35            JP    NZ,L1775
3551             L1772:
3551 3E 94               LD    A,148
3553             L1773:
3553 CD 5F 3D            CALL  writeLineA
3556             L1774:
3556 C3 5F 35            JP    L1778
3559             L1775:
3559 21 E7 03            LD    HL,999
355C             L1776:
355C CD 37 3D            CALL  writeLineHL
355F             L1777:
355F                     ;;testBitwiseOperators.j(256)     if (w2 | 0x032C == 0x133C) println (149); else println (999);
355F             L1778:
355F 2A 04 50            LD    HL,(05004H)
3562             L1779:
3562 11 2C 03            LD    DE,812
3565 47                  LD    B,A
3566 7C                  LD    A,H
3567 B2                  OR    A,D
3568 67                  LD    H,A
3569 7D                  LD    A,L
356A B3                  OR    A,E
356B 6F                  LD    L,A
356C 78                  LD    A,B
356D             L1780:
356D 11 3C 13            LD    DE,4924
3570 B7                  OR    A
3571 ED 52               SBC   HL,DE
3573             L1781:
3573 C2 7E 35            JP    NZ,L1785
3576             L1782:
3576 3E 95               LD    A,149
3578             L1783:
3578 CD 5F 3D            CALL  writeLineA
357B             L1784:
357B C3 84 35            JP    L1788
357E             L1785:
357E 21 E7 03            LD    HL,999
3581             L1786:
3581 CD 37 3D            CALL  writeLineHL
3584             L1787:
3584                     ;;testBitwiseOperators.j(257)     if (w2 ^ 0x032C == 0x1118) println (150); else println (999);
3584             L1788:
3584 2A 04 50            LD    HL,(05004H)
3587             L1789:
3587 11 2C 03            LD    DE,812
358A C5                  PUSH  BC
358B 47                  LD    B,A
358C 7C                  LD    A,H
358D AA                  XOR   A,D
358E 67                  LD    H,A
358F 7D                  LD    A,L
3590 AB                  XOR   A,E
3591 6F                  LD    L,A
3592 78                  LD    A,B
3593 C1                  POP   BC
3594             L1790:
3594 11 18 11            LD    DE,4376
3597 B7                  OR    A
3598 ED 52               SBC   HL,DE
359A             L1791:
359A C2 A5 35            JP    NZ,L1795
359D             L1792:
359D 3E 96               LD    A,150
359F             L1793:
359F CD 5F 3D            CALL  writeLineA
35A2             L1794:
35A2 C3 AB 35            JP    L1799
35A5             L1795:
35A5 21 E7 03            LD    HL,999
35A8             L1796:
35A8 CD 37 3D            CALL  writeLineHL
35AB             L1797:
35AB                     ;;testBitwiseOperators.j(258)     //final var byte/constant word
35AB             L1798:
35AB                     ;;testBitwiseOperators.j(259)     if (b1 & 0x1234 == 0x0014) println (151); else println (999);
35AB             L1799:
35AB 3A 00 50            LD    A,(05000H)
35AE             L1800:
35AE 6F                  LD    L,A
35AF 26 00               LD    H,0
35B1             L1801:
35B1 11 34 12            LD    DE,4660
35B4 C5                  PUSH  BC
35B5 47                  LD    B,A
35B6 7C                  LD    A,H
35B7 A2                  AND   A,D
35B8 67                  LD    H,A
35B9 7D                  LD    A,L
35BA A3                  AND   A,E
35BB 6F                  LD    L,A
35BC 78                  LD    A,B
35BD C1                  POP   BC
35BE             L1802:
35BE 3E 14               LD    A,20
35C0             L1803:
35C0 5F                  LD    E,A
35C1 16 00               LD    D,0
35C3 EB                  EX    DE,HL
35C4 B7                  OR    A
35C5 ED 52               SBC   HL,DE
35C7             L1804:
35C7 C2 D2 35            JP    NZ,L1808
35CA             L1805:
35CA 3E 97               LD    A,151
35CC             L1806:
35CC CD 5F 3D            CALL  writeLineA
35CF             L1807:
35CF C3 D8 35            JP    L1811
35D2             L1808:
35D2 21 E7 03            LD    HL,999
35D5             L1809:
35D5 CD 37 3D            CALL  writeLineHL
35D8             L1810:
35D8                     ;;testBitwiseOperators.j(260)     if (b1 | 0x1234 == 0x123C) println (152); else println (999);
35D8             L1811:
35D8 3A 00 50            LD    A,(05000H)
35DB             L1812:
35DB 6F                  LD    L,A
35DC 26 00               LD    H,0
35DE             L1813:
35DE 11 34 12            LD    DE,4660
35E1 47                  LD    B,A
35E2 7C                  LD    A,H
35E3 B2                  OR    A,D
35E4 67                  LD    H,A
35E5 7D                  LD    A,L
35E6 B3                  OR    A,E
35E7 6F                  LD    L,A
35E8 78                  LD    A,B
35E9             L1814:
35E9 11 3C 12            LD    DE,4668
35EC B7                  OR    A
35ED ED 52               SBC   HL,DE
35EF             L1815:
35EF C2 FA 35            JP    NZ,L1819
35F2             L1816:
35F2 3E 98               LD    A,152
35F4             L1817:
35F4 CD 5F 3D            CALL  writeLineA
35F7             L1818:
35F7 C3 00 36            JP    L1822
35FA             L1819:
35FA 21 E7 03            LD    HL,999
35FD             L1820:
35FD CD 37 3D            CALL  writeLineHL
3600             L1821:
3600                     ;;testBitwiseOperators.j(261)     if (b1 ^ 0x1234 == 0x1228) println (153); else println (999);
3600             L1822:
3600 3A 00 50            LD    A,(05000H)
3603             L1823:
3603 6F                  LD    L,A
3604 26 00               LD    H,0
3606             L1824:
3606 11 34 12            LD    DE,4660
3609 C5                  PUSH  BC
360A 47                  LD    B,A
360B 7C                  LD    A,H
360C AA                  XOR   A,D
360D 67                  LD    H,A
360E 7D                  LD    A,L
360F AB                  XOR   A,E
3610 6F                  LD    L,A
3611 78                  LD    A,B
3612 C1                  POP   BC
3613             L1825:
3613 11 28 12            LD    DE,4648
3616 B7                  OR    A
3617 ED 52               SBC   HL,DE
3619             L1826:
3619 C2 24 36            JP    NZ,L1830
361C             L1827:
361C 3E 99               LD    A,153
361E             L1828:
361E CD 5F 3D            CALL  writeLineA
3621             L1829:
3621 C3 2A 36            JP    L1834
3624             L1830:
3624 21 E7 03            LD    HL,999
3627             L1831:
3627 CD 37 3D            CALL  writeLineHL
362A             L1832:
362A                     ;;testBitwiseOperators.j(262)     //final var word/constant byte
362A             L1833:
362A                     ;;testBitwiseOperators.j(263)     if (w2 & 0x1C == 0x0014) println (154); else println (999);
362A             L1834:
362A 2A 04 50            LD    HL,(05004H)
362D             L1835:
362D 5F                  LD    E,A
362E 3E 1C               LD    A,28
3630 A5                  AND   A,L
3631 6F                  LD    L,A
3632 7B                  LD    A,E
3633 26 00               LD    H,0
3635             L1836:
3635 3E 14               LD    A,20
3637             L1837:
3637 5F                  LD    E,A
3638 16 00               LD    D,0
363A EB                  EX    DE,HL
363B B7                  OR    A
363C ED 52               SBC   HL,DE
363E             L1838:
363E C2 49 36            JP    NZ,L1842
3641             L1839:
3641 3E 9A               LD    A,154
3643             L1840:
3643 CD 5F 3D            CALL  writeLineA
3646             L1841:
3646 C3 4F 36            JP    L1845
3649             L1842:
3649 21 E7 03            LD    HL,999
364C             L1843:
364C CD 37 3D            CALL  writeLineHL
364F             L1844:
364F                     ;;testBitwiseOperators.j(264)     if (w2 | 0x1C == 0x123C) println (155); else println (999);
364F             L1845:
364F 2A 04 50            LD    HL,(05004H)
3652             L1846:
3652 11 1C 00            LD    DE,28
3655 47                  LD    B,A
3656 7C                  LD    A,H
3657 B2                  OR    A,D
3658 67                  LD    H,A
3659 7D                  LD    A,L
365A B3                  OR    A,E
365B 6F                  LD    L,A
365C 78                  LD    A,B
365D             L1847:
365D 11 3C 12            LD    DE,4668
3660 B7                  OR    A
3661 ED 52               SBC   HL,DE
3663             L1848:
3663 C2 6E 36            JP    NZ,L1852
3666             L1849:
3666 3E 9B               LD    A,155
3668             L1850:
3668 CD 5F 3D            CALL  writeLineA
366B             L1851:
366B C3 74 36            JP    L1855
366E             L1852:
366E 21 E7 03            LD    HL,999
3671             L1853:
3671 CD 37 3D            CALL  writeLineHL
3674             L1854:
3674                     ;;testBitwiseOperators.j(265)     if (w2 ^ 0x1C == 0x1228) println (156); else println (999);
3674             L1855:
3674 2A 04 50            LD    HL,(05004H)
3677             L1856:
3677 11 1C 00            LD    DE,28
367A C5                  PUSH  BC
367B 47                  LD    B,A
367C 7C                  LD    A,H
367D AA                  XOR   A,D
367E 67                  LD    H,A
367F 7D                  LD    A,L
3680 AB                  XOR   A,E
3681 6F                  LD    L,A
3682 78                  LD    A,B
3683 C1                  POP   BC
3684             L1857:
3684 11 28 12            LD    DE,4648
3687 B7                  OR    A
3688 ED 52               SBC   HL,DE
368A             L1858:
368A C2 95 36            JP    NZ,L1862
368D             L1859:
368D 3E 9C               LD    A,156
368F             L1860:
368F CD 5F 3D            CALL  writeLineA
3692             L1861:
3692 C3 9B 36            JP    L1869
3695             L1862:
3695 21 E7 03            LD    HL,999
3698             L1863:
3698 CD 37 3D            CALL  writeLineHL
369B             L1864:
369B                     ;;testBitwiseOperators.j(266)   
369B             L1865:
369B                     ;;testBitwiseOperators.j(267)     //final var/acc
369B             L1866:
369B                     ;;testBitwiseOperators.j(268)     //*************
369B             L1867:
369B                     ;;testBitwiseOperators.j(269)     //final var byte/acc byte
369B             L1868:
369B                     ;;testBitwiseOperators.j(270)     if (b2 & (0x10 + 0x0C) == 0x04) println (157); else println (999);
369B             L1869:
369B 3A 01 50            LD    A,(05001H)
369E             L1870:
369E F5                  PUSH  AF
369F 3E 10               LD    A,16
36A1             L1871:
36A1 C6 0C               ADD   A,12
36A3             L1872:
36A3 C1                  POP   BC
36A4 A0                  AND   A,B
36A5             L1873:
36A5 D6 04               SUB   A,4
36A7             L1874:
36A7 C2 B2 36            JP    NZ,L1878
36AA             L1875:
36AA 3E 9D               LD    A,157
36AC             L1876:
36AC CD 5F 3D            CALL  writeLineA
36AF             L1877:
36AF C3 B8 36            JP    L1881
36B2             L1878:
36B2 21 E7 03            LD    HL,999
36B5             L1879:
36B5 CD 37 3D            CALL  writeLineHL
36B8             L1880:
36B8                     ;;testBitwiseOperators.j(271)     if (b2 | (0x10 + 0x0C) == 0x1F) println (158); else println (999);
36B8             L1881:
36B8 3A 01 50            LD    A,(05001H)
36BB             L1882:
36BB F5                  PUSH  AF
36BC 3E 10               LD    A,16
36BE             L1883:
36BE C6 0C               ADD   A,12
36C0             L1884:
36C0 C1                  POP   BC
36C1 B0                  OR    A,B
36C2             L1885:
36C2 D6 1F               SUB   A,31
36C4             L1886:
36C4 C2 CF 36            JP    NZ,L1890
36C7             L1887:
36C7 3E 9E               LD    A,158
36C9             L1888:
36C9 CD 5F 3D            CALL  writeLineA
36CC             L1889:
36CC C3 D5 36            JP    L1893
36CF             L1890:
36CF 21 E7 03            LD    HL,999
36D2             L1891:
36D2 CD 37 3D            CALL  writeLineHL
36D5             L1892:
36D5                     ;;testBitwiseOperators.j(272)     if (b2 ^ (0x10 + 0x0C) == 0x1B) println (159); else println (999);
36D5             L1893:
36D5 3A 01 50            LD    A,(05001H)
36D8             L1894:
36D8 F5                  PUSH  AF
36D9 3E 10               LD    A,16
36DB             L1895:
36DB C6 0C               ADD   A,12
36DD             L1896:
36DD C1                  POP   BC
36DE A8                  XOR   A,B
36DF             L1897:
36DF D6 1B               SUB   A,27
36E1             L1898:
36E1 C2 EC 36            JP    NZ,L1902
36E4             L1899:
36E4 3E 9F               LD    A,159
36E6             L1900:
36E6 CD 5F 3D            CALL  writeLineA
36E9             L1901:
36E9 C3 F2 36            JP    L1906
36EC             L1902:
36EC 21 E7 03            LD    HL,999
36EF             L1903:
36EF CD 37 3D            CALL  writeLineHL
36F2             L1904:
36F2                     ;;testBitwiseOperators.j(273)     //final var word/acc word
36F2             L1905:
36F2                     ;;testBitwiseOperators.j(274)     if (w2 & 0x0100 + 0x022C == 0x0224) println (160); else println (999);
36F2             L1906:
36F2 2A 04 50            LD    HL,(05004H)
36F5             L1907:
36F5 E5                  PUSH  HL
36F6 21 00 01            LD    HL,256
36F9             L1908:
36F9 11 2C 02            LD    DE,556
36FC 19                  ADD   HL,DE
36FD             L1909:
36FD D1                  POP   DE
36FE C5                  PUSH  BC
36FF 47                  LD    B,A
3700 7C                  LD    A,H
3701 A2                  AND   A,D
3702 67                  LD    H,A
3703 7D                  LD    A,L
3704 A3                  AND   A,E
3705 6F                  LD    L,A
3706 78                  LD    A,B
3707 C1                  POP   BC
3708             L1910:
3708 11 24 02            LD    DE,548
370B B7                  OR    A
370C ED 52               SBC   HL,DE
370E             L1911:
370E C2 19 37            JP    NZ,L1915
3711             L1912:
3711 3E A0               LD    A,160
3713             L1913:
3713 CD 5F 3D            CALL  writeLineA
3716             L1914:
3716 C3 1F 37            JP    L1918
3719             L1915:
3719 21 E7 03            LD    HL,999
371C             L1916:
371C CD 37 3D            CALL  writeLineHL
371F             L1917:
371F                     ;;testBitwiseOperators.j(275)     if (w2 | 0x0100 + 0x022C == 0x133C) println (161); else println (999);
371F             L1918:
371F 2A 04 50            LD    HL,(05004H)
3722             L1919:
3722 E5                  PUSH  HL
3723 21 00 01            LD    HL,256
3726             L1920:
3726 11 2C 02            LD    DE,556
3729 19                  ADD   HL,DE
372A             L1921:
372A D1                  POP   DE
372B 47                  LD    B,A
372C 7C                  LD    A,H
372D B2                  OR    A,D
372E 67                  LD    H,A
372F 7D                  LD    A,L
3730 B3                  OR    A,E
3731 6F                  LD    L,A
3732 78                  LD    A,B
3733             L1922:
3733 11 3C 13            LD    DE,4924
3736 B7                  OR    A
3737 ED 52               SBC   HL,DE
3739             L1923:
3739 C2 44 37            JP    NZ,L1927
373C             L1924:
373C 3E A1               LD    A,161
373E             L1925:
373E CD 5F 3D            CALL  writeLineA
3741             L1926:
3741 C3 4A 37            JP    L1930
3744             L1927:
3744 21 E7 03            LD    HL,999
3747             L1928:
3747 CD 37 3D            CALL  writeLineHL
374A             L1929:
374A                     ;;testBitwiseOperators.j(276)     if (w2 ^ 0x0100 + 0x022C == 0x1118) println (162); else println (999);
374A             L1930:
374A 2A 04 50            LD    HL,(05004H)
374D             L1931:
374D E5                  PUSH  HL
374E 21 00 01            LD    HL,256
3751             L1932:
3751 11 2C 02            LD    DE,556
3754 19                  ADD   HL,DE
3755             L1933:
3755 D1                  POP   DE
3756 C5                  PUSH  BC
3757 47                  LD    B,A
3758 7C                  LD    A,H
3759 AA                  XOR   A,D
375A 67                  LD    H,A
375B 7D                  LD    A,L
375C AB                  XOR   A,E
375D 6F                  LD    L,A
375E 78                  LD    A,B
375F C1                  POP   BC
3760             L1934:
3760 11 18 11            LD    DE,4376
3763 B7                  OR    A
3764 ED 52               SBC   HL,DE
3766             L1935:
3766 C2 71 37            JP    NZ,L1939
3769             L1936:
3769 3E A2               LD    A,162
376B             L1937:
376B CD 5F 3D            CALL  writeLineA
376E             L1938:
376E C3 77 37            JP    L1943
3771             L1939:
3771 21 E7 03            LD    HL,999
3774             L1940:
3774 CD 37 3D            CALL  writeLineHL
3777             L1941:
3777                     ;;testBitwiseOperators.j(277)     //final var byte/acc word
3777             L1942:
3777                     ;;testBitwiseOperators.j(278)     if (b1 & 0x1000 + 0x0234 == 0x0014) println (163); else println (999);
3777             L1943:
3777 3A 00 50            LD    A,(05000H)
377A             L1944:
377A 21 00 10            LD    HL,4096
377D             L1945:
377D 11 34 02            LD    DE,564
3780 19                  ADD   HL,DE
3781             L1946:
3781 5F                  LD    E,A
3782 A5                  AND   A,L
3783 6F                  LD    L,A
3784 7B                  LD    A,E
3785 26 00               LD    H,0
3787             L1947:
3787 3E 14               LD    A,20
3789             L1948:
3789 5F                  LD    E,A
378A 16 00               LD    D,0
378C EB                  EX    DE,HL
378D B7                  OR    A
378E ED 52               SBC   HL,DE
3790             L1949:
3790 C2 9B 37            JP    NZ,L1953
3793             L1950:
3793 3E A3               LD    A,163
3795             L1951:
3795 CD 5F 3D            CALL  writeLineA
3798             L1952:
3798 C3 A1 37            JP    L1956
379B             L1953:
379B 21 E7 03            LD    HL,999
379E             L1954:
379E CD 37 3D            CALL  writeLineHL
37A1             L1955:
37A1                     ;;testBitwiseOperators.j(279)     if (b1 | 0x1000 + 0x0234 == 0x123C) println (164); else println (999);
37A1             L1956:
37A1 3A 00 50            LD    A,(05000H)
37A4             L1957:
37A4 21 00 10            LD    HL,4096
37A7             L1958:
37A7 11 34 02            LD    DE,564
37AA 19                  ADD   HL,DE
37AB             L1959:
37AB B5                  OR    A,L
37AC 6F                  LD    L,A
37AD             L1960:
37AD 11 3C 12            LD    DE,4668
37B0 B7                  OR    A
37B1 ED 52               SBC   HL,DE
37B3             L1961:
37B3 C2 BE 37            JP    NZ,L1965
37B6             L1962:
37B6 3E A4               LD    A,164
37B8             L1963:
37B8 CD 5F 3D            CALL  writeLineA
37BB             L1964:
37BB C3 C4 37            JP    L1968
37BE             L1965:
37BE 21 E7 03            LD    HL,999
37C1             L1966:
37C1 CD 37 3D            CALL  writeLineHL
37C4             L1967:
37C4                     ;;testBitwiseOperators.j(280)     if (b1 ^ 0x1000 + 0x0234 == 0x1228) println (165); else println (999);
37C4             L1968:
37C4 3A 00 50            LD    A,(05000H)
37C7             L1969:
37C7 21 00 10            LD    HL,4096
37CA             L1970:
37CA 11 34 02            LD    DE,564
37CD 19                  ADD   HL,DE
37CE             L1971:
37CE AD                  XOR   A,L
37CF 6F                  LD    L,A
37D0             L1972:
37D0 11 28 12            LD    DE,4648
37D3 B7                  OR    A
37D4 ED 52               SBC   HL,DE
37D6             L1973:
37D6 C2 E1 37            JP    NZ,L1977
37D9             L1974:
37D9 3E A5               LD    A,165
37DB             L1975:
37DB CD 5F 3D            CALL  writeLineA
37DE             L1976:
37DE C3 E7 37            JP    L1981
37E1             L1977:
37E1 21 E7 03            LD    HL,999
37E4             L1978:
37E4 CD 37 3D            CALL  writeLineHL
37E7             L1979:
37E7                     ;;testBitwiseOperators.j(281)     //final var word/acc byte
37E7             L1980:
37E7                     ;;testBitwiseOperators.j(282)     if (w2 & 0x10 + 0x0C == 0x0014) println (166); else println (999);
37E7             L1981:
37E7 2A 04 50            LD    HL,(05004H)
37EA             L1982:
37EA 3E 10               LD    A,16
37EC             L1983:
37EC C6 0C               ADD   A,12
37EE             L1984:
37EE 5F                  LD    E,A
37EF A5                  AND   A,L
37F0 6F                  LD    L,A
37F1 7B                  LD    A,E
37F2 26 00               LD    H,0
37F4             L1985:
37F4 3E 14               LD    A,20
37F6             L1986:
37F6 5F                  LD    E,A
37F7 16 00               LD    D,0
37F9 EB                  EX    DE,HL
37FA B7                  OR    A
37FB ED 52               SBC   HL,DE
37FD             L1987:
37FD C2 08 38            JP    NZ,L1991
3800             L1988:
3800 3E A6               LD    A,166
3802             L1989:
3802 CD 5F 3D            CALL  writeLineA
3805             L1990:
3805 C3 0E 38            JP    L1994
3808             L1991:
3808 21 E7 03            LD    HL,999
380B             L1992:
380B CD 37 3D            CALL  writeLineHL
380E             L1993:
380E                     ;;testBitwiseOperators.j(283)     if (w2 | 0x10 + 0x0C == 0x123C) println (167); else println (999);
380E             L1994:
380E 2A 04 50            LD    HL,(05004H)
3811             L1995:
3811 3E 10               LD    A,16
3813             L1996:
3813 C6 0C               ADD   A,12
3815             L1997:
3815 B5                  OR    A,L
3816 6F                  LD    L,A
3817             L1998:
3817 11 3C 12            LD    DE,4668
381A B7                  OR    A
381B ED 52               SBC   HL,DE
381D             L1999:
381D C2 28 38            JP    NZ,L2003
3820             L2000:
3820 3E A7               LD    A,167
3822             L2001:
3822 CD 5F 3D            CALL  writeLineA
3825             L2002:
3825 C3 2E 38            JP    L2006
3828             L2003:
3828 21 E7 03            LD    HL,999
382B             L2004:
382B CD 37 3D            CALL  writeLineHL
382E             L2005:
382E                     ;;testBitwiseOperators.j(284)     if (w2 ^ 0x10 + 0x0C == 0x1228) println (168); else println (999);
382E             L2006:
382E 2A 04 50            LD    HL,(05004H)
3831             L2007:
3831 3E 10               LD    A,16
3833             L2008:
3833 C6 0C               ADD   A,12
3835             L2009:
3835 AD                  XOR   A,L
3836 6F                  LD    L,A
3837             L2010:
3837 11 28 12            LD    DE,4648
383A B7                  OR    A
383B ED 52               SBC   HL,DE
383D             L2011:
383D C2 48 38            JP    NZ,L2015
3840             L2012:
3840 3E A8               LD    A,168
3842             L2013:
3842 CD 5F 3D            CALL  writeLineA
3845             L2014:
3845 C3 4E 38            JP    L2022
3848             L2015:
3848 21 E7 03            LD    HL,999
384B             L2016:
384B CD 37 3D            CALL  writeLineHL
384E             L2017:
384E                     ;;testBitwiseOperators.j(285)   
384E             L2018:
384E                     ;;testBitwiseOperators.j(286)     //final var/var
384E             L2019:
384E                     ;;testBitwiseOperators.j(287)     //*************
384E             L2020:
384E                     ;;testBitwiseOperators.j(288)     //final var byte/var byte
384E             L2021:
384E                     ;;testBitwiseOperators.j(289)     if (b2 & b1 == 0x04) println (169); else println (999);
384E             L2022:
384E 3A 01 50            LD    A,(05001H)
3851             L2023:
3851 47                  LD    B,A
3852 3A 00 50            LD    A,(05000H)
3855 A0                  AND   A,B
3856             L2024:
3856 D6 04               SUB   A,4
3858             L2025:
3858 C2 63 38            JP    NZ,L2029
385B             L2026:
385B 3E A9               LD    A,169
385D             L2027:
385D CD 5F 3D            CALL  writeLineA
3860             L2028:
3860 C3 69 38            JP    L2032
3863             L2029:
3863 21 E7 03            LD    HL,999
3866             L2030:
3866 CD 37 3D            CALL  writeLineHL
3869             L2031:
3869                     ;;testBitwiseOperators.j(290)     if (b2 | b1 == 0x1F) println (170); else println (999);
3869             L2032:
3869 3A 01 50            LD    A,(05001H)
386C             L2033:
386C 47                  LD    B,A
386D 3A 00 50            LD    A,(05000H)
3870 B0                  OR    A,B
3871             L2034:
3871 D6 1F               SUB   A,31
3873             L2035:
3873 C2 7E 38            JP    NZ,L2039
3876             L2036:
3876 3E AA               LD    A,170
3878             L2037:
3878 CD 5F 3D            CALL  writeLineA
387B             L2038:
387B C3 84 38            JP    L2042
387E             L2039:
387E 21 E7 03            LD    HL,999
3881             L2040:
3881 CD 37 3D            CALL  writeLineHL
3884             L2041:
3884                     ;;testBitwiseOperators.j(291)     if (b2 ^ b1 == 0x1B) println (171); else println (999);
3884             L2042:
3884 3A 01 50            LD    A,(05001H)
3887             L2043:
3887 47                  LD    B,A
3888 3A 00 50            LD    A,(05000H)
388B A8                  XOR   A,B
388C             L2044:
388C D6 1B               SUB   A,27
388E             L2045:
388E C2 99 38            JP    NZ,L2049
3891             L2046:
3891 3E AB               LD    A,171
3893             L2047:
3893 CD 5F 3D            CALL  writeLineA
3896             L2048:
3896 C3 9F 38            JP    L2053
3899             L2049:
3899 21 E7 03            LD    HL,999
389C             L2050:
389C CD 37 3D            CALL  writeLineHL
389F             L2051:
389F                     ;;testBitwiseOperators.j(292)     //final var word/var word
389F             L2052:
389F                     ;;testBitwiseOperators.j(293)     if (w2 & w1 == 0x0224) println (172); else println (999);
389F             L2053:
389F 2A 04 50            LD    HL,(05004H)
38A2             L2054:
38A2 ED 5B 02 50         LD    DE,(05002H)
38A6 C5                  PUSH  BC
38A7 47                  LD    B,A
38A8 7C                  LD    A,H
38A9 A2                  AND   A,D
38AA 67                  LD    H,A
38AB 7D                  LD    A,L
38AC A3                  AND   A,E
38AD 6F                  LD    L,A
38AE 78                  LD    A,B
38AF C1                  POP   BC
38B0             L2055:
38B0 11 24 02            LD    DE,548
38B3 B7                  OR    A
38B4 ED 52               SBC   HL,DE
38B6             L2056:
38B6 C2 C1 38            JP    NZ,L2060
38B9             L2057:
38B9 3E AC               LD    A,172
38BB             L2058:
38BB CD 5F 3D            CALL  writeLineA
38BE             L2059:
38BE C3 C7 38            JP    L2063
38C1             L2060:
38C1 21 E7 03            LD    HL,999
38C4             L2061:
38C4 CD 37 3D            CALL  writeLineHL
38C7             L2062:
38C7                     ;;testBitwiseOperators.j(294)     if (w2 | w1 == 0x133C) println (173); else println (999);
38C7             L2063:
38C7 2A 04 50            LD    HL,(05004H)
38CA             L2064:
38CA ED 5B 02 50         LD    DE,(05002H)
38CE 47                  LD    B,A
38CF 7C                  LD    A,H
38D0 B2                  OR    A,D
38D1 67                  LD    H,A
38D2 7D                  LD    A,L
38D3 B3                  OR    A,E
38D4 6F                  LD    L,A
38D5 78                  LD    A,B
38D6             L2065:
38D6 11 3C 13            LD    DE,4924
38D9 B7                  OR    A
38DA ED 52               SBC   HL,DE
38DC             L2066:
38DC C2 E7 38            JP    NZ,L2070
38DF             L2067:
38DF 3E AD               LD    A,173
38E1             L2068:
38E1 CD 5F 3D            CALL  writeLineA
38E4             L2069:
38E4 C3 ED 38            JP    L2073
38E7             L2070:
38E7 21 E7 03            LD    HL,999
38EA             L2071:
38EA CD 37 3D            CALL  writeLineHL
38ED             L2072:
38ED                     ;;testBitwiseOperators.j(295)     if (w2 ^ w1 == 0x1118) println (174); else println (999);
38ED             L2073:
38ED 2A 04 50            LD    HL,(05004H)
38F0             L2074:
38F0 ED 5B 02 50         LD    DE,(05002H)
38F4 C5                  PUSH  BC
38F5 47                  LD    B,A
38F6 7C                  LD    A,H
38F7 AA                  XOR   A,D
38F8 67                  LD    H,A
38F9 7D                  LD    A,L
38FA AB                  XOR   A,E
38FB 6F                  LD    L,A
38FC 78                  LD    A,B
38FD C1                  POP   BC
38FE             L2075:
38FE 11 18 11            LD    DE,4376
3901 B7                  OR    A
3902 ED 52               SBC   HL,DE
3904             L2076:
3904 C2 0F 39            JP    NZ,L2080
3907             L2077:
3907 3E AE               LD    A,174
3909             L2078:
3909 CD 5F 3D            CALL  writeLineA
390C             L2079:
390C C3 15 39            JP    L2084
390F             L2080:
390F 21 E7 03            LD    HL,999
3912             L2081:
3912 CD 37 3D            CALL  writeLineHL
3915             L2082:
3915                     ;;testBitwiseOperators.j(296)     //final var byte/var word
3915             L2083:
3915                     ;;testBitwiseOperators.j(297)     if (b1 & w2 == 0x0014) println (175); else println (999);
3915             L2084:
3915 3A 00 50            LD    A,(05000H)
3918             L2085:
3918 6F                  LD    L,A
3919 26 00               LD    H,0
391B             L2086:
391B ED 5B 04 50         LD    DE,(05004H)
391F C5                  PUSH  BC
3920 47                  LD    B,A
3921 7C                  LD    A,H
3922 A2                  AND   A,D
3923 67                  LD    H,A
3924 7D                  LD    A,L
3925 A3                  AND   A,E
3926 6F                  LD    L,A
3927 78                  LD    A,B
3928 C1                  POP   BC
3929             L2087:
3929 3E 14               LD    A,20
392B             L2088:
392B 5F                  LD    E,A
392C 16 00               LD    D,0
392E EB                  EX    DE,HL
392F B7                  OR    A
3930 ED 52               SBC   HL,DE
3932             L2089:
3932 C2 3D 39            JP    NZ,L2093
3935             L2090:
3935 3E AF               LD    A,175
3937             L2091:
3937 CD 5F 3D            CALL  writeLineA
393A             L2092:
393A C3 43 39            JP    L2096
393D             L2093:
393D 21 E7 03            LD    HL,999
3940             L2094:
3940 CD 37 3D            CALL  writeLineHL
3943             L2095:
3943                     ;;testBitwiseOperators.j(298)     if (b1 | w2 == 0x123C) println (176); else println (999);
3943             L2096:
3943 3A 00 50            LD    A,(05000H)
3946             L2097:
3946 6F                  LD    L,A
3947 26 00               LD    H,0
3949             L2098:
3949 ED 5B 04 50         LD    DE,(05004H)
394D 47                  LD    B,A
394E 7C                  LD    A,H
394F B2                  OR    A,D
3950 67                  LD    H,A
3951 7D                  LD    A,L
3952 B3                  OR    A,E
3953 6F                  LD    L,A
3954 78                  LD    A,B
3955             L2099:
3955 11 3C 12            LD    DE,4668
3958 B7                  OR    A
3959 ED 52               SBC   HL,DE
395B             L2100:
395B C2 66 39            JP    NZ,L2104
395E             L2101:
395E 3E B0               LD    A,176
3960             L2102:
3960 CD 5F 3D            CALL  writeLineA
3963             L2103:
3963 C3 6C 39            JP    L2107
3966             L2104:
3966 21 E7 03            LD    HL,999
3969             L2105:
3969 CD 37 3D            CALL  writeLineHL
396C             L2106:
396C                     ;;testBitwiseOperators.j(299)     if (b1 ^ w2 == 0x1228) println (177); else println (999);
396C             L2107:
396C 3A 00 50            LD    A,(05000H)
396F             L2108:
396F 6F                  LD    L,A
3970 26 00               LD    H,0
3972             L2109:
3972 ED 5B 04 50         LD    DE,(05004H)
3976 C5                  PUSH  BC
3977 47                  LD    B,A
3978 7C                  LD    A,H
3979 AA                  XOR   A,D
397A 67                  LD    H,A
397B 7D                  LD    A,L
397C AB                  XOR   A,E
397D 6F                  LD    L,A
397E 78                  LD    A,B
397F C1                  POP   BC
3980             L2110:
3980 11 28 12            LD    DE,4648
3983 B7                  OR    A
3984 ED 52               SBC   HL,DE
3986             L2111:
3986 C2 91 39            JP    NZ,L2115
3989             L2112:
3989 3E B1               LD    A,177
398B             L2113:
398B CD 5F 3D            CALL  writeLineA
398E             L2114:
398E C3 97 39            JP    L2119
3991             L2115:
3991 21 E7 03            LD    HL,999
3994             L2116:
3994 CD 37 3D            CALL  writeLineHL
3997             L2117:
3997                     ;;testBitwiseOperators.j(300)     //final var word/var byte
3997             L2118:
3997                     ;;testBitwiseOperators.j(301)     if (w2 & b1 == 0x0014) println (178); else println (999);
3997             L2119:
3997 2A 04 50            LD    HL,(05004H)
399A             L2120:
399A ED 5B 00 50         LD    DE,(05000H)
399E C5                  PUSH  BC
399F 47                  LD    B,A
39A0 7C                  LD    A,H
39A1 A2                  AND   A,D
39A2 67                  LD    H,A
39A3 7D                  LD    A,L
39A4 A3                  AND   A,E
39A5 6F                  LD    L,A
39A6 78                  LD    A,B
39A7 C1                  POP   BC
39A8             L2121:
39A8 3E 14               LD    A,20
39AA             L2122:
39AA 5F                  LD    E,A
39AB 16 00               LD    D,0
39AD EB                  EX    DE,HL
39AE B7                  OR    A
39AF ED 52               SBC   HL,DE
39B1             L2123:
39B1 C2 BC 39            JP    NZ,L2127
39B4             L2124:
39B4 3E B2               LD    A,178
39B6             L2125:
39B6 CD 5F 3D            CALL  writeLineA
39B9             L2126:
39B9 C3 C2 39            JP    L2130
39BC             L2127:
39BC 21 E7 03            LD    HL,999
39BF             L2128:
39BF CD 37 3D            CALL  writeLineHL
39C2             L2129:
39C2                     ;;testBitwiseOperators.j(302)     if (w2 | b1 == 0x123C) println (179); else println (999);
39C2             L2130:
39C2 2A 04 50            LD    HL,(05004H)
39C5             L2131:
39C5 ED 5B 00 50         LD    DE,(05000H)
39C9 47                  LD    B,A
39CA 7C                  LD    A,H
39CB B2                  OR    A,D
39CC 67                  LD    H,A
39CD 7D                  LD    A,L
39CE B3                  OR    A,E
39CF 6F                  LD    L,A
39D0 78                  LD    A,B
39D1             L2132:
39D1 11 3C 12            LD    DE,4668
39D4 B7                  OR    A
39D5 ED 52               SBC   HL,DE
39D7             L2133:
39D7 C2 E2 39            JP    NZ,L2137
39DA             L2134:
39DA 3E B3               LD    A,179
39DC             L2135:
39DC CD 5F 3D            CALL  writeLineA
39DF             L2136:
39DF C3 E8 39            JP    L2140
39E2             L2137:
39E2 21 E7 03            LD    HL,999
39E5             L2138:
39E5 CD 37 3D            CALL  writeLineHL
39E8             L2139:
39E8                     ;;testBitwiseOperators.j(303)     if (w2 ^ b1 == 0x1228) println (180); else println (999);
39E8             L2140:
39E8 2A 04 50            LD    HL,(05004H)
39EB             L2141:
39EB ED 5B 00 50         LD    DE,(05000H)
39EF C5                  PUSH  BC
39F0 47                  LD    B,A
39F1 7C                  LD    A,H
39F2 AA                  XOR   A,D
39F3 67                  LD    H,A
39F4 7D                  LD    A,L
39F5 AB                  XOR   A,E
39F6 6F                  LD    L,A
39F7 78                  LD    A,B
39F8 C1                  POP   BC
39F9             L2142:
39F9 11 28 12            LD    DE,4648
39FC B7                  OR    A
39FD ED 52               SBC   HL,DE
39FF             L2143:
39FF C2 0A 3A            JP    NZ,L2147
3A02             L2144:
3A02 3E B4               LD    A,180
3A04             L2145:
3A04 CD 5F 3D            CALL  writeLineA
3A07             L2146:
3A07 C3 10 3A            JP    L2154
3A0A             L2147:
3A0A 21 E7 03            LD    HL,999
3A0D             L2148:
3A0D CD 37 3D            CALL  writeLineHL
3A10             L2149:
3A10                     ;;testBitwiseOperators.j(304)   
3A10             L2150:
3A10                     ;;testBitwiseOperators.j(305)     //final var/final var
3A10             L2151:
3A10                     ;;testBitwiseOperators.j(306)     //*******************
3A10             L2152:
3A10                     ;;testBitwiseOperators.j(307)     //final var byte/final var byte
3A10             L2153:
3A10                     ;;testBitwiseOperators.j(308)     if (fb2 & fb1 == 0x04) println (181); else println (999);
3A10             L2154:
3A10 3E 07               LD    A,7
3A12             L2155:
3A12 E6 1C               AND   A,28
3A14             L2156:
3A14 D6 04               SUB   A,4
3A16             L2157:
3A16 C2 21 3A            JP    NZ,L2161
3A19             L2158:
3A19 3E B5               LD    A,181
3A1B             L2159:
3A1B CD 5F 3D            CALL  writeLineA
3A1E             L2160:
3A1E C3 27 3A            JP    L2164
3A21             L2161:
3A21 21 E7 03            LD    HL,999
3A24             L2162:
3A24 CD 37 3D            CALL  writeLineHL
3A27             L2163:
3A27                     ;;testBitwiseOperators.j(309)     if (fb2 | fb1 == 0x1F) println (182); else println (999);
3A27             L2164:
3A27 3E 07               LD    A,7
3A29             L2165:
3A29 F6 1C               OR    A,28
3A2B             L2166:
3A2B D6 1F               SUB   A,31
3A2D             L2167:
3A2D C2 38 3A            JP    NZ,L2171
3A30             L2168:
3A30 3E B6               LD    A,182
3A32             L2169:
3A32 CD 5F 3D            CALL  writeLineA
3A35             L2170:
3A35 C3 3E 3A            JP    L2174
3A38             L2171:
3A38 21 E7 03            LD    HL,999
3A3B             L2172:
3A3B CD 37 3D            CALL  writeLineHL
3A3E             L2173:
3A3E                     ;;testBitwiseOperators.j(310)     if (fb2 ^ fb1 == 0x1B) println (183); else println (999);
3A3E             L2174:
3A3E 3E 07               LD    A,7
3A40             L2175:
3A40 EE 1C               XOR   A,28
3A42             L2176:
3A42 D6 1B               SUB   A,27
3A44             L2177:
3A44 C2 4F 3A            JP    NZ,L2181
3A47             L2178:
3A47 3E B7               LD    A,183
3A49             L2179:
3A49 CD 5F 3D            CALL  writeLineA
3A4C             L2180:
3A4C C3 55 3A            JP    L2185
3A4F             L2181:
3A4F 21 E7 03            LD    HL,999
3A52             L2182:
3A52 CD 37 3D            CALL  writeLineHL
3A55             L2183:
3A55                     ;;testBitwiseOperators.j(311)     //final var word/final var word
3A55             L2184:
3A55                     ;;testBitwiseOperators.j(312)     if (fw2 & fw1 == 0x0224) println (184); else println (999);
3A55             L2185:
3A55 21 34 12            LD    HL,4660
3A58             L2186:
3A58 11 2C 03            LD    DE,812
3A5B C5                  PUSH  BC
3A5C 47                  LD    B,A
3A5D 7C                  LD    A,H
3A5E A2                  AND   A,D
3A5F 67                  LD    H,A
3A60 7D                  LD    A,L
3A61 A3                  AND   A,E
3A62 6F                  LD    L,A
3A63 78                  LD    A,B
3A64 C1                  POP   BC
3A65             L2187:
3A65 11 24 02            LD    DE,548
3A68 B7                  OR    A
3A69 ED 52               SBC   HL,DE
3A6B             L2188:
3A6B C2 76 3A            JP    NZ,L2192
3A6E             L2189:
3A6E 3E B8               LD    A,184
3A70             L2190:
3A70 CD 5F 3D            CALL  writeLineA
3A73             L2191:
3A73 C3 7C 3A            JP    L2195
3A76             L2192:
3A76 21 E7 03            LD    HL,999
3A79             L2193:
3A79 CD 37 3D            CALL  writeLineHL
3A7C             L2194:
3A7C                     ;;testBitwiseOperators.j(313)     if (fw2 | fw1 == 0x133C) println (185); else println (999);
3A7C             L2195:
3A7C 21 34 12            LD    HL,4660
3A7F             L2196:
3A7F 11 2C 03            LD    DE,812
3A82 47                  LD    B,A
3A83 7C                  LD    A,H
3A84 B2                  OR    A,D
3A85 67                  LD    H,A
3A86 7D                  LD    A,L
3A87 B3                  OR    A,E
3A88 6F                  LD    L,A
3A89 78                  LD    A,B
3A8A             L2197:
3A8A 11 3C 13            LD    DE,4924
3A8D B7                  OR    A
3A8E ED 52               SBC   HL,DE
3A90             L2198:
3A90 C2 9B 3A            JP    NZ,L2202
3A93             L2199:
3A93 3E B9               LD    A,185
3A95             L2200:
3A95 CD 5F 3D            CALL  writeLineA
3A98             L2201:
3A98 C3 A1 3A            JP    L2205
3A9B             L2202:
3A9B 21 E7 03            LD    HL,999
3A9E             L2203:
3A9E CD 37 3D            CALL  writeLineHL
3AA1             L2204:
3AA1                     ;;testBitwiseOperators.j(314)     if (fw2 ^ fw1 == 0x1118) println (186); else println (999);
3AA1             L2205:
3AA1 21 34 12            LD    HL,4660
3AA4             L2206:
3AA4 11 2C 03            LD    DE,812
3AA7 C5                  PUSH  BC
3AA8 47                  LD    B,A
3AA9 7C                  LD    A,H
3AAA AA                  XOR   A,D
3AAB 67                  LD    H,A
3AAC 7D                  LD    A,L
3AAD AB                  XOR   A,E
3AAE 6F                  LD    L,A
3AAF 78                  LD    A,B
3AB0 C1                  POP   BC
3AB1             L2207:
3AB1 11 18 11            LD    DE,4376
3AB4 B7                  OR    A
3AB5 ED 52               SBC   HL,DE
3AB7             L2208:
3AB7 C2 C2 3A            JP    NZ,L2212
3ABA             L2209:
3ABA 3E BA               LD    A,186
3ABC             L2210:
3ABC CD 5F 3D            CALL  writeLineA
3ABF             L2211:
3ABF C3 C8 3A            JP    L2216
3AC2             L2212:
3AC2 21 E7 03            LD    HL,999
3AC5             L2213:
3AC5 CD 37 3D            CALL  writeLineHL
3AC8             L2214:
3AC8                     ;;testBitwiseOperators.j(315)     //final var byte/final var word
3AC8             L2215:
3AC8                     ;;testBitwiseOperators.j(316)     if (fb1 & fw2 == 0x0014) println (187); else println (999);
3AC8             L2216:
3AC8 3E 1C               LD    A,28
3ACA             L2217:
3ACA 6F                  LD    L,A
3ACB 26 00               LD    H,0
3ACD             L2218:
3ACD 11 34 12            LD    DE,4660
3AD0 C5                  PUSH  BC
3AD1 47                  LD    B,A
3AD2 7C                  LD    A,H
3AD3 A2                  AND   A,D
3AD4 67                  LD    H,A
3AD5 7D                  LD    A,L
3AD6 A3                  AND   A,E
3AD7 6F                  LD    L,A
3AD8 78                  LD    A,B
3AD9 C1                  POP   BC
3ADA             L2219:
3ADA 3E 14               LD    A,20
3ADC             L2220:
3ADC 5F                  LD    E,A
3ADD 16 00               LD    D,0
3ADF EB                  EX    DE,HL
3AE0 B7                  OR    A
3AE1 ED 52               SBC   HL,DE
3AE3             L2221:
3AE3 C2 EE 3A            JP    NZ,L2225
3AE6             L2222:
3AE6 3E BB               LD    A,187
3AE8             L2223:
3AE8 CD 5F 3D            CALL  writeLineA
3AEB             L2224:
3AEB C3 F4 3A            JP    L2228
3AEE             L2225:
3AEE 21 E7 03            LD    HL,999
3AF1             L2226:
3AF1 CD 37 3D            CALL  writeLineHL
3AF4             L2227:
3AF4                     ;;testBitwiseOperators.j(317)     if (fb1 | fw2 == 0x123C) println (188); else println (999);
3AF4             L2228:
3AF4 3E 1C               LD    A,28
3AF6             L2229:
3AF6 6F                  LD    L,A
3AF7 26 00               LD    H,0
3AF9             L2230:
3AF9 11 34 12            LD    DE,4660
3AFC 47                  LD    B,A
3AFD 7C                  LD    A,H
3AFE B2                  OR    A,D
3AFF 67                  LD    H,A
3B00 7D                  LD    A,L
3B01 B3                  OR    A,E
3B02 6F                  LD    L,A
3B03 78                  LD    A,B
3B04             L2231:
3B04 11 3C 12            LD    DE,4668
3B07 B7                  OR    A
3B08 ED 52               SBC   HL,DE
3B0A             L2232:
3B0A C2 15 3B            JP    NZ,L2236
3B0D             L2233:
3B0D 3E BC               LD    A,188
3B0F             L2234:
3B0F CD 5F 3D            CALL  writeLineA
3B12             L2235:
3B12 C3 1B 3B            JP    L2239
3B15             L2236:
3B15 21 E7 03            LD    HL,999
3B18             L2237:
3B18 CD 37 3D            CALL  writeLineHL
3B1B             L2238:
3B1B                     ;;testBitwiseOperators.j(318)     if (fb1 ^ fw2 == 0x1228) println (189); else println (999);
3B1B             L2239:
3B1B 3E 1C               LD    A,28
3B1D             L2240:
3B1D 6F                  LD    L,A
3B1E 26 00               LD    H,0
3B20             L2241:
3B20 11 34 12            LD    DE,4660
3B23 C5                  PUSH  BC
3B24 47                  LD    B,A
3B25 7C                  LD    A,H
3B26 AA                  XOR   A,D
3B27 67                  LD    H,A
3B28 7D                  LD    A,L
3B29 AB                  XOR   A,E
3B2A 6F                  LD    L,A
3B2B 78                  LD    A,B
3B2C C1                  POP   BC
3B2D             L2242:
3B2D 11 28 12            LD    DE,4648
3B30 B7                  OR    A
3B31 ED 52               SBC   HL,DE
3B33             L2243:
3B33 C2 3E 3B            JP    NZ,L2247
3B36             L2244:
3B36 3E BD               LD    A,189
3B38             L2245:
3B38 CD 5F 3D            CALL  writeLineA
3B3B             L2246:
3B3B C3 44 3B            JP    L2251
3B3E             L2247:
3B3E 21 E7 03            LD    HL,999
3B41             L2248:
3B41 CD 37 3D            CALL  writeLineHL
3B44             L2249:
3B44                     ;;testBitwiseOperators.j(319)     //final var word/final var byte
3B44             L2250:
3B44                     ;;testBitwiseOperators.j(320)     if (fw2 & fb1 == 0x0014) println (190); else println (999);
3B44             L2251:
3B44 21 34 12            LD    HL,4660
3B47             L2252:
3B47 5F                  LD    E,A
3B48 3E 1C               LD    A,28
3B4A A5                  AND   A,L
3B4B 6F                  LD    L,A
3B4C 7B                  LD    A,E
3B4D 26 00               LD    H,0
3B4F             L2253:
3B4F 3E 14               LD    A,20
3B51             L2254:
3B51 5F                  LD    E,A
3B52 16 00               LD    D,0
3B54 EB                  EX    DE,HL
3B55 B7                  OR    A
3B56 ED 52               SBC   HL,DE
3B58             L2255:
3B58 C2 63 3B            JP    NZ,L2259
3B5B             L2256:
3B5B 3E BE               LD    A,190
3B5D             L2257:
3B5D CD 5F 3D            CALL  writeLineA
3B60             L2258:
3B60 C3 69 3B            JP    L2262
3B63             L2259:
3B63 21 E7 03            LD    HL,999
3B66             L2260:
3B66 CD 37 3D            CALL  writeLineHL
3B69             L2261:
3B69                     ;;testBitwiseOperators.j(321)     if (fw2 | fb1 == 0x123C) println (191); else println (999);
3B69             L2262:
3B69 21 34 12            LD    HL,4660
3B6C             L2263:
3B6C 11 1C 00            LD    DE,28
3B6F 47                  LD    B,A
3B70 7C                  LD    A,H
3B71 B2                  OR    A,D
3B72 67                  LD    H,A
3B73 7D                  LD    A,L
3B74 B3                  OR    A,E
3B75 6F                  LD    L,A
3B76 78                  LD    A,B
3B77             L2264:
3B77 11 3C 12            LD    DE,4668
3B7A B7                  OR    A
3B7B ED 52               SBC   HL,DE
3B7D             L2265:
3B7D C2 88 3B            JP    NZ,L2269
3B80             L2266:
3B80 3E BF               LD    A,191
3B82             L2267:
3B82 CD 5F 3D            CALL  writeLineA
3B85             L2268:
3B85 C3 8E 3B            JP    L2272
3B88             L2269:
3B88 21 E7 03            LD    HL,999
3B8B             L2270:
3B8B CD 37 3D            CALL  writeLineHL
3B8E             L2271:
3B8E                     ;;testBitwiseOperators.j(322)     if (fw2 ^ fb1 == 0x1228) println (192); else println (999);
3B8E             L2272:
3B8E 21 34 12            LD    HL,4660
3B91             L2273:
3B91 11 1C 00            LD    DE,28
3B94 C5                  PUSH  BC
3B95 47                  LD    B,A
3B96 7C                  LD    A,H
3B97 AA                  XOR   A,D
3B98 67                  LD    H,A
3B99 7D                  LD    A,L
3B9A AB                  XOR   A,E
3B9B 6F                  LD    L,A
3B9C 78                  LD    A,B
3B9D C1                  POP   BC
3B9E             L2274:
3B9E 11 28 12            LD    DE,4648
3BA1 B7                  OR    A
3BA2 ED 52               SBC   HL,DE
3BA4             L2275:
3BA4 C2 AF 3B            JP    NZ,L2279
3BA7             L2276:
3BA7 3E C0               LD    A,192
3BA9             L2277:
3BA9 CD 5F 3D            CALL  writeLineA
3BAC             L2278:
3BAC C3 B5 3B            JP    L2283
3BAF             L2279:
3BAF 21 E7 03            LD    HL,999
3BB2             L2280:
3BB2 CD 37 3D            CALL  writeLineHL
3BB5             L2281:
3BB5                     ;;testBitwiseOperators.j(323)   
3BB5             L2282:
3BB5                     ;;testBitwiseOperators.j(324)     println("Klaar");
3BB5             L2283:
3BB5 21 C0 3B            LD    HL,L2290
3BB8             L2284:
3BB8 CD E4 3B            CALL  writeLineStr
3BBB             L2285:
3BBB                     ;;testBitwiseOperators.j(325)   }
3BBB             L2286:
3BBB DD F9               LD    SP,IX
3BBD             L2287:
3BBD DD E1               POP   IX
3BBF             L2288:
3BBF C9                  return
3BC0             L2289:
3BC0                     ;;testBitwiseOperators.j(326) }
3BC0             L2290:
3BC0 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
3BC6             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
3BC6             STAT0   equ 004H          ;147 ASCI0 Status register.
3BC6             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
3BC6             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
3BC6             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
3BC6             TDRE    equ 1             ;STAT0->Tx data register empty bit.
3BC6             OVERRUN equ 6             ;STAT0->OVERRUN bit.
3BC6             RDRF    equ 7             ;STAT0->Rx data register full bit.
3BC6             ;****************
3BC6             ;getChar
3BC6             ;Check if an input character from ASCI0 is available.
3BC6             ;  IN:  none
3BC6             ;  OUT: F: ZERO flag set if no character is available.
3BC6             ;          ZERO flag reset if a character is available.
3BC6             ;       A : character from ASCI0, if available.
3BC6             ;  USES:AF
3BC6             ;****************
3BC6             getChar:
3BC6 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
3BC9 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
3BCB 20 07               JR    NZ,getChar1 ;-yes: reset error flags
3BCD CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
3BCF C8                  RET   Z           ;-no: return without a character
3BD0 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
3BD3 C9                  RET
3BD4             getChar1:
3BD4 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
3BD7 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
3BD9 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
3BDC AF                  XOR   A,A
3BDD C9                  RET               ;return without a character
3BDE             ;****************
3BDE             ;putMsg
3BDE             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
3BDE             ;  IN:  none.
3BDE             ;  OUT: none.
3BDE             ;  USES:none.
3BDE             ;****************
3BDE             putMsg:
3BDE E3                  EX    (SP),HL     ;save HL and load return address into HL.
3BDF CD EB 3B            CALL  writeStr
3BE2 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
3BE3 C9                  RET
3BE4             ;****************
3BE4             ;writeLineStr
3BE4             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
3BE4             ;  IN:  HL:address of zero terminated string to be printed.
3BE4             ;  OUT: none.
3BE4             ;  USES:HL (point to byte after zero terminated string)
3BE4             ;****************
3BE4             writeLineStr:
3BE4 CD EB 3B            CALL  writeStr
3BE7 CD 07 3C            CALL  putCRLF
3BEA C9                  RET
3BEB             ;****************
3BEB             ;writeStr
3BEB             ;Print via ASCI0 a zero terminated string, pointed to by HL.
3BEB             ;  IN:  HL:address of zero terminated string to be printed.
3BEB             ;  OUT: none.
3BEB             ;  USES:HL (point to byte after zero terminated string)
3BEB             ;****************
3BEB             writeStr:
3BEB F5                  PUSH  AF          ;save registers
3BEC             putStr1:
3BEC 7E                  LD    A,(HL)      ;get next character
3BED 23                  INC   HL
3BEE B7                  OR    A,A         ;is it zer0?
3BEF 28 05               JR    Z,putStr2   ;yes ->return
3BF1 CD FA 3B            CALL  putChar     ;no->put it to ASCI0
3BF4 18 F6               JR    putStr1
3BF6             putStr2:
3BF6 F1                  POP   AF
3BF7 C9                  RET
3BF8             ;****************
3BF8             ;putSpace
3BF8             ;Send a space character to ASCI0
3BF8             ;  IN:  none.
3BF8             ;  OUT: none.
3BF8             ;  USES:AF
3BF8             ;****************
3BF8             putSpace:
3BF8 3E 20               LD    A,' '       ;load space and continue with putChar.
3BFA             ;****************
3BFA             ;putChar
3BFA             ;Send one character to ASCI0.
3BFA             ;  IN:  A = character
3BFA             ;  OUT: none.
3BFA             ;  USES:none.
3BFA             ;****************
3BFA             putChar:
3BFA F5                  PUSH  AF          ;send the character via ASCI0
3BFB             putChar1:
3BFB ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
3BFE CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
3C00 28 F9               JR    Z,putChar1
3C02 F1                  POP   AF          ;restore AF registers
3C03 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
3C06 C9                  RET
3C07             ;****************
3C07             ;putCRLF
3C07             ;Send CR and LF to ASCI0
3C07             ;  IN:  none.
3C07             ;  OUT: none.
3C07             ;  USES:none.
3C07             ;****************
3C07             putCRLF:
3C07 F5                  PUSH  AF
3C08 3E 0D               LD    A,'\r'       ;print carriage return
3C0A CD FA 3B            CALL  putChar
3C0D 3E 0A               LD    A,'\n'       ;print line feed
3C0F CD FA 3B            CALL  putChar
3C12 F1                  POP   AF
3C13 C9                  RET
3C14             ;****************
3C14             ;putErase
3C14             ;Erase the latest character at ASCI0
3C14             ;  IN:  none.
3C14             ;  OUT: none.
3C14             ;  USES:AF
3C14             ;****************
3C14             putErase:
3C14 3E 08               LD    A,'\b'       ;print backspace
3C16 CD FA 3B            CALL  putChar
3C19 CD F8 3B            CALL  putSpace    ;print space (erase character)
3C1C 3E 08               LD    A,'\b'      ;print backspace
3C1E 18 DA               JR    putChar
3C20             ;****************
3C20             ;putBell
3C20             ;Send a Bell character to ASCI0
3C20             ;  IN:  none.
3C20             ;  OUT: none.
3C20             ;  USES:AF
3C20             ;****************
3C20             putBell:
3C20 3E 07               LD    A,07        ;ring the bell at ASCI0
3C22 18 D6               JR    putChar
3C24             ;****************
3C24             ;putHexHL
3C24             ;Print HL register pair as 4 hex digits
3C24             ;  IN:  HL = word to be printed.
3C24             ;  OUT: none.
3C24             ;  USES:none.
3C24             ;****************
3C24             putHexHL:
3C24 F5                  PUSH  AF          ;save used registers
3C25 7C                  LD    A,H         ;print H as 2 hex digits
3C26 CD 2F 3C            CALL  putHexA
3C29 7D                  LD    A,L         ;print L as 2 hex digits
3C2A CD 2F 3C            CALL  putHexA
3C2D F1                  POP   AF          ;restore used registers
3C2E C9                  RET
3C2F             ;****************
3C2F             ;putHexA
3C2F             ;Print A register as 2 hex digits
3C2F             ;  IN:  A = byte to be printed
3C2F             ;  OUT: none.
3C2F             ;  USES:none.
3C2F             ;****************
3C2F             putHexA:
3C2F F5                  PUSH  AF          ;save input
3C30 1F                  RRA               ;shift upper nibble to the right
3C31 1F                  RRA
3C32 1F                  RRA
3C33 1F                  RRA
3C34 CD 38 3C            CALL  putHexA1    ;print upper nibble
3C37 F1                  POP   AF          ;restore input & print lower nibble
3C38             putHexA1:
3C38 F5                  PUSH  AF          ;save input
3C39 E6 0F               AND   A,00FH      ;mask lower nibble
3C3B C6 30               ADD   A,'0'       ;convert to hex digit
3C3D FE 3A               CP    A,'9'+1
3C3F 38 02               JR    C,putHexA2
3C41 C6 07               ADD   A,07
3C43             putHexA2:
3C43 CD FA 3B            CALL  putChar
3C46 F1                  POP   AF          ;restore input
3C47 C9                  RET               ;and return
3C48             ;****************
3C48             ;mul16
3C48             ;16 by 16 bit unsigned multiplication with 16 bit result.
3C48             ;  IN:  HL = operand 1
3C48             ;       DE = operand 2
3C48             ;  OUT: HL = HL * DE low part
3C48             ;  USES:DE
3C48             ;  Size   25 bytes
3C48             ;  Time  160 cycles
3C48             ;****************
3C48             mul16:
3C48                     ;HL = HL * DE
3C48                     ;        H  L
3C48                     ;        D  E
3C48                     ;    --------*
3C48                     ;          EL
3C48                     ;       EH  0
3C48                     ;       DL  0
3C48                     ; -----------+
3C48                     ;        R  S
3C48                     ;S = ELlow
3C48                     ;R = ELhigh+EHlow+DLlow
3C48 C5                  PUSH  BC          ;11  11 save BC
3C49 44                  LD    B,H         ; 4  15 copy HL to BC
3C4A 4D                  LD    C,L         ; 4  19
3C4B 63                  LD    H,E         ; 4  23 HL contains EL
3C4C ED 6C               MLT   HL          ;17  40
3C4E E5                  PUSH  HL          ;11  51
3C4F 63                  LD    H,E         ; 4  55 HL contains EH aka EB
3C50 68                  LD    L,B         ; 4  59
3C51 ED 6C               MLT   HL          ;17  76
3C53 45                  LD    B,L         ; 4  80 save EHlow in B
3C54 62                  LD    H,D         ; 4  84 HL contains DL aka DC
3C55 69                  LD    L,C         ; 4  88
3C56 ED 6C               MLT   HL          ;17 105
3C58 55                  LD    D,L         ; 4 109 DLlow into DE
3C59 1E 00               LD    E,0         ; 6 115
3C5B E1                  POP   HL          ; 9 124 add EL+DElow
3C5C 19                  ADD   HL,DE       ; 7 131
3C5D 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
3C5E 19                  ADD   HL,DE       ; 7 142
3C5F C1                  POP   BC          ; 9 151 restore BC
3C60 C9                  RET               ; 9 160
3C61             ;****************
3C61             ;mul16_10
3C61             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
3C61             ;  IN:  HL = operand
3C61             ;  OUT: HL = HL * 10; low part
3C61             ;  USES:Flags
3C61             ;  Size   9 bytes
3C61             ;  Time   65 cycles
3C61             ;****************
3C61             mul16_10:
3C61 D5                  PUSH  DE          ;11 11
3C62 54                  LD    D,H         ; 4 15
3C63 5D                  LD    E,L         ; 4 19
3C64 29                  ADD   HL,HL       ; 7 26 times 2
3C65 29                  ADD   HL,HL       ; 7 33 times 4
3C66 19                  ADD   HL,DE       ; 7 40 times 5
3C67 29                  ADD   HL,HL       ; 7 47 times 10
3C68 D1                  POP   DE          ; 9 56
3C69 C9                  RET               ; 9 65
3C6A             ;****************
3C6A             ;mul16_8
3C6A             ;16 by 8 bit unsigned multiplication with 16 bit result.
3C6A             ;  IN:  HL = operand 1
3C6A             ;        A = operand 2
3C6A             ;  OUT: HL = HL * A low part
3C6A             ;  USES:AF
3C6A             ;  Size   .. bytes
3C6A             ;  Time  ... cycles
3C6A             ;****************
3C6A             mul16_8:
3C6A                     ;HL = HL * A
3C6A                     ;        H  L
3C6A                     ;           A
3C6A                     ;    --------*
3C6A                     ;          AL
3C6A                     ;       AH  0
3C6A                     ; -----------+
3C6A                     ;        R  S
3C6A                     ;S = ALlow
3C6A                     ;R = ALhigh+AHlow
3C6A C5                  PUSH  BC          ;11  11 save BC
3C6B 44                  LD    B,H         ; 4  15
3C6C 4F                  LD    C,A         ; 4  19
3C6D 67                  LD    H,A         ; 4  23
3C6E ED 6C               MLT   HL          ;17  40 HL = AL
3C70 ED 4C               MLT   BC          ;17  57 BC = AH
3C72 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
3C73 81                  ADD   A,C         ; 4  65
3C74 67                  LD    H,A         ; 4  69
3C75 C1                  POP   BC          ; 9  78 | 289 restore BC
3C76 C9                  RET               ; 9  87 | 307
3C77             ;****************
3C77             ;mul1632
3C77             ;16 by 16 bit unsigned multiplication with 32 bit result.
3C77             ;  IN:  HL = operand 1
3C77             ;       DE = operand 2
3C77             ;  OUT: HL = HL * DE low part
3C77             ;       DE = HL * DE high part
3C77             ;  USES:-
3C77             ;  Size 49 bytes
3C77             ;  Time between 303 en 307 cycles
3C77             ;****************
3C77             mul1632:
3C77                     ;HL = HL * DE
3C77                     ;        H  L
3C77                     ;        D  E
3C77                     ;    --------*
3C77                     ;          EL
3C77                     ;       EH  0
3C77                     ;       DL  0
3C77                     ;    DH  0  0
3C77                     ; -----------+
3C77                     ;  P  Q  R  S
3C77                     ;S = ELlow
3C77                     ;R = ELhigh+EHlow+DLlow
3C77                     ;Q = DHlow+EHhigh+DLhigh
3C77                     ;P = DHhigh
3C77 F5                  PUSH  AF          ;11  11 save AF
3C78 C5                  PUSH  BC          ;11  22 save BC
3C79 44                  LD    B,H         ; 4  26
3C7A 4D                  LD    C,L         ; 4  30
3C7B 62                  LD    H,D         ; 4  34 HL contains DH aka DB
3C7C 68                  LD    L,B         ; 4  38
3C7D ED 6C               MLT   HL          ;17  55
3C7F E5                  PUSH  HL          ;11  66
3C80 62                  LD    H,D         ; 4  70 HL contains DL aka DC
3C81 69                  LD    L,C         ; 4  74
3C82 ED 6C               MLT   HL          ;17  91
3C84 E5                  PUSH  HL          ;11 102
3C85 63                  LD    H,E         ; 4 106 HL contains EH aka EB
3C86 68                  LD    L,B         ; 4 110
3C87 ED 6C               MLT   HL          ;17 127
3C89 E5                  PUSH  HL          ;11 138
3C8A 63                  LD    H,E         ; 4 142 HL contains EL aka EC
3C8B 69                  LD    L,C         ; 4 146
3C8C ED 6C               MLT   HL          ;17 163
3C8E D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
3C8F 06 00               LD    B,0         ; 6 178
3C91 4A                  LD    C,D         ; 4 182 ..C=EHhigh
3C92 53                  LD    D,E         ; 4 186 ..D=EHlow
3C93 1E 00               LD    E,0         ; 6 192
3C95 19                  ADD   HL,DE       ; 7 199
3C96 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
3C98 03                  INC   BC          ;         4 209
3C99             mul16321:
3C99 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
3C9A 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
3C9B 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
3C9C 19                  ADD   HL,DE       ; 7 231 | 233
3C9D 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
3C9F 03                  INC   BC          ;         4 243
3CA0             mul16322:
3CA0                                       ;HL=RS=EL+EH0+DL0
3CA0                                       ;C=EHhigh
3CA0                                       ;A=DLhigh
3CA0                                       ;E=0
3CA0 EB                  EX    DE,HL       ; 3 242 | 246
3CA1 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
3CA2 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
3CA3 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
3CA4 C1                  POP   BC          ; 9 266 | 270
3CA5 09                  ADD   HL,BC       ; 7 273 | 277
3CA6 EB                  EX    DE,HL       ; 3 276 | 280
3CA7                                       ;D=P=DHhigh
3CA7                                       ;E=Q=DHlow+EHhigh+DLhigh
3CA7                                       ;H=R=ELhigh+EHlow+DLlow
3CA7                                       ;L=S=ELlow
3CA7 C1                  POP   BC          ; 9 285 | 289 restore BC
3CA8 F1                  POP   AF          ; 9 294 | 298 restore AF
3CA9 C9                  RET               ; 9 303 | 307
3CAA             ;****************
3CAA             ;mul16S
3CAA             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
3CAA             ;  IN:  HL = operand 1
3CAA             ;       DE = operand 2
3CAA             ;  OUT: DE = HL * DE high part
3CAA             ;       HL = HL * DE low part
3CAA             ;  USES:none.
3CAA             ;  Size 26 bytes
3CAA             ;  Time between 726 en 998 cycles
3CAA             ;****************
3CAA             mul16S:
3CAA F5                  PUSH  AF          ;11  11 save AF
3CAB C5                  PUSH  BC          ;11  22 save BC
3CAC 44                  LD    B,H         ; 4  26
3CAD 4D                  LD    C,L         ; 4  30
3CAE 21 00 00            LD    HL,0        ; 9  39
3CB1 3E 10               LD    A,16        ; 6  45
3CB3             mul16S1:
3CB3 29                  ADD   HL,HL       ;16*7=112 157
3CB4 CB 13               RL    E           ;16*7=112 269
3CB6 CB 12               RL    D           ;16*7=112 381
3CB8 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
3CBA 09                  ADD   HL,BC       ;             16*7=112 589
3CBB 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
3CBD 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
3CBE             mul16S2:
3CBE 3D                  DEC   A           ;16*4=64    573 | 845 | 813
3CBF 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
3CC1 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
3CC2 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
3CC3 C9                  RET               ; 9         726 | 998 | 966
3CC4             ;****************
3CC4             ;div16
3CC4             ;16 by 16 bit unsigned division.
3CC4             ;  IN:  HL = dividend
3CC4             ;       DE = divisor
3CC4             ;  OUT: HL = quotient
3CC4             ;       DE = remainder
3CC4             ;  USES:-
3CC4             ;  Size   32 bytes
3CC4             ;  Time   between 1073 en 1121 cycles
3CC4             ;pseudo code:
3CC4             ;T = AC = dividend
3CC4             ;D = DE = divisor
3CC4             ;Q = AC = quotient = 0
3CC4             ;R = HL = remainder = 0
3CC4             ;invariante betrekking:
3CC4             ; D/T\Q     
3CC4             ;   R       
3CC4             ; T = QD + R
3CC4             ; T <= 2^N  
3CC4             ;
3CC4             ; D/T'.RT\Q'      
3CC4             ;   R'             
3CC4             ; RT <= 2^N        
3CC4             ; 0<=k<=N          
3CC4             ; RT = T % 2^k     
3CC4             ; T' = (T-RT) / 2^k
3CC4             ; Q' = T' / D      
3CC4             ; R' = T' % D      
3CC4             ;
3CC4             ;for (i=16; i>0; i--) {
3CC4             ;  T = T * 2 (remember MSB in carry)
3CC4             ;  R = R * 2 + carry
3CC4             ;  Q = Q * 2
3CC4             ;  if (R >= D) {
3CC4             ;    R = R - D;
3CC4             ;    Q++;
3CC4             ;  }
3CC4             ;}
3CC4             ;return Q (in HL) and R (in DE)
3CC4             ;****************
3CC4             div16:
3CC4 F5                  PUSH  AF          ;11  11 save registers used
3CC5 C5                  PUSH  BC          ;11  22
3CC6 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
3CC7 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
3CC8 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
3CCB 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
3CCD             div16_1:
3CCD CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
3CCF CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
3CD1 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
3CD3 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
3CD4 ED 52               SBC   HL,DE       ;16*10=160 653
3CD6 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
3CD8 0C                  INC   C           ;              16*4= 64 813   Q++
3CD9 18 01               JR    div16_3     ;              16*8=128 941
3CDB             div16_2:
3CDB 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
3CDC             div16_3:
3CDC 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
3CDE EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
3CDF 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
3CE0 69                  LD    L,C         ; 4 1046 | 1094
3CE1 C1                  POP   BC          ; 9 1055 | 1103
3CE2 F1                  POP   AF          ; 9 1064 | 1112
3CE3 C9                  RET               ; 9 1073 | 1121
3CE4             ;****************
3CE4             ;div16_8
3CE4             ;16 by 8 bit unsigned division.
3CE4             ;  IN:  HL = dividend
3CE4             ;       A  = divisor
3CE4             ;  OUT: HL = quotient
3CE4             ;       A  = remainder
3CE4             ;  USES:F(lags)
3CE4             ;  Size 18 bytes
3CE4             ;  Time between 601 en 697 cycles
3CE4             ;****************
3CE4             div16_8:
3CE4 C5                  PUSH  BC          ;11 11 save registers used
3CE5 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
3CE7 4F                  LD    C,A         ; 4 21 move divisor to C
3CE8 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
3CE9             div16_82:
3CE9 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
3CEA CB 17               RL    A           ;16*7=112 249
3CEC B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
3CED 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
3CEF 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
3CF0 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
3CF1             div16_83:
3CF1 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
3CF3 C1                  POP   BC          ;9 592 688
3CF4 C9                  RET               ;9 601 697
3CF5             ;****************
3CF5             ;div8
3CF5             ;8 by 8 bit unsigned division.
3CF5             ;  IN:  A = dividend
3CF5             ;       C = divisor
3CF5             ;  OUT: A = quotient
3CF5             ;       C = remainder
3CF5             ;  USES:F(lags)
3CF5             ;  Size 26 bytes
3CF5             ;  Time between 411 and 459 cycles
3CF5             ;****************
3CF5             ;pseudo code:
3CF5             ;T = dividend
3CF5             ;D = divisor
3CF5             ;Q = quotient = 0
3CF5             ;R = remainder = 0
3CF5             ;invariante betrekking:
3CF5             ; T = QD + R
3CF5             ; T <= 2^8  
3CF5             ;
3CF5             ; D/T'.RT\Q'      
3CF5             ;   R'             
3CF5             ; RT <= 2^8        
3CF5             ; 0<=k<=8          
3CF5             ; RT = T % 2^k     
3CF5             ; T' = (T-RT) / 2^k
3CF5             ; Q' = T' / D      
3CF5             ; R' = T' % D      
3CF5             ;
3CF5             ;for (i=8; i>0; i--) {
3CF5             ;  T = T * 2 (remember MSB in carry)
3CF5             ;  R = R * 2 + carry
3CF5             ;  Q = Q * 2
3CF5             ;  if (R >= D) {
3CF5             ;    R = R - D;
3CF5             ;    Q++;
3CF5             ;  }
3CF5             ;}
3CF5             ;return Q (in A) and R (in C)
3CF5             ;****************
3CF5             ;E = T = dividend
3CF5             ;C = D = divisor
3CF5             ;D = Q = quotient
3CF5             ;A = R = remainder
3CF5             ;****************
3CF5             ;  IN:  A = dividend
3CF5             ;       C  = divisor
3CF5             div8:
3CF5 D5                  PUSH  DE          ;11 11 save registers used
3CF6 C5                  PUSH  BC          ;11 22 save registers used
3CF7 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
3CF9 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
3CFB 5F                  LD    E,A         ; 4 38 E = T = dividend
3CFC AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
3CFD             div8_1:
3CFD CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
3CFF CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
3D01 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
3D03 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
3D04 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
3D06 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
3D07 14                  INC   D           ;           8*4=32 354   Q[D]++;
3D08             div8_2:           ;                      }
3D08 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
3D0A C1                  POP   BC          ;9        385 433
3D0B 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
3D0C 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
3D0D D1                  POP   DE          ;9        402 450
3D0E C9                  RET               ;9        411 459
3D0F             ;****************
3D0F             ;div8_16
3D0F             ;8 by 16 bit unsigned division.
3D0F             ;  IN:  A = dividend
3D0F             ;       HL = divisor
3D0F             ;  OUT: A = quotient
3D0F             ;       C = remainder
3D0F             ;  USES:F(lags)
3D0F             ;  Size 13 bytes (plus dependency on div8)
3D0F             ;  Time 31 or between 436 and 484 cycles
3D0F             ;****************
3D0F             ;invariante betrekking:
3D0F             ; T = dividend
3D0F             ; D = divisor
3D0F             ; Q = quotient
3D0F             ; R = remainder
3D0F             ; T = QD + R
3D0F             ;pseudo code:
3D0F             ; if D >= 256 {
3D0F             ;   R = T
3D0F             ;   Q = 0
3D0F             ; } else {
3D0F             ;   R = T/D (using div8)
3D0F             ;   Q = T%D (using div8)
3D0F             ; }
3D0F             ;****************
3D0F             
3D0F             
3D0F             div8_16:
3D0F 4F                  LD    C,A         ;  4  4         save dividend(A) in C
3D10 7C                  LD    A,H         ;  4  8         if D >= 256 {
3D11 B7                  OR    A,A         ;  4 12
3D12 28 02               JR    Z,div8_161  ;  6 18  8  20
3D14 AF                  XOR   A,A         ;  4 22           R = T;
3D15 C9                  RET               ;  9 31           Q = 0;
3D16             div8_161:                     ;               } else {
3D16 79                  LD    A,C         ;        4  24    restore dividend into A
3D17 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
3D18 CD F5 3C            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
3D1B C9                  RET               ; 9  436/484    }
3D1C             ;****************
3D1C             ;read
3D1C             ;read a 16 bit unsigned number from the input
3D1C             ;  IN:  none
3D1C             ;  OUT: HL = 16 bit unsigned number
3D1C             ;  USES:-
3D1C             ;****************
3D1C             read:
3D1C F5                  PUSH  AF
3D1D 21 00 00            LD    HL,0        ;result = 0;
3D20             read1:
3D20 CD C6 3B            CALL  getChar     ;check if a character is available.
3D23 28 FB               JR    Z,read1     ;-no: wait for it.
3D25 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
3D27 28 0C               JR    Z,read2
3D29 CD 61 3C            CALL  mul16_10    ;result *= 10;
3D2C D6 30               SUB   A,'0'       ;digit = char - '0';
3D2E 85                  ADD   A,L         ;result += digit;
3D2F 6F                  LD    L,A
3D30 30 EE               JR    NC,read1     ;get next character
3D32 24                  INC   H
3D33 18 EB               JR    read1        ;get next character
3D35             read2:
3D35 F1                  POP   AF
3D36 C9                  RET
3D37             ;****************
3D37             ;writeLineHL
3D37             ;write a 16 bit unsigned number to the output, followed by a carriage return
3D37             ;  IN:  HL = 16 bit unsigned number
3D37             ;  OUT: none
3D37             ;  USES:HL
3D37             ;****************
3D37             writeLineHL:
3D37 CD 3E 3D            CALL  writeHL
3D3A CD 07 3C            CALL  putCRLF
3D3D C9                  RET
3D3E             ;****************
3D3E             ;writeHL
3D3E             ;write a 16 bit unsigned number to the output
3D3E             ;  IN:  HL = 16 bit unsigned number
3D3E             ;  OUT: none
3D3E             ;  USES:HL
3D3E             ;****************
3D3E             writeHL:
3D3E C5                  PUSH  BC          ;save registers used
3D3F F5                  PUSH  AF
3D40 06 00               LD    B,0         ;number of digits on stack
3D42 7C                  LD    A,H         ;is HL=0?
3D43 B5                  OR    A,L
3D44 20 03               JR    NZ,writeHL1
3D46 04                  INC   B           ;write a single digit 0
3D47 18 0C               JR    writeHL3
3D49             writeHL1:
3D49 3E 0A               LD    A,10        ;divide HL by 10
3D4B CD E4 3C            CALL  div16_8
3D4E F5                  PUSH  AF          ;put remainder on stack
3D4F 04                  INC   B
3D50 7C                  LD    A,H         ;is quotient 0?
3D51 B5                  OR    A,L
3D52 20 F5               JR    NZ,writeHL1
3D54             writeHL2:
3D54 F1                  POP   AF          ;write digit
3D55             writeHL3:
3D55 C6 30               ADD   A,'0'
3D57 CD FA 3B            CALL  putChar
3D5A 10 F8               DJNZ  writeHL2
3D5C F1                  POP   AF          ;restore registers used
3D5D C1                  POP   BC
3D5E C9                  RET
3D5F             ;****************
3D5F             ;writeLineA
3D5F             ;write an 8-bit unsigned number to the output, followed by a carriage return
3D5F             ;  IN:  A = 8-bit unsigned number
3D5F             ;  OUT: none
3D5F             ;  USES:none
3D5F             ;****************
3D5F             writeLineA:
3D5F CD 66 3D            CALL  writeA
3D62 CD 07 3C            CALL  putCRLF
3D65 C9                  RET
3D66             ;****************
3D66             ;writeA
3D66             ;write an 8-bit unsigned number to the output
3D66             ;  IN:  A = 8-bit unsigned number
3D66             ;  OUT: none
3D66             ;  USES:none
3D66             ;****************
3D66             writeA:
3D66 E5                  PUSH  HL          ;save registers used
3D67 26 00               LD    H,0
3D69 6F                  LD    L,A
3D6A CD 3E 3D            CALL  writeHL
3D6D E1                  POP   HL
3D6E C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20E4 :
   L1000 = 2BCB :
   L1001 = 2BCE :
   L1002 = 2BD1 : 2BC6
   L1003 = 2BD4 :
   L1004 = 2BD7 :
   L1005 = 2BD7 :
   L1006 = 2BD7 : 2BCE
   L1007 = 2BDA :
   L1008 = 2BDE :
   L1009 = 2BEC :
    L101 = 20E7 :
   L1010 = 2BEE :
   L1011 = 2BF5 :
   L1012 = 2BF8 :
   L1013 = 2BFA :
   L1014 = 2BFD :
   L1015 = 2C00 : 2BF5
   L1016 = 2C03 :
   L1017 = 2C06 :
   L1018 = 2C06 : 2BFD
   L1019 = 2C09 :
    L102 = 20E7 :
   L1020 = 2C0D :
   L1021 = 2C19 :
   L1022 = 2C1F :
   L1023 = 2C22 :
   L1024 = 2C24 :
   L1025 = 2C27 :
   L1026 = 2C2A : 2C1F
   L1027 = 2C2D :
   L1028 = 2C30 :
   L1029 = 2C30 : 2C27
    L103 = 20E7 :
   L1030 = 2C33 :
   L1031 = 2C37 :
   L1032 = 2C45 :
   L1033 = 2C4B :
   L1034 = 2C4E :
   L1035 = 2C50 :
   L1036 = 2C53 :
   L1037 = 2C56 : 2C4B
   L1038 = 2C59 :
   L1039 = 2C5C :
    L104 = 20E7 : 20DE
   L1040 = 2C5C :
   L1041 = 2C5C :
   L1042 = 2C5C :
   L1043 = 2C5C :
   L1044 = 2C5C : 2C53
   L1045 = 2C5E :
   L1046 = 2C60 :
   L1047 = 2C62 :
   L1048 = 2C64 :
   L1049 = 2C67 :
    L105 = 20E9 :
   L1050 = 2C69 :
   L1051 = 2C6C :
   L1052 = 2C6F : 2C64
   L1053 = 2C72 :
   L1054 = 2C75 :
   L1055 = 2C75 : 2C6C
   L1056 = 2C77 :
   L1057 = 2C79 :
   L1058 = 2C7B :
   L1059 = 2C7D :
    L106 = 20EC :
   L1060 = 2C80 :
   L1061 = 2C82 :
   L1062 = 2C85 :
   L1063 = 2C88 : 2C7D
   L1064 = 2C8B :
   L1065 = 2C8E :
   L1066 = 2C8E : 2C85
   L1067 = 2C90 :
   L1068 = 2C92 :
   L1069 = 2C94 :
    L107 = 20F9 :
   L1070 = 2C96 :
   L1071 = 2C99 :
   L1072 = 2C9B :
   L1073 = 2C9E :
   L1074 = 2CA1 : 2C96
   L1075 = 2CA4 :
   L1076 = 2CA7 :
   L1077 = 2CA7 :
   L1078 = 2CA7 : 2C9E
   L1079 = 2CAA :
    L108 = 20FB :
   L1080 = 2CAE :
   L1081 = 2CBB :
   L1082 = 2CC1 :
   L1083 = 2CC4 :
   L1084 = 2CC6 :
   L1085 = 2CC9 :
   L1086 = 2CCC : 2CC1
   L1087 = 2CCF :
   L1088 = 2CD2 :
   L1089 = 2CD2 : 2CC9
    L109 = 2102 :
   L1090 = 2CD5 :
   L1091 = 2CD9 :
   L1092 = 2CE4 :
   L1093 = 2CEA :
   L1094 = 2CED :
   L1095 = 2CEF :
   L1096 = 2CF2 :
   L1097 = 2CF5 : 2CEA
   L1098 = 2CF8 :
   L1099 = 2CFB :
     L11 = 2013 :
    L110 = 2105 :
   L1100 = 2CFB : 2CF2
   L1101 = 2CFE :
   L1102 = 2D02 :
   L1103 = 2D0F :
   L1104 = 2D15 :
   L1105 = 2D18 :
   L1106 = 2D1A :
   L1107 = 2D1D :
   L1108 = 2D20 : 2D15
   L1109 = 2D23 :
    L111 = 2107 :
   L1110 = 2D26 :
   L1111 = 2D26 :
   L1112 = 2D26 : 2D1D
   L1113 = 2D28 :
   L1114 = 2D2A :
   L1115 = 2D2D :
   L1116 = 2D3A :
   L1117 = 2D3C :
   L1118 = 2D43 :
   L1119 = 2D46 :
    L112 = 210A :
   L1120 = 2D48 :
   L1121 = 2D4B :
   L1122 = 2D4E : 2D43
   L1123 = 2D51 :
   L1124 = 2D54 :
   L1125 = 2D54 : 2D4B
   L1126 = 2D56 :
   L1127 = 2D58 :
   L1128 = 2D5B :
   L1129 = 2D66 :
    L113 = 210D : 2102
   L1130 = 2D6C :
   L1131 = 2D6F :
   L1132 = 2D71 :
   L1133 = 2D74 :
   L1134 = 2D77 : 2D6C
   L1135 = 2D7A :
   L1136 = 2D7D :
   L1137 = 2D7D : 2D74
   L1138 = 2D7F :
   L1139 = 2D81 :
    L114 = 2110 :
   L1140 = 2D84 :
   L1141 = 2D91 :
   L1142 = 2D97 :
   L1143 = 2D9A :
   L1144 = 2D9C :
   L1145 = 2D9F :
   L1146 = 2DA2 : 2D97
   L1147 = 2DA5 :
   L1148 = 2DA8 :
   L1149 = 2DA8 :
    L115 = 2113 :
   L1150 = 2DA8 : 2D9F
   L1151 = 2DAB :
   L1152 = 2DAF :
   L1153 = 2DB7 :
   L1154 = 2DB9 :
   L1155 = 2DC0 :
   L1156 = 2DC3 :
   L1157 = 2DC5 :
   L1158 = 2DC8 :
   L1159 = 2DCB : 2DC0
    L116 = 2113 : 210A
   L1160 = 2DCE :
   L1161 = 2DD1 :
   L1162 = 2DD1 : 2DC8
   L1163 = 2DD4 :
   L1164 = 2DD8 :
   L1165 = 2DE3 :
   L1166 = 2DE9 :
   L1167 = 2DEC :
   L1168 = 2DEE :
   L1169 = 2DF1 :
    L117 = 2115 :
   L1170 = 2DF4 : 2DE9
   L1171 = 2DF7 :
   L1172 = 2DFA :
   L1173 = 2DFA : 2DF1
   L1174 = 2DFD :
   L1175 = 2E01 :
   L1176 = 2E0E :
   L1177 = 2E14 :
   L1178 = 2E17 :
   L1179 = 2E19 :
    L118 = 2118 :
   L1180 = 2E1C :
   L1181 = 2E1F : 2E14
   L1182 = 2E22 :
   L1183 = 2E25 :
   L1184 = 2E25 :
   L1185 = 2E25 :
   L1186 = 2E25 :
   L1187 = 2E25 :
   L1188 = 2E25 : 2E1C
   L1189 = 2E28 :
    L119 = 2123 :
   L1190 = 2E2A :
   L1191 = 2E2C :
   L1192 = 2E2F :
   L1193 = 2E31 :
   L1194 = 2E34 :
   L1195 = 2E37 : 2E2C
   L1196 = 2E3A :
   L1197 = 2E3D :
   L1198 = 2E3D : 2E34
   L1199 = 2E40 :
     L12 = 2013 :
    L120 = 2129 :
   L1200 = 2E42 :
   L1201 = 2E44 :
   L1202 = 2E47 :
   L1203 = 2E49 :
   L1204 = 2E4C :
   L1205 = 2E4F : 2E44
   L1206 = 2E52 :
   L1207 = 2E55 :
   L1208 = 2E55 : 2E4C
   L1209 = 2E58 :
    L121 = 212C :
   L1210 = 2E5A :
   L1211 = 2E5C :
   L1212 = 2E5F :
   L1213 = 2E61 :
   L1214 = 2E64 :
   L1215 = 2E67 : 2E5C
   L1216 = 2E6A :
   L1217 = 2E6D :
   L1218 = 2E6D :
   L1219 = 2E6D : 2E64
    L122 = 212E :
   L1220 = 2E70 :
   L1221 = 2E7D :
   L1222 = 2E83 :
   L1223 = 2E86 :
   L1224 = 2E88 :
   L1225 = 2E8B :
   L1226 = 2E8E : 2E83
   L1227 = 2E91 :
   L1228 = 2E94 :
   L1229 = 2E94 : 2E8B
    L123 = 2131 :
   L1230 = 2E97 :
   L1231 = 2EA2 :
   L1232 = 2EA8 :
   L1233 = 2EAB :
   L1234 = 2EAD :
   L1235 = 2EB0 :
   L1236 = 2EB3 : 2EA8
   L1237 = 2EB6 :
   L1238 = 2EB9 :
   L1239 = 2EB9 : 2EB0
    L124 = 2134 : 2129
   L1240 = 2EBC :
   L1241 = 2EC9 :
   L1242 = 2ECF :
   L1243 = 2ED2 :
   L1244 = 2ED4 :
   L1245 = 2ED7 :
   L1246 = 2EDA : 2ECF
   L1247 = 2EDD :
   L1248 = 2EE0 :
   L1249 = 2EE0 :
    L125 = 2137 :
   L1250 = 2EE0 : 2ED7
   L1251 = 2EE3 :
   L1252 = 2EE6 :
   L1253 = 2EF3 :
   L1254 = 2EF5 :
   L1255 = 2EFC :
   L1256 = 2EFF :
   L1257 = 2F01 :
   L1258 = 2F04 :
   L1259 = 2F07 : 2EFC
    L126 = 213A :
   L1260 = 2F0A :
   L1261 = 2F0D :
   L1262 = 2F0D : 2F04
   L1263 = 2F10 :
   L1264 = 2F13 :
   L1265 = 2F1E :
   L1266 = 2F24 :
   L1267 = 2F27 :
   L1268 = 2F29 :
   L1269 = 2F2C :
    L127 = 213A : 2131
   L1270 = 2F2F : 2F24
   L1271 = 2F32 :
   L1272 = 2F35 :
   L1273 = 2F35 : 2F2C
   L1274 = 2F38 :
   L1275 = 2F3B :
   L1276 = 2F48 :
   L1277 = 2F4E :
   L1278 = 2F51 :
   L1279 = 2F53 :
    L128 = 213C :
   L1280 = 2F56 :
   L1281 = 2F59 : 2F4E
   L1282 = 2F5C :
   L1283 = 2F5F :
   L1284 = 2F5F :
   L1285 = 2F5F : 2F56
   L1286 = 2F62 :
   L1287 = 2F6A :
   L1288 = 2F6C :
   L1289 = 2F73 :
    L129 = 213F :
   L1290 = 2F76 :
   L1291 = 2F78 :
   L1292 = 2F7B :
   L1293 = 2F7E : 2F73
   L1294 = 2F81 :
   L1295 = 2F84 :
   L1296 = 2F84 : 2F7B
   L1297 = 2F87 :
   L1298 = 2F92 :
   L1299 = 2F98 :
     L13 = 2016 :
    L130 = 214C :
   L1300 = 2F9B :
   L1301 = 2F9D :
   L1302 = 2FA0 :
   L1303 = 2FA3 : 2F98
   L1304 = 2FA6 :
   L1305 = 2FA9 :
   L1306 = 2FA9 : 2FA0
   L1307 = 2FAC :
   L1308 = 2FB9 :
   L1309 = 2FBF :
    L131 = 2152 :
   L1310 = 2FC2 :
   L1311 = 2FC4 :
   L1312 = 2FC7 :
   L1313 = 2FCA : 2FBF
   L1314 = 2FCD :
   L1315 = 2FD0 :
   L1316 = 2FD0 :
   L1317 = 2FD0 :
   L1318 = 2FD0 :
   L1319 = 2FD0 :
    L132 = 2155 :
   L1320 = 2FD0 : 2FC7
   L1321 = 2FD3 :
   L1322 = 2FD6 :
   L1323 = 2FD8 :
   L1324 = 2FDA :
   L1325 = 2FDC :
   L1326 = 2FDF :
   L1327 = 2FE1 :
   L1328 = 2FE4 :
   L1329 = 2FE7 : 2FDC
    L133 = 2157 :
   L1330 = 2FEA :
   L1331 = 2FED :
   L1332 = 2FED : 2FE4
   L1333 = 2FF0 :
   L1334 = 2FF3 :
   L1335 = 2FF5 :
   L1336 = 2FF7 :
   L1337 = 2FF9 :
   L1338 = 2FFC :
   L1339 = 2FFE :
    L134 = 215A :
   L1340 = 3001 :
   L1341 = 3004 : 2FF9
   L1342 = 3007 :
   L1343 = 300A :
   L1344 = 300A : 3001
   L1345 = 300D :
   L1346 = 3010 :
   L1347 = 3012 :
   L1348 = 3014 :
   L1349 = 3016 :
    L135 = 215D : 2152
   L1350 = 3019 :
   L1351 = 301B :
   L1352 = 301E :
   L1353 = 3021 : 3016
   L1354 = 3024 :
   L1355 = 3027 :
   L1356 = 3027 :
   L1357 = 3027 : 301E
   L1358 = 302A :
   L1359 = 302E :
    L136 = 2160 :
   L1360 = 3032 :
   L1361 = 303D :
   L1362 = 3043 :
   L1363 = 3046 :
   L1364 = 3048 :
   L1365 = 304B :
   L1366 = 304E : 3043
   L1367 = 3051 :
   L1368 = 3054 :
   L1369 = 3054 : 304B
    L137 = 2163 :
   L1370 = 3057 :
   L1371 = 305B :
   L1372 = 305F :
   L1373 = 3068 :
   L1374 = 306E :
   L1375 = 3071 :
   L1376 = 3073 :
   L1377 = 3076 :
   L1378 = 3079 : 306E
   L1379 = 307C :
    L138 = 2163 :
   L1380 = 307F :
   L1381 = 307F : 3076
   L1382 = 3082 :
   L1383 = 3086 :
   L1384 = 308A :
   L1385 = 3095 :
   L1386 = 309B :
   L1387 = 309E :
   L1388 = 30A0 :
   L1389 = 30A3 :
    L139 = 2163 : 215A
   L1390 = 30A6 : 309B
   L1391 = 30A9 :
   L1392 = 30AC :
   L1393 = 30AC :
   L1394 = 30AC : 30A3
   L1395 = 30AF :
   L1396 = 30B2 :
   L1397 = 30B6 :
   L1398 = 30BC :
   L1399 = 30BE :
     L14 = 2019 :
    L140 = 2166 :
   L1400 = 30C5 :
   L1401 = 30C8 :
   L1402 = 30CA :
   L1403 = 30CD :
   L1404 = 30D0 : 30C5
   L1405 = 30D3 :
   L1406 = 30D6 :
   L1407 = 30D6 : 30CD
   L1408 = 30D9 :
   L1409 = 30DC :
    L141 = 216E :
   L1410 = 30E0 :
   L1411 = 30E2 :
   L1412 = 30E8 :
   L1413 = 30EB :
   L1414 = 30ED :
   L1415 = 30F0 :
   L1416 = 30F3 : 30E8
   L1417 = 30F6 :
   L1418 = 30F9 :
   L1419 = 30F9 : 30F0
    L142 = 2170 :
   L1420 = 30FC :
   L1421 = 30FF :
   L1422 = 3103 :
   L1423 = 3105 :
   L1424 = 310B :
   L1425 = 310E :
   L1426 = 3110 :
   L1427 = 3113 :
   L1428 = 3116 : 310B
   L1429 = 3119 :
    L143 = 2177 :
   L1430 = 311C :
   L1431 = 311C :
   L1432 = 311C : 3113
   L1433 = 311F :
   L1434 = 3121 :
   L1435 = 3123 :
   L1436 = 3129 :
   L1437 = 312B :
   L1438 = 3132 :
   L1439 = 3135 :
    L144 = 217A :
   L1440 = 3137 :
   L1441 = 313A :
   L1442 = 313D : 3132
   L1443 = 3140 :
   L1444 = 3143 :
   L1445 = 3143 : 313A
   L1446 = 3146 :
   L1447 = 3148 :
   L1448 = 314A :
   L1449 = 314C :
    L145 = 217C :
   L1450 = 3152 :
   L1451 = 3155 :
   L1452 = 3157 :
   L1453 = 315A :
   L1454 = 315D : 3152
   L1455 = 3160 :
   L1456 = 3163 :
   L1457 = 3163 : 315A
   L1458 = 3166 :
   L1459 = 3168 :
    L146 = 217F :
   L1460 = 316A :
   L1461 = 316C :
   L1462 = 3172 :
   L1463 = 3175 :
   L1464 = 3177 :
   L1465 = 317A :
   L1466 = 317D : 3172
   L1467 = 3180 :
   L1468 = 3183 :
   L1469 = 3183 :
    L147 = 2182 : 2177
   L1470 = 3183 :
   L1471 = 3183 :
   L1472 = 3183 :
   L1473 = 3183 : 317A
   L1474 = 3186 :
   L1475 = 318B :
   L1476 = 318D :
   L1477 = 3190 :
   L1478 = 3192 :
   L1479 = 3195 :
    L148 = 2185 :
   L1480 = 3198 : 318D
   L1481 = 319B :
   L1482 = 319E :
   L1483 = 319E : 3195
   L1484 = 31A1 :
   L1485 = 31A6 :
   L1486 = 31A8 :
   L1487 = 31AB :
   L1488 = 31AD :
   L1489 = 31B0 :
    L149 = 2188 :
   L1490 = 31B3 : 31A8
   L1491 = 31B6 :
   L1492 = 31B9 :
   L1493 = 31B9 : 31B0
   L1494 = 31BC :
   L1495 = 31C1 :
   L1496 = 31C3 :
   L1497 = 31C6 :
   L1498 = 31C8 :
   L1499 = 31CB :
     L15 = 2019 :
    L150 = 2188 : 217F
   L1500 = 31CE : 31C3
   L1501 = 31D1 :
   L1502 = 31D4 :
   L1503 = 31D4 :
   L1504 = 31D4 : 31CB
   L1505 = 31D7 :
   L1506 = 31E5 :
   L1507 = 31EB :
   L1508 = 31EE :
   L1509 = 31F0 :
    L151 = 218B :
   L1510 = 31F3 :
   L1511 = 31F6 : 31EB
   L1512 = 31F9 :
   L1513 = 31FC :
   L1514 = 31FC : 31F3
   L1515 = 31FF :
   L1516 = 320B :
   L1517 = 3211 :
   L1518 = 3214 :
   L1519 = 3216 :
    L152 = 2196 :
   L1520 = 3219 :
   L1521 = 321C : 3211
   L1522 = 321F :
   L1523 = 3222 :
   L1524 = 3222 : 3219
   L1525 = 3225 :
   L1526 = 3233 :
   L1527 = 3239 :
   L1528 = 323C :
   L1529 = 323E :
    L153 = 219C :
   L1530 = 3241 :
   L1531 = 3244 : 3239
   L1532 = 3247 :
   L1533 = 324A :
   L1534 = 324A :
   L1535 = 324A : 3241
   L1536 = 324D :
   L1537 = 3250 :
   L1538 = 325E :
   L1539 = 3260 :
    L154 = 219F :
   L1540 = 3267 :
   L1541 = 326A :
   L1542 = 326C :
   L1543 = 326F :
   L1544 = 3272 : 3267
   L1545 = 3275 :
   L1546 = 3278 :
   L1547 = 3278 : 326F
   L1548 = 327B :
   L1549 = 327E :
    L155 = 21A1 :
   L1550 = 328A :
   L1551 = 3290 :
   L1552 = 3293 :
   L1553 = 3295 :
   L1554 = 3298 :
   L1555 = 329B : 3290
   L1556 = 329E :
   L1557 = 32A1 :
   L1558 = 32A1 : 3298
   L1559 = 32A4 :
    L156 = 21A4 :
   L1560 = 32A7 :
   L1561 = 32B5 :
   L1562 = 32BB :
   L1563 = 32BE :
   L1564 = 32C0 :
   L1565 = 32C3 :
   L1566 = 32C6 : 32BB
   L1567 = 32C9 :
   L1568 = 32CC :
   L1569 = 32CC :
    L157 = 21A7 : 219C
   L1570 = 32CC : 32C3
   L1571 = 32CF :
   L1572 = 32DD :
   L1573 = 32DF :
   L1574 = 32E6 :
   L1575 = 32E9 :
   L1576 = 32EB :
   L1577 = 32EE :
   L1578 = 32F1 : 32E6
   L1579 = 32F4 :
    L158 = 21AA :
   L1580 = 32F7 :
   L1581 = 32F7 : 32EE
   L1582 = 32FA :
   L1583 = 3306 :
   L1584 = 330C :
   L1585 = 330F :
   L1586 = 3311 :
   L1587 = 3314 :
   L1588 = 3317 : 330C
   L1589 = 331A :
    L159 = 21AD :
   L1590 = 331D :
   L1591 = 331D : 3314
   L1592 = 3320 :
   L1593 = 332E :
   L1594 = 3334 :
   L1595 = 3337 :
   L1596 = 3339 :
   L1597 = 333C :
   L1598 = 333F : 3334
   L1599 = 3342 :
     L16 = 201C :
    L160 = 21AD : 21A4
   L1600 = 3345 :
   L1601 = 3345 :
   L1602 = 3345 :
   L1603 = 3345 :
   L1604 = 3345 :
   L1605 = 3345 : 333C
   L1606 = 3348 :
   L1607 = 334A :
   L1608 = 334C :
   L1609 = 334F :
    L161 = 21B0 :
   L1610 = 3351 :
   L1611 = 3354 :
   L1612 = 3357 : 334C
   L1613 = 335A :
   L1614 = 335D :
   L1615 = 335D : 3354
   L1616 = 3360 :
   L1617 = 3362 :
   L1618 = 3364 :
   L1619 = 3367 :
    L162 = 21BD :
   L1620 = 3369 :
   L1621 = 336C :
   L1622 = 336F : 3364
   L1623 = 3372 :
   L1624 = 3375 :
   L1625 = 3375 : 336C
   L1626 = 3378 :
   L1627 = 337A :
   L1628 = 337C :
   L1629 = 337F :
    L163 = 21C3 :
   L1630 = 3381 :
   L1631 = 3384 :
   L1632 = 3387 : 337C
   L1633 = 338A :
   L1634 = 338D :
   L1635 = 338D :
   L1636 = 338D : 3384
   L1637 = 3390 :
   L1638 = 339D :
   L1639 = 33A3 :
    L164 = 21C6 :
   L1640 = 33A6 :
   L1641 = 33A8 :
   L1642 = 33AB :
   L1643 = 33AE : 33A3
   L1644 = 33B1 :
   L1645 = 33B4 :
   L1646 = 33B4 : 33AB
   L1647 = 33B7 :
   L1648 = 33C2 :
   L1649 = 33C8 :
    L165 = 21C8 :
   L1650 = 33CB :
   L1651 = 33CD :
   L1652 = 33D0 :
   L1653 = 33D3 : 33C8
   L1654 = 33D6 :
   L1655 = 33D9 :
   L1656 = 33D9 : 33D0
   L1657 = 33DC :
   L1658 = 33E9 :
   L1659 = 33EF :
    L166 = 21CB :
   L1660 = 33F2 :
   L1661 = 33F4 :
   L1662 = 33F7 :
   L1663 = 33FA : 33EF
   L1664 = 33FD :
   L1665 = 3400 :
   L1666 = 3400 :
   L1667 = 3400 : 33F7
   L1668 = 3403 :
   L1669 = 3406 :
    L167 = 21CE : 21C3
   L1670 = 3413 :
   L1671 = 3415 :
   L1672 = 341C :
   L1673 = 341F :
   L1674 = 3421 :
   L1675 = 3424 :
   L1676 = 3427 : 341C
   L1677 = 342A :
   L1678 = 342D :
   L1679 = 342D : 3424
    L168 = 21D1 :
   L1680 = 3430 :
   L1681 = 3433 :
   L1682 = 343E :
   L1683 = 3444 :
   L1684 = 3447 :
   L1685 = 3449 :
   L1686 = 344C :
   L1687 = 344F : 3444
   L1688 = 3452 :
   L1689 = 3455 :
    L169 = 21D4 :
   L1690 = 3455 : 344C
   L1691 = 3458 :
   L1692 = 345B :
   L1693 = 3468 :
   L1694 = 346E :
   L1695 = 3471 :
   L1696 = 3473 :
   L1697 = 3476 :
   L1698 = 3479 : 346E
   L1699 = 347C :
     L17 = 201F :
    L170 = 21D4 :
   L1700 = 347F :
   L1701 = 347F :
   L1702 = 347F : 3476
   L1703 = 3482 :
   L1704 = 348A :
   L1705 = 348C :
   L1706 = 3493 :
   L1707 = 3496 :
   L1708 = 3498 :
   L1709 = 349B :
    L171 = 21D4 :
   L1710 = 349E : 3493
   L1711 = 34A1 :
   L1712 = 34A4 :
   L1713 = 34A4 : 349B
   L1714 = 34A7 :
   L1715 = 34B2 :
   L1716 = 34B8 :
   L1717 = 34BB :
   L1718 = 34BD :
   L1719 = 34C0 :
    L172 = 21D4 :
   L1720 = 34C3 : 34B8
   L1721 = 34C6 :
   L1722 = 34C9 :
   L1723 = 34C9 : 34C0
   L1724 = 34CC :
   L1725 = 34D9 :
   L1726 = 34DF :
   L1727 = 34E2 :
   L1728 = 34E4 :
   L1729 = 34E7 :
    L173 = 21D4 :
   L1730 = 34EA : 34DF
   L1731 = 34ED :
   L1732 = 34F0 :
   L1733 = 34F0 :
   L1734 = 34F0 :
   L1735 = 34F0 :
   L1736 = 34F0 :
   L1737 = 34F0 : 34E7
   L1738 = 34F3 :
   L1739 = 34F5 :
    L174 = 21D4 : 21CB
   L1740 = 34F7 :
   L1741 = 34FA :
   L1742 = 34FC :
   L1743 = 34FF :
   L1744 = 3502 : 34F7
   L1745 = 3505 :
   L1746 = 3508 :
   L1747 = 3508 : 34FF
   L1748 = 350B :
   L1749 = 350D :
    L175 = 21D6 :
   L1750 = 350F :
   L1751 = 3512 :
   L1752 = 3514 :
   L1753 = 3517 :
   L1754 = 351A : 350F
   L1755 = 351D :
   L1756 = 3520 :
   L1757 = 3520 : 3517
   L1758 = 3523 :
   L1759 = 3525 :
    L176 = 21D9 :
   L1760 = 3527 :
   L1761 = 352A :
   L1762 = 352C :
   L1763 = 352F :
   L1764 = 3532 : 3527
   L1765 = 3535 :
   L1766 = 3538 :
   L1767 = 3538 :
   L1768 = 3538 : 352F
   L1769 = 353B :
    L177 = 21DB :
   L1770 = 3548 :
   L1771 = 354E :
   L1772 = 3551 :
   L1773 = 3553 :
   L1774 = 3556 :
   L1775 = 3559 : 354E
   L1776 = 355C :
   L1777 = 355F :
   L1778 = 355F : 3556
   L1779 = 3562 :
    L178 = 21DD :
   L1780 = 356D :
   L1781 = 3573 :
   L1782 = 3576 :
   L1783 = 3578 :
   L1784 = 357B :
   L1785 = 357E : 3573
   L1786 = 3581 :
   L1787 = 3584 :
   L1788 = 3584 : 357B
   L1789 = 3587 :
    L179 = 21DF :
   L1790 = 3594 :
   L1791 = 359A :
   L1792 = 359D :
   L1793 = 359F :
   L1794 = 35A2 :
   L1795 = 35A5 : 359A
   L1796 = 35A8 :
   L1797 = 35AB :
   L1798 = 35AB :
   L1799 = 35AB : 35A2
     L18 = 2022 :
    L180 = 21E2 :
   L1800 = 35AE :
   L1801 = 35B1 :
   L1802 = 35BE :
   L1803 = 35C0 :
   L1804 = 35C7 :
   L1805 = 35CA :
   L1806 = 35CC :
   L1807 = 35CF :
   L1808 = 35D2 : 35C7
   L1809 = 35D5 :
    L181 = 21E4 :
   L1810 = 35D8 :
   L1811 = 35D8 : 35CF
   L1812 = 35DB :
   L1813 = 35DE :
   L1814 = 35E9 :
   L1815 = 35EF :
   L1816 = 35F2 :
   L1817 = 35F4 :
   L1818 = 35F7 :
   L1819 = 35FA : 35EF
    L182 = 21E7 :
   L1820 = 35FD :
   L1821 = 3600 :
   L1822 = 3600 : 35F7
   L1823 = 3603 :
   L1824 = 3606 :
   L1825 = 3613 :
   L1826 = 3619 :
   L1827 = 361C :
   L1828 = 361E :
   L1829 = 3621 :
    L183 = 21EA : 21DF
   L1830 = 3624 : 3619
   L1831 = 3627 :
   L1832 = 362A :
   L1833 = 362A :
   L1834 = 362A : 3621
   L1835 = 362D :
   L1836 = 3635 :
   L1837 = 3637 :
   L1838 = 363E :
   L1839 = 3641 :
    L184 = 21ED :
   L1840 = 3643 :
   L1841 = 3646 :
   L1842 = 3649 : 363E
   L1843 = 364C :
   L1844 = 364F :
   L1845 = 364F : 3646
   L1846 = 3652 :
   L1847 = 365D :
   L1848 = 3663 :
   L1849 = 3666 :
    L185 = 21F0 :
   L1850 = 3668 :
   L1851 = 366B :
   L1852 = 366E : 3663
   L1853 = 3671 :
   L1854 = 3674 :
   L1855 = 3674 : 366B
   L1856 = 3677 :
   L1857 = 3684 :
   L1858 = 368A :
   L1859 = 368D :
    L186 = 21F0 : 21E7
   L1860 = 368F :
   L1861 = 3692 :
   L1862 = 3695 : 368A
   L1863 = 3698 :
   L1864 = 369B :
   L1865 = 369B :
   L1866 = 369B :
   L1867 = 369B :
   L1868 = 369B :
   L1869 = 369B : 3692
    L187 = 21F2 :
   L1870 = 369E :
   L1871 = 36A1 :
   L1872 = 36A3 :
   L1873 = 36A5 :
   L1874 = 36A7 :
   L1875 = 36AA :
   L1876 = 36AC :
   L1877 = 36AF :
   L1878 = 36B2 : 36A7
   L1879 = 36B5 :
    L188 = 21F5 :
   L1880 = 36B8 :
   L1881 = 36B8 : 36AF
   L1882 = 36BB :
   L1883 = 36BE :
   L1884 = 36C0 :
   L1885 = 36C2 :
   L1886 = 36C4 :
   L1887 = 36C7 :
   L1888 = 36C9 :
   L1889 = 36CC :
    L189 = 21F7 :
   L1890 = 36CF : 36C4
   L1891 = 36D2 :
   L1892 = 36D5 :
   L1893 = 36D5 : 36CC
   L1894 = 36D8 :
   L1895 = 36DB :
   L1896 = 36DD :
   L1897 = 36DF :
   L1898 = 36E1 :
   L1899 = 36E4 :
     L19 = 2022 :
    L190 = 21F9 :
   L1900 = 36E6 :
   L1901 = 36E9 :
   L1902 = 36EC : 36E1
   L1903 = 36EF :
   L1904 = 36F2 :
   L1905 = 36F2 :
   L1906 = 36F2 : 36E9
   L1907 = 36F5 :
   L1908 = 36F9 :
   L1909 = 36FD :
    L191 = 21FB :
   L1910 = 3708 :
   L1911 = 370E :
   L1912 = 3711 :
   L1913 = 3713 :
   L1914 = 3716 :
   L1915 = 3719 : 370E
   L1916 = 371C :
   L1917 = 371F :
   L1918 = 371F : 3716
   L1919 = 3722 :
    L192 = 21FE :
   L1920 = 3726 :
   L1921 = 372A :
   L1922 = 3733 :
   L1923 = 3739 :
   L1924 = 373C :
   L1925 = 373E :
   L1926 = 3741 :
   L1927 = 3744 : 3739
   L1928 = 3747 :
   L1929 = 374A :
    L193 = 2200 :
   L1930 = 374A : 3741
   L1931 = 374D :
   L1932 = 3751 :
   L1933 = 3755 :
   L1934 = 3760 :
   L1935 = 3766 :
   L1936 = 3769 :
   L1937 = 376B :
   L1938 = 376E :
   L1939 = 3771 : 3766
    L194 = 2203 :
   L1940 = 3774 :
   L1941 = 3777 :
   L1942 = 3777 :
   L1943 = 3777 : 376E
   L1944 = 377A :
   L1945 = 377D :
   L1946 = 3781 :
   L1947 = 3787 :
   L1948 = 3789 :
   L1949 = 3790 :
    L195 = 2206 : 21FB
   L1950 = 3793 :
   L1951 = 3795 :
   L1952 = 3798 :
   L1953 = 379B : 3790
   L1954 = 379E :
   L1955 = 37A1 :
   L1956 = 37A1 : 3798
   L1957 = 37A4 :
   L1958 = 37A7 :
   L1959 = 37AB :
    L196 = 2209 :
   L1960 = 37AD :
   L1961 = 37B3 :
   L1962 = 37B6 :
   L1963 = 37B8 :
   L1964 = 37BB :
   L1965 = 37BE : 37B3
   L1966 = 37C1 :
   L1967 = 37C4 :
   L1968 = 37C4 : 37BB
   L1969 = 37C7 :
    L197 = 220C :
   L1970 = 37CA :
   L1971 = 37CE :
   L1972 = 37D0 :
   L1973 = 37D6 :
   L1974 = 37D9 :
   L1975 = 37DB :
   L1976 = 37DE :
   L1977 = 37E1 : 37D6
   L1978 = 37E4 :
   L1979 = 37E7 :
    L198 = 220C : 2203
   L1980 = 37E7 :
   L1981 = 37E7 : 37DE
   L1982 = 37EA :
   L1983 = 37EC :
   L1984 = 37EE :
   L1985 = 37F4 :
   L1986 = 37F6 :
   L1987 = 37FD :
   L1988 = 3800 :
   L1989 = 3802 :
    L199 = 220E :
   L1990 = 3805 :
   L1991 = 3808 : 37FD
   L1992 = 380B :
   L1993 = 380E :
   L1994 = 380E : 3805
   L1995 = 3811 :
   L1996 = 3813 :
   L1997 = 3815 :
   L1998 = 3817 :
   L1999 = 381D :
      L2 = 2009 :
     L20 = 2022 :
    L200 = 2211 :
   L2000 = 3820 :
   L2001 = 3822 :
   L2002 = 3825 :
   L2003 = 3828 : 381D
   L2004 = 382B :
   L2005 = 382E :
   L2006 = 382E : 3825
   L2007 = 3831 :
   L2008 = 3833 :
   L2009 = 3835 :
    L201 = 2213 :
   L2010 = 3837 :
   L2011 = 383D :
   L2012 = 3840 :
   L2013 = 3842 :
   L2014 = 3845 :
   L2015 = 3848 : 383D
   L2016 = 384B :
   L2017 = 384E :
   L2018 = 384E :
   L2019 = 384E :
    L202 = 2215 :
   L2020 = 384E :
   L2021 = 384E :
   L2022 = 384E : 3845
   L2023 = 3851 :
   L2024 = 3856 :
   L2025 = 3858 :
   L2026 = 385B :
   L2027 = 385D :
   L2028 = 3860 :
   L2029 = 3863 : 3858
    L203 = 2217 :
   L2030 = 3866 :
   L2031 = 3869 :
   L2032 = 3869 : 3860
   L2033 = 386C :
   L2034 = 3871 :
   L2035 = 3873 :
   L2036 = 3876 :
   L2037 = 3878 :
   L2038 = 387B :
   L2039 = 387E : 3873
    L204 = 221A :
   L2040 = 3881 :
   L2041 = 3884 :
   L2042 = 3884 : 387B
   L2043 = 3887 :
   L2044 = 388C :
   L2045 = 388E :
   L2046 = 3891 :
   L2047 = 3893 :
   L2048 = 3896 :
   L2049 = 3899 : 388E
    L205 = 221C :
   L2050 = 389C :
   L2051 = 389F :
   L2052 = 389F :
   L2053 = 389F : 3896
   L2054 = 38A2 :
   L2055 = 38B0 :
   L2056 = 38B6 :
   L2057 = 38B9 :
   L2058 = 38BB :
   L2059 = 38BE :
    L206 = 221F :
   L2060 = 38C1 : 38B6
   L2061 = 38C4 :
   L2062 = 38C7 :
   L2063 = 38C7 : 38BE
   L2064 = 38CA :
   L2065 = 38D6 :
   L2066 = 38DC :
   L2067 = 38DF :
   L2068 = 38E1 :
   L2069 = 38E4 :
    L207 = 2222 : 2217
   L2070 = 38E7 : 38DC
   L2071 = 38EA :
   L2072 = 38ED :
   L2073 = 38ED : 38E4
   L2074 = 38F0 :
   L2075 = 38FE :
   L2076 = 3904 :
   L2077 = 3907 :
   L2078 = 3909 :
   L2079 = 390C :
    L208 = 2225 :
   L2080 = 390F : 3904
   L2081 = 3912 :
   L2082 = 3915 :
   L2083 = 3915 :
   L2084 = 3915 : 390C
   L2085 = 3918 :
   L2086 = 391B :
   L2087 = 3929 :
   L2088 = 392B :
   L2089 = 3932 :
    L209 = 2228 :
   L2090 = 3935 :
   L2091 = 3937 :
   L2092 = 393A :
   L2093 = 393D : 3932
   L2094 = 3940 :
   L2095 = 3943 :
   L2096 = 3943 : 393A
   L2097 = 3946 :
   L2098 = 3949 :
   L2099 = 3955 :
     L21 = 2022 :
    L210 = 2228 :
   L2100 = 395B :
   L2101 = 395E :
   L2102 = 3960 :
   L2103 = 3963 :
   L2104 = 3966 : 395B
   L2105 = 3969 :
   L2106 = 396C :
   L2107 = 396C : 3963
   L2108 = 396F :
   L2109 = 3972 :
    L211 = 2228 : 221F
   L2110 = 3980 :
   L2111 = 3986 :
   L2112 = 3989 :
   L2113 = 398B :
   L2114 = 398E :
   L2115 = 3991 : 3986
   L2116 = 3994 :
   L2117 = 3997 :
   L2118 = 3997 :
   L2119 = 3997 : 398E
    L212 = 222B :
   L2120 = 399A :
   L2121 = 39A8 :
   L2122 = 39AA :
   L2123 = 39B1 :
   L2124 = 39B4 :
   L2125 = 39B6 :
   L2126 = 39B9 :
   L2127 = 39BC : 39B1
   L2128 = 39BF :
   L2129 = 39C2 :
    L213 = 222F :
   L2130 = 39C2 : 39B9
   L2131 = 39C5 :
   L2132 = 39D1 :
   L2133 = 39D7 :
   L2134 = 39DA :
   L2135 = 39DC :
   L2136 = 39DF :
   L2137 = 39E2 : 39D7
   L2138 = 39E5 :
   L2139 = 39E8 :
    L214 = 2233 :
   L2140 = 39E8 : 39DF
   L2141 = 39EB :
   L2142 = 39F9 :
   L2143 = 39FF :
   L2144 = 3A02 :
   L2145 = 3A04 :
   L2146 = 3A07 :
   L2147 = 3A0A : 39FF
   L2148 = 3A0D :
   L2149 = 3A10 :
    L215 = 223E :
   L2150 = 3A10 :
   L2151 = 3A10 :
   L2152 = 3A10 :
   L2153 = 3A10 :
   L2154 = 3A10 : 3A07
   L2155 = 3A12 :
   L2156 = 3A14 :
   L2157 = 3A16 :
   L2158 = 3A19 :
   L2159 = 3A1B :
    L216 = 2244 :
   L2160 = 3A1E :
   L2161 = 3A21 : 3A16
   L2162 = 3A24 :
   L2163 = 3A27 :
   L2164 = 3A27 : 3A1E
   L2165 = 3A29 :
   L2166 = 3A2B :
   L2167 = 3A2D :
   L2168 = 3A30 :
   L2169 = 3A32 :
    L217 = 2247 :
   L2170 = 3A35 :
   L2171 = 3A38 : 3A2D
   L2172 = 3A3B :
   L2173 = 3A3E :
   L2174 = 3A3E : 3A35
   L2175 = 3A40 :
   L2176 = 3A42 :
   L2177 = 3A44 :
   L2178 = 3A47 :
   L2179 = 3A49 :
    L218 = 2249 :
   L2180 = 3A4C :
   L2181 = 3A4F : 3A44
   L2182 = 3A52 :
   L2183 = 3A55 :
   L2184 = 3A55 :
   L2185 = 3A55 : 3A4C
   L2186 = 3A58 :
   L2187 = 3A65 :
   L2188 = 3A6B :
   L2189 = 3A6E :
    L219 = 224C :
   L2190 = 3A70 :
   L2191 = 3A73 :
   L2192 = 3A76 : 3A6B
   L2193 = 3A79 :
   L2194 = 3A7C :
   L2195 = 3A7C : 3A73
   L2196 = 3A7F :
   L2197 = 3A8A :
   L2198 = 3A90 :
   L2199 = 3A93 :
     L22 = 2022 :
    L220 = 224F : 2244
   L2200 = 3A95 :
   L2201 = 3A98 :
   L2202 = 3A9B : 3A90
   L2203 = 3A9E :
   L2204 = 3AA1 :
   L2205 = 3AA1 : 3A98
   L2206 = 3AA4 :
   L2207 = 3AB1 :
   L2208 = 3AB7 :
   L2209 = 3ABA :
    L221 = 2252 :
   L2210 = 3ABC :
   L2211 = 3ABF :
   L2212 = 3AC2 : 3AB7
   L2213 = 3AC5 :
   L2214 = 3AC8 :
   L2215 = 3AC8 :
   L2216 = 3AC8 : 3ABF
   L2217 = 3ACA :
   L2218 = 3ACD :
   L2219 = 3ADA :
    L222 = 2255 :
   L2220 = 3ADC :
   L2221 = 3AE3 :
   L2222 = 3AE6 :
   L2223 = 3AE8 :
   L2224 = 3AEB :
   L2225 = 3AEE : 3AE3
   L2226 = 3AF1 :
   L2227 = 3AF4 :
   L2228 = 3AF4 : 3AEB
   L2229 = 3AF6 :
    L223 = 2255 : 224C
   L2230 = 3AF9 :
   L2231 = 3B04 :
   L2232 = 3B0A :
   L2233 = 3B0D :
   L2234 = 3B0F :
   L2235 = 3B12 :
   L2236 = 3B15 : 3B0A
   L2237 = 3B18 :
   L2238 = 3B1B :
   L2239 = 3B1B : 3B12
    L224 = 2258 :
   L2240 = 3B1D :
   L2241 = 3B20 :
   L2242 = 3B2D :
   L2243 = 3B33 :
   L2244 = 3B36 :
   L2245 = 3B38 :
   L2246 = 3B3B :
   L2247 = 3B3E : 3B33
   L2248 = 3B41 :
   L2249 = 3B44 :
    L225 = 225C :
   L2250 = 3B44 :
   L2251 = 3B44 : 3B3B
   L2252 = 3B47 :
   L2253 = 3B4F :
   L2254 = 3B51 :
   L2255 = 3B58 :
   L2256 = 3B5B :
   L2257 = 3B5D :
   L2258 = 3B60 :
   L2259 = 3B63 : 3B58
    L226 = 2260 :
   L2260 = 3B66 :
   L2261 = 3B69 :
   L2262 = 3B69 : 3B60
   L2263 = 3B6C :
   L2264 = 3B77 :
   L2265 = 3B7D :
   L2266 = 3B80 :
   L2267 = 3B82 :
   L2268 = 3B85 :
   L2269 = 3B88 : 3B7D
    L227 = 2269 :
   L2270 = 3B8B :
   L2271 = 3B8E :
   L2272 = 3B8E : 3B85
   L2273 = 3B91 :
   L2274 = 3B9E :
   L2275 = 3BA4 :
   L2276 = 3BA7 :
   L2277 = 3BA9 :
   L2278 = 3BAC :
   L2279 = 3BAF : 3BA4
    L228 = 226F :
   L2280 = 3BB2 :
   L2281 = 3BB5 :
   L2282 = 3BB5 :
   L2283 = 3BB5 : 3BAC
   L2284 = 3BB8 :
   L2285 = 3BBB :
   L2286 = 3BBB :
   L2287 = 3BBD :
   L2288 = 3BBF :
   L2289 = 3BC0 :
    L229 = 2272 :
   L2290 = 3BC0 : 3BB5
     L23 = 2022 :
    L230 = 2274 :
    L231 = 2277 :
    L232 = 227A : 226F
    L233 = 227D :
    L234 = 2280 :
    L235 = 2280 : 2277
    L236 = 2283 :
    L237 = 2287 :
    L238 = 228B :
    L239 = 2296 :
     L24 = 2022 : 201F
    L240 = 229C :
    L241 = 229F :
    L242 = 22A1 :
    L243 = 22A4 :
    L244 = 22A7 : 229C
    L245 = 22AA :
    L246 = 22AD :
    L247 = 22AD :
    L248 = 22AD : 22A4
    L249 = 22AF :
     L25 = 2022 :
    L250 = 22B2 :
    L251 = 22B6 :
    L252 = 22BC :
    L253 = 22BE :
    L254 = 22C5 :
    L255 = 22C8 :
    L256 = 22CA :
    L257 = 22CD :
    L258 = 22D0 : 22C5
    L259 = 22D3 :
     L26 = 2024 :
    L260 = 22D6 :
    L261 = 22D6 : 22CD
    L262 = 22D8 :
    L263 = 22DB :
    L264 = 22DF :
    L265 = 22E1 :
    L266 = 22E7 :
    L267 = 22EA :
    L268 = 22EC :
    L269 = 22EF :
     L27 = 202A :
    L270 = 22F2 : 22E7
    L271 = 22F5 :
    L272 = 22F8 :
    L273 = 22F8 : 22EF
    L274 = 22FA :
    L275 = 22FD :
    L276 = 2301 :
    L277 = 2303 :
    L278 = 2309 :
    L279 = 230C :
     L28 = 202A :
    L280 = 230E :
    L281 = 2311 :
    L282 = 2314 : 2309
    L283 = 2317 :
    L284 = 231A :
    L285 = 231A :
    L286 = 231A : 2311
    L287 = 231D :
    L288 = 231F :
    L289 = 2321 :
     L29 = 202A :
    L290 = 2327 :
    L291 = 2329 :
    L292 = 2330 :
    L293 = 2333 :
    L294 = 2335 :
    L295 = 2338 :
    L296 = 233B : 2330
    L297 = 233E :
    L298 = 2341 :
    L299 = 2341 : 2338
      L3 = 2009 :
     L30 = 202C :
    L300 = 2344 :
    L301 = 2346 :
    L302 = 2348 :
    L303 = 234A :
    L304 = 2350 :
    L305 = 2353 :
    L306 = 2355 :
    L307 = 2358 :
    L308 = 235B : 2350
    L309 = 235E :
     L31 = 202F :
    L310 = 2361 :
    L311 = 2361 : 2358
    L312 = 2364 :
    L313 = 2366 :
    L314 = 2368 :
    L315 = 236A :
    L316 = 2370 :
    L317 = 2373 :
    L318 = 2375 :
    L319 = 2378 :
     L32 = 202F :
    L320 = 237B : 2370
    L321 = 237E :
    L322 = 2381 :
    L323 = 2381 :
    L324 = 2381 :
    L325 = 2381 :
    L326 = 2381 :
    L327 = 2381 : 2378
    L328 = 2383 :
    L329 = 2388 :
     L33 = 202F :
    L330 = 238A :
    L331 = 238D :
    L332 = 238F :
    L333 = 2392 :
    L334 = 2395 : 238A
    L335 = 2398 :
    L336 = 239B :
    L337 = 239B : 2392
    L338 = 239D :
    L339 = 23A2 :
     L34 = 202F :
    L340 = 23A4 :
    L341 = 23A7 :
    L342 = 23A9 :
    L343 = 23AC :
    L344 = 23AF : 23A4
    L345 = 23B2 :
    L346 = 23B5 :
    L347 = 23B5 : 23AC
    L348 = 23B7 :
    L349 = 23BC :
     L35 = 202F :
    L350 = 23BE :
    L351 = 23C1 :
    L352 = 23C3 :
    L353 = 23C6 :
    L354 = 23C9 : 23BE
    L355 = 23CC :
    L356 = 23CF :
    L357 = 23CF :
    L358 = 23CF : 23C6
    L359 = 23D2 :
     L36 = 202F :
    L360 = 23E0 :
    L361 = 23E6 :
    L362 = 23E9 :
    L363 = 23EB :
    L364 = 23EE :
    L365 = 23F1 : 23E6
    L366 = 23F4 :
    L367 = 23F7 :
    L368 = 23F7 : 23EE
    L369 = 23FA :
     L37 = 202F :
    L370 = 2406 :
    L371 = 240C :
    L372 = 240F :
    L373 = 2411 :
    L374 = 2414 :
    L375 = 2417 : 240C
    L376 = 241A :
    L377 = 241D :
    L378 = 241D : 2414
    L379 = 2420 :
     L38 = 202F :
    L380 = 242E :
    L381 = 2434 :
    L382 = 2437 :
    L383 = 2439 :
    L384 = 243C :
    L385 = 243F : 2434
    L386 = 2442 :
    L387 = 2445 :
    L388 = 2445 :
    L389 = 2445 : 243C
     L39 = 202F :
    L390 = 2447 :
    L391 = 244A :
    L392 = 2458 :
    L393 = 245A :
    L394 = 2461 :
    L395 = 2464 :
    L396 = 2466 :
    L397 = 2469 :
    L398 = 246C : 2461
    L399 = 246F :
      L4 = 2009 :
     L40 = 2031 :
    L400 = 2472 :
    L401 = 2472 : 2469
    L402 = 2474 :
    L403 = 2477 :
    L404 = 2483 :
    L405 = 2489 :
    L406 = 248C :
    L407 = 248E :
    L408 = 2491 :
    L409 = 2494 : 2489
     L41 = 2033 :
    L410 = 2497 :
    L411 = 249A :
    L412 = 249A : 2491
    L413 = 249C :
    L414 = 249F :
    L415 = 24AD :
    L416 = 24B3 :
    L417 = 24B6 :
    L418 = 24B8 :
    L419 = 24BB :
     L42 = 2035 :
    L420 = 24BE : 24B3
    L421 = 24C1 :
    L422 = 24C4 :
    L423 = 24C4 :
    L424 = 24C4 : 24BB
    L425 = 24C7 :
    L426 = 24D5 :
    L427 = 24D7 :
    L428 = 24DE :
    L429 = 24E1 :
     L43 = 2038 :
    L430 = 24E3 :
    L431 = 24E6 :
    L432 = 24E9 : 24DE
    L433 = 24EC :
    L434 = 24EF :
    L435 = 24EF : 24E6
    L436 = 24F2 :
    L437 = 24FE :
    L438 = 2504 :
    L439 = 2507 :
     L44 = 203A :
    L440 = 2509 :
    L441 = 250C :
    L442 = 250F : 2504
    L443 = 2512 :
    L444 = 2515 :
    L445 = 2515 : 250C
    L446 = 2518 :
    L447 = 2526 :
    L448 = 252C :
    L449 = 252F :
     L45 = 203D :
    L450 = 2531 :
    L451 = 2534 :
    L452 = 2537 : 252C
    L453 = 253A :
    L454 = 253D :
    L455 = 253D :
    L456 = 253D :
    L457 = 253D :
    L458 = 253D :
    L459 = 253D : 2534
     L46 = 2040 : 2035
    L460 = 253F :
    L461 = 2541 :
    L462 = 2543 :
    L463 = 2546 :
    L464 = 2548 :
    L465 = 254B :
    L466 = 254E : 2543
    L467 = 2551 :
    L468 = 2554 :
    L469 = 2554 : 254B
     L47 = 2043 :
    L470 = 2556 :
    L471 = 2558 :
    L472 = 255A :
    L473 = 255D :
    L474 = 255F :
    L475 = 2562 :
    L476 = 2565 : 255A
    L477 = 2568 :
    L478 = 256B :
    L479 = 256B : 2562
     L48 = 2046 :
    L480 = 256D :
    L481 = 256F :
    L482 = 2571 :
    L483 = 2574 :
    L484 = 2576 :
    L485 = 2579 :
    L486 = 257C : 2571
    L487 = 257F :
    L488 = 2582 :
    L489 = 2582 :
     L49 = 2046 : 203D
    L490 = 2582 : 2579
    L491 = 2585 :
    L492 = 2592 :
    L493 = 2598 :
    L494 = 259B :
    L495 = 259D :
    L496 = 25A0 :
    L497 = 25A3 : 2598
    L498 = 25A6 :
    L499 = 25A9 :
      L5 = 2009 :
     L50 = 2048 :
    L500 = 25A9 : 25A0
    L501 = 25AC :
    L502 = 25B7 :
    L503 = 25BD :
    L504 = 25C0 :
    L505 = 25C2 :
    L506 = 25C5 :
    L507 = 25C8 : 25BD
    L508 = 25CB :
    L509 = 25CE :
     L51 = 204A :
    L510 = 25CE : 25C5
    L511 = 25D1 :
    L512 = 25DE :
    L513 = 25E4 :
    L514 = 25E7 :
    L515 = 25E9 :
    L516 = 25EC :
    L517 = 25EF : 25E4
    L518 = 25F2 :
    L519 = 25F5 :
     L52 = 204C :
    L520 = 25F5 :
    L521 = 25F5 : 25EC
    L522 = 25F7 :
    L523 = 25FA :
    L524 = 2607 :
    L525 = 2609 :
    L526 = 2610 :
    L527 = 2613 :
    L528 = 2615 :
    L529 = 2618 :
     L53 = 204F :
    L530 = 261B : 2610
    L531 = 261E :
    L532 = 2621 :
    L533 = 2621 : 2618
    L534 = 2623 :
    L535 = 2626 :
    L536 = 2631 :
    L537 = 2637 :
    L538 = 263A :
    L539 = 263C :
     L54 = 2051 :
    L540 = 263F :
    L541 = 2642 : 2637
    L542 = 2645 :
    L543 = 2648 :
    L544 = 2648 : 263F
    L545 = 264A :
    L546 = 264D :
    L547 = 265A :
    L548 = 2660 :
    L549 = 2663 :
     L55 = 2054 :
    L550 = 2665 :
    L551 = 2668 :
    L552 = 266B : 2660
    L553 = 266E :
    L554 = 2671 :
    L555 = 2671 :
    L556 = 2671 : 2668
    L557 = 2674 :
    L558 = 267C :
    L559 = 267E :
     L56 = 2057 : 204C
    L560 = 2685 :
    L561 = 2688 :
    L562 = 268A :
    L563 = 268D :
    L564 = 2690 : 2685
    L565 = 2693 :
    L566 = 2696 :
    L567 = 2696 : 268D
    L568 = 2699 :
    L569 = 26A4 :
     L57 = 205A :
    L570 = 26AA :
    L571 = 26AD :
    L572 = 26AF :
    L573 = 26B2 :
    L574 = 26B5 : 26AA
    L575 = 26B8 :
    L576 = 26BB :
    L577 = 26BB : 26B2
    L578 = 26BE :
    L579 = 26CB :
     L58 = 205D :
    L580 = 26D1 :
    L581 = 26D4 :
    L582 = 26D6 :
    L583 = 26D9 :
    L584 = 26DC : 26D1
    L585 = 26DF :
    L586 = 26E2 :
    L587 = 26E2 :
    L588 = 26E2 :
    L589 = 26E2 :
     L59 = 205D : 2054
    L590 = 26E2 :
    L591 = 26E2 : 26D9
    L592 = 26E4 :
    L593 = 26E6 :
    L594 = 26E8 :
    L595 = 26EA :
    L596 = 26ED :
    L597 = 26EF :
    L598 = 26F2 :
    L599 = 26F5 : 26EA
      L6 = 2009 : 2003
     L60 = 205F :
    L600 = 26F8 :
    L601 = 26FB :
    L602 = 26FB : 26F2
    L603 = 26FD :
    L604 = 26FF :
    L605 = 2701 :
    L606 = 2703 :
    L607 = 2706 :
    L608 = 2708 :
    L609 = 270B :
     L61 = 2061 :
    L610 = 270E : 2703
    L611 = 2711 :
    L612 = 2714 :
    L613 = 2714 : 270B
    L614 = 2716 :
    L615 = 2718 :
    L616 = 271A :
    L617 = 271C :
    L618 = 271F :
    L619 = 2721 :
     L62 = 2063 :
    L620 = 2724 :
    L621 = 2727 : 271C
    L622 = 272A :
    L623 = 272D :
    L624 = 272D :
    L625 = 272D : 2724
    L626 = 2730 :
    L627 = 2734 :
    L628 = 2741 :
    L629 = 2747 :
     L63 = 2066 :
    L630 = 274A :
    L631 = 274C :
    L632 = 274F :
    L633 = 2752 : 2747
    L634 = 2755 :
    L635 = 2758 :
    L636 = 2758 : 274F
    L637 = 275B :
    L638 = 275F :
    L639 = 276A :
     L64 = 2068 :
    L640 = 2770 :
    L641 = 2773 :
    L642 = 2775 :
    L643 = 2778 :
    L644 = 277B : 2770
    L645 = 277E :
    L646 = 2781 :
    L647 = 2781 : 2778
    L648 = 2784 :
    L649 = 2788 :
     L65 = 206B :
    L650 = 2795 :
    L651 = 279B :
    L652 = 279E :
    L653 = 27A0 :
    L654 = 27A3 :
    L655 = 27A6 : 279B
    L656 = 27A9 :
    L657 = 27AC :
    L658 = 27AC :
    L659 = 27AC : 27A3
     L66 = 206E : 2063
    L660 = 27AE :
    L661 = 27B0 :
    L662 = 27B3 :
    L663 = 27C0 :
    L664 = 27C2 :
    L665 = 27C9 :
    L666 = 27CC :
    L667 = 27CE :
    L668 = 27D1 :
    L669 = 27D4 : 27C9
     L67 = 2071 :
    L670 = 27D7 :
    L671 = 27DA :
    L672 = 27DA : 27D1
    L673 = 27DC :
    L674 = 27DE :
    L675 = 27E1 :
    L676 = 27EC :
    L677 = 27F2 :
    L678 = 27F5 :
    L679 = 27F7 :
     L68 = 2074 :
    L680 = 27FA :
    L681 = 27FD : 27F2
    L682 = 2800 :
    L683 = 2803 :
    L684 = 2803 : 27FA
    L685 = 2805 :
    L686 = 2807 :
    L687 = 280A :
    L688 = 2817 :
    L689 = 281D :
     L69 = 2074 :
    L690 = 2820 :
    L691 = 2822 :
    L692 = 2825 :
    L693 = 2828 : 281D
    L694 = 282B :
    L695 = 282E :
    L696 = 282E :
    L697 = 282E : 2825
    L698 = 2831 :
    L699 = 2835 :
      L7 = 200B :
     L70 = 2074 : 206B
    L700 = 283D :
    L701 = 283F :
    L702 = 2846 :
    L703 = 2849 :
    L704 = 284B :
    L705 = 284E :
    L706 = 2851 : 2846
    L707 = 2854 :
    L708 = 2857 :
    L709 = 2857 : 284E
     L71 = 2077 :
    L710 = 285A :
    L711 = 285E :
    L712 = 2869 :
    L713 = 286F :
    L714 = 2872 :
    L715 = 2874 :
    L716 = 2877 :
    L717 = 287A : 286F
    L718 = 287D :
    L719 = 2880 :
     L72 = 2084 :
    L720 = 2880 : 2877
    L721 = 2883 :
    L722 = 2887 :
    L723 = 2894 :
    L724 = 289A :
    L725 = 289D :
    L726 = 289F :
    L727 = 28A2 :
    L728 = 28A5 : 289A
    L729 = 28A8 :
     L73 = 208A :
    L730 = 28AB :
    L731 = 28AB :
    L732 = 28AB :
    L733 = 28AB :
    L734 = 28AB :
    L735 = 28AB : 28A2
    L736 = 28AD :
    L737 = 28AF :
    L738 = 28B2 :
    L739 = 28B4 :
     L74 = 208D :
    L740 = 28B6 :
    L741 = 28B8 :
    L742 = 28BB :
    L743 = 28BD :
    L744 = 28C0 :
    L745 = 28C3 : 28B8
    L746 = 28C6 :
    L747 = 28C9 :
    L748 = 28C9 : 28C0
    L749 = 28CB :
     L75 = 208F :
    L750 = 28CD :
    L751 = 28D0 :
    L752 = 28D2 :
    L753 = 28D4 :
    L754 = 28D6 :
    L755 = 28D9 :
    L756 = 28DB :
    L757 = 28DE :
    L758 = 28E1 : 28D6
    L759 = 28E4 :
     L76 = 2092 :
    L760 = 28E7 :
    L761 = 28E7 : 28DE
    L762 = 28E9 :
    L763 = 28EB :
    L764 = 28EE :
    L765 = 28F0 :
    L766 = 28F2 :
    L767 = 28F4 :
    L768 = 28F7 :
    L769 = 28F9 :
     L77 = 2095 : 208A
    L770 = 28FC :
    L771 = 28FF : 28F4
    L772 = 2902 :
    L773 = 2905 :
    L774 = 2905 :
    L775 = 2905 : 28FC
    L776 = 2908 :
    L777 = 290C :
    L778 = 2910 :
    L779 = 2914 :
     L78 = 2098 :
    L780 = 291F :
    L781 = 2925 :
    L782 = 2928 :
    L783 = 292A :
    L784 = 292D :
    L785 = 2930 : 2925
    L786 = 2933 :
    L787 = 2936 :
    L788 = 2936 : 292D
    L789 = 2939 :
     L79 = 209B :
    L790 = 293D :
    L791 = 2941 :
    L792 = 2945 :
    L793 = 294E :
    L794 = 2954 :
    L795 = 2957 :
    L796 = 2959 :
    L797 = 295C :
    L798 = 295F : 2954
    L799 = 2962 :
      L8 = 200E :
     L80 = 209B :
    L800 = 2965 :
    L801 = 2965 : 295C
    L802 = 2968 :
    L803 = 296C :
    L804 = 2970 :
    L805 = 2974 :
    L806 = 297F :
    L807 = 2985 :
    L808 = 2988 :
    L809 = 298A :
     L81 = 209B : 2092
    L810 = 298D :
    L811 = 2990 : 2985
    L812 = 2993 :
    L813 = 2996 :
    L814 = 2996 :
    L815 = 2996 : 298D
    L816 = 2998 :
    L817 = 299A :
    L818 = 299D :
    L819 = 29A1 :
     L82 = 209E :
    L820 = 29A7 :
    L821 = 29A9 :
    L822 = 29B0 :
    L823 = 29B3 :
    L824 = 29B5 :
    L825 = 29B8 :
    L826 = 29BB : 29B0
    L827 = 29BE :
    L828 = 29C1 :
    L829 = 29C1 : 29B8
     L83 = 20A9 :
    L830 = 29C3 :
    L831 = 29C5 :
    L832 = 29C8 :
    L833 = 29CC :
    L834 = 29CE :
    L835 = 29D4 :
    L836 = 29D7 :
    L837 = 29D9 :
    L838 = 29DC :
    L839 = 29DF : 29D4
     L84 = 20AF :
    L840 = 29E2 :
    L841 = 29E5 :
    L842 = 29E5 : 29DC
    L843 = 29E7 :
    L844 = 29E9 :
    L845 = 29EC :
    L846 = 29F0 :
    L847 = 29F2 :
    L848 = 29F8 :
    L849 = 29FB :
     L85 = 20B2 :
    L850 = 29FD :
    L851 = 2A00 :
    L852 = 2A03 : 29F8
    L853 = 2A06 :
    L854 = 2A09 :
    L855 = 2A09 :
    L856 = 2A09 : 2A00
    L857 = 2A0C :
    L858 = 2A10 :
    L859 = 2A12 :
     L86 = 20B4 :
    L860 = 2A14 :
    L861 = 2A1A :
    L862 = 2A1C :
    L863 = 2A23 :
    L864 = 2A26 :
    L865 = 2A28 :
    L866 = 2A2B :
    L867 = 2A2E : 2A23
    L868 = 2A31 :
    L869 = 2A34 :
     L87 = 20B7 :
    L870 = 2A34 : 2A2B
    L871 = 2A37 :
    L872 = 2A3B :
    L873 = 2A3D :
    L874 = 2A3F :
    L875 = 2A41 :
    L876 = 2A47 :
    L877 = 2A4A :
    L878 = 2A4C :
    L879 = 2A4F :
     L88 = 20BA : 20AF
    L880 = 2A52 : 2A47
    L881 = 2A55 :
    L882 = 2A58 :
    L883 = 2A58 : 2A4F
    L884 = 2A5B :
    L885 = 2A5F :
    L886 = 2A61 :
    L887 = 2A63 :
    L888 = 2A65 :
    L889 = 2A6B :
     L89 = 20BD :
    L890 = 2A6E :
    L891 = 2A70 :
    L892 = 2A73 :
    L893 = 2A76 : 2A6B
    L894 = 2A79 :
    L895 = 2A7C :
    L896 = 2A7C :
    L897 = 2A7C :
    L898 = 2A7C :
    L899 = 2A7C :
      L9 = 200E :
     L90 = 20C0 :
    L900 = 2A7C : 2A73
    L901 = 2A7E :
    L902 = 2A80 :
    L903 = 2A85 :
    L904 = 2A87 :
    L905 = 2A8A :
    L906 = 2A8C :
    L907 = 2A8F :
    L908 = 2A92 : 2A87
    L909 = 2A95 :
     L91 = 20C0 :
    L910 = 2A98 :
    L911 = 2A98 : 2A8F
    L912 = 2A9A :
    L913 = 2A9C :
    L914 = 2AA1 :
    L915 = 2AA3 :
    L916 = 2AA6 :
    L917 = 2AA8 :
    L918 = 2AAB :
    L919 = 2AAE : 2AA3
     L92 = 20C0 : 20B7
    L920 = 2AB1 :
    L921 = 2AB4 :
    L922 = 2AB4 : 2AAB
    L923 = 2AB6 :
    L924 = 2AB8 :
    L925 = 2ABD :
    L926 = 2ABF :
    L927 = 2AC2 :
    L928 = 2AC4 :
    L929 = 2AC7 :
     L93 = 20C3 :
    L930 = 2ACA : 2ABF
    L931 = 2ACD :
    L932 = 2AD0 :
    L933 = 2AD0 :
    L934 = 2AD0 : 2AC7
    L935 = 2AD3 :
    L936 = 2AD7 :
    L937 = 2AE5 :
    L938 = 2AEB :
    L939 = 2AEE :
     L94 = 20D0 :
    L940 = 2AF0 :
    L941 = 2AF3 :
    L942 = 2AF6 : 2AEB
    L943 = 2AF9 :
    L944 = 2AFC :
    L945 = 2AFC : 2AF3
    L946 = 2AFF :
    L947 = 2B03 :
    L948 = 2B0F :
    L949 = 2B15 :
     L95 = 20D6 :
    L950 = 2B18 :
    L951 = 2B1A :
    L952 = 2B1D :
    L953 = 2B20 : 2B15
    L954 = 2B23 :
    L955 = 2B26 :
    L956 = 2B26 : 2B1D
    L957 = 2B29 :
    L958 = 2B2D :
    L959 = 2B3B :
     L96 = 20D9 :
    L960 = 2B41 :
    L961 = 2B44 :
    L962 = 2B46 :
    L963 = 2B49 :
    L964 = 2B4C : 2B41
    L965 = 2B4F :
    L966 = 2B52 :
    L967 = 2B52 :
    L968 = 2B52 : 2B49
    L969 = 2B54 :
     L97 = 20DB :
    L970 = 2B56 :
    L971 = 2B59 :
    L972 = 2B67 :
    L973 = 2B69 :
    L974 = 2B70 :
    L975 = 2B73 :
    L976 = 2B75 :
    L977 = 2B78 :
    L978 = 2B7B : 2B70
    L979 = 2B7E :
     L98 = 20DE :
    L980 = 2B81 :
    L981 = 2B81 : 2B78
    L982 = 2B83 :
    L983 = 2B85 :
    L984 = 2B88 :
    L985 = 2B94 :
    L986 = 2B9A :
    L987 = 2B9D :
    L988 = 2B9F :
    L989 = 2BA2 :
     L99 = 20E1 : 20D6
    L990 = 2BA5 : 2B9A
    L991 = 2BA8 :
    L992 = 2BAB :
    L993 = 2BAB : 2BA2
    L994 = 2BAD :
    L995 = 2BAF :
    L996 = 2BB2 :
    L997 = 2BC0 :
    L998 = 2BC6 :
    L999 = 2BC9 :
   div16 = 3CC4 :
 div16_1 = 3CCD : 3CDC
 div16_2 = 3CDB : 3CD6
 div16_3 = 3CDC : 3CD9
 div16_8 = 3CE4 : 3D4B
div16_82 = 3CE9 : 3CF1
div16_83 = 3CF1 : 3CED
    div8 = 3CF5 : 3D18
  div8_1 = 3CFD : 3D08
 div8_16 = 3D0F :
div8_161 = 3D16 : 3D12
  div8_2 = 3D08 : 3D04
 getChar = 3BC6 : 3D20
getChar1 = 3BD4 : 3BCB
   mul16 = 3C48 :
 mul1632 = 3C77 :
mul16321 = 3C99 : 3C96
mul16322 = 3CA0 : 3C9D
  mul16S = 3CAA :
 mul16S1 = 3CB3 : 3CBF
 mul16S2 = 3CBE : 3CB8 3CBB
mul16_10 = 3C61 : 3D29
 mul16_8 = 3C6A :
 putBell = 3C20 :
 putCRLF = 3C07 : 3BE7 3D3A 3D62
 putChar = 3BFA : 3BF1 3C0A 3C0F 3C16 3C1E 3C22 3C43 3D57
putChar1 = 3BFB : 3C00
putErase = 3C14 :
 putHexA = 3C2F : 3C26 3C2A
putHexA1 = 3C38 : 3C34
putHexA2 = 3C43 : 3C3F
putHexHL = 3C24 :
  putMsg = 3BDE :
putSpace = 3BF8 : 3C19
 putStr1 = 3BEC : 3BF4
 putStr2 = 3BF6 : 3BEF
    read = 3D1C :
   read1 = 3D20 : 3D23 3D30 3D33
   read2 = 3D35 : 3D27
   start = 2000 :
  writeA = 3D66 : 3D5F
 writeHL = 3D3E : 3D37 3D6A
writeHL1 = 3D49 : 3D44 3D52
writeHL2 = 3D54 : 3D5A
writeHL3 = 3D55 : 3D47
writeLineA = 3D5F : 202C 203A 2051 2068 208F 20B4 20DB 2107 212E 2157 217C 21A1
                : 21C8 21E4 2200 221C 2249 2274 22A1 22CA 22EC 230E 2335 2355
                : 2375 238F 23A9 23C3 23EB 2411 2439 2466 248E 24B8 24E3 2509
                : 2531 2548 255F 2576 259D 25C2 25E9 2615 263C 2665 268A 26AF
                : 26D6 26EF 2708 2721 274C 2775 27A0 27CE 27F7 2822 284B 2874
                : 289F 28BD 28DB 28F9 292A 2959 298A 29B5 29D9 29FD 2A28 2A4C
                : 2A70 2A8C 2AA8 2AC4 2AF0 2B1A 2B46 2B75 2B9F 2BCB 2BFA 2C24
                : 2C50 2C69 2C82 2C9B 2CC6 2CEF 2D1A 2D48 2D71 2D9C 2DC5 2DEE
                : 2E19 2E31 2E49 2E61 2E88 2EAD 2ED4 2F01 2F29 2F53 2F78 2F9D
                : 2FC4 2FE1 2FFE 301B 3048 3073 30A0 30CA 30ED 3110 3137 3157
                : 3177 3192 31AD 31C8 31F0 3216 323E 326C 3295 32C0 32EB 3311
                : 3339 3351 3369 3381 33A8 33CD 33F4 3421 3449 3473 3498 34BD
                : 34E4 34FC 3514 352C 3553 3578 359F 35CC 35F4 361E 3643 3668
                : 368F 36AC 36C9 36E6 3713 373E 376B 3795 37B8 37DB 3802 3822
                : 3842 385D 3878 3893 38BB 38E1 3909 3937 3960 398B 39B6 39DC
                : 3A04 3A1B 3A32 3A49 3A70 3A95 3ABC 3AE8 3B0F 3B38 3B5D 3B82
                : 3BA9
writeLineHL = 3D37 : 2043 205A 2071 2098 20BD 20E4 2110 2137 2160 2185 21AA 21D1
                : 21ED 2209 2225 2252 227D 22AA 22D3 22F5 2317 233E 235E 237E
                : 2398 23B2 23CC 23F4 241A 2442 246F 2497 24C1 24EC 2512 253A
                : 2551 2568 257F 25A6 25CB 25F2 261E 2645 266E 2693 26B8 26DF
                : 26F8 2711 272A 2755 277E 27A9 27D7 2800 282B 2854 287D 28A8
                : 28C6 28E4 2902 2933 2962 2993 29BE 29E2 2A06 2A31 2A55 2A79
                : 2A95 2AB1 2ACD 2AF9 2B23 2B4F 2B7E 2BA8 2BD4 2C03 2C2D 2C59
                : 2C72 2C8B 2CA4 2CCF 2CF8 2D23 2D51 2D7A 2DA5 2DCE 2DF7 2E22
                : 2E3A 2E52 2E6A 2E91 2EB6 2EDD 2F0A 2F32 2F5C 2F81 2FA6 2FCD
                : 2FEA 3007 3024 3051 307C 30A9 30D3 30F6 3119 3140 3160 3180
                : 319B 31B6 31D1 31F9 321F 3247 3275 329E 32C9 32F4 331A 3342
                : 335A 3372 338A 33B1 33D6 33FD 342A 3452 347C 34A1 34C6 34ED
                : 3505 351D 3535 355C 3581 35A8 35D5 35FD 3627 364C 3671 3698
                : 36B5 36D2 36EF 371C 3747 3774 379E 37C1 37E4 380B 382B 384B
                : 3866 3881 389C 38C4 38EA 3912 3940 3969 3994 39BF 39E5 3A0D
                : 3A24 3A3B 3A52 3A79 3A9E 3AC5 3AF1 3B18 3B41 3B66 3B8B 3BB2
                :
writeLineStr = 3BE4 : 3BB8
writeStr = 3BEB : 3BDF 3BE4
