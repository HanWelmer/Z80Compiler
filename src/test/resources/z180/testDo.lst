2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testDo.j(0) /* Program to test generated Z80 assembler code */
2009             L3:
2009                     ;;testDo.j(1) class TestDo {
2009             L4:
2009                     ;class TestDo []
2009             L5:
2009                     ;;testDo.j(2)   private static byte b = 1;
2009             L6:
2009 3E 01               LD    A,1
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testDo.j(3)   private static word i = 12;
200E             L9:
200E 3E 0C               LD    A,12
2010             L10:
2010 32 01 50            LD    (05001H),A
2013             L11:
2013                     ;;testDo.j(4)   private static word p = 12;
2013             L12:
2013 3E 0C               LD    A,12
2015             L13:
2015 32 03 50            LD    (05003H),A
2018             L14:
2018 C3 1B 20            JP    L17
201B             L15:
201B                     ;;testDo.j(5) 
201B             L16:
201B                     ;;testDo.j(6)   public static void main() {
201B             L17:
201B                     ;method TestDo.main [public, static] void ()
201B             L18:
201B DD E5               PUSH  IX
201D             L19:
201D DD 21 00 00         LD    IX,0x0000
2021 DD 39               ADD   IX,SP
2023             L20:
2023 3B                  DEC   SP
2024 3B                  DEC   SP
2025 3B                  DEC   SP
2026 3B                  DEC   SP
2027             L21:
2027                     ;;testDo.j(7)     println(0);
2027             L22:
2027 3E 00               LD    A,0
2029             L23:
2029 CD 7F 28            CALL  writeLineA
202C             L24:
202C                     ;;testDo.j(8)   
202C             L25:
202C                     ;;testDo.j(9)     /************************/
202C             L26:
202C                     ;;testDo.j(10)     // global variable within do scope
202C             L27:
202C                     ;;testDo.j(11)     println (b);
202C             L28:
202C 3A 00 50            LD    A,(05000H)
202F             L29:
202F CD 7F 28            CALL  writeLineA
2032             L30:
2032                     ;;testDo.j(12)     b++;
2032             L31:
2032 2A 00 50            LD    HL,(05000H)
2035 34                  INC   (HL)
2036             L32:
2036                     ;;testDo.j(13)     do {
2036             L33:
2036                     ;;testDo.j(14)       word j = 1001;
2036             L34:
2036 21 E9 03            LD    HL,1001
2039             L35:
2039 DD 75 FE            LD    (IX - 2),L
203C DD 74 FF            LD    (IX - 1),H
203F             L36:
203F                     ;;testDo.j(15)       byte c = b;
203F             L37:
203F 3A 00 50            LD    A,(05000H)
2042             L38:
2042 DD 77 FD            LD    (IX - 3),A
2045             L39:
2045                     ;;testDo.j(16)       byte d = c;
2045             L40:
2045 DD 7E FD            LD    A,(IX - 3)
2048             L41:
2048 DD 77 FC            LD    (IX - 4),A
204B             L42:
204B                     ;;testDo.j(17)       b++;
204B             L43:
204B 2A 00 50            LD    HL,(05000H)
204E 34                  INC   (HL)
204F             L44:
204F                     ;;testDo.j(18)       println (c);
204F             L45:
204F DD 7E FD            LD    A,(IX - 3)
2052             L46:
2052 CD 7F 28            CALL  writeLineA
2055             L47:
2055                     ;;testDo.j(19)     } while (b<2);
2055             L48:
2055 3A 00 50            LD    A,(05000H)
2058             L49:
2058 D6 02               SUB   A,2
205A             L50:
205A DA 36 20            JP    C,L33
205D             L51:
205D                     ;;testDo.j(20)   
205D             L52:
205D                     ;;testDo.j(21)     /************************/
205D             L53:
205D                     ;;testDo.j(22)     // constant - constant
205D             L54:
205D                     ;;testDo.j(23)     // not relevant
205D             L55:
205D                     ;;testDo.j(24)   
205D             L56:
205D                     ;;testDo.j(25)     /************************/
205D             L57:
205D                     ;;testDo.j(26)     // constant - acc
205D             L58:
205D                     ;;testDo.j(27)     // byte - byte
205D             L59:
205D                     ;;testDo.j(28)     do { println (b); b++; } while (103 == b+100);
205D             L60:
205D 3A 00 50            LD    A,(05000H)
2060             L61:
2060 CD 7F 28            CALL  writeLineA
2063             L62:
2063 2A 00 50            LD    HL,(05000H)
2066 34                  INC   (HL)
2067             L63:
2067 3A 00 50            LD    A,(05000H)
206A             L64:
206A C6 64               ADD   A,100
206C             L65:
206C D6 67               SUB   A,103
206E             L66:
206E CA 5D 20            JP    Z,L60
2071             L67:
2071                     ;;testDo.j(29)     do { println (b); b++; } while (106 != b+100);
2071             L68:
2071 3A 00 50            LD    A,(05000H)
2074             L69:
2074 CD 7F 28            CALL  writeLineA
2077             L70:
2077 2A 00 50            LD    HL,(05000H)
207A 34                  INC   (HL)
207B             L71:
207B 3A 00 50            LD    A,(05000H)
207E             L72:
207E C6 64               ADD   A,100
2080             L73:
2080 D6 6A               SUB   A,106
2082             L74:
2082 C2 71 20            JP    NZ,L68
2085             L75:
2085                     ;;testDo.j(30)     do { println (b); b++; } while (108 >  b+100);
2085             L76:
2085 3A 00 50            LD    A,(05000H)
2088             L77:
2088 CD 7F 28            CALL  writeLineA
208B             L78:
208B 2A 00 50            LD    HL,(05000H)
208E 34                  INC   (HL)
208F             L79:
208F 3A 00 50            LD    A,(05000H)
2092             L80:
2092 C6 64               ADD   A,100
2094             L81:
2094 D6 6C               SUB   A,108
2096             L82:
2096 DA 85 20            JP    C,L76
2099             L83:
2099                     ;;testDo.j(31)     do { println (b); b++; } while (109 >= b+100);
2099             L84:
2099 3A 00 50            LD    A,(05000H)
209C             L85:
209C CD 7F 28            CALL  writeLineA
209F             L86:
209F 2A 00 50            LD    HL,(05000H)
20A2 34                  INC   (HL)
20A3             L87:
20A3 3A 00 50            LD    A,(05000H)
20A6             L88:
20A6 C6 64               ADD   A,100
20A8             L89:
20A8 D6 6D               SUB   A,109
20AA             L90:
20AA DA 99 20            JP    C,L84
20AD CA 99 20            JP    Z,L84
20B0             L91:
20B0                     ;;testDo.j(32)     p=10;
20B0             L92:
20B0 3E 0A               LD    A,10
20B2             L93:
20B2 32 03 50            LD    (05003H),A
20B5             L94:
20B5                     ;;testDo.j(33)     do { println (p); p++; b--; } while (108 <  b+100);
20B5             L95:
20B5 2A 03 50            LD    HL,(05003H)
20B8             L96:
20B8 CD 57 28            CALL  writeLineHL
20BB             L97:
20BB 2A 03 50            LD    HL,(05003H)
20BE 23                  INC   HL
20BF 22 03 50            LD    (05003H),HL
20C2             L98:
20C2 2A 00 50            LD    HL,(05000H)
20C5 35                  DEC   (HL)
20C6             L99:
20C6 3A 00 50            LD    A,(05000H)
20C9             L100:
20C9 C6 64               ADD   A,100
20CB             L101:
20CB D6 6C               SUB   A,108
20CD             L102:
20CD 28 03               JR    Z,$+3
20CF DA B5 20            JP    NC,L95
20D2             L103:
20D2                     ;;testDo.j(34)     do { println (p); p++; b--; } while (107 <= b+100);
20D2             L104:
20D2 2A 03 50            LD    HL,(05003H)
20D5             L105:
20D5 CD 57 28            CALL  writeLineHL
20D8             L106:
20D8 2A 03 50            LD    HL,(05003H)
20DB 23                  INC   HL
20DC 22 03 50            LD    (05003H),HL
20DF             L107:
20DF 2A 00 50            LD    HL,(05000H)
20E2 35                  DEC   (HL)
20E3             L108:
20E3 3A 00 50            LD    A,(05000H)
20E6             L109:
20E6 C6 64               ADD   A,100
20E8             L110:
20E8 D6 6B               SUB   A,107
20EA             L111:
20EA D2 D2 20            JP    NC,L104
20ED             L112:
20ED                     ;;testDo.j(35)   
20ED             L113:
20ED                     ;;testDo.j(36)     // constant - acc
20ED             L114:
20ED                     ;;testDo.j(37)     // byte - integer
20ED             L115:
20ED                     ;;testDo.j(38)     i=14;
20ED             L116:
20ED 3E 0E               LD    A,14
20EF             L117:
20EF 32 01 50            LD    (05001H),A
20F2             L118:
20F2                     ;;testDo.j(39)     do { println (i); i++; } while (15 == i+0);
20F2             L119:
20F2 2A 01 50            LD    HL,(05001H)
20F5             L120:
20F5 CD 57 28            CALL  writeLineHL
20F8             L121:
20F8 2A 01 50            LD    HL,(05001H)
20FB 23                  INC   HL
20FC 22 01 50            LD    (05001H),HL
20FF             L122:
20FF 2A 01 50            LD    HL,(05001H)
2102             L123:
2102 11 00 00            LD    DE,0
2105 19                  ADD   HL,DE
2106             L124:
2106 3E 0F               LD    A,15
2108             L125:
2108 5F                  LD    E,A
2109 16 00               LD    D,0
210B B7                  OR    A
210C ED 52               SBC   HL,DE
210E             L126:
210E CA F2 20            JP    Z,L119
2111             L127:
2111                     ;;testDo.j(40)     do { println (i); i++; } while (18 != i+0);
2111             L128:
2111 2A 01 50            LD    HL,(05001H)
2114             L129:
2114 CD 57 28            CALL  writeLineHL
2117             L130:
2117 2A 01 50            LD    HL,(05001H)
211A 23                  INC   HL
211B 22 01 50            LD    (05001H),HL
211E             L131:
211E 2A 01 50            LD    HL,(05001H)
2121             L132:
2121 11 00 00            LD    DE,0
2124 19                  ADD   HL,DE
2125             L133:
2125 3E 12               LD    A,18
2127             L134:
2127 5F                  LD    E,A
2128 16 00               LD    D,0
212A B7                  OR    A
212B ED 52               SBC   HL,DE
212D             L135:
212D C2 11 21            JP    NZ,L128
2130             L136:
2130                     ;;testDo.j(41)     do { println (i); i++; } while (20 >  i+0);
2130             L137:
2130 2A 01 50            LD    HL,(05001H)
2133             L138:
2133 CD 57 28            CALL  writeLineHL
2136             L139:
2136 2A 01 50            LD    HL,(05001H)
2139 23                  INC   HL
213A 22 01 50            LD    (05001H),HL
213D             L140:
213D 2A 01 50            LD    HL,(05001H)
2140             L141:
2140 11 00 00            LD    DE,0
2143 19                  ADD   HL,DE
2144             L142:
2144 3E 14               LD    A,20
2146             L143:
2146 5F                  LD    E,A
2147 16 00               LD    D,0
2149 B7                  OR    A
214A ED 52               SBC   HL,DE
214C             L144:
214C 28 03               JR    Z,$+3
214E DA 30 21            JP    NC,L137
2151             L145:
2151                     ;;testDo.j(42)     do { println (i); i++; } while (21 >= i+0);
2151             L146:
2151 2A 01 50            LD    HL,(05001H)
2154             L147:
2154 CD 57 28            CALL  writeLineHL
2157             L148:
2157 2A 01 50            LD    HL,(05001H)
215A 23                  INC   HL
215B 22 01 50            LD    (05001H),HL
215E             L149:
215E 2A 01 50            LD    HL,(05001H)
2161             L150:
2161 11 00 00            LD    DE,0
2164 19                  ADD   HL,DE
2165             L151:
2165 3E 15               LD    A,21
2167             L152:
2167 5F                  LD    E,A
2168 16 00               LD    D,0
216A B7                  OR    A
216B ED 52               SBC   HL,DE
216D             L153:
216D D2 51 21            JP    NC,L146
2170             L154:
2170                     ;;testDo.j(43)     p=22;
2170             L155:
2170 3E 16               LD    A,22
2172             L156:
2172 32 03 50            LD    (05003H),A
2175             L157:
2175                     ;;testDo.j(44)     do { println (p); p++; i--; } while (20 <  i+0);
2175             L158:
2175 2A 03 50            LD    HL,(05003H)
2178             L159:
2178 CD 57 28            CALL  writeLineHL
217B             L160:
217B 2A 03 50            LD    HL,(05003H)
217E 23                  INC   HL
217F 22 03 50            LD    (05003H),HL
2182             L161:
2182 2A 01 50            LD    HL,(05001H)
2185 2B                  DEC   HL
2186 22 01 50            LD    (05001H),HL
2189             L162:
2189 2A 01 50            LD    HL,(05001H)
218C             L163:
218C 11 00 00            LD    DE,0
218F 19                  ADD   HL,DE
2190             L164:
2190 3E 14               LD    A,20
2192             L165:
2192 5F                  LD    E,A
2193 16 00               LD    D,0
2195 B7                  OR    A
2196 ED 52               SBC   HL,DE
2198             L166:
2198 DA 75 21            JP    C,L158
219B             L167:
219B                     ;;testDo.j(45)     do { println (p); p++; i--; } while (19 <= i+0);
219B             L168:
219B 2A 03 50            LD    HL,(05003H)
219E             L169:
219E CD 57 28            CALL  writeLineHL
21A1             L170:
21A1 2A 03 50            LD    HL,(05003H)
21A4 23                  INC   HL
21A5 22 03 50            LD    (05003H),HL
21A8             L171:
21A8 2A 01 50            LD    HL,(05001H)
21AB 2B                  DEC   HL
21AC 22 01 50            LD    (05001H),HL
21AF             L172:
21AF 2A 01 50            LD    HL,(05001H)
21B2             L173:
21B2 11 00 00            LD    DE,0
21B5 19                  ADD   HL,DE
21B6             L174:
21B6 3E 13               LD    A,19
21B8             L175:
21B8 5F                  LD    E,A
21B9 16 00               LD    D,0
21BB B7                  OR    A
21BC ED 52               SBC   HL,DE
21BE             L176:
21BE DA 9B 21            JP    C,L168
21C1 CA 9B 21            JP    Z,L168
21C4             L177:
21C4                     ;;testDo.j(46)   
21C4             L178:
21C4                     ;;testDo.j(47)     // constant - acc
21C4             L179:
21C4                     ;;testDo.j(48)     // integer - byte
21C4             L180:
21C4                     ;;testDo.j(49)     // not relevant
21C4             L181:
21C4                     ;;testDo.j(50)   
21C4             L182:
21C4                     ;;testDo.j(51)     // constant - acc
21C4             L183:
21C4                     ;;testDo.j(52)     // integer - integer
21C4             L184:
21C4                     ;;testDo.j(53)     i=p;
21C4             L185:
21C4 2A 03 50            LD    HL,(05003H)
21C7             L186:
21C7 22 01 50            LD    (05001H),HL
21CA             L187:
21CA                     ;;testDo.j(54)     do { println (i); i++; } while (1027 == i+1000);
21CA             L188:
21CA 2A 01 50            LD    HL,(05001H)
21CD             L189:
21CD CD 57 28            CALL  writeLineHL
21D0             L190:
21D0 2A 01 50            LD    HL,(05001H)
21D3 23                  INC   HL
21D4 22 01 50            LD    (05001H),HL
21D7             L191:
21D7 2A 01 50            LD    HL,(05001H)
21DA             L192:
21DA 11 E8 03            LD    DE,1000
21DD 19                  ADD   HL,DE
21DE             L193:
21DE 11 03 04            LD    DE,1027
21E1 B7                  OR    A
21E2 ED 52               SBC   HL,DE
21E4             L194:
21E4 CA CA 21            JP    Z,L188
21E7             L195:
21E7                     ;;testDo.j(55)     do { println (i); i++; } while (1029 != i+1000);
21E7             L196:
21E7 2A 01 50            LD    HL,(05001H)
21EA             L197:
21EA CD 57 28            CALL  writeLineHL
21ED             L198:
21ED 2A 01 50            LD    HL,(05001H)
21F0 23                  INC   HL
21F1 22 01 50            LD    (05001H),HL
21F4             L199:
21F4 2A 01 50            LD    HL,(05001H)
21F7             L200:
21F7 11 E8 03            LD    DE,1000
21FA 19                  ADD   HL,DE
21FB             L201:
21FB 11 05 04            LD    DE,1029
21FE B7                  OR    A
21FF ED 52               SBC   HL,DE
2201             L202:
2201 C2 E7 21            JP    NZ,L196
2204             L203:
2204                     ;;testDo.j(56)     do { println (i); i++; } while (1031 >  i+1000);
2204             L204:
2204 2A 01 50            LD    HL,(05001H)
2207             L205:
2207 CD 57 28            CALL  writeLineHL
220A             L206:
220A 2A 01 50            LD    HL,(05001H)
220D 23                  INC   HL
220E 22 01 50            LD    (05001H),HL
2211             L207:
2211 2A 01 50            LD    HL,(05001H)
2214             L208:
2214 11 E8 03            LD    DE,1000
2217 19                  ADD   HL,DE
2218             L209:
2218 11 07 04            LD    DE,1031
221B B7                  OR    A
221C ED 52               SBC   HL,DE
221E             L210:
221E DA 04 22            JP    C,L204
2221             L211:
2221                     ;;testDo.j(57)     do { println (i); i++; } while (1032 >= i+1000);
2221             L212:
2221 2A 01 50            LD    HL,(05001H)
2224             L213:
2224 CD 57 28            CALL  writeLineHL
2227             L214:
2227 2A 01 50            LD    HL,(05001H)
222A 23                  INC   HL
222B 22 01 50            LD    (05001H),HL
222E             L215:
222E 2A 01 50            LD    HL,(05001H)
2231             L216:
2231 11 E8 03            LD    DE,1000
2234 19                  ADD   HL,DE
2235             L217:
2235 11 08 04            LD    DE,1032
2238 B7                  OR    A
2239 ED 52               SBC   HL,DE
223B             L218:
223B DA 21 22            JP    C,L212
223E CA 21 22            JP    Z,L212
2241             L219:
2241                     ;;testDo.j(58)     p=i;
2241             L220:
2241 2A 01 50            LD    HL,(05001H)
2244             L221:
2244 22 03 50            LD    (05003H),HL
2247             L222:
2247                     ;;testDo.j(59)     do { println (p); p++; i--; } while (1031 <  i+1000);
2247             L223:
2247 2A 03 50            LD    HL,(05003H)
224A             L224:
224A CD 57 28            CALL  writeLineHL
224D             L225:
224D 2A 03 50            LD    HL,(05003H)
2250 23                  INC   HL
2251 22 03 50            LD    (05003H),HL
2254             L226:
2254 2A 01 50            LD    HL,(05001H)
2257 2B                  DEC   HL
2258 22 01 50            LD    (05001H),HL
225B             L227:
225B 2A 01 50            LD    HL,(05001H)
225E             L228:
225E 11 E8 03            LD    DE,1000
2261 19                  ADD   HL,DE
2262             L229:
2262 11 07 04            LD    DE,1031
2265 B7                  OR    A
2266 ED 52               SBC   HL,DE
2268             L230:
2268 28 03               JR    Z,$+3
226A DA 47 22            JP    NC,L223
226D             L231:
226D                     ;;testDo.j(60)     do { println (p); p++; i--; } while (1030 <= i+1000);
226D             L232:
226D 2A 03 50            LD    HL,(05003H)
2270             L233:
2270 CD 57 28            CALL  writeLineHL
2273             L234:
2273 2A 03 50            LD    HL,(05003H)
2276 23                  INC   HL
2277 22 03 50            LD    (05003H),HL
227A             L235:
227A 2A 01 50            LD    HL,(05001H)
227D 2B                  DEC   HL
227E 22 01 50            LD    (05001H),HL
2281             L236:
2281 2A 01 50            LD    HL,(05001H)
2284             L237:
2284 11 E8 03            LD    DE,1000
2287 19                  ADD   HL,DE
2288             L238:
2288 11 06 04            LD    DE,1030
228B B7                  OR    A
228C ED 52               SBC   HL,DE
228E             L239:
228E D2 6D 22            JP    NC,L232
2291             L240:
2291                     ;;testDo.j(61)   
2291             L241:
2291                     ;;testDo.j(62)     /************************/
2291             L242:
2291                     ;;testDo.j(63)     // constant - var
2291             L243:
2291                     ;;testDo.j(64)     // byte - byte
2291             L244:
2291                     ;;testDo.j(65)     b=37;
2291             L245:
2291 3E 25               LD    A,37
2293             L246:
2293 32 00 50            LD    (05000H),A
2296             L247:
2296                     ;;testDo.j(66)     do { println (b); b++; } while (38 >= b);
2296             L248:
2296 3A 00 50            LD    A,(05000H)
2299             L249:
2299 CD 7F 28            CALL  writeLineA
229C             L250:
229C 2A 00 50            LD    HL,(05000H)
229F 34                  INC   (HL)
22A0             L251:
22A0 3A 00 50            LD    A,(05000H)
22A3             L252:
22A3 D6 26               SUB   A,38
22A5             L253:
22A5 DA 96 22            JP    C,L248
22A8 CA 96 22            JP    Z,L248
22AB             L254:
22AB                     ;;testDo.j(67)     // byte - integer
22AB             L255:
22AB                     ;;testDo.j(68)     i=39;
22AB             L256:
22AB 3E 27               LD    A,39
22AD             L257:
22AD 32 01 50            LD    (05001H),A
22B0             L258:
22B0                     ;;testDo.j(69)     do { println (i); i++; } while (40 >= i);
22B0             L259:
22B0 2A 01 50            LD    HL,(05001H)
22B3             L260:
22B3 CD 57 28            CALL  writeLineHL
22B6             L261:
22B6 2A 01 50            LD    HL,(05001H)
22B9 23                  INC   HL
22BA 22 01 50            LD    (05001H),HL
22BD             L262:
22BD 2A 01 50            LD    HL,(05001H)
22C0             L263:
22C0 3E 28               LD    A,40
22C2             L264:
22C2 5F                  LD    E,A
22C3 16 00               LD    D,0
22C5 B7                  OR    A
22C6 ED 52               SBC   HL,DE
22C8             L265:
22C8 D2 B0 22            JP    NC,L259
22CB             L266:
22CB                     ;;testDo.j(70)     // integer - byte
22CB             L267:
22CB                     ;;testDo.j(71)     // not relevant
22CB             L268:
22CB                     ;;testDo.j(72)     // integer - integer
22CB             L269:
22CB                     ;;testDo.j(73)     i=1038;
22CB             L270:
22CB 21 0E 04            LD    HL,1038
22CE             L271:
22CE 22 01 50            LD    (05001H),HL
22D1             L272:
22D1                     ;;testDo.j(74)     b=41;
22D1             L273:
22D1 3E 29               LD    A,41
22D3             L274:
22D3 32 00 50            LD    (05000H),A
22D6             L275:
22D6                     ;;testDo.j(75)     do { println (b); b++; i--; } while (1037 <= i);
22D6             L276:
22D6 3A 00 50            LD    A,(05000H)
22D9             L277:
22D9 CD 7F 28            CALL  writeLineA
22DC             L278:
22DC 2A 00 50            LD    HL,(05000H)
22DF 34                  INC   (HL)
22E0             L279:
22E0 2A 01 50            LD    HL,(05001H)
22E3 2B                  DEC   HL
22E4 22 01 50            LD    (05001H),HL
22E7             L280:
22E7 2A 01 50            LD    HL,(05001H)
22EA             L281:
22EA 11 0D 04            LD    DE,1037
22ED B7                  OR    A
22EE ED 52               SBC   HL,DE
22F0             L282:
22F0 D2 D6 22            JP    NC,L276
22F3             L283:
22F3                     ;;testDo.j(76)   
22F3             L284:
22F3                     ;;testDo.j(77)     /************************/
22F3             L285:
22F3                     ;;testDo.j(78)     // constant - stack8
22F3             L286:
22F3                     ;;testDo.j(79)     // byte - byte
22F3             L287:
22F3                     ;;testDo.j(80)     //TODO
22F3             L288:
22F3                     ;;testDo.j(81)     println(43);
22F3             L289:
22F3 3E 2B               LD    A,43
22F5             L290:
22F5 CD 7F 28            CALL  writeLineA
22F8             L291:
22F8                     ;;testDo.j(82)     // constant - stack8
22F8             L292:
22F8                     ;;testDo.j(83)     // byte - integer
22F8             L293:
22F8                     ;;testDo.j(84)     //TODO
22F8             L294:
22F8                     ;;testDo.j(85)     println(44);
22F8             L295:
22F8 3E 2C               LD    A,44
22FA             L296:
22FA CD 7F 28            CALL  writeLineA
22FD             L297:
22FD                     ;;testDo.j(86)     // constant - stack8
22FD             L298:
22FD                     ;;testDo.j(87)     // integer - byte
22FD             L299:
22FD                     ;;testDo.j(88)     //TODO
22FD             L300:
22FD                     ;;testDo.j(89)     println(45);
22FD             L301:
22FD 3E 2D               LD    A,45
22FF             L302:
22FF CD 7F 28            CALL  writeLineA
2302             L303:
2302                     ;;testDo.j(90)     // constant - stack88
2302             L304:
2302                     ;;testDo.j(91)     // integer - integer
2302             L305:
2302                     ;;testDo.j(92)     //TODO
2302             L306:
2302                     ;;testDo.j(93)     println(46);
2302             L307:
2302 3E 2E               LD    A,46
2304             L308:
2304 CD 7F 28            CALL  writeLineA
2307             L309:
2307                     ;;testDo.j(94)   
2307             L310:
2307                     ;;testDo.j(95)     /************************/
2307             L311:
2307                     ;;testDo.j(96)     // constant - stack16
2307             L312:
2307                     ;;testDo.j(97)     // byte - byte
2307             L313:
2307                     ;;testDo.j(98)     //TODO
2307             L314:
2307                     ;;testDo.j(99)     println(47);
2307             L315:
2307 3E 2F               LD    A,47
2309             L316:
2309 CD 7F 28            CALL  writeLineA
230C             L317:
230C                     ;;testDo.j(100)     // constant - stack16
230C             L318:
230C                     ;;testDo.j(101)     // byte - integer
230C             L319:
230C                     ;;testDo.j(102)     //TODO
230C             L320:
230C                     ;;testDo.j(103)     println(48);
230C             L321:
230C 3E 30               LD    A,48
230E             L322:
230E CD 7F 28            CALL  writeLineA
2311             L323:
2311                     ;;testDo.j(104)     // constant - stack16
2311             L324:
2311                     ;;testDo.j(105)     // integer - byte
2311             L325:
2311                     ;;testDo.j(106)     //TODO
2311             L326:
2311                     ;;testDo.j(107)     println(49);
2311             L327:
2311 3E 31               LD    A,49
2313             L328:
2313 CD 7F 28            CALL  writeLineA
2316             L329:
2316                     ;;testDo.j(108)     // constant - stack16
2316             L330:
2316                     ;;testDo.j(109)     // integer - integer
2316             L331:
2316                     ;;testDo.j(110)     //TODO
2316             L332:
2316                     ;;testDo.j(111)     println(50);
2316             L333:
2316 3E 32               LD    A,50
2318             L334:
2318 CD 7F 28            CALL  writeLineA
231B             L335:
231B                     ;;testDo.j(112)   
231B             L336:
231B                     ;;testDo.j(113)     /************************/
231B             L337:
231B                     ;;testDo.j(114)     // acc - constant
231B             L338:
231B                     ;;testDo.j(115)     // byte - byte
231B             L339:
231B                     ;;testDo.j(116)     b=51;
231B             L340:
231B 3E 33               LD    A,51
231D             L341:
231D 32 00 50            LD    (05000H),A
2320             L342:
2320                     ;;testDo.j(117)     do { println (b); b++; } while (b+0 <= 52);
2320             L343:
2320 3A 00 50            LD    A,(05000H)
2323             L344:
2323 CD 7F 28            CALL  writeLineA
2326             L345:
2326 2A 00 50            LD    HL,(05000H)
2329 34                  INC   (HL)
232A             L346:
232A 3A 00 50            LD    A,(05000H)
232D             L347:
232D C6 00               ADD   A,0
232F             L348:
232F D6 34               SUB   A,52
2331             L349:
2331 DA 20 23            JP    C,L343
2334 CA 20 23            JP    Z,L343
2337             L350:
2337                     ;;testDo.j(118)     // byte - integer
2337             L351:
2337                     ;;testDo.j(119)     //not relevant
2337             L352:
2337                     ;;testDo.j(120)     // integer - byte
2337             L353:
2337                     ;;testDo.j(121)     i=53;
2337             L354:
2337 3E 35               LD    A,53
2339             L355:
2339 32 01 50            LD    (05001H),A
233C             L356:
233C                     ;;testDo.j(122)     do { println (i); i++; } while (i+0 <= 54);
233C             L357:
233C 2A 01 50            LD    HL,(05001H)
233F             L358:
233F CD 57 28            CALL  writeLineHL
2342             L359:
2342 2A 01 50            LD    HL,(05001H)
2345 23                  INC   HL
2346 22 01 50            LD    (05001H),HL
2349             L360:
2349 2A 01 50            LD    HL,(05001H)
234C             L361:
234C 11 00 00            LD    DE,0
234F 19                  ADD   HL,DE
2350             L362:
2350 3E 36               LD    A,54
2352             L363:
2352 5F                  LD    E,A
2353 16 00               LD    D,0
2355 EB                  EX    DE,HL
2356 B7                  OR    A
2357 ED 52               SBC   HL,DE
2359             L364:
2359 DA 3C 23            JP    C,L357
235C CA 3C 23            JP    Z,L357
235F             L365:
235F                     ;;testDo.j(123)   
235F             L366:
235F                     ;;testDo.j(124)     b=55;
235F             L367:
235F 3E 37               LD    A,55
2361             L368:
2361 32 00 50            LD    (05000H),A
2364             L369:
2364                     ;;testDo.j(125)     i=1055;
2364             L370:
2364 21 1F 04            LD    HL,1055
2367             L371:
2367 22 01 50            LD    (05001H),HL
236A             L372:
236A                     ;;testDo.j(126)     // integer - integer
236A             L373:
236A                     ;;testDo.j(127)     do { println (b); b++; i++; } while (i+0 <= 1056);
236A             L374:
236A 3A 00 50            LD    A,(05000H)
236D             L375:
236D CD 7F 28            CALL  writeLineA
2370             L376:
2370 2A 00 50            LD    HL,(05000H)
2373 34                  INC   (HL)
2374             L377:
2374 2A 01 50            LD    HL,(05001H)
2377 23                  INC   HL
2378 22 01 50            LD    (05001H),HL
237B             L378:
237B 2A 01 50            LD    HL,(05001H)
237E             L379:
237E 11 00 00            LD    DE,0
2381 19                  ADD   HL,DE
2382             L380:
2382 11 20 04            LD    DE,1056
2385 B7                  OR    A
2386 ED 52               SBC   HL,DE
2388             L381:
2388 DA 6A 23            JP    C,L374
238B CA 6A 23            JP    Z,L374
238E             L382:
238E                     ;;testDo.j(128)   
238E             L383:
238E                     ;;testDo.j(129)     /************************/
238E             L384:
238E                     ;;testDo.j(130)     // acc - acc
238E             L385:
238E                     ;;testDo.j(131)     // byte - byte
238E             L386:
238E                     ;;testDo.j(132)     b=57;
238E             L387:
238E 3E 39               LD    A,57
2390             L388:
2390 32 00 50            LD    (05000H),A
2393             L389:
2393                     ;;testDo.j(133)     do { println (b); b++; } while (b+0 <= 58+0);
2393             L390:
2393 3A 00 50            LD    A,(05000H)
2396             L391:
2396 CD 7F 28            CALL  writeLineA
2399             L392:
2399 2A 00 50            LD    HL,(05000H)
239C 34                  INC   (HL)
239D             L393:
239D 3A 00 50            LD    A,(05000H)
23A0             L394:
23A0 C6 00               ADD   A,0
23A2             L395:
23A2 F6                  PUSH AF
23A3             L396:
23A3 3E 3A               LD    A,58
23A5             L397:
23A5 C6 00               ADD   A,0
23A7             L398:
23A7 C1                  POP   BC
23A8 90                  SUB   A,B
23A9             L399:
23A9 D2 93 23            JP    NC,L390
23AC             L400:
23AC                     ;;testDo.j(134)     // byte - integer
23AC             L401:
23AC                     ;;testDo.j(135)     i=61;
23AC             L402:
23AC 3E 3D               LD    A,61
23AE             L403:
23AE 32 01 50            LD    (05001H),A
23B1             L404:
23B1                     ;;testDo.j(136)     do { println (b); b++; i--; } while (60+0 <= i+0);
23B1             L405:
23B1 3A 00 50            LD    A,(05000H)
23B4             L406:
23B4 CD 7F 28            CALL  writeLineA
23B7             L407:
23B7 2A 00 50            LD    HL,(05000H)
23BA 34                  INC   (HL)
23BB             L408:
23BB 2A 01 50            LD    HL,(05001H)
23BE 2B                  DEC   HL
23BF 22 01 50            LD    (05001H),HL
23C2             L409:
23C2 3E 3C               LD    A,60
23C4             L410:
23C4 C6 00               ADD   A,0
23C6             L411:
23C6 F6                  PUSH AF
23C7             L412:
23C7 2A 01 50            LD    HL,(05001H)
23CA             L413:
23CA 11 00 00            LD    DE,0
23CD 19                  ADD   HL,DE
23CE             L414:
23CE F1                  POP  AF
23CF             L415:
23CF 5F                  LD    E,A
23D0 16 00               LD    D,0
23D2 B7                  OR    A
23D3 ED 52               SBC   HL,DE
23D5             L416:
23D5 DA B1 23            JP    C,L405
23D8 CA B1 23            JP    Z,L405
23DB             L417:
23DB                     ;;testDo.j(137)     // integer - byte
23DB             L418:
23DB                     ;;testDo.j(138)     i=61;
23DB             L419:
23DB 3E 3D               LD    A,61
23DD             L420:
23DD 32 01 50            LD    (05001H),A
23E0             L421:
23E0                     ;;testDo.j(139)     b=62;
23E0             L422:
23E0 3E 3E               LD    A,62
23E2             L423:
23E2 32 00 50            LD    (05000H),A
23E5             L424:
23E5                     ;;testDo.j(140)     do { println (i); i++; } while (i+0 <= b+0);
23E5             L425:
23E5 2A 01 50            LD    HL,(05001H)
23E8             L426:
23E8 CD 57 28            CALL  writeLineHL
23EB             L427:
23EB 2A 01 50            LD    HL,(05001H)
23EE 23                  INC   HL
23EF 22 01 50            LD    (05001H),HL
23F2             L428:
23F2 2A 01 50            LD    HL,(05001H)
23F5             L429:
23F5 11 00 00            LD    DE,0
23F8 19                  ADD   HL,DE
23F9             L430:
23F9 E5                  PUSH HL
23FA             L431:
23FA 3A 00 50            LD    A,(05000H)
23FD             L432:
23FD C6 00               ADD   A,0
23FF             L433:
23FF E1                  POP  HL
2400             L434:
2400 5F                  LD    E,A
2401 16 00               LD    D,0
2403 EB                  EX    DE,HL
2404 B7                  OR    A
2405 ED 52               SBC   HL,DE
2407             L435:
2407 DA E5 23            JP    C,L425
240A CA E5 23            JP    Z,L425
240D             L436:
240D                     ;;testDo.j(141)     // integer - integer
240D             L437:
240D                     ;;testDo.j(142)     b=63;
240D             L438:
240D 3E 3F               LD    A,63
240F             L439:
240F 32 00 50            LD    (05000H),A
2412             L440:
2412                     ;;testDo.j(143)     i=1063;
2412             L441:
2412 21 27 04            LD    HL,1063
2415             L442:
2415 22 01 50            LD    (05001H),HL
2418             L443:
2418                     ;;testDo.j(144)     do { println (b); b++; i--; } while (1000+62 <= i+0);
2418             L444:
2418 3A 00 50            LD    A,(05000H)
241B             L445:
241B CD 7F 28            CALL  writeLineA
241E             L446:
241E 2A 00 50            LD    HL,(05000H)
2421 34                  INC   (HL)
2422             L447:
2422 2A 01 50            LD    HL,(05001H)
2425 2B                  DEC   HL
2426 22 01 50            LD    (05001H),HL
2429             L448:
2429 21 E8 03            LD    HL,1000
242C             L449:
242C 11 3E 00            LD    DE,62
242F 19                  ADD   HL,DE
2430             L450:
2430 E5                  PUSH HL
2431             L451:
2431 2A 01 50            LD    HL,(05001H)
2434             L452:
2434 11 00 00            LD    DE,0
2437 19                  ADD   HL,DE
2438             L453:
2438 D1                  POP   DE
2439 B7                  OR    A
243A ED 52               SBC   HL,DE
243C             L454:
243C D2 18 24            JP    NC,L444
243F             L455:
243F                     ;;testDo.j(145)   
243F             L456:
243F                     ;;testDo.j(146)     /************************/
243F             L457:
243F                     ;;testDo.j(147)     // acc - var
243F             L458:
243F                     ;;testDo.j(148)     // byte - byte
243F             L459:
243F                     ;;testDo.j(149)     b=65;
243F             L460:
243F 3E 41               LD    A,65
2441             L461:
2441 32 00 50            LD    (05000H),A
2444             L462:
2444                     ;;testDo.j(150)     i=65;
2444             L463:
2444 3E 41               LD    A,65
2446             L464:
2446 32 01 50            LD    (05001H),A
2449             L465:
2449                     ;;testDo.j(151)     do { println (i); i++; b--; } while (64+0 <= b);
2449             L466:
2449 2A 01 50            LD    HL,(05001H)
244C             L467:
244C CD 57 28            CALL  writeLineHL
244F             L468:
244F 2A 01 50            LD    HL,(05001H)
2452 23                  INC   HL
2453 22 01 50            LD    (05001H),HL
2456             L469:
2456 2A 00 50            LD    HL,(05000H)
2459 35                  DEC   (HL)
245A             L470:
245A 3E 40               LD    A,64
245C             L471:
245C C6 00               ADD   A,0
245E             L472:
245E 47                  LD    B,A
245F 3A 00 50            LD    A,(05000H)
2462 90                  SUB   A,B
2463             L473:
2463 DA 49 24            JP    C,L466
2466 CA 49 24            JP    Z,L466
2469             L474:
2469                     ;;testDo.j(152)     // byte - integer
2469             L475:
2469                     ;;testDo.j(153)     b=67;
2469             L476:
2469 3E 43               LD    A,67
246B             L477:
246B 32 00 50            LD    (05000H),A
246E             L478:
246E                     ;;testDo.j(154)     i=67;
246E             L479:
246E 3E 43               LD    A,67
2470             L480:
2470 32 01 50            LD    (05001H),A
2473             L481:
2473                     ;;testDo.j(155)     do { println (b); b++; i--; } while (66+0 <= i);
2473             L482:
2473 3A 00 50            LD    A,(05000H)
2476             L483:
2476 CD 7F 28            CALL  writeLineA
2479             L484:
2479 2A 00 50            LD    HL,(05000H)
247C 34                  INC   (HL)
247D             L485:
247D 2A 01 50            LD    HL,(05001H)
2480 2B                  DEC   HL
2481 22 01 50            LD    (05001H),HL
2484             L486:
2484 3E 42               LD    A,66
2486             L487:
2486 C6 00               ADD   A,0
2488             L488:
2488 2A 01 50            LD    HL,(05001H)
248B             L489:
248B 5F                  LD    E,A
248C 16 00               LD    D,0
248E B7                  OR    A
248F ED 52               SBC   HL,DE
2491             L490:
2491 DA 73 24            JP    C,L482
2494 CA 73 24            JP    Z,L482
2497             L491:
2497                     ;;testDo.j(156)     // integer - byte
2497             L492:
2497                     ;;testDo.j(157)     i=69;
2497             L493:
2497 3E 45               LD    A,69
2499             L494:
2499 32 01 50            LD    (05001H),A
249C             L495:
249C                     ;;testDo.j(158)     b=69;
249C             L496:
249C 3E 45               LD    A,69
249E             L497:
249E 32 00 50            LD    (05000H),A
24A1             L498:
24A1                     ;;testDo.j(159)     do { println (i); i++; b--; } while (1000+68 <= b);
24A1             L499:
24A1 2A 01 50            LD    HL,(05001H)
24A4             L500:
24A4 CD 57 28            CALL  writeLineHL
24A7             L501:
24A7 2A 01 50            LD    HL,(05001H)
24AA 23                  INC   HL
24AB 22 01 50            LD    (05001H),HL
24AE             L502:
24AE 2A 00 50            LD    HL,(05000H)
24B1 35                  DEC   (HL)
24B2             L503:
24B2 21 E8 03            LD    HL,1000
24B5             L504:
24B5 11 44 00            LD    DE,68
24B8 19                  ADD   HL,DE
24B9             L505:
24B9 3A 00 50            LD    A,(05000H)
24BC             L506:
24BC 5F                  LD    E,A
24BD 16 00               LD    D,0
24BF EB                  EX    DE,HL
24C0 B7                  OR    A
24C1 ED 52               SBC   HL,DE
24C3             L507:
24C3 DA A1 24            JP    C,L499
24C6 CA A1 24            JP    Z,L499
24C9             L508:
24C9                     ;;testDo.j(160)     // integer - integer
24C9             L509:
24C9                     ;;testDo.j(161)     i=1071;
24C9             L510:
24C9 21 2F 04            LD    HL,1071
24CC             L511:
24CC 22 01 50            LD    (05001H),HL
24CF             L512:
24CF                     ;;testDo.j(162)     b=70;
24CF             L513:
24CF 3E 46               LD    A,70
24D1             L514:
24D1 32 00 50            LD    (05000H),A
24D4             L515:
24D4                     ;;testDo.j(163)     do { println (b); b++; i--; } while (1000+70 <= i);
24D4             L516:
24D4 3A 00 50            LD    A,(05000H)
24D7             L517:
24D7 CD 7F 28            CALL  writeLineA
24DA             L518:
24DA 2A 00 50            LD    HL,(05000H)
24DD 34                  INC   (HL)
24DE             L519:
24DE 2A 01 50            LD    HL,(05001H)
24E1 2B                  DEC   HL
24E2 22 01 50            LD    (05001H),HL
24E5             L520:
24E5 21 E8 03            LD    HL,1000
24E8             L521:
24E8 11 46 00            LD    DE,70
24EB 19                  ADD   HL,DE
24EC             L522:
24EC ED 5B 01 50         LD    DE,(05001H)
24F0 B7                  OR    A
24F1 ED 52               SBC   HL,DE
24F3             L523:
24F3 DA D4 24            JP    C,L516
24F6 CA D4 24            JP    Z,L516
24F9             L524:
24F9                     ;;testDo.j(164)   
24F9             L525:
24F9                     ;;testDo.j(165)     /************************/
24F9             L526:
24F9                     ;;testDo.j(166)     // acc - stack16
24F9             L527:
24F9                     ;;testDo.j(167)     // byte - byte
24F9             L528:
24F9                     ;;testDo.j(168)     //TODO
24F9             L529:
24F9                     ;;testDo.j(169)     println(72);
24F9             L530:
24F9 3E 48               LD    A,72
24FB             L531:
24FB CD 7F 28            CALL  writeLineA
24FE             L532:
24FE                     ;;testDo.j(170)     println(73);
24FE             L533:
24FE 3E 49               LD    A,73
2500             L534:
2500 CD 7F 28            CALL  writeLineA
2503             L535:
2503                     ;;testDo.j(171)     // byte - integer
2503             L536:
2503                     ;;testDo.j(172)     //TODO
2503             L537:
2503                     ;;testDo.j(173)     println(74);
2503             L538:
2503 3E 4A               LD    A,74
2505             L539:
2505 CD 7F 28            CALL  writeLineA
2508             L540:
2508                     ;;testDo.j(174)     println(75);
2508             L541:
2508 3E 4B               LD    A,75
250A             L542:
250A CD 7F 28            CALL  writeLineA
250D             L543:
250D                     ;;testDo.j(175)     // integer - byte
250D             L544:
250D                     ;;testDo.j(176)     //TODO
250D             L545:
250D                     ;;testDo.j(177)     println(76);
250D             L546:
250D 3E 4C               LD    A,76
250F             L547:
250F CD 7F 28            CALL  writeLineA
2512             L548:
2512                     ;;testDo.j(178)     println(77);
2512             L549:
2512 3E 4D               LD    A,77
2514             L550:
2514 CD 7F 28            CALL  writeLineA
2517             L551:
2517                     ;;testDo.j(179)     // integer - integer
2517             L552:
2517                     ;;testDo.j(180)     //TODO
2517             L553:
2517                     ;;testDo.j(181)     println(78);
2517             L554:
2517 3E 4E               LD    A,78
2519             L555:
2519 CD 7F 28            CALL  writeLineA
251C             L556:
251C                     ;;testDo.j(182)     println(79);
251C             L557:
251C 3E 4F               LD    A,79
251E             L558:
251E CD 7F 28            CALL  writeLineA
2521             L559:
2521                     ;;testDo.j(183)   
2521             L560:
2521                     ;;testDo.j(184)     /************************/
2521             L561:
2521                     ;;testDo.j(185)     // acc - stack8
2521             L562:
2521                     ;;testDo.j(186)     // byte - byte
2521             L563:
2521                     ;;testDo.j(187)     //TODO
2521             L564:
2521                     ;;testDo.j(188)     println(80);
2521             L565:
2521 3E 50               LD    A,80
2523             L566:
2523 CD 7F 28            CALL  writeLineA
2526             L567:
2526                     ;;testDo.j(189)     println(81);
2526             L568:
2526 3E 51               LD    A,81
2528             L569:
2528 CD 7F 28            CALL  writeLineA
252B             L570:
252B                     ;;testDo.j(190)     // byte - integer
252B             L571:
252B                     ;;testDo.j(191)     //TODO
252B             L572:
252B                     ;;testDo.j(192)     println(82);
252B             L573:
252B 3E 52               LD    A,82
252D             L574:
252D CD 7F 28            CALL  writeLineA
2530             L575:
2530                     ;;testDo.j(193)     println(83);
2530             L576:
2530 3E 53               LD    A,83
2532             L577:
2532 CD 7F 28            CALL  writeLineA
2535             L578:
2535                     ;;testDo.j(194)     // integer - byte
2535             L579:
2535                     ;;testDo.j(195)     //TODO
2535             L580:
2535                     ;;testDo.j(196)     println(84);
2535             L581:
2535 3E 54               LD    A,84
2537             L582:
2537 CD 7F 28            CALL  writeLineA
253A             L583:
253A                     ;;testDo.j(197)     println(85);
253A             L584:
253A 3E 55               LD    A,85
253C             L585:
253C CD 7F 28            CALL  writeLineA
253F             L586:
253F                     ;;testDo.j(198)     // integer - integer
253F             L587:
253F                     ;;testDo.j(199)     //TODO
253F             L588:
253F                     ;;testDo.j(200)     println(86);
253F             L589:
253F 3E 56               LD    A,86
2541             L590:
2541 CD 7F 28            CALL  writeLineA
2544             L591:
2544                     ;;testDo.j(201)     println(87);
2544             L592:
2544 3E 57               LD    A,87
2546             L593:
2546 CD 7F 28            CALL  writeLineA
2549             L594:
2549                     ;;testDo.j(202)   
2549             L595:
2549                     ;;testDo.j(203)     /************************/
2549             L596:
2549                     ;;testDo.j(204)     // var - constant
2549             L597:
2549                     ;;testDo.j(205)     // byte - byte
2549             L598:
2549                     ;;testDo.j(206)     b=88;
2549             L599:
2549 3E 58               LD    A,88
254B             L600:
254B 32 00 50            LD    (05000H),A
254E             L601:
254E                     ;;testDo.j(207)     do { println (b); b++; } while (b <= 89);
254E             L602:
254E 3A 00 50            LD    A,(05000H)
2551             L603:
2551 CD 7F 28            CALL  writeLineA
2554             L604:
2554 2A 00 50            LD    HL,(05000H)
2557 34                  INC   (HL)
2558             L605:
2558 3A 00 50            LD    A,(05000H)
255B             L606:
255B D6 59               SUB   A,89
255D             L607:
255D DA 4E 25            JP    C,L602
2560 CA 4E 25            JP    Z,L602
2563             L608:
2563                     ;;testDo.j(208)     // byte - integer
2563             L609:
2563                     ;;testDo.j(209)     //not relevant
2563             L610:
2563                     ;;testDo.j(210)     println(90);
2563             L611:
2563 3E 5A               LD    A,90
2565             L612:
2565 CD 7F 28            CALL  writeLineA
2568             L613:
2568                     ;;testDo.j(211)     println(91);
2568             L614:
2568 3E 5B               LD    A,91
256A             L615:
256A CD 7F 28            CALL  writeLineA
256D             L616:
256D                     ;;testDo.j(212)     // integer - byte
256D             L617:
256D                     ;;testDo.j(213)     i=92;
256D             L618:
256D 3E 5C               LD    A,92
256F             L619:
256F 32 01 50            LD    (05001H),A
2572             L620:
2572                     ;;testDo.j(214)     do { println (i); i++; } while (i <= 93);
2572             L621:
2572 2A 01 50            LD    HL,(05001H)
2575             L622:
2575 CD 57 28            CALL  writeLineHL
2578             L623:
2578 2A 01 50            LD    HL,(05001H)
257B 23                  INC   HL
257C 22 01 50            LD    (05001H),HL
257F             L624:
257F 2A 01 50            LD    HL,(05001H)
2582             L625:
2582 3E 5D               LD    A,93
2584             L626:
2584 5F                  LD    E,A
2585 16 00               LD    D,0
2587 EB                  EX    DE,HL
2588 B7                  OR    A
2589 ED 52               SBC   HL,DE
258B             L627:
258B DA 72 25            JP    C,L621
258E CA 72 25            JP    Z,L621
2591             L628:
2591                     ;;testDo.j(215)     // integer - integer
2591             L629:
2591                     ;;testDo.j(216)     i=1094;
2591             L630:
2591 21 46 04            LD    HL,1094
2594             L631:
2594 22 01 50            LD    (05001H),HL
2597             L632:
2597                     ;;testDo.j(217)     b=94;
2597             L633:
2597 3E 5E               LD    A,94
2599             L634:
2599 32 00 50            LD    (05000H),A
259C             L635:
259C                     ;;testDo.j(218)     do { println (b); b++; i++; } while (i <= 1095  );
259C             L636:
259C 3A 00 50            LD    A,(05000H)
259F             L637:
259F CD 7F 28            CALL  writeLineA
25A2             L638:
25A2 2A 00 50            LD    HL,(05000H)
25A5 34                  INC   (HL)
25A6             L639:
25A6 2A 01 50            LD    HL,(05001H)
25A9 23                  INC   HL
25AA 22 01 50            LD    (05001H),HL
25AD             L640:
25AD 2A 01 50            LD    HL,(05001H)
25B0             L641:
25B0 11 47 04            LD    DE,1095
25B3 B7                  OR    A
25B4 ED 52               SBC   HL,DE
25B6             L642:
25B6 DA 9C 25            JP    C,L636
25B9 CA 9C 25            JP    Z,L636
25BC             L643:
25BC                     ;;testDo.j(219)   
25BC             L644:
25BC                     ;;testDo.j(220)     /************************/
25BC             L645:
25BC                     ;;testDo.j(221)     // var - acc
25BC             L646:
25BC                     ;;testDo.j(222)     // byte - byte
25BC             L647:
25BC                     ;;testDo.j(223)     do { println (b); b++; } while (b <= 97+0);
25BC             L648:
25BC 3A 00 50            LD    A,(05000H)
25BF             L649:
25BF CD 7F 28            CALL  writeLineA
25C2             L650:
25C2 2A 00 50            LD    HL,(05000H)
25C5 34                  INC   (HL)
25C6             L651:
25C6 3E 61               LD    A,97
25C8             L652:
25C8 C6 00               ADD   A,0
25CA             L653:
25CA 47                  LD    B,A
25CB 3A 00 50            LD    A,(05000H)
25CE 90                  SUB   A,B
25CF             L654:
25CF D2 BC 25            JP    NC,L648
25D2             L655:
25D2                     ;;testDo.j(224)     // byte - integer
25D2             L656:
25D2                     ;;testDo.j(225)     //not relevant
25D2             L657:
25D2                     ;;testDo.j(226)     i=99;
25D2             L658:
25D2 3E 63               LD    A,99
25D4             L659:
25D4 32 01 50            LD    (05001H),A
25D7             L660:
25D7                     ;;testDo.j(227)     do { println (b); b++; } while (b <= i+0);
25D7             L661:
25D7 3A 00 50            LD    A,(05000H)
25DA             L662:
25DA CD 7F 28            CALL  writeLineA
25DD             L663:
25DD 2A 00 50            LD    HL,(05000H)
25E0 34                  INC   (HL)
25E1             L664:
25E1 2A 01 50            LD    HL,(05001H)
25E4             L665:
25E4 11 00 00            LD    DE,0
25E7 19                  ADD   HL,DE
25E8             L666:
25E8 3A 00 50            LD    A,(05000H)
25EB             L667:
25EB 5F                  LD    E,A
25EC 16 00               LD    D,0
25EE B7                  OR    A
25EF ED 52               SBC   HL,DE
25F1             L668:
25F1 DA D7 25            JP    C,L661
25F4 CA D7 25            JP    Z,L661
25F7             L669:
25F7                     ;;testDo.j(228)     // integer - byte
25F7             L670:
25F7                     ;;testDo.j(229)     i=100;
25F7             L671:
25F7 3E 64               LD    A,100
25F9             L672:
25F9 32 01 50            LD    (05001H),A
25FC             L673:
25FC                     ;;testDo.j(230)     do { println (i); i++; } while (i <= 101+0);
25FC             L674:
25FC 2A 01 50            LD    HL,(05001H)
25FF             L675:
25FF CD 57 28            CALL  writeLineHL
2602             L676:
2602 2A 01 50            LD    HL,(05001H)
2605 23                  INC   HL
2606 22 01 50            LD    (05001H),HL
2609             L677:
2609 3E 65               LD    A,101
260B             L678:
260B C6 00               ADD   A,0
260D             L679:
260D 2A 01 50            LD    HL,(05001H)
2610             L680:
2610 5F                  LD    E,A
2611 16 00               LD    D,0
2613 EB                  EX    DE,HL
2614 B7                  OR    A
2615 ED 52               SBC   HL,DE
2617             L681:
2617 DA FC 25            JP    C,L674
261A CA FC 25            JP    Z,L674
261D             L682:
261D                     ;;testDo.j(231)     // integer - integer
261D             L683:
261D                     ;;testDo.j(232)     i=1102;
261D             L684:
261D 21 4E 04            LD    HL,1102
2620             L685:
2620 22 01 50            LD    (05001H),HL
2623             L686:
2623                     ;;testDo.j(233)     b=102;
2623             L687:
2623 3E 66               LD    A,102
2625             L688:
2625 32 00 50            LD    (05000H),A
2628             L689:
2628                     ;;testDo.j(234)     do { println (b); b++; i++; } while (i <= 1103+0);
2628             L690:
2628 3A 00 50            LD    A,(05000H)
262B             L691:
262B CD 7F 28            CALL  writeLineA
262E             L692:
262E 2A 00 50            LD    HL,(05000H)
2631 34                  INC   (HL)
2632             L693:
2632 2A 01 50            LD    HL,(05001H)
2635 23                  INC   HL
2636 22 01 50            LD    (05001H),HL
2639             L694:
2639 21 4F 04            LD    HL,1103
263C             L695:
263C 11 00 00            LD    DE,0
263F 19                  ADD   HL,DE
2640             L696:
2640 ED 5B 01 50         LD    DE,(05001H)
2644 B7                  OR    A
2645 ED 52               SBC   HL,DE
2647             L697:
2647 D2 28 26            JP    NC,L690
264A             L698:
264A                     ;;testDo.j(235)   
264A             L699:
264A                     ;;testDo.j(236)     /************************/
264A             L700:
264A                     ;;testDo.j(237)     // var - var
264A             L701:
264A                     ;;testDo.j(238)     // byte - byte
264A             L702:
264A                     ;;testDo.j(239)     byte b2 = 105;
264A             L703:
264A 3E 69               LD    A,105
264C             L704:
264C DD 77 FF            LD    (IX - 1),A
264F             L705:
264F                     ;;testDo.j(240)     do { println (b); b++; } while (b <= b2);
264F             L706:
264F 3A 00 50            LD    A,(05000H)
2652             L707:
2652 CD 7F 28            CALL  writeLineA
2655             L708:
2655 2A 00 50            LD    HL,(05000H)
2658 34                  INC   (HL)
2659             L709:
2659 3A 00 50            LD    A,(05000H)
265C             L710:
265C DD 96 FF            SUB   A,(IX - 1)
265F             L711:
265F DA 4F 26            JP    C,L706
2662 CA 4F 26            JP    Z,L706
2665             L712:
2665                     ;;testDo.j(241)     // byte - integer
2665             L713:
2665                     ;;testDo.j(242)     i=107;
2665             L714:
2665 3E 6B               LD    A,107
2667             L715:
2667 32 01 50            LD    (05001H),A
266A             L716:
266A                     ;;testDo.j(243)     do { println (b); b++; } while (b <= i);
266A             L717:
266A 3A 00 50            LD    A,(05000H)
266D             L718:
266D CD 7F 28            CALL  writeLineA
2670             L719:
2670 2A 00 50            LD    HL,(05000H)
2673 34                  INC   (HL)
2674             L720:
2674 3A 00 50            LD    A,(05000H)
2677             L721:
2677 2A 01 50            LD    HL,(05001H)
267A             L722:
267A 5F                  LD    E,A
267B 16 00               LD    D,0
267D B7                  OR    A
267E ED 52               SBC   HL,DE
2680             L723:
2680 DA 6A 26            JP    C,L717
2683 CA 6A 26            JP    Z,L717
2686             L724:
2686                     ;;testDo.j(244)     // integer - byte
2686             L725:
2686                     ;;testDo.j(245)     i=b;
2686             L726:
2686 3A 00 50            LD    A,(05000H)
2689             L727:
2689 32 01 50            LD    (05001H),A
268C             L728:
268C                     ;;testDo.j(246)     b=109;
268C             L729:
268C 3E 6D               LD    A,109
268E             L730:
268E 32 00 50            LD    (05000H),A
2691             L731:
2691                     ;;testDo.j(247)     do { println (i); i++; } while (i <= b);
2691             L732:
2691 2A 01 50            LD    HL,(05001H)
2694             L733:
2694 CD 57 28            CALL  writeLineHL
2697             L734:
2697 2A 01 50            LD    HL,(05001H)
269A 23                  INC   HL
269B 22 01 50            LD    (05001H),HL
269E             L735:
269E 2A 01 50            LD    HL,(05001H)
26A1             L736:
26A1 3A 00 50            LD    A,(05000H)
26A4             L737:
26A4 5F                  LD    E,A
26A5 16 00               LD    D,0
26A7 EB                  EX    DE,HL
26A8 B7                  OR    A
26A9 ED 52               SBC   HL,DE
26AB             L738:
26AB DA 91 26            JP    C,L732
26AE CA 91 26            JP    Z,L732
26B1             L739:
26B1                     ;;testDo.j(248)     // integer - integer
26B1             L740:
26B1                     ;;testDo.j(249)     word i2 = 111;
26B1             L741:
26B1 3E 6F               LD    A,111
26B3             L742:
26B3 DD 77 FD            LD    (IX - 3),A
26B6             L743:
26B6                     ;;testDo.j(250)     do { println (i); i++; } while (i <= i2);
26B6             L744:
26B6 2A 01 50            LD    HL,(05001H)
26B9             L745:
26B9 CD 57 28            CALL  writeLineHL
26BC             L746:
26BC 2A 01 50            LD    HL,(05001H)
26BF 23                  INC   HL
26C0 22 01 50            LD    (05001H),HL
26C3             L747:
26C3 2A 01 50            LD    HL,(05001H)
26C6             L748:
26C6 DD 5E FD            LD    E,(IX - 3)
26C9 DD 56 FD            LD    D,(IX - 2)
26CC B7                  OR    A
26CD ED 52               SBC   HL,DE
26CF             L749:
26CF DA B6 26            JP    C,L744
26D2 CA B6 26            JP    Z,L744
26D5             L750:
26D5                     ;;testDo.j(251)   
26D5             L751:
26D5                     ;;testDo.j(252)     /************************/
26D5             L752:
26D5                     ;;testDo.j(253)     // var - stack8
26D5             L753:
26D5                     ;;testDo.j(254)     // byte - byte
26D5             L754:
26D5                     ;;testDo.j(255)     // byte - integer
26D5             L755:
26D5                     ;;testDo.j(256)     // integer - byte
26D5             L756:
26D5                     ;;testDo.j(257)     // integer - integer
26D5             L757:
26D5                     ;;testDo.j(258)     //TODO
26D5             L758:
26D5                     ;;testDo.j(259)   
26D5             L759:
26D5                     ;;testDo.j(260)     /************************/
26D5             L760:
26D5                     ;;testDo.j(261)     // var - stack16
26D5             L761:
26D5                     ;;testDo.j(262)     // byte - byte
26D5             L762:
26D5                     ;;testDo.j(263)     // byte - integer
26D5             L763:
26D5                     ;;testDo.j(264)     // integer - byte
26D5             L764:
26D5                     ;;testDo.j(265)     // integer - integer
26D5             L765:
26D5                     ;;testDo.j(266)     //TODO
26D5             L766:
26D5                     ;;testDo.j(267)   
26D5             L767:
26D5                     ;;testDo.j(268)     /************************/
26D5             L768:
26D5                     ;;testDo.j(269)     // stack8 - constant
26D5             L769:
26D5                     ;;testDo.j(270)     // stack8 - acc
26D5             L770:
26D5                     ;;testDo.j(271)     // stack8 - var
26D5             L771:
26D5                     ;;testDo.j(272)     // stack8 - stack8
26D5             L772:
26D5                     ;;testDo.j(273)     // stack8 - stack16
26D5             L773:
26D5                     ;;testDo.j(274)     //TODO
26D5             L774:
26D5                     ;;testDo.j(275)   
26D5             L775:
26D5                     ;;testDo.j(276)     /************************/
26D5             L776:
26D5                     ;;testDo.j(277)     // stack16 - constant
26D5             L777:
26D5                     ;;testDo.j(278)     // stack16 - acc
26D5             L778:
26D5                     ;;testDo.j(279)     // stack16 - var
26D5             L779:
26D5                     ;;testDo.j(280)     // stack16 - stack8
26D5             L780:
26D5                     ;;testDo.j(281)     // stack16 - stack16
26D5             L781:
26D5                     ;;testDo.j(282)     //TODO
26D5             L782:
26D5                     ;;testDo.j(283)   
26D5             L783:
26D5                     ;;testDo.j(284)     println("Klaar");
26D5             L784:
26D5 21 E0 26            LD    HL,L791
26D8             L785:
26D8 CD 04 27            CALL  writeLineStr
26DB             L786:
26DB                     ;;testDo.j(285)   }
26DB             L787:
26DB DD F9               LD    SP,IX
26DD             L788:
26DD DD E1               POP   IX
26DF             L789:
26DF C9                  return
26E0             L790:
26E0                     ;;testDo.j(286) }
26E0             L791:
26E0 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
26E6             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
26E6             STAT0   equ 004H          ;147 ASCI0 Status register.
26E6             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
26E6             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
26E6             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
26E6             TDRE    equ 1             ;STAT0->Tx data register empty bit.
26E6             OVERRUN equ 6             ;STAT0->OVERRUN bit.
26E6             RDRF    equ 7             ;STAT0->Rx data register full bit.
26E6             ;****************
26E6             ;getChar
26E6             ;Check if an input character from ASCI0 is available.
26E6             ;  IN:  none
26E6             ;  OUT: F: ZERO flag set if no character is available.
26E6             ;          ZERO flag reset if a character is available.
26E6             ;       A : character from ASCI0, if available.
26E6             ;  USES:AF
26E6             ;****************
26E6             getChar:
26E6 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
26E9 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
26EB 20 07               JR    NZ,getChar1 ;-yes: reset error flags
26ED CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
26EF C8                  RET   Z           ;-no: return without a character
26F0 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
26F3 C9                  RET
26F4             getChar1:
26F4 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
26F7 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
26F9 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
26FC AF                  XOR   A,A
26FD C9                  RET               ;return without a character
26FE             ;****************
26FE             ;putMsg
26FE             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
26FE             ;  IN:  none.
26FE             ;  OUT: none.
26FE             ;  USES:none.
26FE             ;****************
26FE             putMsg:
26FE E3                  EX    (SP),HL     ;save HL and load return address into HL.
26FF CD 0B 27            CALL  writeStr
2702 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
2703 C9                  RET
2704             ;****************
2704             ;writeLineStr
2704             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
2704             ;  IN:  HL:address of zero terminated string to be printed.
2704             ;  OUT: none.
2704             ;  USES:HL (point to byte after zero terminated string)
2704             ;****************
2704             writeLineStr:
2704 CD 0B 27            CALL  writeStr
2707 CD 27 27            CALL  putCRLF
270A C9                  RET
270B             ;****************
270B             ;writeStr
270B             ;Print via ASCI0 a zero terminated string, pointed to by HL.
270B             ;  IN:  HL:address of zero terminated string to be printed.
270B             ;  OUT: none.
270B             ;  USES:HL (point to byte after zero terminated string)
270B             ;****************
270B             writeStr:
270B F5                  PUSH  AF          ;save registers
270C             putStr1:
270C 7E                  LD    A,(HL)      ;get next character
270D 23                  INC   HL
270E B7                  OR    A,A         ;is it zer0?
270F 28 05               JR    Z,putStr2   ;yes ->return
2711 CD 1A 27            CALL  putChar     ;no->put it to ASCI0
2714 18 F6               JR    putStr1
2716             putStr2:
2716 F1                  POP   AF
2717 C9                  RET
2718             ;****************
2718             ;putSpace
2718             ;Send a space character to ASCI0
2718             ;  IN:  none.
2718             ;  OUT: none.
2718             ;  USES:AF
2718             ;****************
2718             putSpace:
2718 3E 20               LD    A,' '       ;load space and continue with putChar.
271A             ;****************
271A             ;putChar
271A             ;Send one character to ASCI0.
271A             ;  IN:  A = character
271A             ;  OUT: none.
271A             ;  USES:none.
271A             ;****************
271A             putChar:
271A F5                  PUSH  AF          ;send the character via ASCI0
271B             putChar1:
271B ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
271E CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
2720 28 F9               JR    Z,putChar1
2722 F1                  POP   AF          ;restore AF registers
2723 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
2726 C9                  RET
2727             ;****************
2727             ;putCRLF
2727             ;Send CR and LF to ASCI0
2727             ;  IN:  none.
2727             ;  OUT: none.
2727             ;  USES:none.
2727             ;****************
2727             putCRLF:
2727 F5                  PUSH  AF
2728 3E 0D               LD    A,'\r'       ;print carriage return
272A CD 1A 27            CALL  putChar
272D 3E 0A               LD    A,'\n'       ;print line feed
272F CD 1A 27            CALL  putChar
2732 F1                  POP   AF
2733 C9                  RET
2734             ;****************
2734             ;putErase
2734             ;Erase the latest character at ASCI0
2734             ;  IN:  none.
2734             ;  OUT: none.
2734             ;  USES:AF
2734             ;****************
2734             putErase:
2734 3E 08               LD    A,'\b'       ;print backspace
2736 CD 1A 27            CALL  putChar
2739 CD 18 27            CALL  putSpace    ;print space (erase character)
273C 3E 08               LD    A,'\b'      ;print backspace
273E 18 DA               JR    putChar
2740             ;****************
2740             ;putBell
2740             ;Send a Bell character to ASCI0
2740             ;  IN:  none.
2740             ;  OUT: none.
2740             ;  USES:AF
2740             ;****************
2740             putBell:
2740 3E 07               LD    A,07        ;ring the bell at ASCI0
2742 18 D6               JR    putChar
2744             ;****************
2744             ;putHexHL
2744             ;Print HL register pair as 4 hex digits
2744             ;  IN:  HL = word to be printed.
2744             ;  OUT: none.
2744             ;  USES:none.
2744             ;****************
2744             putHexHL:
2744 F5                  PUSH  AF          ;save used registers
2745 7C                  LD    A,H         ;print H as 2 hex digits
2746 CD 4F 27            CALL  putHexA
2749 7D                  LD    A,L         ;print L as 2 hex digits
274A CD 4F 27            CALL  putHexA
274D F1                  POP   AF          ;restore used registers
274E C9                  RET
274F             ;****************
274F             ;putHexA
274F             ;Print A register as 2 hex digits
274F             ;  IN:  A = byte to be printed
274F             ;  OUT: none.
274F             ;  USES:none.
274F             ;****************
274F             putHexA:
274F F5                  PUSH  AF          ;save input
2750 1F                  RRA               ;shift upper nibble to the right
2751 1F                  RRA
2752 1F                  RRA
2753 1F                  RRA
2754 CD 58 27            CALL  putHexA1    ;print upper nibble
2757 F1                  POP   AF          ;restore input & print lower nibble
2758             putHexA1:
2758 F5                  PUSH  AF          ;save input
2759 E6 0F               AND   A,00FH      ;mask lower nibble
275B C6 30               ADD   A,'0'       ;convert to hex digit
275D FE 3A               CP    A,'9'+1
275F 38 02               JR    C,putHexA2
2761 C6 07               ADD   A,07
2763             putHexA2:
2763 CD 1A 27            CALL  putChar
2766 F1                  POP   AF          ;restore input
2767 C9                  RET               ;and return
2768             ;****************
2768             ;mul16
2768             ;16 by 16 bit unsigned multiplication with 16 bit result.
2768             ;  IN:  HL = operand 1
2768             ;       DE = operand 2
2768             ;  OUT: HL = HL * DE low part
2768             ;  USES:DE
2768             ;  Size   25 bytes
2768             ;  Time  160 cycles
2768             ;****************
2768             mul16:
2768                     ;HL = HL * DE
2768                     ;        H  L
2768                     ;        D  E
2768                     ;    --------*
2768                     ;          EL
2768                     ;       EH  0
2768                     ;       DL  0
2768                     ; -----------+
2768                     ;        R  S
2768                     ;S = ELlow
2768                     ;R = ELhigh+EHlow+DLlow
2768 C5                  PUSH  BC          ;11  11 save BC
2769 44                  LD    B,H         ; 4  15 copy HL to BC
276A 4D                  LD    C,L         ; 4  19
276B 63                  LD    H,E         ; 4  23 HL contains EL
276C ED 6C               MLT   HL          ;17  40
276E E5                  PUSH  HL          ;11  51
276F 63                  LD    H,E         ; 4  55 HL contains EH aka EB
2770 68                  LD    L,B         ; 4  59
2771 ED 6C               MLT   HL          ;17  76
2773 45                  LD    B,L         ; 4  80 save EHlow in B
2774 62                  LD    H,D         ; 4  84 HL contains DL aka DC
2775 69                  LD    L,C         ; 4  88
2776 ED 6C               MLT   HL          ;17 105
2778 55                  LD    D,L         ; 4 109 DLlow into DE
2779 1E 00               LD    E,0         ; 6 115
277B E1                  POP   HL          ; 9 124 add EL+DElow
277C 19                  ADD   HL,DE       ; 7 131
277D 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
277E 19                  ADD   HL,DE       ; 7 142
277F C1                  POP   BC          ; 9 151 restore BC
2780 C9                  RET               ; 9 160
2781             ;****************
2781             ;mul16_10
2781             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
2781             ;  IN:  HL = operand
2781             ;  OUT: HL = HL * 10; low part
2781             ;  USES:Flags
2781             ;  Size   9 bytes
2781             ;  Time   65 cycles
2781             ;****************
2781             mul16_10:
2781 D5                  PUSH  DE          ;11 11
2782 54                  LD    D,H         ; 4 15
2783 5D                  LD    E,L         ; 4 19
2784 29                  ADD   HL,HL       ; 7 26 times 2
2785 29                  ADD   HL,HL       ; 7 33 times 4
2786 19                  ADD   HL,DE       ; 7 40 times 5
2787 29                  ADD   HL,HL       ; 7 47 times 10
2788 D1                  POP   DE          ; 9 56
2789 C9                  RET               ; 9 65
278A             ;****************
278A             ;mul16_8
278A             ;16 by 8 bit unsigned multiplication with 16 bit result.
278A             ;  IN:  HL = operand 1
278A             ;        A = operand 2
278A             ;  OUT: HL = HL * A low part
278A             ;  USES:AF
278A             ;  Size   .. bytes
278A             ;  Time  ... cycles
278A             ;****************
278A             mul16_8:
278A                     ;HL = HL * A
278A                     ;        H  L
278A                     ;           A
278A                     ;    --------*
278A                     ;          AL
278A                     ;       AH  0
278A                     ; -----------+
278A                     ;        R  S
278A                     ;S = ALlow
278A                     ;R = ALhigh+AHlow
278A C5                  PUSH  BC          ;11  11 save BC
278B 44                  LD    B,H         ; 4  15
278C 4F                  LD    C,A         ; 4  19
278D 67                  LD    H,A         ; 4  23
278E ED 6C               MLT   HL          ;17  40 HL = AL
2790 ED 4C               MLT   BC          ;17  57 BC = AH
2792 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
2793 81                  ADD   A,C         ; 4  65
2794 67                  LD    H,A         ; 4  69
2795 C1                  POP   BC          ; 9  78 | 289 restore BC
2796 C9                  RET               ; 9  87 | 307
2797             ;****************
2797             ;mul1632
2797             ;16 by 16 bit unsigned multiplication with 32 bit result.
2797             ;  IN:  HL = operand 1
2797             ;       DE = operand 2
2797             ;  OUT: HL = HL * DE low part
2797             ;       DE = HL * DE high part
2797             ;  USES:-
2797             ;  Size 49 bytes
2797             ;  Time between 303 en 307 cycles
2797             ;****************
2797             mul1632:
2797                     ;HL = HL * DE
2797                     ;        H  L
2797                     ;        D  E
2797                     ;    --------*
2797                     ;          EL
2797                     ;       EH  0
2797                     ;       DL  0
2797                     ;    DH  0  0
2797                     ; -----------+
2797                     ;  P  Q  R  S
2797                     ;S = ELlow
2797                     ;R = ELhigh+EHlow+DLlow
2797                     ;Q = DHlow+EHhigh+DLhigh
2797                     ;P = DHhigh
2797 F5                  PUSH  AF          ;11  11 save AF
2798 C5                  PUSH  BC          ;11  22 save BC
2799 44                  LD    B,H         ; 4  26
279A 4D                  LD    C,L         ; 4  30
279B 62                  LD    H,D         ; 4  34 HL contains DH aka DB
279C 68                  LD    L,B         ; 4  38
279D ED 6C               MLT   HL          ;17  55
279F E5                  PUSH  HL          ;11  66
27A0 62                  LD    H,D         ; 4  70 HL contains DL aka DC
27A1 69                  LD    L,C         ; 4  74
27A2 ED 6C               MLT   HL          ;17  91
27A4 E5                  PUSH  HL          ;11 102
27A5 63                  LD    H,E         ; 4 106 HL contains EH aka EB
27A6 68                  LD    L,B         ; 4 110
27A7 ED 6C               MLT   HL          ;17 127
27A9 E5                  PUSH  HL          ;11 138
27AA 63                  LD    H,E         ; 4 142 HL contains EL aka EC
27AB 69                  LD    L,C         ; 4 146
27AC ED 6C               MLT   HL          ;17 163
27AE D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
27AF 06 00               LD    B,0         ; 6 178
27B1 4A                  LD    C,D         ; 4 182 ..C=EHhigh
27B2 53                  LD    D,E         ; 4 186 ..D=EHlow
27B3 1E 00               LD    E,0         ; 6 192
27B5 19                  ADD   HL,DE       ; 7 199
27B6 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
27B8 03                  INC   BC          ;         4 209
27B9             mul16321:
27B9 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
27BA 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
27BB 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
27BC 19                  ADD   HL,DE       ; 7 231 | 233
27BD 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
27BF 03                  INC   BC          ;         4 243
27C0             mul16322:
27C0                                       ;HL=RS=EL+EH0+DL0
27C0                                       ;C=EHhigh
27C0                                       ;A=DLhigh
27C0                                       ;E=0
27C0 EB                  EX    DE,HL       ; 3 242 | 246
27C1 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
27C2 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
27C3 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
27C4 C1                  POP   BC          ; 9 266 | 270
27C5 09                  ADD   HL,BC       ; 7 273 | 277
27C6 EB                  EX    DE,HL       ; 3 276 | 280
27C7                                       ;D=P=DHhigh
27C7                                       ;E=Q=DHlow+EHhigh+DLhigh
27C7                                       ;H=R=ELhigh+EHlow+DLlow
27C7                                       ;L=S=ELlow
27C7 C1                  POP   BC          ; 9 285 | 289 restore BC
27C8 F1                  POP   AF          ; 9 294 | 298 restore AF
27C9 C9                  RET               ; 9 303 | 307
27CA             ;****************
27CA             ;mul16S
27CA             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
27CA             ;  IN:  HL = operand 1
27CA             ;       DE = operand 2
27CA             ;  OUT: DE = HL * DE high part
27CA             ;       HL = HL * DE low part
27CA             ;  USES:none.
27CA             ;  Size 26 bytes
27CA             ;  Time between 726 en 998 cycles
27CA             ;****************
27CA             mul16S:
27CA F5                  PUSH  AF          ;11  11 save AF
27CB C5                  PUSH  BC          ;11  22 save BC
27CC 44                  LD    B,H         ; 4  26
27CD 4D                  LD    C,L         ; 4  30
27CE 21 00 00            LD    HL,0        ; 9  39
27D1 3E 10               LD    A,16        ; 6  45
27D3             mul16S1:
27D3 29                  ADD   HL,HL       ;16*7=112 157
27D4 CB 13               RL    E           ;16*7=112 269
27D6 CB 12               RL    D           ;16*7=112 381
27D8 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
27DA 09                  ADD   HL,BC       ;             16*7=112 589
27DB 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
27DD 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
27DE             mul16S2:
27DE 3D                  DEC   A           ;16*4=64    573 | 845 | 813
27DF 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
27E1 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
27E2 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
27E3 C9                  RET               ; 9         726 | 998 | 966
27E4             ;****************
27E4             ;div16
27E4             ;16 by 16 bit unsigned division.
27E4             ;  IN:  HL = dividend
27E4             ;       DE = divisor
27E4             ;  OUT: HL = quotient
27E4             ;       DE = remainder
27E4             ;  USES:-
27E4             ;  Size   32 bytes
27E4             ;  Time   between 1073 en 1121 cycles
27E4             ;pseudo code:
27E4             ;T = AC = dividend
27E4             ;D = DE = divisor
27E4             ;Q = AC = quotient = 0
27E4             ;R = HL = remainder = 0
27E4             ;invariante betrekking:
27E4             ; D/T\Q     
27E4             ;   R       
27E4             ; T = QD + R
27E4             ; T <= 2^N  
27E4             ;
27E4             ; D/T'.RT\Q'      
27E4             ;   R'             
27E4             ; RT <= 2^N        
27E4             ; 0<=k<=N          
27E4             ; RT = T % 2^k     
27E4             ; T' = (T-RT) / 2^k
27E4             ; Q' = T' / D      
27E4             ; R' = T' % D      
27E4             ;
27E4             ;for (i=16; i>0; i--) {
27E4             ;  T = T * 2 (remember MSB in carry)
27E4             ;  R = R * 2 + carry
27E4             ;  Q = Q * 2
27E4             ;  if (R >= D) {
27E4             ;    R = R - D;
27E4             ;    Q++;
27E4             ;  }
27E4             ;}
27E4             ;return Q (in HL) and R (in DE)
27E4             ;****************
27E4             div16:
27E4 F5                  PUSH  AF          ;11  11 save registers used
27E5 C5                  PUSH  BC          ;11  22
27E6 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
27E7 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
27E8 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
27EB 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
27ED             div16_1:
27ED CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
27EF CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
27F1 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
27F3 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
27F4 ED 52               SBC   HL,DE       ;16*10=160 653
27F6 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
27F8 0C                  INC   C           ;              16*4= 64 813   Q++
27F9 18 01               JR    div16_3     ;              16*8=128 941
27FB             div16_2:
27FB 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
27FC             div16_3:
27FC 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
27FE EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
27FF 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
2800 69                  LD    L,C         ; 4 1046 | 1094
2801 C1                  POP   BC          ; 9 1055 | 1103
2802 F1                  POP   AF          ; 9 1064 | 1112
2803 C9                  RET               ; 9 1073 | 1121
2804             ;****************
2804             ;div16_8
2804             ;16 by 8 bit unsigned division.
2804             ;  IN:  HL = dividend
2804             ;       A  = divisor
2804             ;  OUT: HL = quotient
2804             ;       A  = remainder
2804             ;  USES:F(lags)
2804             ;  Size 18 bytes
2804             ;  Time between 601 en 697 cycles
2804             ;****************
2804             div16_8:
2804 C5                  PUSH  BC          ;11 11 save registers used
2805 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
2807 4F                  LD    C,A         ; 4 21 move divisor to C
2808 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
2809             div16_82:
2809 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
280A CB 17               RL    A           ;16*7=112 249
280C B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
280D 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
280F 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
2810 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
2811             div16_83:
2811 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
2813 C1                  POP   BC          ;9 592 688
2814 C9                  RET               ;9 601 697
2815             ;****************
2815             ;div8
2815             ;8 by 8 bit unsigned division.
2815             ;  IN:  A = dividend
2815             ;       C = divisor
2815             ;  OUT: A = quotient
2815             ;       C = remainder
2815             ;  USES:F(lags)
2815             ;  Size 26 bytes
2815             ;  Time between 411 and 459 cycles
2815             ;****************
2815             ;pseudo code:
2815             ;T = dividend
2815             ;D = divisor
2815             ;Q = quotient = 0
2815             ;R = remainder = 0
2815             ;invariante betrekking:
2815             ; T = QD + R
2815             ; T <= 2^8  
2815             ;
2815             ; D/T'.RT\Q'      
2815             ;   R'             
2815             ; RT <= 2^8        
2815             ; 0<=k<=8          
2815             ; RT = T % 2^k     
2815             ; T' = (T-RT) / 2^k
2815             ; Q' = T' / D      
2815             ; R' = T' % D      
2815             ;
2815             ;for (i=8; i>0; i--) {
2815             ;  T = T * 2 (remember MSB in carry)
2815             ;  R = R * 2 + carry
2815             ;  Q = Q * 2
2815             ;  if (R >= D) {
2815             ;    R = R - D;
2815             ;    Q++;
2815             ;  }
2815             ;}
2815             ;return Q (in A) and R (in C)
2815             ;****************
2815             ;E = T = dividend
2815             ;C = D = divisor
2815             ;D = Q = quotient
2815             ;A = R = remainder
2815             ;****************
2815             ;  IN:  A = dividend
2815             ;       C  = divisor
2815             div8:
2815 D5                  PUSH  DE          ;11 11 save registers used
2816 C5                  PUSH  BC          ;11 22 save registers used
2817 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
2819 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
281B 5F                  LD    E,A         ; 4 38 E = T = dividend
281C AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
281D             div8_1:
281D CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
281F CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
2821 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
2823 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
2824 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
2826 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
2827 14                  INC   D           ;           8*4=32 354   Q[D]++;
2828             div8_2:           ;                      }
2828 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
282A C1                  POP   BC          ;9        385 433
282B 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
282C 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
282D D1                  POP   DE          ;9        402 450
282E C9                  RET               ;9        411 459
282F             ;****************
282F             ;div8_16
282F             ;8 by 16 bit unsigned division.
282F             ;  IN:  A = dividend
282F             ;       HL = divisor
282F             ;  OUT: A = quotient
282F             ;       C = remainder
282F             ;  USES:F(lags)
282F             ;  Size 13 bytes (plus dependency on div8)
282F             ;  Time 31 or between 436 and 484 cycles
282F             ;****************
282F             ;invariante betrekking:
282F             ; T = dividend
282F             ; D = divisor
282F             ; Q = quotient
282F             ; R = remainder
282F             ; T = QD + R
282F             ;pseudo code:
282F             ; if D >= 256 {
282F             ;   R = T
282F             ;   Q = 0
282F             ; } else {
282F             ;   R = T/D (using div8)
282F             ;   Q = T%D (using div8)
282F             ; }
282F             ;****************
282F             
282F             
282F             div8_16:
282F 4F                  LD    C,A         ;  4  4         save dividend(A) in C
2830 7C                  LD    A,H         ;  4  8         if D >= 256 {
2831 B7                  OR    A,A         ;  4 12
2832 28 02               JR    Z,div8_161  ;  6 18  8  20
2834 AF                  XOR   A,A         ;  4 22           R = T;
2835 C9                  RET               ;  9 31           Q = 0;
2836             div8_161:                     ;               } else {
2836 79                  LD    A,C         ;        4  24    restore dividend into A
2837 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
2838 CD 15 28            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
283B C9                  RET               ; 9  436/484    }
283C             ;****************
283C             ;read
283C             ;read a 16 bit unsigned number from the input
283C             ;  IN:  none
283C             ;  OUT: HL = 16 bit unsigned number
283C             ;  USES:-
283C             ;****************
283C             read:
283C F5                  PUSH  AF
283D 21 00 00            LD    HL,0        ;result = 0;
2840             read1:
2840 CD E6 26            CALL  getChar     ;check if a character is available.
2843 28 FB               JR    Z,read1     ;-no: wait for it.
2845 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
2847 28 0C               JR    Z,read2
2849 CD 81 27            CALL  mul16_10    ;result *= 10;
284C D6 30               SUB   A,'0'       ;digit = char - '0';
284E 85                  ADD   A,L         ;result += digit;
284F 6F                  LD    L,A
2850 30 EE               JR    NC,read1     ;get next character
2852 24                  INC   H
2853 18 EB               JR    read1        ;get next character
2855             read2:
2855 F1                  POP   AF
2856 C9                  RET
2857             ;****************
2857             ;writeLineHL
2857             ;write a 16 bit unsigned number to the output, followed by a carriage return
2857             ;  IN:  HL = 16 bit unsigned number
2857             ;  OUT: none
2857             ;  USES:HL
2857             ;****************
2857             writeLineHL:
2857 CD 5E 28            CALL  writeHL
285A CD 27 27            CALL  putCRLF
285D C9                  RET
285E             ;****************
285E             ;writeHL
285E             ;write a 16 bit unsigned number to the output
285E             ;  IN:  HL = 16 bit unsigned number
285E             ;  OUT: none
285E             ;  USES:HL
285E             ;****************
285E             writeHL:
285E C5                  PUSH  BC          ;save registers used
285F F5                  PUSH  AF
2860 06 00               LD    B,0         ;number of digits on stack
2862 7C                  LD    A,H         ;is HL=0?
2863 B5                  OR    A,L
2864 20 03               JR    NZ,writeHL1
2866 04                  INC   B           ;write a single digit 0
2867 18 0C               JR    writeHL3
2869             writeHL1:
2869 3E 0A               LD    A,10        ;divide HL by 10
286B CD 04 28            CALL  div16_8
286E F5                  PUSH  AF          ;put remainder on stack
286F 04                  INC   B
2870 7C                  LD    A,H         ;is quotient 0?
2871 B5                  OR    A,L
2872 20 F5               JR    NZ,writeHL1
2874             writeHL2:
2874 F1                  POP   AF          ;write digit
2875             writeHL3:
2875 C6 30               ADD   A,'0'
2877 CD 1A 27            CALL  putChar
287A 10 F8               DJNZ  writeHL2
287C F1                  POP   AF          ;restore registers used
287D C1                  POP   BC
287E C9                  RET
287F             ;****************
287F             ;writeLineA
287F             ;write an 8-bit unsigned number to the output, followed by a carriage return
287F             ;  IN:  A = 8-bit unsigned number
287F             ;  OUT: none
287F             ;  USES:none
287F             ;****************
287F             writeLineA:
287F CD 86 28            CALL  writeA
2882 CD 27 27            CALL  putCRLF
2885 C9                  RET
2886             ;****************
2886             ;writeA
2886             ;write an 8-bit unsigned number to the output
2886             ;  IN:  A = 8-bit unsigned number
2886             ;  OUT: none
2886             ;  USES:none
2886             ;****************
2886             writeA:
2886 E5                  PUSH  HL          ;save registers used
2887 26 00               LD    H,0
2889 6F                  LD    L,A
288A CD 5E 28            CALL  writeHL
288D E1                  POP   HL
288E C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20C9 :
    L101 = 20CB :
    L102 = 20CD :
    L103 = 20D2 :
    L104 = 20D2 : 20EA
    L105 = 20D5 :
    L106 = 20D8 :
    L107 = 20DF :
    L108 = 20E3 :
    L109 = 20E6 :
     L11 = 2013 :
    L110 = 20E8 :
    L111 = 20EA :
    L112 = 20ED :
    L113 = 20ED :
    L114 = 20ED :
    L115 = 20ED :
    L116 = 20ED :
    L117 = 20EF :
    L118 = 20F2 :
    L119 = 20F2 : 210E
     L12 = 2013 :
    L120 = 20F5 :
    L121 = 20F8 :
    L122 = 20FF :
    L123 = 2102 :
    L124 = 2106 :
    L125 = 2108 :
    L126 = 210E :
    L127 = 2111 :
    L128 = 2111 : 212D
    L129 = 2114 :
     L13 = 2015 :
    L130 = 2117 :
    L131 = 211E :
    L132 = 2121 :
    L133 = 2125 :
    L134 = 2127 :
    L135 = 212D :
    L136 = 2130 :
    L137 = 2130 : 214E
    L138 = 2133 :
    L139 = 2136 :
     L14 = 2018 :
    L140 = 213D :
    L141 = 2140 :
    L142 = 2144 :
    L143 = 2146 :
    L144 = 214C :
    L145 = 2151 :
    L146 = 2151 : 216D
    L147 = 2154 :
    L148 = 2157 :
    L149 = 215E :
     L15 = 201B :
    L150 = 2161 :
    L151 = 2165 :
    L152 = 2167 :
    L153 = 216D :
    L154 = 2170 :
    L155 = 2170 :
    L156 = 2172 :
    L157 = 2175 :
    L158 = 2175 : 2198
    L159 = 2178 :
     L16 = 201B :
    L160 = 217B :
    L161 = 2182 :
    L162 = 2189 :
    L163 = 218C :
    L164 = 2190 :
    L165 = 2192 :
    L166 = 2198 :
    L167 = 219B :
    L168 = 219B : 21BE 21C1
    L169 = 219E :
     L17 = 201B : 2018
    L170 = 21A1 :
    L171 = 21A8 :
    L172 = 21AF :
    L173 = 21B2 :
    L174 = 21B6 :
    L175 = 21B8 :
    L176 = 21BE :
    L177 = 21C4 :
    L178 = 21C4 :
    L179 = 21C4 :
     L18 = 201B :
    L180 = 21C4 :
    L181 = 21C4 :
    L182 = 21C4 :
    L183 = 21C4 :
    L184 = 21C4 :
    L185 = 21C4 :
    L186 = 21C7 :
    L187 = 21CA :
    L188 = 21CA : 21E4
    L189 = 21CD :
     L19 = 201D :
    L190 = 21D0 :
    L191 = 21D7 :
    L192 = 21DA :
    L193 = 21DE :
    L194 = 21E4 :
    L195 = 21E7 :
    L196 = 21E7 : 2201
    L197 = 21EA :
    L198 = 21ED :
    L199 = 21F4 :
      L2 = 2009 :
     L20 = 2023 :
    L200 = 21F7 :
    L201 = 21FB :
    L202 = 2201 :
    L203 = 2204 :
    L204 = 2204 : 221E
    L205 = 2207 :
    L206 = 220A :
    L207 = 2211 :
    L208 = 2214 :
    L209 = 2218 :
     L21 = 2027 :
    L210 = 221E :
    L211 = 2221 :
    L212 = 2221 : 223B 223E
    L213 = 2224 :
    L214 = 2227 :
    L215 = 222E :
    L216 = 2231 :
    L217 = 2235 :
    L218 = 223B :
    L219 = 2241 :
     L22 = 2027 :
    L220 = 2241 :
    L221 = 2244 :
    L222 = 2247 :
    L223 = 2247 : 226A
    L224 = 224A :
    L225 = 224D :
    L226 = 2254 :
    L227 = 225B :
    L228 = 225E :
    L229 = 2262 :
     L23 = 2029 :
    L230 = 2268 :
    L231 = 226D :
    L232 = 226D : 228E
    L233 = 2270 :
    L234 = 2273 :
    L235 = 227A :
    L236 = 2281 :
    L237 = 2284 :
    L238 = 2288 :
    L239 = 228E :
     L24 = 202C :
    L240 = 2291 :
    L241 = 2291 :
    L242 = 2291 :
    L243 = 2291 :
    L244 = 2291 :
    L245 = 2291 :
    L246 = 2293 :
    L247 = 2296 :
    L248 = 2296 : 22A5 22A8
    L249 = 2299 :
     L25 = 202C :
    L250 = 229C :
    L251 = 22A0 :
    L252 = 22A3 :
    L253 = 22A5 :
    L254 = 22AB :
    L255 = 22AB :
    L256 = 22AB :
    L257 = 22AD :
    L258 = 22B0 :
    L259 = 22B0 : 22C8
     L26 = 202C :
    L260 = 22B3 :
    L261 = 22B6 :
    L262 = 22BD :
    L263 = 22C0 :
    L264 = 22C2 :
    L265 = 22C8 :
    L266 = 22CB :
    L267 = 22CB :
    L268 = 22CB :
    L269 = 22CB :
     L27 = 202C :
    L270 = 22CB :
    L271 = 22CE :
    L272 = 22D1 :
    L273 = 22D1 :
    L274 = 22D3 :
    L275 = 22D6 :
    L276 = 22D6 : 22F0
    L277 = 22D9 :
    L278 = 22DC :
    L279 = 22E0 :
     L28 = 202C :
    L280 = 22E7 :
    L281 = 22EA :
    L282 = 22F0 :
    L283 = 22F3 :
    L284 = 22F3 :
    L285 = 22F3 :
    L286 = 22F3 :
    L287 = 22F3 :
    L288 = 22F3 :
    L289 = 22F3 :
     L29 = 202F :
    L290 = 22F5 :
    L291 = 22F8 :
    L292 = 22F8 :
    L293 = 22F8 :
    L294 = 22F8 :
    L295 = 22F8 :
    L296 = 22FA :
    L297 = 22FD :
    L298 = 22FD :
    L299 = 22FD :
      L3 = 2009 :
     L30 = 2032 :
    L300 = 22FD :
    L301 = 22FD :
    L302 = 22FF :
    L303 = 2302 :
    L304 = 2302 :
    L305 = 2302 :
    L306 = 2302 :
    L307 = 2302 :
    L308 = 2304 :
    L309 = 2307 :
     L31 = 2032 :
    L310 = 2307 :
    L311 = 2307 :
    L312 = 2307 :
    L313 = 2307 :
    L314 = 2307 :
    L315 = 2307 :
    L316 = 2309 :
    L317 = 230C :
    L318 = 230C :
    L319 = 230C :
     L32 = 2036 :
    L320 = 230C :
    L321 = 230C :
    L322 = 230E :
    L323 = 2311 :
    L324 = 2311 :
    L325 = 2311 :
    L326 = 2311 :
    L327 = 2311 :
    L328 = 2313 :
    L329 = 2316 :
     L33 = 2036 : 205A
    L330 = 2316 :
    L331 = 2316 :
    L332 = 2316 :
    L333 = 2316 :
    L334 = 2318 :
    L335 = 231B :
    L336 = 231B :
    L337 = 231B :
    L338 = 231B :
    L339 = 231B :
     L34 = 2036 :
    L340 = 231B :
    L341 = 231D :
    L342 = 2320 :
    L343 = 2320 : 2331 2334
    L344 = 2323 :
    L345 = 2326 :
    L346 = 232A :
    L347 = 232D :
    L348 = 232F :
    L349 = 2331 :
     L35 = 2039 :
    L350 = 2337 :
    L351 = 2337 :
    L352 = 2337 :
    L353 = 2337 :
    L354 = 2337 :
    L355 = 2339 :
    L356 = 233C :
    L357 = 233C : 2359 235C
    L358 = 233F :
    L359 = 2342 :
     L36 = 203F :
    L360 = 2349 :
    L361 = 234C :
    L362 = 2350 :
    L363 = 2352 :
    L364 = 2359 :
    L365 = 235F :
    L366 = 235F :
    L367 = 235F :
    L368 = 2361 :
    L369 = 2364 :
     L37 = 203F :
    L370 = 2364 :
    L371 = 2367 :
    L372 = 236A :
    L373 = 236A :
    L374 = 236A : 2388 238B
    L375 = 236D :
    L376 = 2370 :
    L377 = 2374 :
    L378 = 237B :
    L379 = 237E :
     L38 = 2042 :
    L380 = 2382 :
    L381 = 2388 :
    L382 = 238E :
    L383 = 238E :
    L384 = 238E :
    L385 = 238E :
    L386 = 238E :
    L387 = 238E :
    L388 = 2390 :
    L389 = 2393 :
     L39 = 2045 :
    L390 = 2393 : 23A9
    L391 = 2396 :
    L392 = 2399 :
    L393 = 239D :
    L394 = 23A0 :
    L395 = 23A2 :
    L396 = 23A3 :
    L397 = 23A5 :
    L398 = 23A7 :
    L399 = 23A9 :
      L4 = 2009 :
     L40 = 2045 :
    L400 = 23AC :
    L401 = 23AC :
    L402 = 23AC :
    L403 = 23AE :
    L404 = 23B1 :
    L405 = 23B1 : 23D5 23D8
    L406 = 23B4 :
    L407 = 23B7 :
    L408 = 23BB :
    L409 = 23C2 :
     L41 = 2048 :
    L410 = 23C4 :
    L411 = 23C6 :
    L412 = 23C7 :
    L413 = 23CA :
    L414 = 23CE :
    L415 = 23CF :
    L416 = 23D5 :
    L417 = 23DB :
    L418 = 23DB :
    L419 = 23DB :
     L42 = 204B :
    L420 = 23DD :
    L421 = 23E0 :
    L422 = 23E0 :
    L423 = 23E2 :
    L424 = 23E5 :
    L425 = 23E5 : 2407 240A
    L426 = 23E8 :
    L427 = 23EB :
    L428 = 23F2 :
    L429 = 23F5 :
     L43 = 204B :
    L430 = 23F9 :
    L431 = 23FA :
    L432 = 23FD :
    L433 = 23FF :
    L434 = 2400 :
    L435 = 2407 :
    L436 = 240D :
    L437 = 240D :
    L438 = 240D :
    L439 = 240F :
     L44 = 204F :
    L440 = 2412 :
    L441 = 2412 :
    L442 = 2415 :
    L443 = 2418 :
    L444 = 2418 : 243C
    L445 = 241B :
    L446 = 241E :
    L447 = 2422 :
    L448 = 2429 :
    L449 = 242C :
     L45 = 204F :
    L450 = 2430 :
    L451 = 2431 :
    L452 = 2434 :
    L453 = 2438 :
    L454 = 243C :
    L455 = 243F :
    L456 = 243F :
    L457 = 243F :
    L458 = 243F :
    L459 = 243F :
     L46 = 2052 :
    L460 = 243F :
    L461 = 2441 :
    L462 = 2444 :
    L463 = 2444 :
    L464 = 2446 :
    L465 = 2449 :
    L466 = 2449 : 2463 2466
    L467 = 244C :
    L468 = 244F :
    L469 = 2456 :
     L47 = 2055 :
    L470 = 245A :
    L471 = 245C :
    L472 = 245E :
    L473 = 2463 :
    L474 = 2469 :
    L475 = 2469 :
    L476 = 2469 :
    L477 = 246B :
    L478 = 246E :
    L479 = 246E :
     L48 = 2055 :
    L480 = 2470 :
    L481 = 2473 :
    L482 = 2473 : 2491 2494
    L483 = 2476 :
    L484 = 2479 :
    L485 = 247D :
    L486 = 2484 :
    L487 = 2486 :
    L488 = 2488 :
    L489 = 248B :
     L49 = 2058 :
    L490 = 2491 :
    L491 = 2497 :
    L492 = 2497 :
    L493 = 2497 :
    L494 = 2499 :
    L495 = 249C :
    L496 = 249C :
    L497 = 249E :
    L498 = 24A1 :
    L499 = 24A1 : 24C3 24C6
      L5 = 2009 :
     L50 = 205A :
    L500 = 24A4 :
    L501 = 24A7 :
    L502 = 24AE :
    L503 = 24B2 :
    L504 = 24B5 :
    L505 = 24B9 :
    L506 = 24BC :
    L507 = 24C3 :
    L508 = 24C9 :
    L509 = 24C9 :
     L51 = 205D :
    L510 = 24C9 :
    L511 = 24CC :
    L512 = 24CF :
    L513 = 24CF :
    L514 = 24D1 :
    L515 = 24D4 :
    L516 = 24D4 : 24F3 24F6
    L517 = 24D7 :
    L518 = 24DA :
    L519 = 24DE :
     L52 = 205D :
    L520 = 24E5 :
    L521 = 24E8 :
    L522 = 24EC :
    L523 = 24F3 :
    L524 = 24F9 :
    L525 = 24F9 :
    L526 = 24F9 :
    L527 = 24F9 :
    L528 = 24F9 :
    L529 = 24F9 :
     L53 = 205D :
    L530 = 24F9 :
    L531 = 24FB :
    L532 = 24FE :
    L533 = 24FE :
    L534 = 2500 :
    L535 = 2503 :
    L536 = 2503 :
    L537 = 2503 :
    L538 = 2503 :
    L539 = 2505 :
     L54 = 205D :
    L540 = 2508 :
    L541 = 2508 :
    L542 = 250A :
    L543 = 250D :
    L544 = 250D :
    L545 = 250D :
    L546 = 250D :
    L547 = 250F :
    L548 = 2512 :
    L549 = 2512 :
     L55 = 205D :
    L550 = 2514 :
    L551 = 2517 :
    L552 = 2517 :
    L553 = 2517 :
    L554 = 2517 :
    L555 = 2519 :
    L556 = 251C :
    L557 = 251C :
    L558 = 251E :
    L559 = 2521 :
     L56 = 205D :
    L560 = 2521 :
    L561 = 2521 :
    L562 = 2521 :
    L563 = 2521 :
    L564 = 2521 :
    L565 = 2521 :
    L566 = 2523 :
    L567 = 2526 :
    L568 = 2526 :
    L569 = 2528 :
     L57 = 205D :
    L570 = 252B :
    L571 = 252B :
    L572 = 252B :
    L573 = 252B :
    L574 = 252D :
    L575 = 2530 :
    L576 = 2530 :
    L577 = 2532 :
    L578 = 2535 :
    L579 = 2535 :
     L58 = 205D :
    L580 = 2535 :
    L581 = 2535 :
    L582 = 2537 :
    L583 = 253A :
    L584 = 253A :
    L585 = 253C :
    L586 = 253F :
    L587 = 253F :
    L588 = 253F :
    L589 = 253F :
     L59 = 205D :
    L590 = 2541 :
    L591 = 2544 :
    L592 = 2544 :
    L593 = 2546 :
    L594 = 2549 :
    L595 = 2549 :
    L596 = 2549 :
    L597 = 2549 :
    L598 = 2549 :
    L599 = 2549 :
      L6 = 2009 : 2003
     L60 = 205D : 206E
    L600 = 254B :
    L601 = 254E :
    L602 = 254E : 255D 2560
    L603 = 2551 :
    L604 = 2554 :
    L605 = 2558 :
    L606 = 255B :
    L607 = 255D :
    L608 = 2563 :
    L609 = 2563 :
     L61 = 2060 :
    L610 = 2563 :
    L611 = 2563 :
    L612 = 2565 :
    L613 = 2568 :
    L614 = 2568 :
    L615 = 256A :
    L616 = 256D :
    L617 = 256D :
    L618 = 256D :
    L619 = 256F :
     L62 = 2063 :
    L620 = 2572 :
    L621 = 2572 : 258B 258E
    L622 = 2575 :
    L623 = 2578 :
    L624 = 257F :
    L625 = 2582 :
    L626 = 2584 :
    L627 = 258B :
    L628 = 2591 :
    L629 = 2591 :
     L63 = 2067 :
    L630 = 2591 :
    L631 = 2594 :
    L632 = 2597 :
    L633 = 2597 :
    L634 = 2599 :
    L635 = 259C :
    L636 = 259C : 25B6 25B9
    L637 = 259F :
    L638 = 25A2 :
    L639 = 25A6 :
     L64 = 206A :
    L640 = 25AD :
    L641 = 25B0 :
    L642 = 25B6 :
    L643 = 25BC :
    L644 = 25BC :
    L645 = 25BC :
    L646 = 25BC :
    L647 = 25BC :
    L648 = 25BC : 25CF
    L649 = 25BF :
     L65 = 206C :
    L650 = 25C2 :
    L651 = 25C6 :
    L652 = 25C8 :
    L653 = 25CA :
    L654 = 25CF :
    L655 = 25D2 :
    L656 = 25D2 :
    L657 = 25D2 :
    L658 = 25D2 :
    L659 = 25D4 :
     L66 = 206E :
    L660 = 25D7 :
    L661 = 25D7 : 25F1 25F4
    L662 = 25DA :
    L663 = 25DD :
    L664 = 25E1 :
    L665 = 25E4 :
    L666 = 25E8 :
    L667 = 25EB :
    L668 = 25F1 :
    L669 = 25F7 :
     L67 = 2071 :
    L670 = 25F7 :
    L671 = 25F7 :
    L672 = 25F9 :
    L673 = 25FC :
    L674 = 25FC : 2617 261A
    L675 = 25FF :
    L676 = 2602 :
    L677 = 2609 :
    L678 = 260B :
    L679 = 260D :
     L68 = 2071 : 2082
    L680 = 2610 :
    L681 = 2617 :
    L682 = 261D :
    L683 = 261D :
    L684 = 261D :
    L685 = 2620 :
    L686 = 2623 :
    L687 = 2623 :
    L688 = 2625 :
    L689 = 2628 :
     L69 = 2074 :
    L690 = 2628 : 2647
    L691 = 262B :
    L692 = 262E :
    L693 = 2632 :
    L694 = 2639 :
    L695 = 263C :
    L696 = 2640 :
    L697 = 2647 :
    L698 = 264A :
    L699 = 264A :
      L7 = 200B :
     L70 = 2077 :
    L700 = 264A :
    L701 = 264A :
    L702 = 264A :
    L703 = 264A :
    L704 = 264C :
    L705 = 264F :
    L706 = 264F : 265F 2662
    L707 = 2652 :
    L708 = 2655 :
    L709 = 2659 :
     L71 = 207B :
    L710 = 265C :
    L711 = 265F :
    L712 = 2665 :
    L713 = 2665 :
    L714 = 2665 :
    L715 = 2667 :
    L716 = 266A :
    L717 = 266A : 2680 2683
    L718 = 266D :
    L719 = 2670 :
     L72 = 207E :
    L720 = 2674 :
    L721 = 2677 :
    L722 = 267A :
    L723 = 2680 :
    L724 = 2686 :
    L725 = 2686 :
    L726 = 2686 :
    L727 = 2689 :
    L728 = 268C :
    L729 = 268C :
     L73 = 2080 :
    L730 = 268E :
    L731 = 2691 :
    L732 = 2691 : 26AB 26AE
    L733 = 2694 :
    L734 = 2697 :
    L735 = 269E :
    L736 = 26A1 :
    L737 = 26A4 :
    L738 = 26AB :
    L739 = 26B1 :
     L74 = 2082 :
    L740 = 26B1 :
    L741 = 26B1 :
    L742 = 26B3 :
    L743 = 26B6 :
    L744 = 26B6 : 26CF 26D2
    L745 = 26B9 :
    L746 = 26BC :
    L747 = 26C3 :
    L748 = 26C6 :
    L749 = 26CF :
     L75 = 2085 :
    L750 = 26D5 :
    L751 = 26D5 :
    L752 = 26D5 :
    L753 = 26D5 :
    L754 = 26D5 :
    L755 = 26D5 :
    L756 = 26D5 :
    L757 = 26D5 :
    L758 = 26D5 :
    L759 = 26D5 :
     L76 = 2085 : 2096
    L760 = 26D5 :
    L761 = 26D5 :
    L762 = 26D5 :
    L763 = 26D5 :
    L764 = 26D5 :
    L765 = 26D5 :
    L766 = 26D5 :
    L767 = 26D5 :
    L768 = 26D5 :
    L769 = 26D5 :
     L77 = 2088 :
    L770 = 26D5 :
    L771 = 26D5 :
    L772 = 26D5 :
    L773 = 26D5 :
    L774 = 26D5 :
    L775 = 26D5 :
    L776 = 26D5 :
    L777 = 26D5 :
    L778 = 26D5 :
    L779 = 26D5 :
     L78 = 208B :
    L780 = 26D5 :
    L781 = 26D5 :
    L782 = 26D5 :
    L783 = 26D5 :
    L784 = 26D5 :
    L785 = 26D8 :
    L786 = 26DB :
    L787 = 26DB :
    L788 = 26DD :
    L789 = 26DF :
     L79 = 208F :
    L790 = 26E0 :
    L791 = 26E0 : 26D5
      L8 = 200E :
     L80 = 2092 :
     L81 = 2094 :
     L82 = 2096 :
     L83 = 2099 :
     L84 = 2099 : 20AA 20AD
     L85 = 209C :
     L86 = 209F :
     L87 = 20A3 :
     L88 = 20A6 :
     L89 = 20A8 :
      L9 = 200E :
     L90 = 20AA :
     L91 = 20B0 :
     L92 = 20B0 :
     L93 = 20B2 :
     L94 = 20B5 :
     L95 = 20B5 : 20CF
     L96 = 20B8 :
     L97 = 20BB :
     L98 = 20C2 :
     L99 = 20C6 :
   div16 = 27E4 :
 div16_1 = 27ED : 27FC
 div16_2 = 27FB : 27F6
 div16_3 = 27FC : 27F9
 div16_8 = 2804 : 286B
div16_82 = 2809 : 2811
div16_83 = 2811 : 280D
    div8 = 2815 : 2838
  div8_1 = 281D : 2828
 div8_16 = 282F :
div8_161 = 2836 : 2832
  div8_2 = 2828 : 2824
 getChar = 26E6 : 2840
getChar1 = 26F4 : 26EB
   mul16 = 2768 :
 mul1632 = 2797 :
mul16321 = 27B9 : 27B6
mul16322 = 27C0 : 27BD
  mul16S = 27CA :
 mul16S1 = 27D3 : 27DF
 mul16S2 = 27DE : 27D8 27DB
mul16_10 = 2781 : 2849
 mul16_8 = 278A :
 putBell = 2740 :
 putCRLF = 2727 : 2707 285A 2882
 putChar = 271A : 2711 272A 272F 2736 273E 2742 2763 2877
putChar1 = 271B : 2720
putErase = 2734 :
 putHexA = 274F : 2746 274A
putHexA1 = 2758 : 2754
putHexA2 = 2763 : 275F
putHexHL = 2744 :
  putMsg = 26FE :
putSpace = 2718 : 2739
 putStr1 = 270C : 2714
 putStr2 = 2716 : 270F
    read = 283C :
   read1 = 2840 : 2843 2850 2853
   read2 = 2855 : 2847
   start = 2000 :
  writeA = 2886 : 287F
 writeHL = 285E : 2857 288A
writeHL1 = 2869 : 2864 2872
writeHL2 = 2874 : 287A
writeHL3 = 2875 : 2867
writeLineA = 287F : 2029 202F 2052 2060 2074 2088 209C 2299 22D9 22F5 22FA 22FF
                : 2304 2309 230E 2313 2318 2323 236D 2396 23B4 241B 2476 24D7
                : 24FB 2500 2505 250A 250F 2514 2519 251E 2523 2528 252D 2532
                : 2537 253C 2541 2546 2551 2565 256A 259F 25BF 25DA 262B 2652
                : 266D
writeLineHL = 2857 : 20B8 20D5 20F5 2114 2133 2154 2178 219E 21CD 21EA 2207 2224
                : 224A 2270 22B3 233F 23E8 244C 24A4 2575 25FF 2694 26B9
writeLineStr = 2704 : 26D8
writeStr = 270B : 26FF 2704
