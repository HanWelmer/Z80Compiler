2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testDo.j(0) /* Program to test generated Z80 assembler code */
2009             L3:
2009                     ;;testDo.j(1) class TestDo {
2009             L4:
2009                     ;class TestDo []
2009             L5:
2009                     ;;testDo.j(2)   private static byte b = 1;
2009             L6:
2009 3E 01               LD    A,1
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testDo.j(3)   private static word i = 12;
200E             L9:
200E 3E 0C               LD    A,12
2010             L10:
2010 6F                  LD    L,A
2011 26 00               LD    H,0
2013 22 01 50            LD    (05001H),HL
2016             L11:
2016                     ;;testDo.j(4)   private static word p = 12;
2016             L12:
2016 3E 0C               LD    A,12
2018             L13:
2018 6F                  LD    L,A
2019 26 00               LD    H,0
201B 22 03 50            LD    (05003H),HL
201E             L14:
201E C3 21 20            JP    L17
2021             L15:
2021                     ;;testDo.j(5) 
2021             L16:
2021                     ;;testDo.j(6)   public static void main() {
2021             L17:
2021                     ;method TestDo.main [public, static] void ()
2021             L18:
2021 DD E5               PUSH  IX
2023             L19:
2023 DD 21 00 00         LD    IX,0x0000
2027 DD 39               ADD   IX,SP
2029             L20:
2029 3B                  DEC   SP
202A 3B                  DEC   SP
202B 3B                  DEC   SP
202C 3B                  DEC   SP
202D             L21:
202D                     ;;testDo.j(7)     println(0);
202D             L22:
202D 3E 00               LD    A,0
202F             L23:
202F CD B2 28            CALL  writeLineA
2032             L24:
2032                     ;;testDo.j(8)   
2032             L25:
2032                     ;;testDo.j(9)     /************************/
2032             L26:
2032                     ;;testDo.j(10)     // global variable within do scope
2032             L27:
2032                     ;;testDo.j(11)     println (b);
2032             L28:
2032 3A 00 50            LD    A,(05000H)
2035             L29:
2035 CD B2 28            CALL  writeLineA
2038             L30:
2038                     ;;testDo.j(12)     b++;
2038             L31:
2038 21 00 50            LD    HL,05000H
203B 34                  INC   (HL)
203C             L32:
203C                     ;;testDo.j(13)     do {
203C             L33:
203C                     ;;testDo.j(14)       word j = 1001;
203C             L34:
203C 21 E9 03            LD    HL,1001
203F             L35:
203F DD 75 FE            LD    (IX - 2),L
2042 DD 74 FF            LD    (IX - 1),H
2045             L36:
2045                     ;;testDo.j(15)       byte c = b;
2045             L37:
2045 3A 00 50            LD    A,(05000H)
2048             L38:
2048 DD 77 FD            LD    (IX - 3),A
204B             L39:
204B                     ;;testDo.j(16)       byte d = c;
204B             L40:
204B DD 7E FD            LD    A,(IX - 3)
204E             L41:
204E DD 77 FC            LD    (IX - 4),A
2051             L42:
2051                     ;;testDo.j(17)       b++;
2051             L43:
2051 21 00 50            LD    HL,05000H
2054 34                  INC   (HL)
2055             L44:
2055                     ;;testDo.j(18)       println (c);
2055             L45:
2055 DD 7E FD            LD    A,(IX - 3)
2058             L46:
2058 CD B2 28            CALL  writeLineA
205B             L47:
205B                     ;;testDo.j(19)     } while (b<2);
205B             L48:
205B 3A 00 50            LD    A,(05000H)
205E             L49:
205E D6 02               SUB   A,2
2060             L50:
2060 DA 3C 20            JP    C,L33
2063             L51:
2063                     ;;testDo.j(20)   
2063             L52:
2063                     ;;testDo.j(21)     /************************/
2063             L53:
2063                     ;;testDo.j(22)     // constant - constant
2063             L54:
2063                     ;;testDo.j(23)     // not relevant
2063             L55:
2063                     ;;testDo.j(24)   
2063             L56:
2063                     ;;testDo.j(25)     /************************/
2063             L57:
2063                     ;;testDo.j(26)     // constant - acc
2063             L58:
2063                     ;;testDo.j(27)     // byte - byte
2063             L59:
2063                     ;;testDo.j(28)     do { println (b); b++; } while (103 == b+100);
2063             L60:
2063 3A 00 50            LD    A,(05000H)
2066             L61:
2066 CD B2 28            CALL  writeLineA
2069             L62:
2069 21 00 50            LD    HL,05000H
206C 34                  INC   (HL)
206D             L63:
206D 3A 00 50            LD    A,(05000H)
2070             L64:
2070 C6 64               ADD   A,100
2072             L65:
2072 D6 67               SUB   A,103
2074             L66:
2074 CA 63 20            JP    Z,L60
2077             L67:
2077                     ;;testDo.j(29)     do { println (b); b++; } while (106 != b+100);
2077             L68:
2077 3A 00 50            LD    A,(05000H)
207A             L69:
207A CD B2 28            CALL  writeLineA
207D             L70:
207D 21 00 50            LD    HL,05000H
2080 34                  INC   (HL)
2081             L71:
2081 3A 00 50            LD    A,(05000H)
2084             L72:
2084 C6 64               ADD   A,100
2086             L73:
2086 D6 6A               SUB   A,106
2088             L74:
2088 C2 77 20            JP    NZ,L68
208B             L75:
208B                     ;;testDo.j(30)     do { println (b); b++; } while (108 >  b+100);
208B             L76:
208B 3A 00 50            LD    A,(05000H)
208E             L77:
208E CD B2 28            CALL  writeLineA
2091             L78:
2091 21 00 50            LD    HL,05000H
2094 34                  INC   (HL)
2095             L79:
2095 3A 00 50            LD    A,(05000H)
2098             L80:
2098 C6 64               ADD   A,100
209A             L81:
209A D6 6C               SUB   A,108
209C             L82:
209C DA 8B 20            JP    C,L76
209F             L83:
209F                     ;;testDo.j(31)     do { println (b); b++; } while (109 >= b+100);
209F             L84:
209F 3A 00 50            LD    A,(05000H)
20A2             L85:
20A2 CD B2 28            CALL  writeLineA
20A5             L86:
20A5 21 00 50            LD    HL,05000H
20A8 34                  INC   (HL)
20A9             L87:
20A9 3A 00 50            LD    A,(05000H)
20AC             L88:
20AC C6 64               ADD   A,100
20AE             L89:
20AE D6 6D               SUB   A,109
20B0             L90:
20B0 DA 9F 20            JP    C,L84
20B3 CA 9F 20            JP    Z,L84
20B6             L91:
20B6                     ;;testDo.j(32)     p=10;
20B6             L92:
20B6 3E 0A               LD    A,10
20B8             L93:
20B8 6F                  LD    L,A
20B9 26 00               LD    H,0
20BB 22 03 50            LD    (05003H),HL
20BE             L94:
20BE                     ;;testDo.j(33)     do { println (p); p++; b--; } while (108 <  b+100);
20BE             L95:
20BE 2A 03 50            LD    HL,(05003H)
20C1             L96:
20C1 CD 8A 28            CALL  writeLineHL
20C4             L97:
20C4 2A 03 50            LD    HL,(05003H)
20C7 23                  INC   HL
20C8 22 03 50            LD    (05003H),HL
20CB             L98:
20CB 21 00 50            LD    HL,05000H
20CE 35                  DEC   (HL)
20CF             L99:
20CF 3A 00 50            LD    A,(05000H)
20D2             L100:
20D2 C6 64               ADD   A,100
20D4             L101:
20D4 D6 6C               SUB   A,108
20D6             L102:
20D6 28 03               JR    Z,$+3
20D8 DA BE 20            JP    NC,L95
20DB             L103:
20DB                     ;;testDo.j(34)     do { println (p); p++; b--; } while (107 <= b+100);
20DB             L104:
20DB 2A 03 50            LD    HL,(05003H)
20DE             L105:
20DE CD 8A 28            CALL  writeLineHL
20E1             L106:
20E1 2A 03 50            LD    HL,(05003H)
20E4 23                  INC   HL
20E5 22 03 50            LD    (05003H),HL
20E8             L107:
20E8 21 00 50            LD    HL,05000H
20EB 35                  DEC   (HL)
20EC             L108:
20EC 3A 00 50            LD    A,(05000H)
20EF             L109:
20EF C6 64               ADD   A,100
20F1             L110:
20F1 D6 6B               SUB   A,107
20F3             L111:
20F3 D2 DB 20            JP    NC,L104
20F6             L112:
20F6                     ;;testDo.j(35)   
20F6             L113:
20F6                     ;;testDo.j(36)     // constant - acc
20F6             L114:
20F6                     ;;testDo.j(37)     // byte - integer
20F6             L115:
20F6                     ;;testDo.j(38)     i=14;
20F6             L116:
20F6 3E 0E               LD    A,14
20F8             L117:
20F8 6F                  LD    L,A
20F9 26 00               LD    H,0
20FB 22 01 50            LD    (05001H),HL
20FE             L118:
20FE                     ;;testDo.j(39)     do { println (i); i++; } while (15 == i+0);
20FE             L119:
20FE 2A 01 50            LD    HL,(05001H)
2101             L120:
2101 CD 8A 28            CALL  writeLineHL
2104             L121:
2104 2A 01 50            LD    HL,(05001H)
2107 23                  INC   HL
2108 22 01 50            LD    (05001H),HL
210B             L122:
210B 2A 01 50            LD    HL,(05001H)
210E             L123:
210E 11 00 00            LD    DE,0
2111 19                  ADD   HL,DE
2112             L124:
2112 3E 0F               LD    A,15
2114             L125:
2114 5F                  LD    E,A
2115 16 00               LD    D,0
2117 B7                  OR    A
2118 ED 52               SBC   HL,DE
211A             L126:
211A CA FE 20            JP    Z,L119
211D             L127:
211D                     ;;testDo.j(40)     do { println (i); i++; } while (18 != i+0);
211D             L128:
211D 2A 01 50            LD    HL,(05001H)
2120             L129:
2120 CD 8A 28            CALL  writeLineHL
2123             L130:
2123 2A 01 50            LD    HL,(05001H)
2126 23                  INC   HL
2127 22 01 50            LD    (05001H),HL
212A             L131:
212A 2A 01 50            LD    HL,(05001H)
212D             L132:
212D 11 00 00            LD    DE,0
2130 19                  ADD   HL,DE
2131             L133:
2131 3E 12               LD    A,18
2133             L134:
2133 5F                  LD    E,A
2134 16 00               LD    D,0
2136 B7                  OR    A
2137 ED 52               SBC   HL,DE
2139             L135:
2139 C2 1D 21            JP    NZ,L128
213C             L136:
213C                     ;;testDo.j(41)     do { println (i); i++; } while (20 >  i+0);
213C             L137:
213C 2A 01 50            LD    HL,(05001H)
213F             L138:
213F CD 8A 28            CALL  writeLineHL
2142             L139:
2142 2A 01 50            LD    HL,(05001H)
2145 23                  INC   HL
2146 22 01 50            LD    (05001H),HL
2149             L140:
2149 2A 01 50            LD    HL,(05001H)
214C             L141:
214C 11 00 00            LD    DE,0
214F 19                  ADD   HL,DE
2150             L142:
2150 3E 14               LD    A,20
2152             L143:
2152 5F                  LD    E,A
2153 16 00               LD    D,0
2155 B7                  OR    A
2156 ED 52               SBC   HL,DE
2158             L144:
2158 28 03               JR    Z,$+3
215A DA 3C 21            JP    NC,L137
215D             L145:
215D                     ;;testDo.j(42)     do { println (i); i++; } while (21 >= i+0);
215D             L146:
215D 2A 01 50            LD    HL,(05001H)
2160             L147:
2160 CD 8A 28            CALL  writeLineHL
2163             L148:
2163 2A 01 50            LD    HL,(05001H)
2166 23                  INC   HL
2167 22 01 50            LD    (05001H),HL
216A             L149:
216A 2A 01 50            LD    HL,(05001H)
216D             L150:
216D 11 00 00            LD    DE,0
2170 19                  ADD   HL,DE
2171             L151:
2171 3E 15               LD    A,21
2173             L152:
2173 5F                  LD    E,A
2174 16 00               LD    D,0
2176 B7                  OR    A
2177 ED 52               SBC   HL,DE
2179             L153:
2179 D2 5D 21            JP    NC,L146
217C             L154:
217C                     ;;testDo.j(43)     p=22;
217C             L155:
217C 3E 16               LD    A,22
217E             L156:
217E 6F                  LD    L,A
217F 26 00               LD    H,0
2181 22 03 50            LD    (05003H),HL
2184             L157:
2184                     ;;testDo.j(44)     do { println (p); p++; i--; } while (20 <  i+0);
2184             L158:
2184 2A 03 50            LD    HL,(05003H)
2187             L159:
2187 CD 8A 28            CALL  writeLineHL
218A             L160:
218A 2A 03 50            LD    HL,(05003H)
218D 23                  INC   HL
218E 22 03 50            LD    (05003H),HL
2191             L161:
2191 2A 01 50            LD    HL,(05001H)
2194 2B                  DEC   HL
2195 22 01 50            LD    (05001H),HL
2198             L162:
2198 2A 01 50            LD    HL,(05001H)
219B             L163:
219B 11 00 00            LD    DE,0
219E 19                  ADD   HL,DE
219F             L164:
219F 3E 14               LD    A,20
21A1             L165:
21A1 5F                  LD    E,A
21A2 16 00               LD    D,0
21A4 B7                  OR    A
21A5 ED 52               SBC   HL,DE
21A7             L166:
21A7 DA 84 21            JP    C,L158
21AA             L167:
21AA                     ;;testDo.j(45)     do { println (p); p++; i--; } while (19 <= i+0);
21AA             L168:
21AA 2A 03 50            LD    HL,(05003H)
21AD             L169:
21AD CD 8A 28            CALL  writeLineHL
21B0             L170:
21B0 2A 03 50            LD    HL,(05003H)
21B3 23                  INC   HL
21B4 22 03 50            LD    (05003H),HL
21B7             L171:
21B7 2A 01 50            LD    HL,(05001H)
21BA 2B                  DEC   HL
21BB 22 01 50            LD    (05001H),HL
21BE             L172:
21BE 2A 01 50            LD    HL,(05001H)
21C1             L173:
21C1 11 00 00            LD    DE,0
21C4 19                  ADD   HL,DE
21C5             L174:
21C5 3E 13               LD    A,19
21C7             L175:
21C7 5F                  LD    E,A
21C8 16 00               LD    D,0
21CA B7                  OR    A
21CB ED 52               SBC   HL,DE
21CD             L176:
21CD DA AA 21            JP    C,L168
21D0 CA AA 21            JP    Z,L168
21D3             L177:
21D3                     ;;testDo.j(46)   
21D3             L178:
21D3                     ;;testDo.j(47)     // constant - acc
21D3             L179:
21D3                     ;;testDo.j(48)     // integer - byte
21D3             L180:
21D3                     ;;testDo.j(49)     // not relevant
21D3             L181:
21D3                     ;;testDo.j(50)   
21D3             L182:
21D3                     ;;testDo.j(51)     // constant - acc
21D3             L183:
21D3                     ;;testDo.j(52)     // integer - integer
21D3             L184:
21D3                     ;;testDo.j(53)     i=p;
21D3             L185:
21D3 2A 03 50            LD    HL,(05003H)
21D6             L186:
21D6 22 01 50            LD    (05001H),HL
21D9             L187:
21D9                     ;;testDo.j(54)     do { println (i); i++; } while (1027 == i+1000);
21D9             L188:
21D9 2A 01 50            LD    HL,(05001H)
21DC             L189:
21DC CD 8A 28            CALL  writeLineHL
21DF             L190:
21DF 2A 01 50            LD    HL,(05001H)
21E2 23                  INC   HL
21E3 22 01 50            LD    (05001H),HL
21E6             L191:
21E6 2A 01 50            LD    HL,(05001H)
21E9             L192:
21E9 11 E8 03            LD    DE,1000
21EC 19                  ADD   HL,DE
21ED             L193:
21ED 11 03 04            LD    DE,1027
21F0 B7                  OR    A
21F1 ED 52               SBC   HL,DE
21F3             L194:
21F3 CA D9 21            JP    Z,L188
21F6             L195:
21F6                     ;;testDo.j(55)     do { println (i); i++; } while (1029 != i+1000);
21F6             L196:
21F6 2A 01 50            LD    HL,(05001H)
21F9             L197:
21F9 CD 8A 28            CALL  writeLineHL
21FC             L198:
21FC 2A 01 50            LD    HL,(05001H)
21FF 23                  INC   HL
2200 22 01 50            LD    (05001H),HL
2203             L199:
2203 2A 01 50            LD    HL,(05001H)
2206             L200:
2206 11 E8 03            LD    DE,1000
2209 19                  ADD   HL,DE
220A             L201:
220A 11 05 04            LD    DE,1029
220D B7                  OR    A
220E ED 52               SBC   HL,DE
2210             L202:
2210 C2 F6 21            JP    NZ,L196
2213             L203:
2213                     ;;testDo.j(56)     do { println (i); i++; } while (1031 >  i+1000);
2213             L204:
2213 2A 01 50            LD    HL,(05001H)
2216             L205:
2216 CD 8A 28            CALL  writeLineHL
2219             L206:
2219 2A 01 50            LD    HL,(05001H)
221C 23                  INC   HL
221D 22 01 50            LD    (05001H),HL
2220             L207:
2220 2A 01 50            LD    HL,(05001H)
2223             L208:
2223 11 E8 03            LD    DE,1000
2226 19                  ADD   HL,DE
2227             L209:
2227 11 07 04            LD    DE,1031
222A B7                  OR    A
222B ED 52               SBC   HL,DE
222D             L210:
222D DA 13 22            JP    C,L204
2230             L211:
2230                     ;;testDo.j(57)     do { println (i); i++; } while (1032 >= i+1000);
2230             L212:
2230 2A 01 50            LD    HL,(05001H)
2233             L213:
2233 CD 8A 28            CALL  writeLineHL
2236             L214:
2236 2A 01 50            LD    HL,(05001H)
2239 23                  INC   HL
223A 22 01 50            LD    (05001H),HL
223D             L215:
223D 2A 01 50            LD    HL,(05001H)
2240             L216:
2240 11 E8 03            LD    DE,1000
2243 19                  ADD   HL,DE
2244             L217:
2244 11 08 04            LD    DE,1032
2247 B7                  OR    A
2248 ED 52               SBC   HL,DE
224A             L218:
224A DA 30 22            JP    C,L212
224D CA 30 22            JP    Z,L212
2250             L219:
2250                     ;;testDo.j(58)     p=i;
2250             L220:
2250 2A 01 50            LD    HL,(05001H)
2253             L221:
2253 22 03 50            LD    (05003H),HL
2256             L222:
2256                     ;;testDo.j(59)     do { println (p); p++; i--; } while (1031 <  i+1000);
2256             L223:
2256 2A 03 50            LD    HL,(05003H)
2259             L224:
2259 CD 8A 28            CALL  writeLineHL
225C             L225:
225C 2A 03 50            LD    HL,(05003H)
225F 23                  INC   HL
2260 22 03 50            LD    (05003H),HL
2263             L226:
2263 2A 01 50            LD    HL,(05001H)
2266 2B                  DEC   HL
2267 22 01 50            LD    (05001H),HL
226A             L227:
226A 2A 01 50            LD    HL,(05001H)
226D             L228:
226D 11 E8 03            LD    DE,1000
2270 19                  ADD   HL,DE
2271             L229:
2271 11 07 04            LD    DE,1031
2274 B7                  OR    A
2275 ED 52               SBC   HL,DE
2277             L230:
2277 28 03               JR    Z,$+3
2279 DA 56 22            JP    NC,L223
227C             L231:
227C                     ;;testDo.j(60)     do { println (p); p++; i--; } while (1030 <= i+1000);
227C             L232:
227C 2A 03 50            LD    HL,(05003H)
227F             L233:
227F CD 8A 28            CALL  writeLineHL
2282             L234:
2282 2A 03 50            LD    HL,(05003H)
2285 23                  INC   HL
2286 22 03 50            LD    (05003H),HL
2289             L235:
2289 2A 01 50            LD    HL,(05001H)
228C 2B                  DEC   HL
228D 22 01 50            LD    (05001H),HL
2290             L236:
2290 2A 01 50            LD    HL,(05001H)
2293             L237:
2293 11 E8 03            LD    DE,1000
2296 19                  ADD   HL,DE
2297             L238:
2297 11 06 04            LD    DE,1030
229A B7                  OR    A
229B ED 52               SBC   HL,DE
229D             L239:
229D D2 7C 22            JP    NC,L232
22A0             L240:
22A0                     ;;testDo.j(61)   
22A0             L241:
22A0                     ;;testDo.j(62)     /************************/
22A0             L242:
22A0                     ;;testDo.j(63)     // constant - var
22A0             L243:
22A0                     ;;testDo.j(64)     // byte - byte
22A0             L244:
22A0                     ;;testDo.j(65)     b=37;
22A0             L245:
22A0 3E 25               LD    A,37
22A2             L246:
22A2 32 00 50            LD    (05000H),A
22A5             L247:
22A5                     ;;testDo.j(66)     do { println (b); b++; } while (38 >= b);
22A5             L248:
22A5 3A 00 50            LD    A,(05000H)
22A8             L249:
22A8 CD B2 28            CALL  writeLineA
22AB             L250:
22AB 21 00 50            LD    HL,05000H
22AE 34                  INC   (HL)
22AF             L251:
22AF 3A 00 50            LD    A,(05000H)
22B2             L252:
22B2 D6 26               SUB   A,38
22B4             L253:
22B4 DA A5 22            JP    C,L248
22B7 CA A5 22            JP    Z,L248
22BA             L254:
22BA                     ;;testDo.j(67)     // byte - integer
22BA             L255:
22BA                     ;;testDo.j(68)     i=39;
22BA             L256:
22BA 3E 27               LD    A,39
22BC             L257:
22BC 6F                  LD    L,A
22BD 26 00               LD    H,0
22BF 22 01 50            LD    (05001H),HL
22C2             L258:
22C2                     ;;testDo.j(69)     do { println (i); i++; } while (40 >= i);
22C2             L259:
22C2 2A 01 50            LD    HL,(05001H)
22C5             L260:
22C5 CD 8A 28            CALL  writeLineHL
22C8             L261:
22C8 2A 01 50            LD    HL,(05001H)
22CB 23                  INC   HL
22CC 22 01 50            LD    (05001H),HL
22CF             L262:
22CF 2A 01 50            LD    HL,(05001H)
22D2             L263:
22D2 3E 28               LD    A,40
22D4             L264:
22D4 5F                  LD    E,A
22D5 16 00               LD    D,0
22D7 B7                  OR    A
22D8 ED 52               SBC   HL,DE
22DA             L265:
22DA D2 C2 22            JP    NC,L259
22DD             L266:
22DD                     ;;testDo.j(70)     // integer - byte
22DD             L267:
22DD                     ;;testDo.j(71)     // not relevant
22DD             L268:
22DD                     ;;testDo.j(72)     // integer - integer
22DD             L269:
22DD                     ;;testDo.j(73)     i=1038;
22DD             L270:
22DD 21 0E 04            LD    HL,1038
22E0             L271:
22E0 22 01 50            LD    (05001H),HL
22E3             L272:
22E3                     ;;testDo.j(74)     b=41;
22E3             L273:
22E3 3E 29               LD    A,41
22E5             L274:
22E5 32 00 50            LD    (05000H),A
22E8             L275:
22E8                     ;;testDo.j(75)     do { println (b); b++; i--; } while (1037 <= i);
22E8             L276:
22E8 3A 00 50            LD    A,(05000H)
22EB             L277:
22EB CD B2 28            CALL  writeLineA
22EE             L278:
22EE 21 00 50            LD    HL,05000H
22F1 34                  INC   (HL)
22F2             L279:
22F2 2A 01 50            LD    HL,(05001H)
22F5 2B                  DEC   HL
22F6 22 01 50            LD    (05001H),HL
22F9             L280:
22F9 2A 01 50            LD    HL,(05001H)
22FC             L281:
22FC 11 0D 04            LD    DE,1037
22FF B7                  OR    A
2300 ED 52               SBC   HL,DE
2302             L282:
2302 D2 E8 22            JP    NC,L276
2305             L283:
2305                     ;;testDo.j(76)   
2305             L284:
2305                     ;;testDo.j(77)     /************************/
2305             L285:
2305                     ;;testDo.j(78)     // constant - stack8
2305             L286:
2305                     ;;testDo.j(79)     // byte - byte
2305             L287:
2305                     ;;testDo.j(80)     //TODO
2305             L288:
2305                     ;;testDo.j(81)     println(43);
2305             L289:
2305 3E 2B               LD    A,43
2307             L290:
2307 CD B2 28            CALL  writeLineA
230A             L291:
230A                     ;;testDo.j(82)     // constant - stack8
230A             L292:
230A                     ;;testDo.j(83)     // byte - integer
230A             L293:
230A                     ;;testDo.j(84)     //TODO
230A             L294:
230A                     ;;testDo.j(85)     println(44);
230A             L295:
230A 3E 2C               LD    A,44
230C             L296:
230C CD B2 28            CALL  writeLineA
230F             L297:
230F                     ;;testDo.j(86)     // constant - stack8
230F             L298:
230F                     ;;testDo.j(87)     // integer - byte
230F             L299:
230F                     ;;testDo.j(88)     //TODO
230F             L300:
230F                     ;;testDo.j(89)     println(45);
230F             L301:
230F 3E 2D               LD    A,45
2311             L302:
2311 CD B2 28            CALL  writeLineA
2314             L303:
2314                     ;;testDo.j(90)     // constant - stack88
2314             L304:
2314                     ;;testDo.j(91)     // integer - integer
2314             L305:
2314                     ;;testDo.j(92)     //TODO
2314             L306:
2314                     ;;testDo.j(93)     println(46);
2314             L307:
2314 3E 2E               LD    A,46
2316             L308:
2316 CD B2 28            CALL  writeLineA
2319             L309:
2319                     ;;testDo.j(94)   
2319             L310:
2319                     ;;testDo.j(95)     /************************/
2319             L311:
2319                     ;;testDo.j(96)     // constant - stack16
2319             L312:
2319                     ;;testDo.j(97)     // byte - byte
2319             L313:
2319                     ;;testDo.j(98)     //TODO
2319             L314:
2319                     ;;testDo.j(99)     println(47);
2319             L315:
2319 3E 2F               LD    A,47
231B             L316:
231B CD B2 28            CALL  writeLineA
231E             L317:
231E                     ;;testDo.j(100)     // constant - stack16
231E             L318:
231E                     ;;testDo.j(101)     // byte - integer
231E             L319:
231E                     ;;testDo.j(102)     //TODO
231E             L320:
231E                     ;;testDo.j(103)     println(48);
231E             L321:
231E 3E 30               LD    A,48
2320             L322:
2320 CD B2 28            CALL  writeLineA
2323             L323:
2323                     ;;testDo.j(104)     // constant - stack16
2323             L324:
2323                     ;;testDo.j(105)     // integer - byte
2323             L325:
2323                     ;;testDo.j(106)     //TODO
2323             L326:
2323                     ;;testDo.j(107)     println(49);
2323             L327:
2323 3E 31               LD    A,49
2325             L328:
2325 CD B2 28            CALL  writeLineA
2328             L329:
2328                     ;;testDo.j(108)     // constant - stack16
2328             L330:
2328                     ;;testDo.j(109)     // integer - integer
2328             L331:
2328                     ;;testDo.j(110)     //TODO
2328             L332:
2328                     ;;testDo.j(111)     println(50);
2328             L333:
2328 3E 32               LD    A,50
232A             L334:
232A CD B2 28            CALL  writeLineA
232D             L335:
232D                     ;;testDo.j(112)   
232D             L336:
232D                     ;;testDo.j(113)     /************************/
232D             L337:
232D                     ;;testDo.j(114)     // acc - constant
232D             L338:
232D                     ;;testDo.j(115)     // byte - byte
232D             L339:
232D                     ;;testDo.j(116)     b=51;
232D             L340:
232D 3E 33               LD    A,51
232F             L341:
232F 32 00 50            LD    (05000H),A
2332             L342:
2332                     ;;testDo.j(117)     do { println (b); b++; } while (b+0 <= 52);
2332             L343:
2332 3A 00 50            LD    A,(05000H)
2335             L344:
2335 CD B2 28            CALL  writeLineA
2338             L345:
2338 21 00 50            LD    HL,05000H
233B 34                  INC   (HL)
233C             L346:
233C 3A 00 50            LD    A,(05000H)
233F             L347:
233F C6 00               ADD   A,0
2341             L348:
2341 D6 34               SUB   A,52
2343             L349:
2343 DA 32 23            JP    C,L343
2346 CA 32 23            JP    Z,L343
2349             L350:
2349                     ;;testDo.j(118)     // byte - integer
2349             L351:
2349                     ;;testDo.j(119)     //not relevant
2349             L352:
2349                     ;;testDo.j(120)     // integer - byte
2349             L353:
2349                     ;;testDo.j(121)     i=53;
2349             L354:
2349 3E 35               LD    A,53
234B             L355:
234B 6F                  LD    L,A
234C 26 00               LD    H,0
234E 22 01 50            LD    (05001H),HL
2351             L356:
2351                     ;;testDo.j(122)     do { println (i); i++; } while (i+0 <= 54);
2351             L357:
2351 2A 01 50            LD    HL,(05001H)
2354             L358:
2354 CD 8A 28            CALL  writeLineHL
2357             L359:
2357 2A 01 50            LD    HL,(05001H)
235A 23                  INC   HL
235B 22 01 50            LD    (05001H),HL
235E             L360:
235E 2A 01 50            LD    HL,(05001H)
2361             L361:
2361 11 00 00            LD    DE,0
2364 19                  ADD   HL,DE
2365             L362:
2365 3E 36               LD    A,54
2367             L363:
2367 5F                  LD    E,A
2368 16 00               LD    D,0
236A EB                  EX    DE,HL
236B B7                  OR    A
236C ED 52               SBC   HL,DE
236E             L364:
236E DA 51 23            JP    C,L357
2371 CA 51 23            JP    Z,L357
2374             L365:
2374                     ;;testDo.j(123)   
2374             L366:
2374                     ;;testDo.j(124)     b=55;
2374             L367:
2374 3E 37               LD    A,55
2376             L368:
2376 32 00 50            LD    (05000H),A
2379             L369:
2379                     ;;testDo.j(125)     i=1055;
2379             L370:
2379 21 1F 04            LD    HL,1055
237C             L371:
237C 22 01 50            LD    (05001H),HL
237F             L372:
237F                     ;;testDo.j(126)     // integer - integer
237F             L373:
237F                     ;;testDo.j(127)     do { println (b); b++; i++; } while (i+0 <= 1056);
237F             L374:
237F 3A 00 50            LD    A,(05000H)
2382             L375:
2382 CD B2 28            CALL  writeLineA
2385             L376:
2385 21 00 50            LD    HL,05000H
2388 34                  INC   (HL)
2389             L377:
2389 2A 01 50            LD    HL,(05001H)
238C 23                  INC   HL
238D 22 01 50            LD    (05001H),HL
2390             L378:
2390 2A 01 50            LD    HL,(05001H)
2393             L379:
2393 11 00 00            LD    DE,0
2396 19                  ADD   HL,DE
2397             L380:
2397 11 20 04            LD    DE,1056
239A B7                  OR    A
239B ED 52               SBC   HL,DE
239D             L381:
239D DA 7F 23            JP    C,L374
23A0 CA 7F 23            JP    Z,L374
23A3             L382:
23A3                     ;;testDo.j(128)   
23A3             L383:
23A3                     ;;testDo.j(129)     /************************/
23A3             L384:
23A3                     ;;testDo.j(130)     // acc - acc
23A3             L385:
23A3                     ;;testDo.j(131)     // byte - byte
23A3             L386:
23A3                     ;;testDo.j(132)     b=57;
23A3             L387:
23A3 3E 39               LD    A,57
23A5             L388:
23A5 32 00 50            LD    (05000H),A
23A8             L389:
23A8                     ;;testDo.j(133)     do { println (b); b++; } while (b+0 <= 58+0);
23A8             L390:
23A8 3A 00 50            LD    A,(05000H)
23AB             L391:
23AB CD B2 28            CALL  writeLineA
23AE             L392:
23AE 21 00 50            LD    HL,05000H
23B1 34                  INC   (HL)
23B2             L393:
23B2 3A 00 50            LD    A,(05000H)
23B5             L394:
23B5 C6 00               ADD   A,0
23B7             L395:
23B7 F6                  PUSH AF
23B8             L396:
23B8 3E 3A               LD    A,58
23BA             L397:
23BA C6 00               ADD   A,0
23BC             L398:
23BC C1                  POP   BC
23BD 90                  SUB   A,B
23BE             L399:
23BE D2 A8 23            JP    NC,L390
23C1             L400:
23C1                     ;;testDo.j(134)     // byte - integer
23C1             L401:
23C1                     ;;testDo.j(135)     i=61;
23C1             L402:
23C1 3E 3D               LD    A,61
23C3             L403:
23C3 6F                  LD    L,A
23C4 26 00               LD    H,0
23C6 22 01 50            LD    (05001H),HL
23C9             L404:
23C9                     ;;testDo.j(136)     do { println (b); b++; i--; } while (60+0 <= i+0);
23C9             L405:
23C9 3A 00 50            LD    A,(05000H)
23CC             L406:
23CC CD B2 28            CALL  writeLineA
23CF             L407:
23CF 21 00 50            LD    HL,05000H
23D2 34                  INC   (HL)
23D3             L408:
23D3 2A 01 50            LD    HL,(05001H)
23D6 2B                  DEC   HL
23D7 22 01 50            LD    (05001H),HL
23DA             L409:
23DA 3E 3C               LD    A,60
23DC             L410:
23DC C6 00               ADD   A,0
23DE             L411:
23DE F6                  PUSH AF
23DF             L412:
23DF 2A 01 50            LD    HL,(05001H)
23E2             L413:
23E2 11 00 00            LD    DE,0
23E5 19                  ADD   HL,DE
23E6             L414:
23E6 F1                  POP  AF
23E7             L415:
23E7 5F                  LD    E,A
23E8 16 00               LD    D,0
23EA B7                  OR    A
23EB ED 52               SBC   HL,DE
23ED             L416:
23ED DA C9 23            JP    C,L405
23F0 CA C9 23            JP    Z,L405
23F3             L417:
23F3                     ;;testDo.j(137)     // integer - byte
23F3             L418:
23F3                     ;;testDo.j(138)     i=61;
23F3             L419:
23F3 3E 3D               LD    A,61
23F5             L420:
23F5 6F                  LD    L,A
23F6 26 00               LD    H,0
23F8 22 01 50            LD    (05001H),HL
23FB             L421:
23FB                     ;;testDo.j(139)     b=62;
23FB             L422:
23FB 3E 3E               LD    A,62
23FD             L423:
23FD 32 00 50            LD    (05000H),A
2400             L424:
2400                     ;;testDo.j(140)     do { println (i); i++; } while (i+0 <= b+0);
2400             L425:
2400 2A 01 50            LD    HL,(05001H)
2403             L426:
2403 CD 8A 28            CALL  writeLineHL
2406             L427:
2406 2A 01 50            LD    HL,(05001H)
2409 23                  INC   HL
240A 22 01 50            LD    (05001H),HL
240D             L428:
240D 2A 01 50            LD    HL,(05001H)
2410             L429:
2410 11 00 00            LD    DE,0
2413 19                  ADD   HL,DE
2414             L430:
2414 E5                  PUSH HL
2415             L431:
2415 3A 00 50            LD    A,(05000H)
2418             L432:
2418 C6 00               ADD   A,0
241A             L433:
241A E1                  POP  HL
241B             L434:
241B 5F                  LD    E,A
241C 16 00               LD    D,0
241E EB                  EX    DE,HL
241F B7                  OR    A
2420 ED 52               SBC   HL,DE
2422             L435:
2422 DA 00 24            JP    C,L425
2425 CA 00 24            JP    Z,L425
2428             L436:
2428                     ;;testDo.j(141)     // integer - integer
2428             L437:
2428                     ;;testDo.j(142)     b=63;
2428             L438:
2428 3E 3F               LD    A,63
242A             L439:
242A 32 00 50            LD    (05000H),A
242D             L440:
242D                     ;;testDo.j(143)     i=1063;
242D             L441:
242D 21 27 04            LD    HL,1063
2430             L442:
2430 22 01 50            LD    (05001H),HL
2433             L443:
2433                     ;;testDo.j(144)     do { println (b); b++; i--; } while (1000+62 <= i+0);
2433             L444:
2433 3A 00 50            LD    A,(05000H)
2436             L445:
2436 CD B2 28            CALL  writeLineA
2439             L446:
2439 21 00 50            LD    HL,05000H
243C 34                  INC   (HL)
243D             L447:
243D 2A 01 50            LD    HL,(05001H)
2440 2B                  DEC   HL
2441 22 01 50            LD    (05001H),HL
2444             L448:
2444 21 E8 03            LD    HL,1000
2447             L449:
2447 11 3E 00            LD    DE,62
244A 19                  ADD   HL,DE
244B             L450:
244B E5                  PUSH HL
244C             L451:
244C 2A 01 50            LD    HL,(05001H)
244F             L452:
244F 11 00 00            LD    DE,0
2452 19                  ADD   HL,DE
2453             L453:
2453 D1                  POP   DE
2454 B7                  OR    A
2455 ED 52               SBC   HL,DE
2457             L454:
2457 D2 33 24            JP    NC,L444
245A             L455:
245A                     ;;testDo.j(145)   
245A             L456:
245A                     ;;testDo.j(146)     /************************/
245A             L457:
245A                     ;;testDo.j(147)     // acc - var
245A             L458:
245A                     ;;testDo.j(148)     // byte - byte
245A             L459:
245A                     ;;testDo.j(149)     b=65;
245A             L460:
245A 3E 41               LD    A,65
245C             L461:
245C 32 00 50            LD    (05000H),A
245F             L462:
245F                     ;;testDo.j(150)     i=65;
245F             L463:
245F 3E 41               LD    A,65
2461             L464:
2461 6F                  LD    L,A
2462 26 00               LD    H,0
2464 22 01 50            LD    (05001H),HL
2467             L465:
2467                     ;;testDo.j(151)     do { println (i); i++; b--; } while (64+0 <= b);
2467             L466:
2467 2A 01 50            LD    HL,(05001H)
246A             L467:
246A CD 8A 28            CALL  writeLineHL
246D             L468:
246D 2A 01 50            LD    HL,(05001H)
2470 23                  INC   HL
2471 22 01 50            LD    (05001H),HL
2474             L469:
2474 21 00 50            LD    HL,05000H
2477 35                  DEC   (HL)
2478             L470:
2478 3E 40               LD    A,64
247A             L471:
247A C6 00               ADD   A,0
247C             L472:
247C 47                  LD    B,A
247D 3A 00 50            LD    A,(05000H)
2480 90                  SUB   A,B
2481             L473:
2481 DA 67 24            JP    C,L466
2484 CA 67 24            JP    Z,L466
2487             L474:
2487                     ;;testDo.j(152)     // byte - integer
2487             L475:
2487                     ;;testDo.j(153)     b=67;
2487             L476:
2487 3E 43               LD    A,67
2489             L477:
2489 32 00 50            LD    (05000H),A
248C             L478:
248C                     ;;testDo.j(154)     i=67;
248C             L479:
248C 3E 43               LD    A,67
248E             L480:
248E 6F                  LD    L,A
248F 26 00               LD    H,0
2491 22 01 50            LD    (05001H),HL
2494             L481:
2494                     ;;testDo.j(155)     do { println (b); b++; i--; } while (66+0 <= i);
2494             L482:
2494 3A 00 50            LD    A,(05000H)
2497             L483:
2497 CD B2 28            CALL  writeLineA
249A             L484:
249A 21 00 50            LD    HL,05000H
249D 34                  INC   (HL)
249E             L485:
249E 2A 01 50            LD    HL,(05001H)
24A1 2B                  DEC   HL
24A2 22 01 50            LD    (05001H),HL
24A5             L486:
24A5 3E 42               LD    A,66
24A7             L487:
24A7 C6 00               ADD   A,0
24A9             L488:
24A9 2A 01 50            LD    HL,(05001H)
24AC             L489:
24AC 5F                  LD    E,A
24AD 16 00               LD    D,0
24AF B7                  OR    A
24B0 ED 52               SBC   HL,DE
24B2             L490:
24B2 DA 94 24            JP    C,L482
24B5 CA 94 24            JP    Z,L482
24B8             L491:
24B8                     ;;testDo.j(156)     // integer - byte
24B8             L492:
24B8                     ;;testDo.j(157)     i=69;
24B8             L493:
24B8 3E 45               LD    A,69
24BA             L494:
24BA 6F                  LD    L,A
24BB 26 00               LD    H,0
24BD 22 01 50            LD    (05001H),HL
24C0             L495:
24C0                     ;;testDo.j(158)     b=69;
24C0             L496:
24C0 3E 45               LD    A,69
24C2             L497:
24C2 32 00 50            LD    (05000H),A
24C5             L498:
24C5                     ;;testDo.j(159)     do { println (i); i++; b--; } while (1000+68 <= b);
24C5             L499:
24C5 2A 01 50            LD    HL,(05001H)
24C8             L500:
24C8 CD 8A 28            CALL  writeLineHL
24CB             L501:
24CB 2A 01 50            LD    HL,(05001H)
24CE 23                  INC   HL
24CF 22 01 50            LD    (05001H),HL
24D2             L502:
24D2 21 00 50            LD    HL,05000H
24D5 35                  DEC   (HL)
24D6             L503:
24D6 21 E8 03            LD    HL,1000
24D9             L504:
24D9 11 44 00            LD    DE,68
24DC 19                  ADD   HL,DE
24DD             L505:
24DD 3A 00 50            LD    A,(05000H)
24E0             L506:
24E0 5F                  LD    E,A
24E1 16 00               LD    D,0
24E3 EB                  EX    DE,HL
24E4 B7                  OR    A
24E5 ED 52               SBC   HL,DE
24E7             L507:
24E7 DA C5 24            JP    C,L499
24EA CA C5 24            JP    Z,L499
24ED             L508:
24ED                     ;;testDo.j(160)     // integer - integer
24ED             L509:
24ED                     ;;testDo.j(161)     i=1071;
24ED             L510:
24ED 21 2F 04            LD    HL,1071
24F0             L511:
24F0 22 01 50            LD    (05001H),HL
24F3             L512:
24F3                     ;;testDo.j(162)     b=70;
24F3             L513:
24F3 3E 46               LD    A,70
24F5             L514:
24F5 32 00 50            LD    (05000H),A
24F8             L515:
24F8                     ;;testDo.j(163)     do { println (b); b++; i--; } while (1000+70 <= i);
24F8             L516:
24F8 3A 00 50            LD    A,(05000H)
24FB             L517:
24FB CD B2 28            CALL  writeLineA
24FE             L518:
24FE 21 00 50            LD    HL,05000H
2501 34                  INC   (HL)
2502             L519:
2502 2A 01 50            LD    HL,(05001H)
2505 2B                  DEC   HL
2506 22 01 50            LD    (05001H),HL
2509             L520:
2509 21 E8 03            LD    HL,1000
250C             L521:
250C 11 46 00            LD    DE,70
250F 19                  ADD   HL,DE
2510             L522:
2510 ED 5B 01 50         LD    DE,(05001H)
2514 B7                  OR    A
2515 ED 52               SBC   HL,DE
2517             L523:
2517 DA F8 24            JP    C,L516
251A CA F8 24            JP    Z,L516
251D             L524:
251D                     ;;testDo.j(164)   
251D             L525:
251D                     ;;testDo.j(165)     /************************/
251D             L526:
251D                     ;;testDo.j(166)     // acc - stack16
251D             L527:
251D                     ;;testDo.j(167)     // byte - byte
251D             L528:
251D                     ;;testDo.j(168)     //TODO
251D             L529:
251D                     ;;testDo.j(169)     println(72);
251D             L530:
251D 3E 48               LD    A,72
251F             L531:
251F CD B2 28            CALL  writeLineA
2522             L532:
2522                     ;;testDo.j(170)     println(73);
2522             L533:
2522 3E 49               LD    A,73
2524             L534:
2524 CD B2 28            CALL  writeLineA
2527             L535:
2527                     ;;testDo.j(171)     // byte - integer
2527             L536:
2527                     ;;testDo.j(172)     //TODO
2527             L537:
2527                     ;;testDo.j(173)     println(74);
2527             L538:
2527 3E 4A               LD    A,74
2529             L539:
2529 CD B2 28            CALL  writeLineA
252C             L540:
252C                     ;;testDo.j(174)     println(75);
252C             L541:
252C 3E 4B               LD    A,75
252E             L542:
252E CD B2 28            CALL  writeLineA
2531             L543:
2531                     ;;testDo.j(175)     // integer - byte
2531             L544:
2531                     ;;testDo.j(176)     //TODO
2531             L545:
2531                     ;;testDo.j(177)     println(76);
2531             L546:
2531 3E 4C               LD    A,76
2533             L547:
2533 CD B2 28            CALL  writeLineA
2536             L548:
2536                     ;;testDo.j(178)     println(77);
2536             L549:
2536 3E 4D               LD    A,77
2538             L550:
2538 CD B2 28            CALL  writeLineA
253B             L551:
253B                     ;;testDo.j(179)     // integer - integer
253B             L552:
253B                     ;;testDo.j(180)     //TODO
253B             L553:
253B                     ;;testDo.j(181)     println(78);
253B             L554:
253B 3E 4E               LD    A,78
253D             L555:
253D CD B2 28            CALL  writeLineA
2540             L556:
2540                     ;;testDo.j(182)     println(79);
2540             L557:
2540 3E 4F               LD    A,79
2542             L558:
2542 CD B2 28            CALL  writeLineA
2545             L559:
2545                     ;;testDo.j(183)   
2545             L560:
2545                     ;;testDo.j(184)     /************************/
2545             L561:
2545                     ;;testDo.j(185)     // acc - stack8
2545             L562:
2545                     ;;testDo.j(186)     // byte - byte
2545             L563:
2545                     ;;testDo.j(187)     //TODO
2545             L564:
2545                     ;;testDo.j(188)     println(80);
2545             L565:
2545 3E 50               LD    A,80
2547             L566:
2547 CD B2 28            CALL  writeLineA
254A             L567:
254A                     ;;testDo.j(189)     println(81);
254A             L568:
254A 3E 51               LD    A,81
254C             L569:
254C CD B2 28            CALL  writeLineA
254F             L570:
254F                     ;;testDo.j(190)     // byte - integer
254F             L571:
254F                     ;;testDo.j(191)     //TODO
254F             L572:
254F                     ;;testDo.j(192)     println(82);
254F             L573:
254F 3E 52               LD    A,82
2551             L574:
2551 CD B2 28            CALL  writeLineA
2554             L575:
2554                     ;;testDo.j(193)     println(83);
2554             L576:
2554 3E 53               LD    A,83
2556             L577:
2556 CD B2 28            CALL  writeLineA
2559             L578:
2559                     ;;testDo.j(194)     // integer - byte
2559             L579:
2559                     ;;testDo.j(195)     //TODO
2559             L580:
2559                     ;;testDo.j(196)     println(84);
2559             L581:
2559 3E 54               LD    A,84
255B             L582:
255B CD B2 28            CALL  writeLineA
255E             L583:
255E                     ;;testDo.j(197)     println(85);
255E             L584:
255E 3E 55               LD    A,85
2560             L585:
2560 CD B2 28            CALL  writeLineA
2563             L586:
2563                     ;;testDo.j(198)     // integer - integer
2563             L587:
2563                     ;;testDo.j(199)     //TODO
2563             L588:
2563                     ;;testDo.j(200)     println(86);
2563             L589:
2563 3E 56               LD    A,86
2565             L590:
2565 CD B2 28            CALL  writeLineA
2568             L591:
2568                     ;;testDo.j(201)     println(87);
2568             L592:
2568 3E 57               LD    A,87
256A             L593:
256A CD B2 28            CALL  writeLineA
256D             L594:
256D                     ;;testDo.j(202)   
256D             L595:
256D                     ;;testDo.j(203)     /************************/
256D             L596:
256D                     ;;testDo.j(204)     // var - constant
256D             L597:
256D                     ;;testDo.j(205)     // byte - byte
256D             L598:
256D                     ;;testDo.j(206)     b=88;
256D             L599:
256D 3E 58               LD    A,88
256F             L600:
256F 32 00 50            LD    (05000H),A
2572             L601:
2572                     ;;testDo.j(207)     do { println (b); b++; } while (b <= 89);
2572             L602:
2572 3A 00 50            LD    A,(05000H)
2575             L603:
2575 CD B2 28            CALL  writeLineA
2578             L604:
2578 21 00 50            LD    HL,05000H
257B 34                  INC   (HL)
257C             L605:
257C 3A 00 50            LD    A,(05000H)
257F             L606:
257F D6 59               SUB   A,89
2581             L607:
2581 DA 72 25            JP    C,L602
2584 CA 72 25            JP    Z,L602
2587             L608:
2587                     ;;testDo.j(208)     // byte - integer
2587             L609:
2587                     ;;testDo.j(209)     //not relevant
2587             L610:
2587                     ;;testDo.j(210)     println(90);
2587             L611:
2587 3E 5A               LD    A,90
2589             L612:
2589 CD B2 28            CALL  writeLineA
258C             L613:
258C                     ;;testDo.j(211)     println(91);
258C             L614:
258C 3E 5B               LD    A,91
258E             L615:
258E CD B2 28            CALL  writeLineA
2591             L616:
2591                     ;;testDo.j(212)     // integer - byte
2591             L617:
2591                     ;;testDo.j(213)     i=92;
2591             L618:
2591 3E 5C               LD    A,92
2593             L619:
2593 6F                  LD    L,A
2594 26 00               LD    H,0
2596 22 01 50            LD    (05001H),HL
2599             L620:
2599                     ;;testDo.j(214)     do { println (i); i++; } while (i <= 93);
2599             L621:
2599 2A 01 50            LD    HL,(05001H)
259C             L622:
259C CD 8A 28            CALL  writeLineHL
259F             L623:
259F 2A 01 50            LD    HL,(05001H)
25A2 23                  INC   HL
25A3 22 01 50            LD    (05001H),HL
25A6             L624:
25A6 2A 01 50            LD    HL,(05001H)
25A9             L625:
25A9 3E 5D               LD    A,93
25AB             L626:
25AB 5F                  LD    E,A
25AC 16 00               LD    D,0
25AE EB                  EX    DE,HL
25AF B7                  OR    A
25B0 ED 52               SBC   HL,DE
25B2             L627:
25B2 DA 99 25            JP    C,L621
25B5 CA 99 25            JP    Z,L621
25B8             L628:
25B8                     ;;testDo.j(215)     // integer - integer
25B8             L629:
25B8                     ;;testDo.j(216)     i=1094;
25B8             L630:
25B8 21 46 04            LD    HL,1094
25BB             L631:
25BB 22 01 50            LD    (05001H),HL
25BE             L632:
25BE                     ;;testDo.j(217)     b=94;
25BE             L633:
25BE 3E 5E               LD    A,94
25C0             L634:
25C0 32 00 50            LD    (05000H),A
25C3             L635:
25C3                     ;;testDo.j(218)     do { println (b); b++; i++; } while (i <= 1095  );
25C3             L636:
25C3 3A 00 50            LD    A,(05000H)
25C6             L637:
25C6 CD B2 28            CALL  writeLineA
25C9             L638:
25C9 21 00 50            LD    HL,05000H
25CC 34                  INC   (HL)
25CD             L639:
25CD 2A 01 50            LD    HL,(05001H)
25D0 23                  INC   HL
25D1 22 01 50            LD    (05001H),HL
25D4             L640:
25D4 2A 01 50            LD    HL,(05001H)
25D7             L641:
25D7 11 47 04            LD    DE,1095
25DA B7                  OR    A
25DB ED 52               SBC   HL,DE
25DD             L642:
25DD DA C3 25            JP    C,L636
25E0 CA C3 25            JP    Z,L636
25E3             L643:
25E3                     ;;testDo.j(219)   
25E3             L644:
25E3                     ;;testDo.j(220)     /************************/
25E3             L645:
25E3                     ;;testDo.j(221)     // var - acc
25E3             L646:
25E3                     ;;testDo.j(222)     // byte - byte
25E3             L647:
25E3                     ;;testDo.j(223)     do { println (b); b++; } while (b <= 97+0);
25E3             L648:
25E3 3A 00 50            LD    A,(05000H)
25E6             L649:
25E6 CD B2 28            CALL  writeLineA
25E9             L650:
25E9 21 00 50            LD    HL,05000H
25EC 34                  INC   (HL)
25ED             L651:
25ED 3E 61               LD    A,97
25EF             L652:
25EF C6 00               ADD   A,0
25F1             L653:
25F1 47                  LD    B,A
25F2 3A 00 50            LD    A,(05000H)
25F5 90                  SUB   A,B
25F6             L654:
25F6 D2 E3 25            JP    NC,L648
25F9             L655:
25F9                     ;;testDo.j(224)     // byte - integer
25F9             L656:
25F9                     ;;testDo.j(225)     //not relevant
25F9             L657:
25F9                     ;;testDo.j(226)     i=99;
25F9             L658:
25F9 3E 63               LD    A,99
25FB             L659:
25FB 6F                  LD    L,A
25FC 26 00               LD    H,0
25FE 22 01 50            LD    (05001H),HL
2601             L660:
2601                     ;;testDo.j(227)     do { println (b); b++; } while (b <= i+0);
2601             L661:
2601 3A 00 50            LD    A,(05000H)
2604             L662:
2604 CD B2 28            CALL  writeLineA
2607             L663:
2607 21 00 50            LD    HL,05000H
260A 34                  INC   (HL)
260B             L664:
260B 2A 01 50            LD    HL,(05001H)
260E             L665:
260E 11 00 00            LD    DE,0
2611 19                  ADD   HL,DE
2612             L666:
2612 3A 00 50            LD    A,(05000H)
2615             L667:
2615 5F                  LD    E,A
2616 16 00               LD    D,0
2618 B7                  OR    A
2619 ED 52               SBC   HL,DE
261B             L668:
261B DA 01 26            JP    C,L661
261E CA 01 26            JP    Z,L661
2621             L669:
2621                     ;;testDo.j(228)     // integer - byte
2621             L670:
2621                     ;;testDo.j(229)     i=100;
2621             L671:
2621 3E 64               LD    A,100
2623             L672:
2623 6F                  LD    L,A
2624 26 00               LD    H,0
2626 22 01 50            LD    (05001H),HL
2629             L673:
2629                     ;;testDo.j(230)     do { println (i); i++; } while (i <= 101+0);
2629             L674:
2629 2A 01 50            LD    HL,(05001H)
262C             L675:
262C CD 8A 28            CALL  writeLineHL
262F             L676:
262F 2A 01 50            LD    HL,(05001H)
2632 23                  INC   HL
2633 22 01 50            LD    (05001H),HL
2636             L677:
2636 3E 65               LD    A,101
2638             L678:
2638 C6 00               ADD   A,0
263A             L679:
263A 2A 01 50            LD    HL,(05001H)
263D             L680:
263D 5F                  LD    E,A
263E 16 00               LD    D,0
2640 EB                  EX    DE,HL
2641 B7                  OR    A
2642 ED 52               SBC   HL,DE
2644             L681:
2644 DA 29 26            JP    C,L674
2647 CA 29 26            JP    Z,L674
264A             L682:
264A                     ;;testDo.j(231)     // integer - integer
264A             L683:
264A                     ;;testDo.j(232)     i=1102;
264A             L684:
264A 21 4E 04            LD    HL,1102
264D             L685:
264D 22 01 50            LD    (05001H),HL
2650             L686:
2650                     ;;testDo.j(233)     b=102;
2650             L687:
2650 3E 66               LD    A,102
2652             L688:
2652 32 00 50            LD    (05000H),A
2655             L689:
2655                     ;;testDo.j(234)     do { println (b); b++; i++; } while (i <= 1103+0);
2655             L690:
2655 3A 00 50            LD    A,(05000H)
2658             L691:
2658 CD B2 28            CALL  writeLineA
265B             L692:
265B 21 00 50            LD    HL,05000H
265E 34                  INC   (HL)
265F             L693:
265F 2A 01 50            LD    HL,(05001H)
2662 23                  INC   HL
2663 22 01 50            LD    (05001H),HL
2666             L694:
2666 21 4F 04            LD    HL,1103
2669             L695:
2669 11 00 00            LD    DE,0
266C 19                  ADD   HL,DE
266D             L696:
266D ED 5B 01 50         LD    DE,(05001H)
2671 B7                  OR    A
2672 ED 52               SBC   HL,DE
2674             L697:
2674 D2 55 26            JP    NC,L690
2677             L698:
2677                     ;;testDo.j(235)   
2677             L699:
2677                     ;;testDo.j(236)     /************************/
2677             L700:
2677                     ;;testDo.j(237)     // var - var
2677             L701:
2677                     ;;testDo.j(238)     // byte - byte
2677             L702:
2677                     ;;testDo.j(239)     byte b2 = 105;
2677             L703:
2677 3E 69               LD    A,105
2679             L704:
2679 DD 77 FF            LD    (IX - 1),A
267C             L705:
267C                     ;;testDo.j(240)     do { println (b); b++; } while (b <= b2);
267C             L706:
267C 3A 00 50            LD    A,(05000H)
267F             L707:
267F CD B2 28            CALL  writeLineA
2682             L708:
2682 21 00 50            LD    HL,05000H
2685 34                  INC   (HL)
2686             L709:
2686 3A 00 50            LD    A,(05000H)
2689             L710:
2689 DD 96 FF            SUB   A,(IX - 1)
268C             L711:
268C DA 7C 26            JP    C,L706
268F CA 7C 26            JP    Z,L706
2692             L712:
2692                     ;;testDo.j(241)     // byte - integer
2692             L713:
2692                     ;;testDo.j(242)     i=107;
2692             L714:
2692 3E 6B               LD    A,107
2694             L715:
2694 6F                  LD    L,A
2695 26 00               LD    H,0
2697 22 01 50            LD    (05001H),HL
269A             L716:
269A                     ;;testDo.j(243)     do { println (b); b++; } while (b <= i);
269A             L717:
269A 3A 00 50            LD    A,(05000H)
269D             L718:
269D CD B2 28            CALL  writeLineA
26A0             L719:
26A0 21 00 50            LD    HL,05000H
26A3 34                  INC   (HL)
26A4             L720:
26A4 3A 00 50            LD    A,(05000H)
26A7             L721:
26A7 2A 01 50            LD    HL,(05001H)
26AA             L722:
26AA 5F                  LD    E,A
26AB 16 00               LD    D,0
26AD B7                  OR    A
26AE ED 52               SBC   HL,DE
26B0             L723:
26B0 DA 9A 26            JP    C,L717
26B3 CA 9A 26            JP    Z,L717
26B6             L724:
26B6                     ;;testDo.j(244)     // integer - byte
26B6             L725:
26B6                     ;;testDo.j(245)     i=b;
26B6             L726:
26B6 3A 00 50            LD    A,(05000H)
26B9             L727:
26B9 6F                  LD    L,A
26BA 26 00               LD    H,0
26BC 22 01 50            LD    (05001H),HL
26BF             L728:
26BF                     ;;testDo.j(246)     b=109;
26BF             L729:
26BF 3E 6D               LD    A,109
26C1             L730:
26C1 32 00 50            LD    (05000H),A
26C4             L731:
26C4                     ;;testDo.j(247)     do { println (i); i++; } while (i <= b);
26C4             L732:
26C4 2A 01 50            LD    HL,(05001H)
26C7             L733:
26C7 CD 8A 28            CALL  writeLineHL
26CA             L734:
26CA 2A 01 50            LD    HL,(05001H)
26CD 23                  INC   HL
26CE 22 01 50            LD    (05001H),HL
26D1             L735:
26D1 2A 01 50            LD    HL,(05001H)
26D4             L736:
26D4 3A 00 50            LD    A,(05000H)
26D7             L737:
26D7 5F                  LD    E,A
26D8 16 00               LD    D,0
26DA EB                  EX    DE,HL
26DB B7                  OR    A
26DC ED 52               SBC   HL,DE
26DE             L738:
26DE DA C4 26            JP    C,L732
26E1 CA C4 26            JP    Z,L732
26E4             L739:
26E4                     ;;testDo.j(248)     // integer - integer
26E4             L740:
26E4                     ;;testDo.j(249)     word i2 = 111;
26E4             L741:
26E4 3E 6F               LD    A,111
26E6             L742:
26E6 DD 77 FD            LD    (IX - 3),A
26E9             L743:
26E9                     ;;testDo.j(250)     do { println (i); i++; } while (i <= i2);
26E9             L744:
26E9 2A 01 50            LD    HL,(05001H)
26EC             L745:
26EC CD 8A 28            CALL  writeLineHL
26EF             L746:
26EF 2A 01 50            LD    HL,(05001H)
26F2 23                  INC   HL
26F3 22 01 50            LD    (05001H),HL
26F6             L747:
26F6 2A 01 50            LD    HL,(05001H)
26F9             L748:
26F9 DD 5E FD            LD    E,(IX - 3)
26FC DD 56 FD            LD    D,(IX - 2)
26FF B7                  OR    A
2700 ED 52               SBC   HL,DE
2702             L749:
2702 DA E9 26            JP    C,L744
2705 CA E9 26            JP    Z,L744
2708             L750:
2708                     ;;testDo.j(251)   
2708             L751:
2708                     ;;testDo.j(252)     /************************/
2708             L752:
2708                     ;;testDo.j(253)     // var - stack8
2708             L753:
2708                     ;;testDo.j(254)     // byte - byte
2708             L754:
2708                     ;;testDo.j(255)     // byte - integer
2708             L755:
2708                     ;;testDo.j(256)     // integer - byte
2708             L756:
2708                     ;;testDo.j(257)     // integer - integer
2708             L757:
2708                     ;;testDo.j(258)     //TODO
2708             L758:
2708                     ;;testDo.j(259)   
2708             L759:
2708                     ;;testDo.j(260)     /************************/
2708             L760:
2708                     ;;testDo.j(261)     // var - stack16
2708             L761:
2708                     ;;testDo.j(262)     // byte - byte
2708             L762:
2708                     ;;testDo.j(263)     // byte - integer
2708             L763:
2708                     ;;testDo.j(264)     // integer - byte
2708             L764:
2708                     ;;testDo.j(265)     // integer - integer
2708             L765:
2708                     ;;testDo.j(266)     //TODO
2708             L766:
2708                     ;;testDo.j(267)   
2708             L767:
2708                     ;;testDo.j(268)     /************************/
2708             L768:
2708                     ;;testDo.j(269)     // stack8 - constant
2708             L769:
2708                     ;;testDo.j(270)     // stack8 - acc
2708             L770:
2708                     ;;testDo.j(271)     // stack8 - var
2708             L771:
2708                     ;;testDo.j(272)     // stack8 - stack8
2708             L772:
2708                     ;;testDo.j(273)     // stack8 - stack16
2708             L773:
2708                     ;;testDo.j(274)     //TODO
2708             L774:
2708                     ;;testDo.j(275)   
2708             L775:
2708                     ;;testDo.j(276)     /************************/
2708             L776:
2708                     ;;testDo.j(277)     // stack16 - constant
2708             L777:
2708                     ;;testDo.j(278)     // stack16 - acc
2708             L778:
2708                     ;;testDo.j(279)     // stack16 - var
2708             L779:
2708                     ;;testDo.j(280)     // stack16 - stack8
2708             L780:
2708                     ;;testDo.j(281)     // stack16 - stack16
2708             L781:
2708                     ;;testDo.j(282)     //TODO
2708             L782:
2708                     ;;testDo.j(283)   
2708             L783:
2708                     ;;testDo.j(284)     println("Klaar");
2708             L784:
2708 21 13 27            LD    HL,L791
270B             L785:
270B CD 37 27            CALL  writeLineStr
270E             L786:
270E                     ;;testDo.j(285)   }
270E             L787:
270E DD F9               LD    SP,IX
2710             L788:
2710 DD E1               POP   IX
2712             L789:
2712 C9                  return
2713             L790:
2713                     ;;testDo.j(286) }
2713             L791:
2713 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
2719             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
2719             STAT0   equ 004H          ;147 ASCI0 Status register.
2719             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
2719             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
2719             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
2719             TDRE    equ 1             ;STAT0->Tx data register empty bit.
2719             OVERRUN equ 6             ;STAT0->OVERRUN bit.
2719             RDRF    equ 7             ;STAT0->Rx data register full bit.
2719             ;****************
2719             ;getChar
2719             ;Check if an input character from ASCI0 is available.
2719             ;  IN:  none
2719             ;  OUT: F: ZERO flag set if no character is available.
2719             ;          ZERO flag reset if a character is available.
2719             ;       A : character from ASCI0, if available.
2719             ;  USES:AF
2719             ;****************
2719             getChar:
2719 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
271C CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
271E 20 07               JR    NZ,getChar1 ;-yes: reset error flags
2720 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
2722 C8                  RET   Z           ;-no: return without a character
2723 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
2726 C9                  RET
2727             getChar1:
2727 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
272A CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
272C ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
272F AF                  XOR   A,A
2730 C9                  RET               ;return without a character
2731             ;****************
2731             ;putMsg
2731             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
2731             ;  IN:  none.
2731             ;  OUT: none.
2731             ;  USES:none.
2731             ;****************
2731             putMsg:
2731 E3                  EX    (SP),HL     ;save HL and load return address into HL.
2732 CD 3E 27            CALL  writeStr
2735 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
2736 C9                  RET
2737             ;****************
2737             ;writeLineStr
2737             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
2737             ;  IN:  HL:address of zero terminated string to be printed.
2737             ;  OUT: none.
2737             ;  USES:HL (point to byte after zero terminated string)
2737             ;****************
2737             writeLineStr:
2737 CD 3E 27            CALL  writeStr
273A CD 5A 27            CALL  putCRLF
273D C9                  RET
273E             ;****************
273E             ;writeStr
273E             ;Print via ASCI0 a zero terminated string, pointed to by HL.
273E             ;  IN:  HL:address of zero terminated string to be printed.
273E             ;  OUT: none.
273E             ;  USES:HL (point to byte after zero terminated string)
273E             ;****************
273E             writeStr:
273E F5                  PUSH  AF          ;save registers
273F             putStr1:
273F 7E                  LD    A,(HL)      ;get next character
2740 23                  INC   HL
2741 B7                  OR    A,A         ;is it zer0?
2742 28 05               JR    Z,putStr2   ;yes ->return
2744 CD 4D 27            CALL  putChar     ;no->put it to ASCI0
2747 18 F6               JR    putStr1
2749             putStr2:
2749 F1                  POP   AF
274A C9                  RET
274B             ;****************
274B             ;putSpace
274B             ;Send a space character to ASCI0
274B             ;  IN:  none.
274B             ;  OUT: none.
274B             ;  USES:AF
274B             ;****************
274B             putSpace:
274B 3E 20               LD    A,' '       ;load space and continue with putChar.
274D             ;****************
274D             ;putChar
274D             ;Send one character to ASCI0.
274D             ;  IN:  A = character
274D             ;  OUT: none.
274D             ;  USES:none.
274D             ;****************
274D             putChar:
274D F5                  PUSH  AF          ;send the character via ASCI0
274E             putChar1:
274E ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
2751 CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
2753 28 F9               JR    Z,putChar1
2755 F1                  POP   AF          ;restore AF registers
2756 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
2759 C9                  RET
275A             ;****************
275A             ;putCRLF
275A             ;Send CR and LF to ASCI0
275A             ;  IN:  none.
275A             ;  OUT: none.
275A             ;  USES:none.
275A             ;****************
275A             putCRLF:
275A F5                  PUSH  AF
275B 3E 0D               LD    A,'\r'       ;print carriage return
275D CD 4D 27            CALL  putChar
2760 3E 0A               LD    A,'\n'       ;print line feed
2762 CD 4D 27            CALL  putChar
2765 F1                  POP   AF
2766 C9                  RET
2767             ;****************
2767             ;putErase
2767             ;Erase the latest character at ASCI0
2767             ;  IN:  none.
2767             ;  OUT: none.
2767             ;  USES:AF
2767             ;****************
2767             putErase:
2767 3E 08               LD    A,'\b'       ;print backspace
2769 CD 4D 27            CALL  putChar
276C CD 4B 27            CALL  putSpace    ;print space (erase character)
276F 3E 08               LD    A,'\b'      ;print backspace
2771 18 DA               JR    putChar
2773             ;****************
2773             ;putBell
2773             ;Send a Bell character to ASCI0
2773             ;  IN:  none.
2773             ;  OUT: none.
2773             ;  USES:AF
2773             ;****************
2773             putBell:
2773 3E 07               LD    A,07        ;ring the bell at ASCI0
2775 18 D6               JR    putChar
2777             ;****************
2777             ;putHexHL
2777             ;Print HL register pair as 4 hex digits
2777             ;  IN:  HL = word to be printed.
2777             ;  OUT: none.
2777             ;  USES:none.
2777             ;****************
2777             putHexHL:
2777 F5                  PUSH  AF          ;save used registers
2778 7C                  LD    A,H         ;print H as 2 hex digits
2779 CD 82 27            CALL  putHexA
277C 7D                  LD    A,L         ;print L as 2 hex digits
277D CD 82 27            CALL  putHexA
2780 F1                  POP   AF          ;restore used registers
2781 C9                  RET
2782             ;****************
2782             ;putHexA
2782             ;Print A register as 2 hex digits
2782             ;  IN:  A = byte to be printed
2782             ;  OUT: none.
2782             ;  USES:none.
2782             ;****************
2782             putHexA:
2782 F5                  PUSH  AF          ;save input
2783 1F                  RRA               ;shift upper nibble to the right
2784 1F                  RRA
2785 1F                  RRA
2786 1F                  RRA
2787 CD 8B 27            CALL  putHexA1    ;print upper nibble
278A F1                  POP   AF          ;restore input & print lower nibble
278B             putHexA1:
278B F5                  PUSH  AF          ;save input
278C E6 0F               AND   A,00FH      ;mask lower nibble
278E C6 30               ADD   A,'0'       ;convert to hex digit
2790 FE 3A               CP    A,'9'+1
2792 38 02               JR    C,putHexA2
2794 C6 07               ADD   A,07
2796             putHexA2:
2796 CD 4D 27            CALL  putChar
2799 F1                  POP   AF          ;restore input
279A C9                  RET               ;and return
279B             ;****************
279B             ;mul16
279B             ;16 by 16 bit unsigned multiplication with 16 bit result.
279B             ;  IN:  HL = operand 1
279B             ;       DE = operand 2
279B             ;  OUT: HL = HL * DE low part
279B             ;  USES:DE
279B             ;  Size   25 bytes
279B             ;  Time  160 cycles
279B             ;****************
279B             mul16:
279B                     ;HL = HL * DE
279B                     ;        H  L
279B                     ;        D  E
279B                     ;    --------*
279B                     ;          EL
279B                     ;       EH  0
279B                     ;       DL  0
279B                     ; -----------+
279B                     ;        R  S
279B                     ;S = ELlow
279B                     ;R = ELhigh+EHlow+DLlow
279B C5                  PUSH  BC          ;11  11 save BC
279C 44                  LD    B,H         ; 4  15 copy HL to BC
279D 4D                  LD    C,L         ; 4  19
279E 63                  LD    H,E         ; 4  23 HL contains EL
279F ED 6C               MLT   HL          ;17  40
27A1 E5                  PUSH  HL          ;11  51
27A2 63                  LD    H,E         ; 4  55 HL contains EH aka EB
27A3 68                  LD    L,B         ; 4  59
27A4 ED 6C               MLT   HL          ;17  76
27A6 45                  LD    B,L         ; 4  80 save EHlow in B
27A7 62                  LD    H,D         ; 4  84 HL contains DL aka DC
27A8 69                  LD    L,C         ; 4  88
27A9 ED 6C               MLT   HL          ;17 105
27AB 55                  LD    D,L         ; 4 109 DLlow into DE
27AC 1E 00               LD    E,0         ; 6 115
27AE E1                  POP   HL          ; 9 124 add EL+DElow
27AF 19                  ADD   HL,DE       ; 7 131
27B0 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
27B1 19                  ADD   HL,DE       ; 7 142
27B2 C1                  POP   BC          ; 9 151 restore BC
27B3 C9                  RET               ; 9 160
27B4             ;****************
27B4             ;mul16_10
27B4             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
27B4             ;  IN:  HL = operand
27B4             ;  OUT: HL = HL * 10; low part
27B4             ;  USES:Flags
27B4             ;  Size   9 bytes
27B4             ;  Time   65 cycles
27B4             ;****************
27B4             mul16_10:
27B4 D5                  PUSH  DE          ;11 11
27B5 54                  LD    D,H         ; 4 15
27B6 5D                  LD    E,L         ; 4 19
27B7 29                  ADD   HL,HL       ; 7 26 times 2
27B8 29                  ADD   HL,HL       ; 7 33 times 4
27B9 19                  ADD   HL,DE       ; 7 40 times 5
27BA 29                  ADD   HL,HL       ; 7 47 times 10
27BB D1                  POP   DE          ; 9 56
27BC C9                  RET               ; 9 65
27BD             ;****************
27BD             ;mul16_8
27BD             ;16 by 8 bit unsigned multiplication with 16 bit result.
27BD             ;  IN:  HL = operand 1
27BD             ;        A = operand 2
27BD             ;  OUT: HL = HL * A low part
27BD             ;  USES:AF
27BD             ;  Size   .. bytes
27BD             ;  Time  ... cycles
27BD             ;****************
27BD             mul16_8:
27BD                     ;HL = HL * A
27BD                     ;        H  L
27BD                     ;           A
27BD                     ;    --------*
27BD                     ;          AL
27BD                     ;       AH  0
27BD                     ; -----------+
27BD                     ;        R  S
27BD                     ;S = ALlow
27BD                     ;R = ALhigh+AHlow
27BD C5                  PUSH  BC          ;11  11 save BC
27BE 44                  LD    B,H         ; 4  15
27BF 4F                  LD    C,A         ; 4  19
27C0 67                  LD    H,A         ; 4  23
27C1 ED 6C               MLT   HL          ;17  40 HL = AL
27C3 ED 4C               MLT   BC          ;17  57 BC = AH
27C5 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
27C6 81                  ADD   A,C         ; 4  65
27C7 67                  LD    H,A         ; 4  69
27C8 C1                  POP   BC          ; 9  78 | 289 restore BC
27C9 C9                  RET               ; 9  87 | 307
27CA             ;****************
27CA             ;mul1632
27CA             ;16 by 16 bit unsigned multiplication with 32 bit result.
27CA             ;  IN:  HL = operand 1
27CA             ;       DE = operand 2
27CA             ;  OUT: HL = HL * DE low part
27CA             ;       DE = HL * DE high part
27CA             ;  USES:-
27CA             ;  Size 49 bytes
27CA             ;  Time between 303 en 307 cycles
27CA             ;****************
27CA             mul1632:
27CA                     ;HL = HL * DE
27CA                     ;        H  L
27CA                     ;        D  E
27CA                     ;    --------*
27CA                     ;          EL
27CA                     ;       EH  0
27CA                     ;       DL  0
27CA                     ;    DH  0  0
27CA                     ; -----------+
27CA                     ;  P  Q  R  S
27CA                     ;S = ELlow
27CA                     ;R = ELhigh+EHlow+DLlow
27CA                     ;Q = DHlow+EHhigh+DLhigh
27CA                     ;P = DHhigh
27CA F5                  PUSH  AF          ;11  11 save AF
27CB C5                  PUSH  BC          ;11  22 save BC
27CC 44                  LD    B,H         ; 4  26
27CD 4D                  LD    C,L         ; 4  30
27CE 62                  LD    H,D         ; 4  34 HL contains DH aka DB
27CF 68                  LD    L,B         ; 4  38
27D0 ED 6C               MLT   HL          ;17  55
27D2 E5                  PUSH  HL          ;11  66
27D3 62                  LD    H,D         ; 4  70 HL contains DL aka DC
27D4 69                  LD    L,C         ; 4  74
27D5 ED 6C               MLT   HL          ;17  91
27D7 E5                  PUSH  HL          ;11 102
27D8 63                  LD    H,E         ; 4 106 HL contains EH aka EB
27D9 68                  LD    L,B         ; 4 110
27DA ED 6C               MLT   HL          ;17 127
27DC E5                  PUSH  HL          ;11 138
27DD 63                  LD    H,E         ; 4 142 HL contains EL aka EC
27DE 69                  LD    L,C         ; 4 146
27DF ED 6C               MLT   HL          ;17 163
27E1 D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
27E2 06 00               LD    B,0         ; 6 178
27E4 4A                  LD    C,D         ; 4 182 ..C=EHhigh
27E5 53                  LD    D,E         ; 4 186 ..D=EHlow
27E6 1E 00               LD    E,0         ; 6 192
27E8 19                  ADD   HL,DE       ; 7 199
27E9 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
27EB 03                  INC   BC          ;         4 209
27EC             mul16321:
27EC D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
27ED 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
27EE 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
27EF 19                  ADD   HL,DE       ; 7 231 | 233
27F0 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
27F2 03                  INC   BC          ;         4 243
27F3             mul16322:
27F3                                       ;HL=RS=EL+EH0+DL0
27F3                                       ;C=EHhigh
27F3                                       ;A=DLhigh
27F3                                       ;E=0
27F3 EB                  EX    DE,HL       ; 3 242 | 246
27F4 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
27F5 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
27F6 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
27F7 C1                  POP   BC          ; 9 266 | 270
27F8 09                  ADD   HL,BC       ; 7 273 | 277
27F9 EB                  EX    DE,HL       ; 3 276 | 280
27FA                                       ;D=P=DHhigh
27FA                                       ;E=Q=DHlow+EHhigh+DLhigh
27FA                                       ;H=R=ELhigh+EHlow+DLlow
27FA                                       ;L=S=ELlow
27FA C1                  POP   BC          ; 9 285 | 289 restore BC
27FB F1                  POP   AF          ; 9 294 | 298 restore AF
27FC C9                  RET               ; 9 303 | 307
27FD             ;****************
27FD             ;mul16S
27FD             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
27FD             ;  IN:  HL = operand 1
27FD             ;       DE = operand 2
27FD             ;  OUT: DE = HL * DE high part
27FD             ;       HL = HL * DE low part
27FD             ;  USES:none.
27FD             ;  Size 26 bytes
27FD             ;  Time between 726 en 998 cycles
27FD             ;****************
27FD             mul16S:
27FD F5                  PUSH  AF          ;11  11 save AF
27FE C5                  PUSH  BC          ;11  22 save BC
27FF 44                  LD    B,H         ; 4  26
2800 4D                  LD    C,L         ; 4  30
2801 21 00 00            LD    HL,0        ; 9  39
2804 3E 10               LD    A,16        ; 6  45
2806             mul16S1:
2806 29                  ADD   HL,HL       ;16*7=112 157
2807 CB 13               RL    E           ;16*7=112 269
2809 CB 12               RL    D           ;16*7=112 381
280B 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
280D 09                  ADD   HL,BC       ;             16*7=112 589
280E 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
2810 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
2811             mul16S2:
2811 3D                  DEC   A           ;16*4=64    573 | 845 | 813
2812 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
2814 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
2815 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
2816 C9                  RET               ; 9         726 | 998 | 966
2817             ;****************
2817             ;div16
2817             ;16 by 16 bit unsigned division.
2817             ;  IN:  HL = dividend
2817             ;       DE = divisor
2817             ;  OUT: HL = quotient
2817             ;       DE = remainder
2817             ;  USES:-
2817             ;  Size   32 bytes
2817             ;  Time   between 1073 en 1121 cycles
2817             ;pseudo code:
2817             ;T = AC = dividend
2817             ;D = DE = divisor
2817             ;Q = AC = quotient = 0
2817             ;R = HL = remainder = 0
2817             ;invariante betrekking:
2817             ; D/T\Q     
2817             ;   R       
2817             ; T = QD + R
2817             ; T <= 2^N  
2817             ;
2817             ; D/T'.RT\Q'      
2817             ;   R'             
2817             ; RT <= 2^N        
2817             ; 0<=k<=N          
2817             ; RT = T % 2^k     
2817             ; T' = (T-RT) / 2^k
2817             ; Q' = T' / D      
2817             ; R' = T' % D      
2817             ;
2817             ;for (i=16; i>0; i--) {
2817             ;  T = T * 2 (remember MSB in carry)
2817             ;  R = R * 2 + carry
2817             ;  Q = Q * 2
2817             ;  if (R >= D) {
2817             ;    R = R - D;
2817             ;    Q++;
2817             ;  }
2817             ;}
2817             ;return Q (in HL) and R (in DE)
2817             ;****************
2817             div16:
2817 F5                  PUSH  AF          ;11  11 save registers used
2818 C5                  PUSH  BC          ;11  22
2819 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
281A 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
281B 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
281E 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
2820             div16_1:
2820 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
2822 CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
2824 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
2826 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
2827 ED 52               SBC   HL,DE       ;16*10=160 653
2829 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
282B 0C                  INC   C           ;              16*4= 64 813   Q++
282C 18 01               JR    div16_3     ;              16*8=128 941
282E             div16_2:
282E 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
282F             div16_3:
282F 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
2831 EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
2832 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
2833 69                  LD    L,C         ; 4 1046 | 1094
2834 C1                  POP   BC          ; 9 1055 | 1103
2835 F1                  POP   AF          ; 9 1064 | 1112
2836 C9                  RET               ; 9 1073 | 1121
2837             ;****************
2837             ;div16_8
2837             ;16 by 8 bit unsigned division.
2837             ;  IN:  HL = dividend
2837             ;       A  = divisor
2837             ;  OUT: HL = quotient
2837             ;       A  = remainder
2837             ;  USES:F(lags)
2837             ;  Size 18 bytes
2837             ;  Time between 601 en 697 cycles
2837             ;****************
2837             div16_8:
2837 C5                  PUSH  BC          ;11 11 save registers used
2838 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
283A 4F                  LD    C,A         ; 4 21 move divisor to C
283B AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
283C             div16_82:
283C 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
283D CB 17               RL    A           ;16*7=112 249
283F B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
2840 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
2842 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
2843 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
2844             div16_83:
2844 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
2846 C1                  POP   BC          ;9 592 688
2847 C9                  RET               ;9 601 697
2848             ;****************
2848             ;div8
2848             ;8 by 8 bit unsigned division.
2848             ;  IN:  A = dividend
2848             ;       C = divisor
2848             ;  OUT: A = quotient
2848             ;       C = remainder
2848             ;  USES:F(lags)
2848             ;  Size 26 bytes
2848             ;  Time between 411 and 459 cycles
2848             ;****************
2848             ;pseudo code:
2848             ;T = dividend
2848             ;D = divisor
2848             ;Q = quotient = 0
2848             ;R = remainder = 0
2848             ;invariante betrekking:
2848             ; T = QD + R
2848             ; T <= 2^8  
2848             ;
2848             ; D/T'.RT\Q'      
2848             ;   R'             
2848             ; RT <= 2^8        
2848             ; 0<=k<=8          
2848             ; RT = T % 2^k     
2848             ; T' = (T-RT) / 2^k
2848             ; Q' = T' / D      
2848             ; R' = T' % D      
2848             ;
2848             ;for (i=8; i>0; i--) {
2848             ;  T = T * 2 (remember MSB in carry)
2848             ;  R = R * 2 + carry
2848             ;  Q = Q * 2
2848             ;  if (R >= D) {
2848             ;    R = R - D;
2848             ;    Q++;
2848             ;  }
2848             ;}
2848             ;return Q (in A) and R (in C)
2848             ;****************
2848             ;E = T = dividend
2848             ;C = D = divisor
2848             ;D = Q = quotient
2848             ;A = R = remainder
2848             ;****************
2848             ;  IN:  A = dividend
2848             ;       C  = divisor
2848             div8:
2848 D5                  PUSH  DE          ;11 11 save registers used
2849 C5                  PUSH  BC          ;11 22 save registers used
284A 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
284C 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
284E 5F                  LD    E,A         ; 4 38 E = T = dividend
284F AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
2850             div8_1:
2850 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
2852 CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
2854 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
2856 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
2857 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
2859 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
285A 14                  INC   D           ;           8*4=32 354   Q[D]++;
285B             div8_2:           ;                      }
285B 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
285D C1                  POP   BC          ;9        385 433
285E 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
285F 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
2860 D1                  POP   DE          ;9        402 450
2861 C9                  RET               ;9        411 459
2862             ;****************
2862             ;div8_16
2862             ;8 by 16 bit unsigned division.
2862             ;  IN:  A = dividend
2862             ;       HL = divisor
2862             ;  OUT: A = quotient
2862             ;       C = remainder
2862             ;  USES:F(lags)
2862             ;  Size 13 bytes (plus dependency on div8)
2862             ;  Time 31 or between 436 and 484 cycles
2862             ;****************
2862             ;invariante betrekking:
2862             ; T = dividend
2862             ; D = divisor
2862             ; Q = quotient
2862             ; R = remainder
2862             ; T = QD + R
2862             ;pseudo code:
2862             ; if D >= 256 {
2862             ;   R = T
2862             ;   Q = 0
2862             ; } else {
2862             ;   R = T/D (using div8)
2862             ;   Q = T%D (using div8)
2862             ; }
2862             ;****************
2862             
2862             
2862             div8_16:
2862 4F                  LD    C,A         ;  4  4         save dividend(A) in C
2863 7C                  LD    A,H         ;  4  8         if D >= 256 {
2864 B7                  OR    A,A         ;  4 12
2865 28 02               JR    Z,div8_161  ;  6 18  8  20
2867 AF                  XOR   A,A         ;  4 22           R = T;
2868 C9                  RET               ;  9 31           Q = 0;
2869             div8_161:                     ;               } else {
2869 79                  LD    A,C         ;        4  24    restore dividend into A
286A 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
286B CD 48 28            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
286E C9                  RET               ; 9  436/484    }
286F             ;****************
286F             ;read
286F             ;read a 16 bit unsigned number from the input
286F             ;  IN:  none
286F             ;  OUT: HL = 16 bit unsigned number
286F             ;  USES:-
286F             ;****************
286F             read:
286F F5                  PUSH  AF
2870 21 00 00            LD    HL,0        ;result = 0;
2873             read1:
2873 CD 19 27            CALL  getChar     ;check if a character is available.
2876 28 FB               JR    Z,read1     ;-no: wait for it.
2878 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
287A 28 0C               JR    Z,read2
287C CD B4 27            CALL  mul16_10    ;result *= 10;
287F D6 30               SUB   A,'0'       ;digit = char - '0';
2881 85                  ADD   A,L         ;result += digit;
2882 6F                  LD    L,A
2883 30 EE               JR    NC,read1     ;get next character
2885 24                  INC   H
2886 18 EB               JR    read1        ;get next character
2888             read2:
2888 F1                  POP   AF
2889 C9                  RET
288A             ;****************
288A             ;writeLineHL
288A             ;write a 16 bit unsigned number to the output, followed by a carriage return
288A             ;  IN:  HL = 16 bit unsigned number
288A             ;  OUT: none
288A             ;  USES:HL
288A             ;****************
288A             writeLineHL:
288A CD 91 28            CALL  writeHL
288D CD 5A 27            CALL  putCRLF
2890 C9                  RET
2891             ;****************
2891             ;writeHL
2891             ;write a 16 bit unsigned number to the output
2891             ;  IN:  HL = 16 bit unsigned number
2891             ;  OUT: none
2891             ;  USES:HL
2891             ;****************
2891             writeHL:
2891 C5                  PUSH  BC          ;save registers used
2892 F5                  PUSH  AF
2893 06 00               LD    B,0         ;number of digits on stack
2895 7C                  LD    A,H         ;is HL=0?
2896 B5                  OR    A,L
2897 20 03               JR    NZ,writeHL1
2899 04                  INC   B           ;write a single digit 0
289A 18 0C               JR    writeHL3
289C             writeHL1:
289C 3E 0A               LD    A,10        ;divide HL by 10
289E CD 37 28            CALL  div16_8
28A1 F5                  PUSH  AF          ;put remainder on stack
28A2 04                  INC   B
28A3 7C                  LD    A,H         ;is quotient 0?
28A4 B5                  OR    A,L
28A5 20 F5               JR    NZ,writeHL1
28A7             writeHL2:
28A7 F1                  POP   AF          ;write digit
28A8             writeHL3:
28A8 C6 30               ADD   A,'0'
28AA CD 4D 27            CALL  putChar
28AD 10 F8               DJNZ  writeHL2
28AF F1                  POP   AF          ;restore registers used
28B0 C1                  POP   BC
28B1 C9                  RET
28B2             ;****************
28B2             ;writeLineA
28B2             ;write an 8-bit unsigned number to the output, followed by a carriage return
28B2             ;  IN:  A = 8-bit unsigned number
28B2             ;  OUT: none
28B2             ;  USES:none
28B2             ;****************
28B2             writeLineA:
28B2 CD B9 28            CALL  writeA
28B5 CD 5A 27            CALL  putCRLF
28B8 C9                  RET
28B9             ;****************
28B9             ;writeA
28B9             ;write an 8-bit unsigned number to the output
28B9             ;  IN:  A = 8-bit unsigned number
28B9             ;  OUT: none
28B9             ;  USES:none
28B9             ;****************
28B9             writeA:
28B9 E5                  PUSH  HL          ;save registers used
28BA 26 00               LD    H,0
28BC 6F                  LD    L,A
28BD CD 91 28            CALL  writeHL
28C0 E1                  POP   HL
28C1 C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20D2 :
    L101 = 20D4 :
    L102 = 20D6 :
    L103 = 20DB :
    L104 = 20DB : 20F3
    L105 = 20DE :
    L106 = 20E1 :
    L107 = 20E8 :
    L108 = 20EC :
    L109 = 20EF :
     L11 = 2016 :
    L110 = 20F1 :
    L111 = 20F3 :
    L112 = 20F6 :
    L113 = 20F6 :
    L114 = 20F6 :
    L115 = 20F6 :
    L116 = 20F6 :
    L117 = 20F8 :
    L118 = 20FE :
    L119 = 20FE : 211A
     L12 = 2016 :
    L120 = 2101 :
    L121 = 2104 :
    L122 = 210B :
    L123 = 210E :
    L124 = 2112 :
    L125 = 2114 :
    L126 = 211A :
    L127 = 211D :
    L128 = 211D : 2139
    L129 = 2120 :
     L13 = 2018 :
    L130 = 2123 :
    L131 = 212A :
    L132 = 212D :
    L133 = 2131 :
    L134 = 2133 :
    L135 = 2139 :
    L136 = 213C :
    L137 = 213C : 215A
    L138 = 213F :
    L139 = 2142 :
     L14 = 201E :
    L140 = 2149 :
    L141 = 214C :
    L142 = 2150 :
    L143 = 2152 :
    L144 = 2158 :
    L145 = 215D :
    L146 = 215D : 2179
    L147 = 2160 :
    L148 = 2163 :
    L149 = 216A :
     L15 = 2021 :
    L150 = 216D :
    L151 = 2171 :
    L152 = 2173 :
    L153 = 2179 :
    L154 = 217C :
    L155 = 217C :
    L156 = 217E :
    L157 = 2184 :
    L158 = 2184 : 21A7
    L159 = 2187 :
     L16 = 2021 :
    L160 = 218A :
    L161 = 2191 :
    L162 = 2198 :
    L163 = 219B :
    L164 = 219F :
    L165 = 21A1 :
    L166 = 21A7 :
    L167 = 21AA :
    L168 = 21AA : 21CD 21D0
    L169 = 21AD :
     L17 = 2021 : 201E
    L170 = 21B0 :
    L171 = 21B7 :
    L172 = 21BE :
    L173 = 21C1 :
    L174 = 21C5 :
    L175 = 21C7 :
    L176 = 21CD :
    L177 = 21D3 :
    L178 = 21D3 :
    L179 = 21D3 :
     L18 = 2021 :
    L180 = 21D3 :
    L181 = 21D3 :
    L182 = 21D3 :
    L183 = 21D3 :
    L184 = 21D3 :
    L185 = 21D3 :
    L186 = 21D6 :
    L187 = 21D9 :
    L188 = 21D9 : 21F3
    L189 = 21DC :
     L19 = 2023 :
    L190 = 21DF :
    L191 = 21E6 :
    L192 = 21E9 :
    L193 = 21ED :
    L194 = 21F3 :
    L195 = 21F6 :
    L196 = 21F6 : 2210
    L197 = 21F9 :
    L198 = 21FC :
    L199 = 2203 :
      L2 = 2009 :
     L20 = 2029 :
    L200 = 2206 :
    L201 = 220A :
    L202 = 2210 :
    L203 = 2213 :
    L204 = 2213 : 222D
    L205 = 2216 :
    L206 = 2219 :
    L207 = 2220 :
    L208 = 2223 :
    L209 = 2227 :
     L21 = 202D :
    L210 = 222D :
    L211 = 2230 :
    L212 = 2230 : 224A 224D
    L213 = 2233 :
    L214 = 2236 :
    L215 = 223D :
    L216 = 2240 :
    L217 = 2244 :
    L218 = 224A :
    L219 = 2250 :
     L22 = 202D :
    L220 = 2250 :
    L221 = 2253 :
    L222 = 2256 :
    L223 = 2256 : 2279
    L224 = 2259 :
    L225 = 225C :
    L226 = 2263 :
    L227 = 226A :
    L228 = 226D :
    L229 = 2271 :
     L23 = 202F :
    L230 = 2277 :
    L231 = 227C :
    L232 = 227C : 229D
    L233 = 227F :
    L234 = 2282 :
    L235 = 2289 :
    L236 = 2290 :
    L237 = 2293 :
    L238 = 2297 :
    L239 = 229D :
     L24 = 2032 :
    L240 = 22A0 :
    L241 = 22A0 :
    L242 = 22A0 :
    L243 = 22A0 :
    L244 = 22A0 :
    L245 = 22A0 :
    L246 = 22A2 :
    L247 = 22A5 :
    L248 = 22A5 : 22B4 22B7
    L249 = 22A8 :
     L25 = 2032 :
    L250 = 22AB :
    L251 = 22AF :
    L252 = 22B2 :
    L253 = 22B4 :
    L254 = 22BA :
    L255 = 22BA :
    L256 = 22BA :
    L257 = 22BC :
    L258 = 22C2 :
    L259 = 22C2 : 22DA
     L26 = 2032 :
    L260 = 22C5 :
    L261 = 22C8 :
    L262 = 22CF :
    L263 = 22D2 :
    L264 = 22D4 :
    L265 = 22DA :
    L266 = 22DD :
    L267 = 22DD :
    L268 = 22DD :
    L269 = 22DD :
     L27 = 2032 :
    L270 = 22DD :
    L271 = 22E0 :
    L272 = 22E3 :
    L273 = 22E3 :
    L274 = 22E5 :
    L275 = 22E8 :
    L276 = 22E8 : 2302
    L277 = 22EB :
    L278 = 22EE :
    L279 = 22F2 :
     L28 = 2032 :
    L280 = 22F9 :
    L281 = 22FC :
    L282 = 2302 :
    L283 = 2305 :
    L284 = 2305 :
    L285 = 2305 :
    L286 = 2305 :
    L287 = 2305 :
    L288 = 2305 :
    L289 = 2305 :
     L29 = 2035 :
    L290 = 2307 :
    L291 = 230A :
    L292 = 230A :
    L293 = 230A :
    L294 = 230A :
    L295 = 230A :
    L296 = 230C :
    L297 = 230F :
    L298 = 230F :
    L299 = 230F :
      L3 = 2009 :
     L30 = 2038 :
    L300 = 230F :
    L301 = 230F :
    L302 = 2311 :
    L303 = 2314 :
    L304 = 2314 :
    L305 = 2314 :
    L306 = 2314 :
    L307 = 2314 :
    L308 = 2316 :
    L309 = 2319 :
     L31 = 2038 :
    L310 = 2319 :
    L311 = 2319 :
    L312 = 2319 :
    L313 = 2319 :
    L314 = 2319 :
    L315 = 2319 :
    L316 = 231B :
    L317 = 231E :
    L318 = 231E :
    L319 = 231E :
     L32 = 203C :
    L320 = 231E :
    L321 = 231E :
    L322 = 2320 :
    L323 = 2323 :
    L324 = 2323 :
    L325 = 2323 :
    L326 = 2323 :
    L327 = 2323 :
    L328 = 2325 :
    L329 = 2328 :
     L33 = 203C : 2060
    L330 = 2328 :
    L331 = 2328 :
    L332 = 2328 :
    L333 = 2328 :
    L334 = 232A :
    L335 = 232D :
    L336 = 232D :
    L337 = 232D :
    L338 = 232D :
    L339 = 232D :
     L34 = 203C :
    L340 = 232D :
    L341 = 232F :
    L342 = 2332 :
    L343 = 2332 : 2343 2346
    L344 = 2335 :
    L345 = 2338 :
    L346 = 233C :
    L347 = 233F :
    L348 = 2341 :
    L349 = 2343 :
     L35 = 203F :
    L350 = 2349 :
    L351 = 2349 :
    L352 = 2349 :
    L353 = 2349 :
    L354 = 2349 :
    L355 = 234B :
    L356 = 2351 :
    L357 = 2351 : 236E 2371
    L358 = 2354 :
    L359 = 2357 :
     L36 = 2045 :
    L360 = 235E :
    L361 = 2361 :
    L362 = 2365 :
    L363 = 2367 :
    L364 = 236E :
    L365 = 2374 :
    L366 = 2374 :
    L367 = 2374 :
    L368 = 2376 :
    L369 = 2379 :
     L37 = 2045 :
    L370 = 2379 :
    L371 = 237C :
    L372 = 237F :
    L373 = 237F :
    L374 = 237F : 239D 23A0
    L375 = 2382 :
    L376 = 2385 :
    L377 = 2389 :
    L378 = 2390 :
    L379 = 2393 :
     L38 = 2048 :
    L380 = 2397 :
    L381 = 239D :
    L382 = 23A3 :
    L383 = 23A3 :
    L384 = 23A3 :
    L385 = 23A3 :
    L386 = 23A3 :
    L387 = 23A3 :
    L388 = 23A5 :
    L389 = 23A8 :
     L39 = 204B :
    L390 = 23A8 : 23BE
    L391 = 23AB :
    L392 = 23AE :
    L393 = 23B2 :
    L394 = 23B5 :
    L395 = 23B7 :
    L396 = 23B8 :
    L397 = 23BA :
    L398 = 23BC :
    L399 = 23BE :
      L4 = 2009 :
     L40 = 204B :
    L400 = 23C1 :
    L401 = 23C1 :
    L402 = 23C1 :
    L403 = 23C3 :
    L404 = 23C9 :
    L405 = 23C9 : 23ED 23F0
    L406 = 23CC :
    L407 = 23CF :
    L408 = 23D3 :
    L409 = 23DA :
     L41 = 204E :
    L410 = 23DC :
    L411 = 23DE :
    L412 = 23DF :
    L413 = 23E2 :
    L414 = 23E6 :
    L415 = 23E7 :
    L416 = 23ED :
    L417 = 23F3 :
    L418 = 23F3 :
    L419 = 23F3 :
     L42 = 2051 :
    L420 = 23F5 :
    L421 = 23FB :
    L422 = 23FB :
    L423 = 23FD :
    L424 = 2400 :
    L425 = 2400 : 2422 2425
    L426 = 2403 :
    L427 = 2406 :
    L428 = 240D :
    L429 = 2410 :
     L43 = 2051 :
    L430 = 2414 :
    L431 = 2415 :
    L432 = 2418 :
    L433 = 241A :
    L434 = 241B :
    L435 = 2422 :
    L436 = 2428 :
    L437 = 2428 :
    L438 = 2428 :
    L439 = 242A :
     L44 = 2055 :
    L440 = 242D :
    L441 = 242D :
    L442 = 2430 :
    L443 = 2433 :
    L444 = 2433 : 2457
    L445 = 2436 :
    L446 = 2439 :
    L447 = 243D :
    L448 = 2444 :
    L449 = 2447 :
     L45 = 2055 :
    L450 = 244B :
    L451 = 244C :
    L452 = 244F :
    L453 = 2453 :
    L454 = 2457 :
    L455 = 245A :
    L456 = 245A :
    L457 = 245A :
    L458 = 245A :
    L459 = 245A :
     L46 = 2058 :
    L460 = 245A :
    L461 = 245C :
    L462 = 245F :
    L463 = 245F :
    L464 = 2461 :
    L465 = 2467 :
    L466 = 2467 : 2481 2484
    L467 = 246A :
    L468 = 246D :
    L469 = 2474 :
     L47 = 205B :
    L470 = 2478 :
    L471 = 247A :
    L472 = 247C :
    L473 = 2481 :
    L474 = 2487 :
    L475 = 2487 :
    L476 = 2487 :
    L477 = 2489 :
    L478 = 248C :
    L479 = 248C :
     L48 = 205B :
    L480 = 248E :
    L481 = 2494 :
    L482 = 2494 : 24B2 24B5
    L483 = 2497 :
    L484 = 249A :
    L485 = 249E :
    L486 = 24A5 :
    L487 = 24A7 :
    L488 = 24A9 :
    L489 = 24AC :
     L49 = 205E :
    L490 = 24B2 :
    L491 = 24B8 :
    L492 = 24B8 :
    L493 = 24B8 :
    L494 = 24BA :
    L495 = 24C0 :
    L496 = 24C0 :
    L497 = 24C2 :
    L498 = 24C5 :
    L499 = 24C5 : 24E7 24EA
      L5 = 2009 :
     L50 = 2060 :
    L500 = 24C8 :
    L501 = 24CB :
    L502 = 24D2 :
    L503 = 24D6 :
    L504 = 24D9 :
    L505 = 24DD :
    L506 = 24E0 :
    L507 = 24E7 :
    L508 = 24ED :
    L509 = 24ED :
     L51 = 2063 :
    L510 = 24ED :
    L511 = 24F0 :
    L512 = 24F3 :
    L513 = 24F3 :
    L514 = 24F5 :
    L515 = 24F8 :
    L516 = 24F8 : 2517 251A
    L517 = 24FB :
    L518 = 24FE :
    L519 = 2502 :
     L52 = 2063 :
    L520 = 2509 :
    L521 = 250C :
    L522 = 2510 :
    L523 = 2517 :
    L524 = 251D :
    L525 = 251D :
    L526 = 251D :
    L527 = 251D :
    L528 = 251D :
    L529 = 251D :
     L53 = 2063 :
    L530 = 251D :
    L531 = 251F :
    L532 = 2522 :
    L533 = 2522 :
    L534 = 2524 :
    L535 = 2527 :
    L536 = 2527 :
    L537 = 2527 :
    L538 = 2527 :
    L539 = 2529 :
     L54 = 2063 :
    L540 = 252C :
    L541 = 252C :
    L542 = 252E :
    L543 = 2531 :
    L544 = 2531 :
    L545 = 2531 :
    L546 = 2531 :
    L547 = 2533 :
    L548 = 2536 :
    L549 = 2536 :
     L55 = 2063 :
    L550 = 2538 :
    L551 = 253B :
    L552 = 253B :
    L553 = 253B :
    L554 = 253B :
    L555 = 253D :
    L556 = 2540 :
    L557 = 2540 :
    L558 = 2542 :
    L559 = 2545 :
     L56 = 2063 :
    L560 = 2545 :
    L561 = 2545 :
    L562 = 2545 :
    L563 = 2545 :
    L564 = 2545 :
    L565 = 2545 :
    L566 = 2547 :
    L567 = 254A :
    L568 = 254A :
    L569 = 254C :
     L57 = 2063 :
    L570 = 254F :
    L571 = 254F :
    L572 = 254F :
    L573 = 254F :
    L574 = 2551 :
    L575 = 2554 :
    L576 = 2554 :
    L577 = 2556 :
    L578 = 2559 :
    L579 = 2559 :
     L58 = 2063 :
    L580 = 2559 :
    L581 = 2559 :
    L582 = 255B :
    L583 = 255E :
    L584 = 255E :
    L585 = 2560 :
    L586 = 2563 :
    L587 = 2563 :
    L588 = 2563 :
    L589 = 2563 :
     L59 = 2063 :
    L590 = 2565 :
    L591 = 2568 :
    L592 = 2568 :
    L593 = 256A :
    L594 = 256D :
    L595 = 256D :
    L596 = 256D :
    L597 = 256D :
    L598 = 256D :
    L599 = 256D :
      L6 = 2009 : 2003
     L60 = 2063 : 2074
    L600 = 256F :
    L601 = 2572 :
    L602 = 2572 : 2581 2584
    L603 = 2575 :
    L604 = 2578 :
    L605 = 257C :
    L606 = 257F :
    L607 = 2581 :
    L608 = 2587 :
    L609 = 2587 :
     L61 = 2066 :
    L610 = 2587 :
    L611 = 2587 :
    L612 = 2589 :
    L613 = 258C :
    L614 = 258C :
    L615 = 258E :
    L616 = 2591 :
    L617 = 2591 :
    L618 = 2591 :
    L619 = 2593 :
     L62 = 2069 :
    L620 = 2599 :
    L621 = 2599 : 25B2 25B5
    L622 = 259C :
    L623 = 259F :
    L624 = 25A6 :
    L625 = 25A9 :
    L626 = 25AB :
    L627 = 25B2 :
    L628 = 25B8 :
    L629 = 25B8 :
     L63 = 206D :
    L630 = 25B8 :
    L631 = 25BB :
    L632 = 25BE :
    L633 = 25BE :
    L634 = 25C0 :
    L635 = 25C3 :
    L636 = 25C3 : 25DD 25E0
    L637 = 25C6 :
    L638 = 25C9 :
    L639 = 25CD :
     L64 = 2070 :
    L640 = 25D4 :
    L641 = 25D7 :
    L642 = 25DD :
    L643 = 25E3 :
    L644 = 25E3 :
    L645 = 25E3 :
    L646 = 25E3 :
    L647 = 25E3 :
    L648 = 25E3 : 25F6
    L649 = 25E6 :
     L65 = 2072 :
    L650 = 25E9 :
    L651 = 25ED :
    L652 = 25EF :
    L653 = 25F1 :
    L654 = 25F6 :
    L655 = 25F9 :
    L656 = 25F9 :
    L657 = 25F9 :
    L658 = 25F9 :
    L659 = 25FB :
     L66 = 2074 :
    L660 = 2601 :
    L661 = 2601 : 261B 261E
    L662 = 2604 :
    L663 = 2607 :
    L664 = 260B :
    L665 = 260E :
    L666 = 2612 :
    L667 = 2615 :
    L668 = 261B :
    L669 = 2621 :
     L67 = 2077 :
    L670 = 2621 :
    L671 = 2621 :
    L672 = 2623 :
    L673 = 2629 :
    L674 = 2629 : 2644 2647
    L675 = 262C :
    L676 = 262F :
    L677 = 2636 :
    L678 = 2638 :
    L679 = 263A :
     L68 = 2077 : 2088
    L680 = 263D :
    L681 = 2644 :
    L682 = 264A :
    L683 = 264A :
    L684 = 264A :
    L685 = 264D :
    L686 = 2650 :
    L687 = 2650 :
    L688 = 2652 :
    L689 = 2655 :
     L69 = 207A :
    L690 = 2655 : 2674
    L691 = 2658 :
    L692 = 265B :
    L693 = 265F :
    L694 = 2666 :
    L695 = 2669 :
    L696 = 266D :
    L697 = 2674 :
    L698 = 2677 :
    L699 = 2677 :
      L7 = 200B :
     L70 = 207D :
    L700 = 2677 :
    L701 = 2677 :
    L702 = 2677 :
    L703 = 2677 :
    L704 = 2679 :
    L705 = 267C :
    L706 = 267C : 268C 268F
    L707 = 267F :
    L708 = 2682 :
    L709 = 2686 :
     L71 = 2081 :
    L710 = 2689 :
    L711 = 268C :
    L712 = 2692 :
    L713 = 2692 :
    L714 = 2692 :
    L715 = 2694 :
    L716 = 269A :
    L717 = 269A : 26B0 26B3
    L718 = 269D :
    L719 = 26A0 :
     L72 = 2084 :
    L720 = 26A4 :
    L721 = 26A7 :
    L722 = 26AA :
    L723 = 26B0 :
    L724 = 26B6 :
    L725 = 26B6 :
    L726 = 26B6 :
    L727 = 26B9 :
    L728 = 26BF :
    L729 = 26BF :
     L73 = 2086 :
    L730 = 26C1 :
    L731 = 26C4 :
    L732 = 26C4 : 26DE 26E1
    L733 = 26C7 :
    L734 = 26CA :
    L735 = 26D1 :
    L736 = 26D4 :
    L737 = 26D7 :
    L738 = 26DE :
    L739 = 26E4 :
     L74 = 2088 :
    L740 = 26E4 :
    L741 = 26E4 :
    L742 = 26E6 :
    L743 = 26E9 :
    L744 = 26E9 : 2702 2705
    L745 = 26EC :
    L746 = 26EF :
    L747 = 26F6 :
    L748 = 26F9 :
    L749 = 2702 :
     L75 = 208B :
    L750 = 2708 :
    L751 = 2708 :
    L752 = 2708 :
    L753 = 2708 :
    L754 = 2708 :
    L755 = 2708 :
    L756 = 2708 :
    L757 = 2708 :
    L758 = 2708 :
    L759 = 2708 :
     L76 = 208B : 209C
    L760 = 2708 :
    L761 = 2708 :
    L762 = 2708 :
    L763 = 2708 :
    L764 = 2708 :
    L765 = 2708 :
    L766 = 2708 :
    L767 = 2708 :
    L768 = 2708 :
    L769 = 2708 :
     L77 = 208E :
    L770 = 2708 :
    L771 = 2708 :
    L772 = 2708 :
    L773 = 2708 :
    L774 = 2708 :
    L775 = 2708 :
    L776 = 2708 :
    L777 = 2708 :
    L778 = 2708 :
    L779 = 2708 :
     L78 = 2091 :
    L780 = 2708 :
    L781 = 2708 :
    L782 = 2708 :
    L783 = 2708 :
    L784 = 2708 :
    L785 = 270B :
    L786 = 270E :
    L787 = 270E :
    L788 = 2710 :
    L789 = 2712 :
     L79 = 2095 :
    L790 = 2713 :
    L791 = 2713 : 2708
      L8 = 200E :
     L80 = 2098 :
     L81 = 209A :
     L82 = 209C :
     L83 = 209F :
     L84 = 209F : 20B0 20B3
     L85 = 20A2 :
     L86 = 20A5 :
     L87 = 20A9 :
     L88 = 20AC :
     L89 = 20AE :
      L9 = 200E :
     L90 = 20B0 :
     L91 = 20B6 :
     L92 = 20B6 :
     L93 = 20B8 :
     L94 = 20BE :
     L95 = 20BE : 20D8
     L96 = 20C1 :
     L97 = 20C4 :
     L98 = 20CB :
     L99 = 20CF :
   div16 = 2817 :
 div16_1 = 2820 : 282F
 div16_2 = 282E : 2829
 div16_3 = 282F : 282C
 div16_8 = 2837 : 289E
div16_82 = 283C : 2844
div16_83 = 2844 : 2840
    div8 = 2848 : 286B
  div8_1 = 2850 : 285B
 div8_16 = 2862 :
div8_161 = 2869 : 2865
  div8_2 = 285B : 2857
 getChar = 2719 : 2873
getChar1 = 2727 : 271E
   mul16 = 279B :
 mul1632 = 27CA :
mul16321 = 27EC : 27E9
mul16322 = 27F3 : 27F0
  mul16S = 27FD :
 mul16S1 = 2806 : 2812
 mul16S2 = 2811 : 280B 280E
mul16_10 = 27B4 : 287C
 mul16_8 = 27BD :
 putBell = 2773 :
 putCRLF = 275A : 273A 288D 28B5
 putChar = 274D : 2744 275D 2762 2769 2771 2775 2796 28AA
putChar1 = 274E : 2753
putErase = 2767 :
 putHexA = 2782 : 2779 277D
putHexA1 = 278B : 2787
putHexA2 = 2796 : 2792
putHexHL = 2777 :
  putMsg = 2731 :
putSpace = 274B : 276C
 putStr1 = 273F : 2747
 putStr2 = 2749 : 2742
    read = 286F :
   read1 = 2873 : 2876 2883 2886
   read2 = 2888 : 287A
   start = 2000 :
  writeA = 28B9 : 28B2
 writeHL = 2891 : 288A 28BD
writeHL1 = 289C : 2897 28A5
writeHL2 = 28A7 : 28AD
writeHL3 = 28A8 : 289A
writeLineA = 28B2 : 202F 2035 2058 2066 207A 208E 20A2 22A8 22EB 2307 230C 2311
                : 2316 231B 2320 2325 232A 2335 2382 23AB 23CC 2436 2497 24FB
                : 251F 2524 2529 252E 2533 2538 253D 2542 2547 254C 2551 2556
                : 255B 2560 2565 256A 2575 2589 258E 25C6 25E6 2604 2658 267F
                : 269D
writeLineHL = 288A : 20C1 20DE 2101 2120 213F 2160 2187 21AD 21DC 21F9 2216 2233
                : 2259 227F 22C5 2354 2403 246A 24C8 259C 262C 26C7 26EC
writeLineStr = 2737 : 270B
writeStr = 273E : 2732 2737
