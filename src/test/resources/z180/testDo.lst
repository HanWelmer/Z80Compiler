2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testDo.j(0) /* Program to test generated Z80 assembler code */
2009             L3:
2009                     ;;testDo.j(1) class TestDo {
2009             L4:
2009                     ;class TestDo []
2009             L5:
2009                     ;;testDo.j(2)   private static byte b = 1;
2009             L6:
2009 3E 01               LD    A,1
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testDo.j(3)   private static word i = 12;
200E             L9:
200E 3E 0C               LD    A,12
2010             L10:
2010 6F                  LD    L,A
2011 26 00               LD    H,0
2013 22 01 50            LD    (05001H),HL
2016             L11:
2016                     ;;testDo.j(4)   private static word p = 12;
2016             L12:
2016 3E 0C               LD    A,12
2018             L13:
2018 6F                  LD    L,A
2019 26 00               LD    H,0
201B 22 03 50            LD    (05003H),HL
201E             L14:
201E C3 21 20            JP    L17
2021             L15:
2021                     ;;testDo.j(5) 
2021             L16:
2021                     ;;testDo.j(6)   public static void main() {
2021             L17:
2021                     ;method TestDo.main [public, static] void ()
2021             L18:
2021 DD E5               PUSH  IX
2023             L19:
2023 DD 21 00 00         LD    IX,0x0000
2027 DD 39               ADD   IX,SP
2029             L20:
2029 3B                  DEC   SP
202A 3B                  DEC   SP
202B 3B                  DEC   SP
202C 3B                  DEC   SP
202D             L21:
202D                     ;;testDo.j(7)     println(0);
202D             L22:
202D 3E 00               LD    A,0
202F             L23:
202F CD D1 28            CALL  writeLineA
2032             L24:
2032                     ;;testDo.j(8)   
2032             L25:
2032                     ;;testDo.j(9)     /************************/
2032             L26:
2032                     ;;testDo.j(10)     // global variable within do scope
2032             L27:
2032                     ;;testDo.j(11)     println (b);
2032             L28:
2032 3A 00 50            LD    A,(05000H)
2035             L29:
2035 CD D1 28            CALL  writeLineA
2038             L30:
2038                     ;;testDo.j(12)     b++;
2038             L31:
2038 21 00 50            LD    HL,05000H
203B 34                  INC   (HL)
203C             L32:
203C                     ;;testDo.j(13)     do {
203C             L33:
203C                     ;;testDo.j(14)       word j = 1001;
203C             L34:
203C 21 E9 03            LD    HL,1001
203F             L35:
203F DD 75 FE            LD    (IX - 2),L
2042 DD 74 FF            LD    (IX - 1),H
2045             L36:
2045                     ;;testDo.j(15)       byte c = b;
2045             L37:
2045 3A 00 50            LD    A,(05000H)
2048             L38:
2048 DD 77 FD            LD    (IX - 3),A
204B             L39:
204B                     ;;testDo.j(16)       byte d = c;
204B             L40:
204B DD 7E FD            LD    A,(IX - 3)
204E             L41:
204E DD 77 FC            LD    (IX - 4),A
2051             L42:
2051                     ;;testDo.j(17)       b++;
2051             L43:
2051 21 00 50            LD    HL,05000H
2054 34                  INC   (HL)
2055             L44:
2055                     ;;testDo.j(18)       println (c);
2055             L45:
2055 DD 7E FD            LD    A,(IX - 3)
2058             L46:
2058 CD D1 28            CALL  writeLineA
205B             L47:
205B                     ;;testDo.j(19)     } while (b<2);
205B             L48:
205B 3A 00 50            LD    A,(05000H)
205E             L49:
205E D6 02               SUB   A,2
2060             L50:
2060 DA 3C 20            JP    C,L33
2063             L51:
2063                     ;;testDo.j(20)   
2063             L52:
2063                     ;;testDo.j(21)     /************************/
2063             L53:
2063                     ;;testDo.j(22)     // constant - constant
2063             L54:
2063                     ;;testDo.j(23)     // not relevant
2063             L55:
2063                     ;;testDo.j(24)   
2063             L56:
2063                     ;;testDo.j(25)     /************************/
2063             L57:
2063                     ;;testDo.j(26)     // constant - acc
2063             L58:
2063                     ;;testDo.j(27)     // byte - byte
2063             L59:
2063                     ;;testDo.j(28)     do { println (b); b++; } while (103 == b+100);
2063             L60:
2063 3A 00 50            LD    A,(05000H)
2066             L61:
2066 CD D1 28            CALL  writeLineA
2069             L62:
2069 21 00 50            LD    HL,05000H
206C 34                  INC   (HL)
206D             L63:
206D 3A 00 50            LD    A,(05000H)
2070             L64:
2070 C6 64               ADD   A,100
2072             L65:
2072 D6 67               SUB   A,103
2074             L66:
2074 CA 63 20            JP    Z,L60
2077             L67:
2077                     ;;testDo.j(29)     do { println (b); b++; } while (106 != b+100);
2077             L68:
2077 3A 00 50            LD    A,(05000H)
207A             L69:
207A CD D1 28            CALL  writeLineA
207D             L70:
207D 21 00 50            LD    HL,05000H
2080 34                  INC   (HL)
2081             L71:
2081 3A 00 50            LD    A,(05000H)
2084             L72:
2084 C6 64               ADD   A,100
2086             L73:
2086 D6 6A               SUB   A,106
2088             L74:
2088 C2 77 20            JP    NZ,L68
208B             L75:
208B                     ;;testDo.j(30)     do { println (b); b++; } while (108 >  b+100);
208B             L76:
208B 3A 00 50            LD    A,(05000H)
208E             L77:
208E CD D1 28            CALL  writeLineA
2091             L78:
2091 21 00 50            LD    HL,05000H
2094 34                  INC   (HL)
2095             L79:
2095 3A 00 50            LD    A,(05000H)
2098             L80:
2098 C6 64               ADD   A,100
209A             L81:
209A D6 6C               SUB   A,108
209C             L82:
209C DA 8B 20            JP    C,L76
209F             L83:
209F                     ;;testDo.j(31)     do { println (b); b++; } while (109 >= b+100);
209F             L84:
209F 3A 00 50            LD    A,(05000H)
20A2             L85:
20A2 CD D1 28            CALL  writeLineA
20A5             L86:
20A5 21 00 50            LD    HL,05000H
20A8 34                  INC   (HL)
20A9             L87:
20A9 3A 00 50            LD    A,(05000H)
20AC             L88:
20AC C6 64               ADD   A,100
20AE             L89:
20AE D6 6D               SUB   A,109
20B0             L90:
20B0 DA 9F 20            JP    C,L84
20B3 CA 9F 20            JP    Z,L84
20B6             L91:
20B6                     ;;testDo.j(32)     p=10;
20B6             L92:
20B6 3E 0A               LD    A,10
20B8             L93:
20B8 6F                  LD    L,A
20B9 26 00               LD    H,0
20BB 22 03 50            LD    (05003H),HL
20BE             L94:
20BE                     ;;testDo.j(33)     do { println (p); p++; b--; } while (108 <  b+100);
20BE             L95:
20BE 2A 03 50            LD    HL,(05003H)
20C1             L96:
20C1 CD A9 28            CALL  writeLineHL
20C4             L97:
20C4 2A 03 50            LD    HL,(05003H)
20C7 23                  INC   HL
20C8 22 03 50            LD    (05003H),HL
20CB             L98:
20CB 21 00 50            LD    HL,05000H
20CE 35                  DEC   (HL)
20CF             L99:
20CF 3A 00 50            LD    A,(05000H)
20D2             L100:
20D2 C6 64               ADD   A,100
20D4             L101:
20D4 D6 6C               SUB   A,108
20D6             L102:
20D6 28 03               JR    Z,$+3
20D8 D2 BE 20            JP    NC,L95
20DB             L103:
20DB                     ;;testDo.j(34)     do { println (p); p++; b--; } while (107 <= b+100);
20DB             L104:
20DB 2A 03 50            LD    HL,(05003H)
20DE             L105:
20DE CD A9 28            CALL  writeLineHL
20E1             L106:
20E1 2A 03 50            LD    HL,(05003H)
20E4 23                  INC   HL
20E5 22 03 50            LD    (05003H),HL
20E8             L107:
20E8 21 00 50            LD    HL,05000H
20EB 35                  DEC   (HL)
20EC             L108:
20EC 3A 00 50            LD    A,(05000H)
20EF             L109:
20EF C6 64               ADD   A,100
20F1             L110:
20F1 D6 6B               SUB   A,107
20F3             L111:
20F3 D2 DB 20            JP    NC,L104
20F6 CA DB 20            JP    Z,L104
20F9             L112:
20F9                     ;;testDo.j(35)   
20F9             L113:
20F9                     ;;testDo.j(36)     // constant - acc
20F9             L114:
20F9                     ;;testDo.j(37)     // byte - integer
20F9             L115:
20F9                     ;;testDo.j(38)     i=14;
20F9             L116:
20F9 3E 0E               LD    A,14
20FB             L117:
20FB 6F                  LD    L,A
20FC 26 00               LD    H,0
20FE 22 01 50            LD    (05001H),HL
2101             L118:
2101                     ;;testDo.j(39)     do { println (i); i++; } while (15 == i+0);
2101             L119:
2101 2A 01 50            LD    HL,(05001H)
2104             L120:
2104 CD A9 28            CALL  writeLineHL
2107             L121:
2107 2A 01 50            LD    HL,(05001H)
210A 23                  INC   HL
210B 22 01 50            LD    (05001H),HL
210E             L122:
210E 2A 01 50            LD    HL,(05001H)
2111             L123:
2111 11 00 00            LD    DE,0
2114 19                  ADD   HL,DE
2115             L124:
2115 3E 0F               LD    A,15
2117             L125:
2117 5F                  LD    E,A
2118 16 00               LD    D,0
211A B7                  OR    A
211B ED 52               SBC   HL,DE
211D             L126:
211D CA 01 21            JP    Z,L119
2120             L127:
2120                     ;;testDo.j(40)     do { println (i); i++; } while (18 != i+0);
2120             L128:
2120 2A 01 50            LD    HL,(05001H)
2123             L129:
2123 CD A9 28            CALL  writeLineHL
2126             L130:
2126 2A 01 50            LD    HL,(05001H)
2129 23                  INC   HL
212A 22 01 50            LD    (05001H),HL
212D             L131:
212D 2A 01 50            LD    HL,(05001H)
2130             L132:
2130 11 00 00            LD    DE,0
2133 19                  ADD   HL,DE
2134             L133:
2134 3E 12               LD    A,18
2136             L134:
2136 5F                  LD    E,A
2137 16 00               LD    D,0
2139 B7                  OR    A
213A ED 52               SBC   HL,DE
213C             L135:
213C C2 20 21            JP    NZ,L128
213F             L136:
213F                     ;;testDo.j(41)     do { println (i); i++; } while (20 >  i+0);
213F             L137:
213F 2A 01 50            LD    HL,(05001H)
2142             L138:
2142 CD A9 28            CALL  writeLineHL
2145             L139:
2145 2A 01 50            LD    HL,(05001H)
2148 23                  INC   HL
2149 22 01 50            LD    (05001H),HL
214C             L140:
214C 2A 01 50            LD    HL,(05001H)
214F             L141:
214F 11 00 00            LD    DE,0
2152 19                  ADD   HL,DE
2153             L142:
2153 3E 14               LD    A,20
2155             L143:
2155 5F                  LD    E,A
2156 16 00               LD    D,0
2158 B7                  OR    A
2159 ED 52               SBC   HL,DE
215B             L144:
215B 28 03               JR    Z,$+3
215D D2 3F 21            JP    NC,L137
2160             L145:
2160                     ;;testDo.j(42)     do { println (i); i++; } while (21 >= i+0);
2160             L146:
2160 2A 01 50            LD    HL,(05001H)
2163             L147:
2163 CD A9 28            CALL  writeLineHL
2166             L148:
2166 2A 01 50            LD    HL,(05001H)
2169 23                  INC   HL
216A 22 01 50            LD    (05001H),HL
216D             L149:
216D 2A 01 50            LD    HL,(05001H)
2170             L150:
2170 11 00 00            LD    DE,0
2173 19                  ADD   HL,DE
2174             L151:
2174 3E 15               LD    A,21
2176             L152:
2176 5F                  LD    E,A
2177 16 00               LD    D,0
2179 B7                  OR    A
217A ED 52               SBC   HL,DE
217C             L153:
217C D2 60 21            JP    NC,L146
217F CA 60 21            JP    Z,L146
2182             L154:
2182                     ;;testDo.j(43)     p=22;
2182             L155:
2182 3E 16               LD    A,22
2184             L156:
2184 6F                  LD    L,A
2185 26 00               LD    H,0
2187 22 03 50            LD    (05003H),HL
218A             L157:
218A                     ;;testDo.j(44)     do { println (p); p++; i--; } while (20 <  i+0);
218A             L158:
218A 2A 03 50            LD    HL,(05003H)
218D             L159:
218D CD A9 28            CALL  writeLineHL
2190             L160:
2190 2A 03 50            LD    HL,(05003H)
2193 23                  INC   HL
2194 22 03 50            LD    (05003H),HL
2197             L161:
2197 2A 01 50            LD    HL,(05001H)
219A 2B                  DEC   HL
219B 22 01 50            LD    (05001H),HL
219E             L162:
219E 2A 01 50            LD    HL,(05001H)
21A1             L163:
21A1 11 00 00            LD    DE,0
21A4 19                  ADD   HL,DE
21A5             L164:
21A5 3E 14               LD    A,20
21A7             L165:
21A7 5F                  LD    E,A
21A8 16 00               LD    D,0
21AA B7                  OR    A
21AB ED 52               SBC   HL,DE
21AD             L166:
21AD DA 8A 21            JP    C,L158
21B0             L167:
21B0                     ;;testDo.j(45)     do { println (p); p++; i--; } while (19 <= i+0);
21B0             L168:
21B0 2A 03 50            LD    HL,(05003H)
21B3             L169:
21B3 CD A9 28            CALL  writeLineHL
21B6             L170:
21B6 2A 03 50            LD    HL,(05003H)
21B9 23                  INC   HL
21BA 22 03 50            LD    (05003H),HL
21BD             L171:
21BD 2A 01 50            LD    HL,(05001H)
21C0 2B                  DEC   HL
21C1 22 01 50            LD    (05001H),HL
21C4             L172:
21C4 2A 01 50            LD    HL,(05001H)
21C7             L173:
21C7 11 00 00            LD    DE,0
21CA 19                  ADD   HL,DE
21CB             L174:
21CB 3E 13               LD    A,19
21CD             L175:
21CD 5F                  LD    E,A
21CE 16 00               LD    D,0
21D0 B7                  OR    A
21D1 ED 52               SBC   HL,DE
21D3             L176:
21D3 DA B0 21            JP    C,L168
21D6 CA B0 21            JP    Z,L168
21D9             L177:
21D9                     ;;testDo.j(46)   
21D9             L178:
21D9                     ;;testDo.j(47)     // constant - acc
21D9             L179:
21D9                     ;;testDo.j(48)     // integer - byte
21D9             L180:
21D9                     ;;testDo.j(49)     // not relevant
21D9             L181:
21D9                     ;;testDo.j(50)   
21D9             L182:
21D9                     ;;testDo.j(51)     // constant - acc
21D9             L183:
21D9                     ;;testDo.j(52)     // integer - integer
21D9             L184:
21D9                     ;;testDo.j(53)     i=p;
21D9             L185:
21D9 2A 03 50            LD    HL,(05003H)
21DC             L186:
21DC 22 01 50            LD    (05001H),HL
21DF             L187:
21DF                     ;;testDo.j(54)     do { println (i); i++; } while (1027 == i+1000);
21DF             L188:
21DF 2A 01 50            LD    HL,(05001H)
21E2             L189:
21E2 CD A9 28            CALL  writeLineHL
21E5             L190:
21E5 2A 01 50            LD    HL,(05001H)
21E8 23                  INC   HL
21E9 22 01 50            LD    (05001H),HL
21EC             L191:
21EC 2A 01 50            LD    HL,(05001H)
21EF             L192:
21EF 11 E8 03            LD    DE,1000
21F2 19                  ADD   HL,DE
21F3             L193:
21F3 11 03 04            LD    DE,1027
21F6 B7                  OR    A
21F7 ED 52               SBC   HL,DE
21F9             L194:
21F9 CA DF 21            JP    Z,L188
21FC             L195:
21FC                     ;;testDo.j(55)     do { println (i); i++; } while (1029 != i+1000);
21FC             L196:
21FC 2A 01 50            LD    HL,(05001H)
21FF             L197:
21FF CD A9 28            CALL  writeLineHL
2202             L198:
2202 2A 01 50            LD    HL,(05001H)
2205 23                  INC   HL
2206 22 01 50            LD    (05001H),HL
2209             L199:
2209 2A 01 50            LD    HL,(05001H)
220C             L200:
220C 11 E8 03            LD    DE,1000
220F 19                  ADD   HL,DE
2210             L201:
2210 11 05 04            LD    DE,1029
2213 B7                  OR    A
2214 ED 52               SBC   HL,DE
2216             L202:
2216 C2 FC 21            JP    NZ,L196
2219             L203:
2219                     ;;testDo.j(56)     do { println (i); i++; } while (1031 >  i+1000);
2219             L204:
2219 2A 01 50            LD    HL,(05001H)
221C             L205:
221C CD A9 28            CALL  writeLineHL
221F             L206:
221F 2A 01 50            LD    HL,(05001H)
2222 23                  INC   HL
2223 22 01 50            LD    (05001H),HL
2226             L207:
2226 2A 01 50            LD    HL,(05001H)
2229             L208:
2229 11 E8 03            LD    DE,1000
222C 19                  ADD   HL,DE
222D             L209:
222D 11 07 04            LD    DE,1031
2230 B7                  OR    A
2231 ED 52               SBC   HL,DE
2233             L210:
2233 DA 19 22            JP    C,L204
2236             L211:
2236                     ;;testDo.j(57)     do { println (i); i++; } while (1032 >= i+1000);
2236             L212:
2236 2A 01 50            LD    HL,(05001H)
2239             L213:
2239 CD A9 28            CALL  writeLineHL
223C             L214:
223C 2A 01 50            LD    HL,(05001H)
223F 23                  INC   HL
2240 22 01 50            LD    (05001H),HL
2243             L215:
2243 2A 01 50            LD    HL,(05001H)
2246             L216:
2246 11 E8 03            LD    DE,1000
2249 19                  ADD   HL,DE
224A             L217:
224A 11 08 04            LD    DE,1032
224D B7                  OR    A
224E ED 52               SBC   HL,DE
2250             L218:
2250 DA 36 22            JP    C,L212
2253 CA 36 22            JP    Z,L212
2256             L219:
2256                     ;;testDo.j(58)     p=i;
2256             L220:
2256 2A 01 50            LD    HL,(05001H)
2259             L221:
2259 22 03 50            LD    (05003H),HL
225C             L222:
225C                     ;;testDo.j(59)     do { println (p); p++; i--; } while (1031 <  i+1000);
225C             L223:
225C 2A 03 50            LD    HL,(05003H)
225F             L224:
225F CD A9 28            CALL  writeLineHL
2262             L225:
2262 2A 03 50            LD    HL,(05003H)
2265 23                  INC   HL
2266 22 03 50            LD    (05003H),HL
2269             L226:
2269 2A 01 50            LD    HL,(05001H)
226C 2B                  DEC   HL
226D 22 01 50            LD    (05001H),HL
2270             L227:
2270 2A 01 50            LD    HL,(05001H)
2273             L228:
2273 11 E8 03            LD    DE,1000
2276 19                  ADD   HL,DE
2277             L229:
2277 11 07 04            LD    DE,1031
227A B7                  OR    A
227B ED 52               SBC   HL,DE
227D             L230:
227D 28 03               JR    Z,$+3
227F D2 5C 22            JP    NC,L223
2282             L231:
2282                     ;;testDo.j(60)     do { println (p); p++; i--; } while (1030 <= i+1000);
2282             L232:
2282 2A 03 50            LD    HL,(05003H)
2285             L233:
2285 CD A9 28            CALL  writeLineHL
2288             L234:
2288 2A 03 50            LD    HL,(05003H)
228B 23                  INC   HL
228C 22 03 50            LD    (05003H),HL
228F             L235:
228F 2A 01 50            LD    HL,(05001H)
2292 2B                  DEC   HL
2293 22 01 50            LD    (05001H),HL
2296             L236:
2296 2A 01 50            LD    HL,(05001H)
2299             L237:
2299 11 E8 03            LD    DE,1000
229C 19                  ADD   HL,DE
229D             L238:
229D 11 06 04            LD    DE,1030
22A0 B7                  OR    A
22A1 ED 52               SBC   HL,DE
22A3             L239:
22A3 D2 82 22            JP    NC,L232
22A6 CA 82 22            JP    Z,L232
22A9             L240:
22A9                     ;;testDo.j(61)   
22A9             L241:
22A9                     ;;testDo.j(62)     /************************/
22A9             L242:
22A9                     ;;testDo.j(63)     // constant - var
22A9             L243:
22A9                     ;;testDo.j(64)     // byte - byte
22A9             L244:
22A9                     ;;testDo.j(65)     b=37;
22A9             L245:
22A9 3E 25               LD    A,37
22AB             L246:
22AB 32 00 50            LD    (05000H),A
22AE             L247:
22AE                     ;;testDo.j(66)     do { println (b); b++; } while (38 >= b);
22AE             L248:
22AE 3A 00 50            LD    A,(05000H)
22B1             L249:
22B1 CD D1 28            CALL  writeLineA
22B4             L250:
22B4 21 00 50            LD    HL,05000H
22B7 34                  INC   (HL)
22B8             L251:
22B8 3A 00 50            LD    A,(05000H)
22BB             L252:
22BB D6 26               SUB   A,38
22BD             L253:
22BD DA AE 22            JP    C,L248
22C0 CA AE 22            JP    Z,L248
22C3             L254:
22C3                     ;;testDo.j(67)     // byte - integer
22C3             L255:
22C3                     ;;testDo.j(68)     i=39;
22C3             L256:
22C3 3E 27               LD    A,39
22C5             L257:
22C5 6F                  LD    L,A
22C6 26 00               LD    H,0
22C8 22 01 50            LD    (05001H),HL
22CB             L258:
22CB                     ;;testDo.j(69)     do { println (i); i++; } while (40 >= i);
22CB             L259:
22CB 2A 01 50            LD    HL,(05001H)
22CE             L260:
22CE CD A9 28            CALL  writeLineHL
22D1             L261:
22D1 2A 01 50            LD    HL,(05001H)
22D4 23                  INC   HL
22D5 22 01 50            LD    (05001H),HL
22D8             L262:
22D8 2A 01 50            LD    HL,(05001H)
22DB             L263:
22DB 3E 28               LD    A,40
22DD             L264:
22DD 5F                  LD    E,A
22DE 16 00               LD    D,0
22E0 B7                  OR    A
22E1 ED 52               SBC   HL,DE
22E3             L265:
22E3 D2 CB 22            JP    NC,L259
22E6 CA CB 22            JP    Z,L259
22E9             L266:
22E9                     ;;testDo.j(70)     // integer - byte
22E9             L267:
22E9                     ;;testDo.j(71)     // not relevant
22E9             L268:
22E9                     ;;testDo.j(72)     // integer - integer
22E9             L269:
22E9                     ;;testDo.j(73)     i=1038;
22E9             L270:
22E9 21 0E 04            LD    HL,1038
22EC             L271:
22EC 22 01 50            LD    (05001H),HL
22EF             L272:
22EF                     ;;testDo.j(74)     b=41;
22EF             L273:
22EF 3E 29               LD    A,41
22F1             L274:
22F1 32 00 50            LD    (05000H),A
22F4             L275:
22F4                     ;;testDo.j(75)     do { println (b); b++; i--; } while (1037 <= i);
22F4             L276:
22F4 3A 00 50            LD    A,(05000H)
22F7             L277:
22F7 CD D1 28            CALL  writeLineA
22FA             L278:
22FA 21 00 50            LD    HL,05000H
22FD 34                  INC   (HL)
22FE             L279:
22FE 2A 01 50            LD    HL,(05001H)
2301 2B                  DEC   HL
2302 22 01 50            LD    (05001H),HL
2305             L280:
2305 2A 01 50            LD    HL,(05001H)
2308             L281:
2308 11 0D 04            LD    DE,1037
230B B7                  OR    A
230C ED 52               SBC   HL,DE
230E             L282:
230E D2 F4 22            JP    NC,L276
2311 CA F4 22            JP    Z,L276
2314             L283:
2314                     ;;testDo.j(76)   
2314             L284:
2314                     ;;testDo.j(77)     /************************/
2314             L285:
2314                     ;;testDo.j(78)     // constant - stack8
2314             L286:
2314                     ;;testDo.j(79)     // byte - byte
2314             L287:
2314                     ;;testDo.j(80)     //TODO
2314             L288:
2314                     ;;testDo.j(81)     println(43);
2314             L289:
2314 3E 2B               LD    A,43
2316             L290:
2316 CD D1 28            CALL  writeLineA
2319             L291:
2319                     ;;testDo.j(82)     // constant - stack8
2319             L292:
2319                     ;;testDo.j(83)     // byte - integer
2319             L293:
2319                     ;;testDo.j(84)     //TODO
2319             L294:
2319                     ;;testDo.j(85)     println(44);
2319             L295:
2319 3E 2C               LD    A,44
231B             L296:
231B CD D1 28            CALL  writeLineA
231E             L297:
231E                     ;;testDo.j(86)     // constant - stack8
231E             L298:
231E                     ;;testDo.j(87)     // integer - byte
231E             L299:
231E                     ;;testDo.j(88)     //TODO
231E             L300:
231E                     ;;testDo.j(89)     println(45);
231E             L301:
231E 3E 2D               LD    A,45
2320             L302:
2320 CD D1 28            CALL  writeLineA
2323             L303:
2323                     ;;testDo.j(90)     // constant - stack88
2323             L304:
2323                     ;;testDo.j(91)     // integer - integer
2323             L305:
2323                     ;;testDo.j(92)     //TODO
2323             L306:
2323                     ;;testDo.j(93)     println(46);
2323             L307:
2323 3E 2E               LD    A,46
2325             L308:
2325 CD D1 28            CALL  writeLineA
2328             L309:
2328                     ;;testDo.j(94)   
2328             L310:
2328                     ;;testDo.j(95)     /************************/
2328             L311:
2328                     ;;testDo.j(96)     // constant - stack16
2328             L312:
2328                     ;;testDo.j(97)     // byte - byte
2328             L313:
2328                     ;;testDo.j(98)     //TODO
2328             L314:
2328                     ;;testDo.j(99)     println(47);
2328             L315:
2328 3E 2F               LD    A,47
232A             L316:
232A CD D1 28            CALL  writeLineA
232D             L317:
232D                     ;;testDo.j(100)     // constant - stack16
232D             L318:
232D                     ;;testDo.j(101)     // byte - integer
232D             L319:
232D                     ;;testDo.j(102)     //TODO
232D             L320:
232D                     ;;testDo.j(103)     println(48);
232D             L321:
232D 3E 30               LD    A,48
232F             L322:
232F CD D1 28            CALL  writeLineA
2332             L323:
2332                     ;;testDo.j(104)     // constant - stack16
2332             L324:
2332                     ;;testDo.j(105)     // integer - byte
2332             L325:
2332                     ;;testDo.j(106)     //TODO
2332             L326:
2332                     ;;testDo.j(107)     println(49);
2332             L327:
2332 3E 31               LD    A,49
2334             L328:
2334 CD D1 28            CALL  writeLineA
2337             L329:
2337                     ;;testDo.j(108)     // constant - stack16
2337             L330:
2337                     ;;testDo.j(109)     // integer - integer
2337             L331:
2337                     ;;testDo.j(110)     //TODO
2337             L332:
2337                     ;;testDo.j(111)     println(50);
2337             L333:
2337 3E 32               LD    A,50
2339             L334:
2339 CD D1 28            CALL  writeLineA
233C             L335:
233C                     ;;testDo.j(112)   
233C             L336:
233C                     ;;testDo.j(113)     /************************/
233C             L337:
233C                     ;;testDo.j(114)     // acc - constant
233C             L338:
233C                     ;;testDo.j(115)     // byte - byte
233C             L339:
233C                     ;;testDo.j(116)     b=51;
233C             L340:
233C 3E 33               LD    A,51
233E             L341:
233E 32 00 50            LD    (05000H),A
2341             L342:
2341                     ;;testDo.j(117)     do { println (b); b++; } while (b+0 <= 52);
2341             L343:
2341 3A 00 50            LD    A,(05000H)
2344             L344:
2344 CD D1 28            CALL  writeLineA
2347             L345:
2347 21 00 50            LD    HL,05000H
234A 34                  INC   (HL)
234B             L346:
234B 3A 00 50            LD    A,(05000H)
234E             L347:
234E C6 00               ADD   A,0
2350             L348:
2350 D6 34               SUB   A,52
2352             L349:
2352 DA 41 23            JP    C,L343
2355 CA 41 23            JP    Z,L343
2358             L350:
2358                     ;;testDo.j(118)     // byte - integer
2358             L351:
2358                     ;;testDo.j(119)     //not relevant
2358             L352:
2358                     ;;testDo.j(120)     // integer - byte
2358             L353:
2358                     ;;testDo.j(121)     i=53;
2358             L354:
2358 3E 35               LD    A,53
235A             L355:
235A 6F                  LD    L,A
235B 26 00               LD    H,0
235D 22 01 50            LD    (05001H),HL
2360             L356:
2360                     ;;testDo.j(122)     do { println (i); i++; } while (i+0 <= 54);
2360             L357:
2360 2A 01 50            LD    HL,(05001H)
2363             L358:
2363 CD A9 28            CALL  writeLineHL
2366             L359:
2366 2A 01 50            LD    HL,(05001H)
2369 23                  INC   HL
236A 22 01 50            LD    (05001H),HL
236D             L360:
236D 2A 01 50            LD    HL,(05001H)
2370             L361:
2370 11 00 00            LD    DE,0
2373 19                  ADD   HL,DE
2374             L362:
2374 3E 36               LD    A,54
2376             L363:
2376 5F                  LD    E,A
2377 16 00               LD    D,0
2379 EB                  EX    DE,HL
237A B7                  OR    A
237B ED 52               SBC   HL,DE
237D             L364:
237D DA 60 23            JP    C,L357
2380 CA 60 23            JP    Z,L357
2383             L365:
2383                     ;;testDo.j(123)   
2383             L366:
2383                     ;;testDo.j(124)     b=55;
2383             L367:
2383 3E 37               LD    A,55
2385             L368:
2385 32 00 50            LD    (05000H),A
2388             L369:
2388                     ;;testDo.j(125)     i=1055;
2388             L370:
2388 21 1F 04            LD    HL,1055
238B             L371:
238B 22 01 50            LD    (05001H),HL
238E             L372:
238E                     ;;testDo.j(126)     // integer - integer
238E             L373:
238E                     ;;testDo.j(127)     do { println (b); b++; i++; } while (i+0 <= 1056);
238E             L374:
238E 3A 00 50            LD    A,(05000H)
2391             L375:
2391 CD D1 28            CALL  writeLineA
2394             L376:
2394 21 00 50            LD    HL,05000H
2397 34                  INC   (HL)
2398             L377:
2398 2A 01 50            LD    HL,(05001H)
239B 23                  INC   HL
239C 22 01 50            LD    (05001H),HL
239F             L378:
239F 2A 01 50            LD    HL,(05001H)
23A2             L379:
23A2 11 00 00            LD    DE,0
23A5 19                  ADD   HL,DE
23A6             L380:
23A6 11 20 04            LD    DE,1056
23A9 B7                  OR    A
23AA ED 52               SBC   HL,DE
23AC             L381:
23AC DA 8E 23            JP    C,L374
23AF CA 8E 23            JP    Z,L374
23B2             L382:
23B2                     ;;testDo.j(128)   
23B2             L383:
23B2                     ;;testDo.j(129)     /************************/
23B2             L384:
23B2                     ;;testDo.j(130)     // acc - acc
23B2             L385:
23B2                     ;;testDo.j(131)     // byte - byte
23B2             L386:
23B2                     ;;testDo.j(132)     b=57;
23B2             L387:
23B2 3E 39               LD    A,57
23B4             L388:
23B4 32 00 50            LD    (05000H),A
23B7             L389:
23B7                     ;;testDo.j(133)     do { println (b); b++; } while (b+0 <= 58+0);
23B7             L390:
23B7 3A 00 50            LD    A,(05000H)
23BA             L391:
23BA CD D1 28            CALL  writeLineA
23BD             L392:
23BD 21 00 50            LD    HL,05000H
23C0 34                  INC   (HL)
23C1             L393:
23C1 3A 00 50            LD    A,(05000H)
23C4             L394:
23C4 C6 00               ADD   A,0
23C6             L395:
23C6 F6                  PUSH AF
23C7             L396:
23C7 3E 3A               LD    A,58
23C9             L397:
23C9 C6 00               ADD   A,0
23CB             L398:
23CB C1                  POP   BC
23CC 90                  SUB   A,B
23CD             L399:
23CD D2 B7 23            JP    NC,L390
23D0 CA B7 23            JP    Z,L390
23D3             L400:
23D3                     ;;testDo.j(134)     // byte - integer
23D3             L401:
23D3                     ;;testDo.j(135)     i=61;
23D3             L402:
23D3 3E 3D               LD    A,61
23D5             L403:
23D5 6F                  LD    L,A
23D6 26 00               LD    H,0
23D8 22 01 50            LD    (05001H),HL
23DB             L404:
23DB                     ;;testDo.j(136)     do { println (b); b++; i--; } while (60+0 <= i+0);
23DB             L405:
23DB 3A 00 50            LD    A,(05000H)
23DE             L406:
23DE CD D1 28            CALL  writeLineA
23E1             L407:
23E1 21 00 50            LD    HL,05000H
23E4 34                  INC   (HL)
23E5             L408:
23E5 2A 01 50            LD    HL,(05001H)
23E8 2B                  DEC   HL
23E9 22 01 50            LD    (05001H),HL
23EC             L409:
23EC 3E 3C               LD    A,60
23EE             L410:
23EE C6 00               ADD   A,0
23F0             L411:
23F0 F6                  PUSH AF
23F1             L412:
23F1 2A 01 50            LD    HL,(05001H)
23F4             L413:
23F4 11 00 00            LD    DE,0
23F7 19                  ADD   HL,DE
23F8             L414:
23F8 F1                  POP  AF
23F9             L415:
23F9 5F                  LD    E,A
23FA 16 00               LD    D,0
23FC B7                  OR    A
23FD ED 52               SBC   HL,DE
23FF             L416:
23FF DA DB 23            JP    C,L405
2402 CA DB 23            JP    Z,L405
2405             L417:
2405                     ;;testDo.j(137)     // integer - byte
2405             L418:
2405                     ;;testDo.j(138)     i=61;
2405             L419:
2405 3E 3D               LD    A,61
2407             L420:
2407 6F                  LD    L,A
2408 26 00               LD    H,0
240A 22 01 50            LD    (05001H),HL
240D             L421:
240D                     ;;testDo.j(139)     b=62;
240D             L422:
240D 3E 3E               LD    A,62
240F             L423:
240F 32 00 50            LD    (05000H),A
2412             L424:
2412                     ;;testDo.j(140)     do { println (i); i++; } while (i+0 <= b+0);
2412             L425:
2412 2A 01 50            LD    HL,(05001H)
2415             L426:
2415 CD A9 28            CALL  writeLineHL
2418             L427:
2418 2A 01 50            LD    HL,(05001H)
241B 23                  INC   HL
241C 22 01 50            LD    (05001H),HL
241F             L428:
241F 2A 01 50            LD    HL,(05001H)
2422             L429:
2422 11 00 00            LD    DE,0
2425 19                  ADD   HL,DE
2426             L430:
2426 E5                  PUSH HL
2427             L431:
2427 3A 00 50            LD    A,(05000H)
242A             L432:
242A C6 00               ADD   A,0
242C             L433:
242C E1                  POP  HL
242D             L434:
242D 5F                  LD    E,A
242E 16 00               LD    D,0
2430 EB                  EX    DE,HL
2431 B7                  OR    A
2432 ED 52               SBC   HL,DE
2434             L435:
2434 DA 12 24            JP    C,L425
2437 CA 12 24            JP    Z,L425
243A             L436:
243A                     ;;testDo.j(141)     // integer - integer
243A             L437:
243A                     ;;testDo.j(142)     b=63;
243A             L438:
243A 3E 3F               LD    A,63
243C             L439:
243C 32 00 50            LD    (05000H),A
243F             L440:
243F                     ;;testDo.j(143)     i=1063;
243F             L441:
243F 21 27 04            LD    HL,1063
2442             L442:
2442 22 01 50            LD    (05001H),HL
2445             L443:
2445                     ;;testDo.j(144)     do { println (b); b++; i--; } while (1000+62 <= i+0);
2445             L444:
2445 3A 00 50            LD    A,(05000H)
2448             L445:
2448 CD D1 28            CALL  writeLineA
244B             L446:
244B 21 00 50            LD    HL,05000H
244E 34                  INC   (HL)
244F             L447:
244F 2A 01 50            LD    HL,(05001H)
2452 2B                  DEC   HL
2453 22 01 50            LD    (05001H),HL
2456             L448:
2456 21 E8 03            LD    HL,1000
2459             L449:
2459 11 3E 00            LD    DE,62
245C 19                  ADD   HL,DE
245D             L450:
245D E5                  PUSH HL
245E             L451:
245E 2A 01 50            LD    HL,(05001H)
2461             L452:
2461 11 00 00            LD    DE,0
2464 19                  ADD   HL,DE
2465             L453:
2465 D1                  POP   DE
2466 B7                  OR    A
2467 ED 52               SBC   HL,DE
2469             L454:
2469 D2 45 24            JP    NC,L444
246C CA 45 24            JP    Z,L444
246F             L455:
246F                     ;;testDo.j(145)   
246F             L456:
246F                     ;;testDo.j(146)     /************************/
246F             L457:
246F                     ;;testDo.j(147)     // acc - var
246F             L458:
246F                     ;;testDo.j(148)     // byte - byte
246F             L459:
246F                     ;;testDo.j(149)     b=65;
246F             L460:
246F 3E 41               LD    A,65
2471             L461:
2471 32 00 50            LD    (05000H),A
2474             L462:
2474                     ;;testDo.j(150)     i=65;
2474             L463:
2474 3E 41               LD    A,65
2476             L464:
2476 6F                  LD    L,A
2477 26 00               LD    H,0
2479 22 01 50            LD    (05001H),HL
247C             L465:
247C                     ;;testDo.j(151)     do { println (i); i++; b--; } while (64+0 <= b);
247C             L466:
247C 2A 01 50            LD    HL,(05001H)
247F             L467:
247F CD A9 28            CALL  writeLineHL
2482             L468:
2482 2A 01 50            LD    HL,(05001H)
2485 23                  INC   HL
2486 22 01 50            LD    (05001H),HL
2489             L469:
2489 21 00 50            LD    HL,05000H
248C 35                  DEC   (HL)
248D             L470:
248D 3E 40               LD    A,64
248F             L471:
248F C6 00               ADD   A,0
2491             L472:
2491 47                  LD    B,A
2492 3A 00 50            LD    A,(05000H)
2495 90                  SUB   A,B
2496             L473:
2496 DA 7C 24            JP    C,L466
2499 CA 7C 24            JP    Z,L466
249C             L474:
249C                     ;;testDo.j(152)     // byte - integer
249C             L475:
249C                     ;;testDo.j(153)     b=67;
249C             L476:
249C 3E 43               LD    A,67
249E             L477:
249E 32 00 50            LD    (05000H),A
24A1             L478:
24A1                     ;;testDo.j(154)     i=67;
24A1             L479:
24A1 3E 43               LD    A,67
24A3             L480:
24A3 6F                  LD    L,A
24A4 26 00               LD    H,0
24A6 22 01 50            LD    (05001H),HL
24A9             L481:
24A9                     ;;testDo.j(155)     do { println (b); b++; i--; } while (66+0 <= i);
24A9             L482:
24A9 3A 00 50            LD    A,(05000H)
24AC             L483:
24AC CD D1 28            CALL  writeLineA
24AF             L484:
24AF 21 00 50            LD    HL,05000H
24B2 34                  INC   (HL)
24B3             L485:
24B3 2A 01 50            LD    HL,(05001H)
24B6 2B                  DEC   HL
24B7 22 01 50            LD    (05001H),HL
24BA             L486:
24BA 3E 42               LD    A,66
24BC             L487:
24BC C6 00               ADD   A,0
24BE             L488:
24BE 2A 01 50            LD    HL,(05001H)
24C1             L489:
24C1 5F                  LD    E,A
24C2 16 00               LD    D,0
24C4 B7                  OR    A
24C5 ED 52               SBC   HL,DE
24C7             L490:
24C7 DA A9 24            JP    C,L482
24CA CA A9 24            JP    Z,L482
24CD             L491:
24CD                     ;;testDo.j(156)     // integer - byte
24CD             L492:
24CD                     ;;testDo.j(157)     i=69;
24CD             L493:
24CD 3E 45               LD    A,69
24CF             L494:
24CF 6F                  LD    L,A
24D0 26 00               LD    H,0
24D2 22 01 50            LD    (05001H),HL
24D5             L495:
24D5                     ;;testDo.j(158)     b=69;
24D5             L496:
24D5 3E 45               LD    A,69
24D7             L497:
24D7 32 00 50            LD    (05000H),A
24DA             L498:
24DA                     ;;testDo.j(159)     do { println (i); i++; b--; } while (1000+68 <= b);
24DA             L499:
24DA 2A 01 50            LD    HL,(05001H)
24DD             L500:
24DD CD A9 28            CALL  writeLineHL
24E0             L501:
24E0 2A 01 50            LD    HL,(05001H)
24E3 23                  INC   HL
24E4 22 01 50            LD    (05001H),HL
24E7             L502:
24E7 21 00 50            LD    HL,05000H
24EA 35                  DEC   (HL)
24EB             L503:
24EB 21 E8 03            LD    HL,1000
24EE             L504:
24EE 11 44 00            LD    DE,68
24F1 19                  ADD   HL,DE
24F2             L505:
24F2 3A 00 50            LD    A,(05000H)
24F5             L506:
24F5 5F                  LD    E,A
24F6 16 00               LD    D,0
24F8 EB                  EX    DE,HL
24F9 B7                  OR    A
24FA ED 52               SBC   HL,DE
24FC             L507:
24FC DA DA 24            JP    C,L499
24FF CA DA 24            JP    Z,L499
2502             L508:
2502                     ;;testDo.j(160)     // integer - integer
2502             L509:
2502                     ;;testDo.j(161)     i=1071;
2502             L510:
2502 21 2F 04            LD    HL,1071
2505             L511:
2505 22 01 50            LD    (05001H),HL
2508             L512:
2508                     ;;testDo.j(162)     b=70;
2508             L513:
2508 3E 46               LD    A,70
250A             L514:
250A 32 00 50            LD    (05000H),A
250D             L515:
250D                     ;;testDo.j(163)     do { println (b); b++; i--; } while (1000+70 <= i);
250D             L516:
250D 3A 00 50            LD    A,(05000H)
2510             L517:
2510 CD D1 28            CALL  writeLineA
2513             L518:
2513 21 00 50            LD    HL,05000H
2516 34                  INC   (HL)
2517             L519:
2517 2A 01 50            LD    HL,(05001H)
251A 2B                  DEC   HL
251B 22 01 50            LD    (05001H),HL
251E             L520:
251E 21 E8 03            LD    HL,1000
2521             L521:
2521 11 46 00            LD    DE,70
2524 19                  ADD   HL,DE
2525             L522:
2525 ED 5B 01 50         LD    DE,(05001H)
2529 B7                  OR    A
252A ED 52               SBC   HL,DE
252C             L523:
252C DA 0D 25            JP    C,L516
252F CA 0D 25            JP    Z,L516
2532             L524:
2532                     ;;testDo.j(164)   
2532             L525:
2532                     ;;testDo.j(165)     /************************/
2532             L526:
2532                     ;;testDo.j(166)     // acc - stack16
2532             L527:
2532                     ;;testDo.j(167)     // byte - byte
2532             L528:
2532                     ;;testDo.j(168)     //TODO
2532             L529:
2532                     ;;testDo.j(169)     println(72);
2532             L530:
2532 3E 48               LD    A,72
2534             L531:
2534 CD D1 28            CALL  writeLineA
2537             L532:
2537                     ;;testDo.j(170)     println(73);
2537             L533:
2537 3E 49               LD    A,73
2539             L534:
2539 CD D1 28            CALL  writeLineA
253C             L535:
253C                     ;;testDo.j(171)     // byte - integer
253C             L536:
253C                     ;;testDo.j(172)     //TODO
253C             L537:
253C                     ;;testDo.j(173)     println(74);
253C             L538:
253C 3E 4A               LD    A,74
253E             L539:
253E CD D1 28            CALL  writeLineA
2541             L540:
2541                     ;;testDo.j(174)     println(75);
2541             L541:
2541 3E 4B               LD    A,75
2543             L542:
2543 CD D1 28            CALL  writeLineA
2546             L543:
2546                     ;;testDo.j(175)     // integer - byte
2546             L544:
2546                     ;;testDo.j(176)     //TODO
2546             L545:
2546                     ;;testDo.j(177)     println(76);
2546             L546:
2546 3E 4C               LD    A,76
2548             L547:
2548 CD D1 28            CALL  writeLineA
254B             L548:
254B                     ;;testDo.j(178)     println(77);
254B             L549:
254B 3E 4D               LD    A,77
254D             L550:
254D CD D1 28            CALL  writeLineA
2550             L551:
2550                     ;;testDo.j(179)     // integer - integer
2550             L552:
2550                     ;;testDo.j(180)     //TODO
2550             L553:
2550                     ;;testDo.j(181)     println(78);
2550             L554:
2550 3E 4E               LD    A,78
2552             L555:
2552 CD D1 28            CALL  writeLineA
2555             L556:
2555                     ;;testDo.j(182)     println(79);
2555             L557:
2555 3E 4F               LD    A,79
2557             L558:
2557 CD D1 28            CALL  writeLineA
255A             L559:
255A                     ;;testDo.j(183)   
255A             L560:
255A                     ;;testDo.j(184)     /************************/
255A             L561:
255A                     ;;testDo.j(185)     // acc - stack8
255A             L562:
255A                     ;;testDo.j(186)     // byte - byte
255A             L563:
255A                     ;;testDo.j(187)     //TODO
255A             L564:
255A                     ;;testDo.j(188)     println(80);
255A             L565:
255A 3E 50               LD    A,80
255C             L566:
255C CD D1 28            CALL  writeLineA
255F             L567:
255F                     ;;testDo.j(189)     println(81);
255F             L568:
255F 3E 51               LD    A,81
2561             L569:
2561 CD D1 28            CALL  writeLineA
2564             L570:
2564                     ;;testDo.j(190)     // byte - integer
2564             L571:
2564                     ;;testDo.j(191)     //TODO
2564             L572:
2564                     ;;testDo.j(192)     println(82);
2564             L573:
2564 3E 52               LD    A,82
2566             L574:
2566 CD D1 28            CALL  writeLineA
2569             L575:
2569                     ;;testDo.j(193)     println(83);
2569             L576:
2569 3E 53               LD    A,83
256B             L577:
256B CD D1 28            CALL  writeLineA
256E             L578:
256E                     ;;testDo.j(194)     // integer - byte
256E             L579:
256E                     ;;testDo.j(195)     //TODO
256E             L580:
256E                     ;;testDo.j(196)     println(84);
256E             L581:
256E 3E 54               LD    A,84
2570             L582:
2570 CD D1 28            CALL  writeLineA
2573             L583:
2573                     ;;testDo.j(197)     println(85);
2573             L584:
2573 3E 55               LD    A,85
2575             L585:
2575 CD D1 28            CALL  writeLineA
2578             L586:
2578                     ;;testDo.j(198)     // integer - integer
2578             L587:
2578                     ;;testDo.j(199)     //TODO
2578             L588:
2578                     ;;testDo.j(200)     println(86);
2578             L589:
2578 3E 56               LD    A,86
257A             L590:
257A CD D1 28            CALL  writeLineA
257D             L591:
257D                     ;;testDo.j(201)     println(87);
257D             L592:
257D 3E 57               LD    A,87
257F             L593:
257F CD D1 28            CALL  writeLineA
2582             L594:
2582                     ;;testDo.j(202)   
2582             L595:
2582                     ;;testDo.j(203)     /************************/
2582             L596:
2582                     ;;testDo.j(204)     // var - constant
2582             L597:
2582                     ;;testDo.j(205)     // byte - byte
2582             L598:
2582                     ;;testDo.j(206)     b=88;
2582             L599:
2582 3E 58               LD    A,88
2584             L600:
2584 32 00 50            LD    (05000H),A
2587             L601:
2587                     ;;testDo.j(207)     do { println (b); b++; } while (b <= 89);
2587             L602:
2587 3A 00 50            LD    A,(05000H)
258A             L603:
258A CD D1 28            CALL  writeLineA
258D             L604:
258D 21 00 50            LD    HL,05000H
2590 34                  INC   (HL)
2591             L605:
2591 3A 00 50            LD    A,(05000H)
2594             L606:
2594 D6 59               SUB   A,89
2596             L607:
2596 DA 87 25            JP    C,L602
2599 CA 87 25            JP    Z,L602
259C             L608:
259C                     ;;testDo.j(208)     // byte - integer
259C             L609:
259C                     ;;testDo.j(209)     //not relevant
259C             L610:
259C                     ;;testDo.j(210)     println(90);
259C             L611:
259C 3E 5A               LD    A,90
259E             L612:
259E CD D1 28            CALL  writeLineA
25A1             L613:
25A1                     ;;testDo.j(211)     println(91);
25A1             L614:
25A1 3E 5B               LD    A,91
25A3             L615:
25A3 CD D1 28            CALL  writeLineA
25A6             L616:
25A6                     ;;testDo.j(212)     // integer - byte
25A6             L617:
25A6                     ;;testDo.j(213)     i=92;
25A6             L618:
25A6 3E 5C               LD    A,92
25A8             L619:
25A8 6F                  LD    L,A
25A9 26 00               LD    H,0
25AB 22 01 50            LD    (05001H),HL
25AE             L620:
25AE                     ;;testDo.j(214)     do { println (i); i++; } while (i <= 93);
25AE             L621:
25AE 2A 01 50            LD    HL,(05001H)
25B1             L622:
25B1 CD A9 28            CALL  writeLineHL
25B4             L623:
25B4 2A 01 50            LD    HL,(05001H)
25B7 23                  INC   HL
25B8 22 01 50            LD    (05001H),HL
25BB             L624:
25BB 2A 01 50            LD    HL,(05001H)
25BE             L625:
25BE 3E 5D               LD    A,93
25C0             L626:
25C0 5F                  LD    E,A
25C1 16 00               LD    D,0
25C3 EB                  EX    DE,HL
25C4 B7                  OR    A
25C5 ED 52               SBC   HL,DE
25C7             L627:
25C7 DA AE 25            JP    C,L621
25CA CA AE 25            JP    Z,L621
25CD             L628:
25CD                     ;;testDo.j(215)     // integer - integer
25CD             L629:
25CD                     ;;testDo.j(216)     i=1094;
25CD             L630:
25CD 21 46 04            LD    HL,1094
25D0             L631:
25D0 22 01 50            LD    (05001H),HL
25D3             L632:
25D3                     ;;testDo.j(217)     b=94;
25D3             L633:
25D3 3E 5E               LD    A,94
25D5             L634:
25D5 32 00 50            LD    (05000H),A
25D8             L635:
25D8                     ;;testDo.j(218)     do { println (b); b++; i++; } while (i <= 1095  );
25D8             L636:
25D8 3A 00 50            LD    A,(05000H)
25DB             L637:
25DB CD D1 28            CALL  writeLineA
25DE             L638:
25DE 21 00 50            LD    HL,05000H
25E1 34                  INC   (HL)
25E2             L639:
25E2 2A 01 50            LD    HL,(05001H)
25E5 23                  INC   HL
25E6 22 01 50            LD    (05001H),HL
25E9             L640:
25E9 2A 01 50            LD    HL,(05001H)
25EC             L641:
25EC 11 47 04            LD    DE,1095
25EF B7                  OR    A
25F0 ED 52               SBC   HL,DE
25F2             L642:
25F2 DA D8 25            JP    C,L636
25F5 CA D8 25            JP    Z,L636
25F8             L643:
25F8                     ;;testDo.j(219)   
25F8             L644:
25F8                     ;;testDo.j(220)     /************************/
25F8             L645:
25F8                     ;;testDo.j(221)     // var - acc
25F8             L646:
25F8                     ;;testDo.j(222)     // byte - byte
25F8             L647:
25F8                     ;;testDo.j(223)     do { println (b); b++; } while (b <= 97+0);
25F8             L648:
25F8 3A 00 50            LD    A,(05000H)
25FB             L649:
25FB CD D1 28            CALL  writeLineA
25FE             L650:
25FE 21 00 50            LD    HL,05000H
2601 34                  INC   (HL)
2602             L651:
2602 3E 61               LD    A,97
2604             L652:
2604 C6 00               ADD   A,0
2606             L653:
2606 47                  LD    B,A
2607 3A 00 50            LD    A,(05000H)
260A 90                  SUB   A,B
260B             L654:
260B D2 F8 25            JP    NC,L648
260E CA F8 25            JP    Z,L648
2611             L655:
2611                     ;;testDo.j(224)     // byte - integer
2611             L656:
2611                     ;;testDo.j(225)     //not relevant
2611             L657:
2611                     ;;testDo.j(226)     i=99;
2611             L658:
2611 3E 63               LD    A,99
2613             L659:
2613 6F                  LD    L,A
2614 26 00               LD    H,0
2616 22 01 50            LD    (05001H),HL
2619             L660:
2619                     ;;testDo.j(227)     do { println (b); b++; } while (b <= i+0);
2619             L661:
2619 3A 00 50            LD    A,(05000H)
261C             L662:
261C CD D1 28            CALL  writeLineA
261F             L663:
261F 21 00 50            LD    HL,05000H
2622 34                  INC   (HL)
2623             L664:
2623 2A 01 50            LD    HL,(05001H)
2626             L665:
2626 11 00 00            LD    DE,0
2629 19                  ADD   HL,DE
262A             L666:
262A 3A 00 50            LD    A,(05000H)
262D             L667:
262D 5F                  LD    E,A
262E 16 00               LD    D,0
2630 B7                  OR    A
2631 ED 52               SBC   HL,DE
2633             L668:
2633 DA 19 26            JP    C,L661
2636 CA 19 26            JP    Z,L661
2639             L669:
2639                     ;;testDo.j(228)     // integer - byte
2639             L670:
2639                     ;;testDo.j(229)     i=100;
2639             L671:
2639 3E 64               LD    A,100
263B             L672:
263B 6F                  LD    L,A
263C 26 00               LD    H,0
263E 22 01 50            LD    (05001H),HL
2641             L673:
2641                     ;;testDo.j(230)     do { println (i); i++; } while (i <= 101+0);
2641             L674:
2641 2A 01 50            LD    HL,(05001H)
2644             L675:
2644 CD A9 28            CALL  writeLineHL
2647             L676:
2647 2A 01 50            LD    HL,(05001H)
264A 23                  INC   HL
264B 22 01 50            LD    (05001H),HL
264E             L677:
264E 3E 65               LD    A,101
2650             L678:
2650 C6 00               ADD   A,0
2652             L679:
2652 2A 01 50            LD    HL,(05001H)
2655             L680:
2655 5F                  LD    E,A
2656 16 00               LD    D,0
2658 EB                  EX    DE,HL
2659 B7                  OR    A
265A ED 52               SBC   HL,DE
265C             L681:
265C DA 41 26            JP    C,L674
265F CA 41 26            JP    Z,L674
2662             L682:
2662                     ;;testDo.j(231)     // integer - integer
2662             L683:
2662                     ;;testDo.j(232)     i=1102;
2662             L684:
2662 21 4E 04            LD    HL,1102
2665             L685:
2665 22 01 50            LD    (05001H),HL
2668             L686:
2668                     ;;testDo.j(233)     b=102;
2668             L687:
2668 3E 66               LD    A,102
266A             L688:
266A 32 00 50            LD    (05000H),A
266D             L689:
266D                     ;;testDo.j(234)     do { println (b); b++; i++; } while (i <= 1103+0);
266D             L690:
266D 3A 00 50            LD    A,(05000H)
2670             L691:
2670 CD D1 28            CALL  writeLineA
2673             L692:
2673 21 00 50            LD    HL,05000H
2676 34                  INC   (HL)
2677             L693:
2677 2A 01 50            LD    HL,(05001H)
267A 23                  INC   HL
267B 22 01 50            LD    (05001H),HL
267E             L694:
267E 21 4F 04            LD    HL,1103
2681             L695:
2681 11 00 00            LD    DE,0
2684 19                  ADD   HL,DE
2685             L696:
2685 ED 5B 01 50         LD    DE,(05001H)
2689 B7                  OR    A
268A ED 52               SBC   HL,DE
268C             L697:
268C D2 6D 26            JP    NC,L690
268F CA 6D 26            JP    Z,L690
2692             L698:
2692                     ;;testDo.j(235)   
2692             L699:
2692                     ;;testDo.j(236)     /************************/
2692             L700:
2692                     ;;testDo.j(237)     // var - var
2692             L701:
2692                     ;;testDo.j(238)     // byte - byte
2692             L702:
2692                     ;;testDo.j(239)     byte b2 = 105;
2692             L703:
2692 3E 69               LD    A,105
2694             L704:
2694 DD 77 FF            LD    (IX - 1),A
2697             L705:
2697                     ;;testDo.j(240)     do { println (b); b++; } while (b <= b2);
2697             L706:
2697 3A 00 50            LD    A,(05000H)
269A             L707:
269A CD D1 28            CALL  writeLineA
269D             L708:
269D 21 00 50            LD    HL,05000H
26A0 34                  INC   (HL)
26A1             L709:
26A1 3A 00 50            LD    A,(05000H)
26A4             L710:
26A4 DD 96 FF            SUB   A,(IX - 1)
26A7             L711:
26A7 DA 97 26            JP    C,L706
26AA CA 97 26            JP    Z,L706
26AD             L712:
26AD                     ;;testDo.j(241)     // byte - integer
26AD             L713:
26AD                     ;;testDo.j(242)     i=107;
26AD             L714:
26AD 3E 6B               LD    A,107
26AF             L715:
26AF 6F                  LD    L,A
26B0 26 00               LD    H,0
26B2 22 01 50            LD    (05001H),HL
26B5             L716:
26B5                     ;;testDo.j(243)     do { println (b); b++; } while (b <= i);
26B5             L717:
26B5 3A 00 50            LD    A,(05000H)
26B8             L718:
26B8 CD D1 28            CALL  writeLineA
26BB             L719:
26BB 21 00 50            LD    HL,05000H
26BE 34                  INC   (HL)
26BF             L720:
26BF 3A 00 50            LD    A,(05000H)
26C2             L721:
26C2 2A 01 50            LD    HL,(05001H)
26C5             L722:
26C5 5F                  LD    E,A
26C6 16 00               LD    D,0
26C8 B7                  OR    A
26C9 ED 52               SBC   HL,DE
26CB             L723:
26CB DA B5 26            JP    C,L717
26CE CA B5 26            JP    Z,L717
26D1             L724:
26D1                     ;;testDo.j(244)     // integer - byte
26D1             L725:
26D1                     ;;testDo.j(245)     i=b;
26D1             L726:
26D1 3A 00 50            LD    A,(05000H)
26D4             L727:
26D4 6F                  LD    L,A
26D5 26 00               LD    H,0
26D7 22 01 50            LD    (05001H),HL
26DA             L728:
26DA                     ;;testDo.j(246)     b=109;
26DA             L729:
26DA 3E 6D               LD    A,109
26DC             L730:
26DC 32 00 50            LD    (05000H),A
26DF             L731:
26DF                     ;;testDo.j(247)     do { println (i); i++; } while (i <= b);
26DF             L732:
26DF 2A 01 50            LD    HL,(05001H)
26E2             L733:
26E2 CD A9 28            CALL  writeLineHL
26E5             L734:
26E5 2A 01 50            LD    HL,(05001H)
26E8 23                  INC   HL
26E9 22 01 50            LD    (05001H),HL
26EC             L735:
26EC 2A 01 50            LD    HL,(05001H)
26EF             L736:
26EF 3A 00 50            LD    A,(05000H)
26F2             L737:
26F2 5F                  LD    E,A
26F3 16 00               LD    D,0
26F5 EB                  EX    DE,HL
26F6 B7                  OR    A
26F7 ED 52               SBC   HL,DE
26F9             L738:
26F9 DA DF 26            JP    C,L732
26FC CA DF 26            JP    Z,L732
26FF             L739:
26FF                     ;;testDo.j(248)     // integer - integer
26FF             L740:
26FF                     ;;testDo.j(249)     word i2 = 111;
26FF             L741:
26FF 3E 6F               LD    A,111
2701             L742:
2701 DD 77 FD            LD    (IX - 3),A
2704 AF                  XOR   A
2705 DD 77 FE            LD    (IX - 2),A
2708             L743:
2708                     ;;testDo.j(250)     do { println (i); i++; } while (i <= i2);
2708             L744:
2708 2A 01 50            LD    HL,(05001H)
270B             L745:
270B CD A9 28            CALL  writeLineHL
270E             L746:
270E 2A 01 50            LD    HL,(05001H)
2711 23                  INC   HL
2712 22 01 50            LD    (05001H),HL
2715             L747:
2715 2A 01 50            LD    HL,(05001H)
2718             L748:
2718 DD 5E FD            LD    E,(IX - 3)
271B DD 56 FE            LD    D,(IX - 2)
271E B7                  OR    A
271F ED 52               SBC   HL,DE
2721             L749:
2721 DA 08 27            JP    C,L744
2724 CA 08 27            JP    Z,L744
2727             L750:
2727                     ;;testDo.j(251)   
2727             L751:
2727                     ;;testDo.j(252)     /************************/
2727             L752:
2727                     ;;testDo.j(253)     // var - stack8
2727             L753:
2727                     ;;testDo.j(254)     // byte - byte
2727             L754:
2727                     ;;testDo.j(255)     // byte - integer
2727             L755:
2727                     ;;testDo.j(256)     // integer - byte
2727             L756:
2727                     ;;testDo.j(257)     // integer - integer
2727             L757:
2727                     ;;testDo.j(258)     //TODO
2727             L758:
2727                     ;;testDo.j(259)   
2727             L759:
2727                     ;;testDo.j(260)     /************************/
2727             L760:
2727                     ;;testDo.j(261)     // var - stack16
2727             L761:
2727                     ;;testDo.j(262)     // byte - byte
2727             L762:
2727                     ;;testDo.j(263)     // byte - integer
2727             L763:
2727                     ;;testDo.j(264)     // integer - byte
2727             L764:
2727                     ;;testDo.j(265)     // integer - integer
2727             L765:
2727                     ;;testDo.j(266)     //TODO
2727             L766:
2727                     ;;testDo.j(267)   
2727             L767:
2727                     ;;testDo.j(268)     /************************/
2727             L768:
2727                     ;;testDo.j(269)     // stack8 - constant
2727             L769:
2727                     ;;testDo.j(270)     // stack8 - acc
2727             L770:
2727                     ;;testDo.j(271)     // stack8 - var
2727             L771:
2727                     ;;testDo.j(272)     // stack8 - stack8
2727             L772:
2727                     ;;testDo.j(273)     // stack8 - stack16
2727             L773:
2727                     ;;testDo.j(274)     //TODO
2727             L774:
2727                     ;;testDo.j(275)   
2727             L775:
2727                     ;;testDo.j(276)     /************************/
2727             L776:
2727                     ;;testDo.j(277)     // stack16 - constant
2727             L777:
2727                     ;;testDo.j(278)     // stack16 - acc
2727             L778:
2727                     ;;testDo.j(279)     // stack16 - var
2727             L779:
2727                     ;;testDo.j(280)     // stack16 - stack8
2727             L780:
2727                     ;;testDo.j(281)     // stack16 - stack16
2727             L781:
2727                     ;;testDo.j(282)     //TODO
2727             L782:
2727                     ;;testDo.j(283)   
2727             L783:
2727                     ;;testDo.j(284)     println("Klaar");
2727             L784:
2727 21 32 27            LD    HL,L791
272A             L785:
272A CD 56 27            CALL  writeLineStr
272D             L786:
272D                     ;;testDo.j(285)   }
272D             L787:
272D DD F9               LD    SP,IX
272F             L788:
272F DD E1               POP   IX
2731             L789:
2731 C9                  return
2732             L790:
2732                     ;;testDo.j(286) }
2732             L791:
2732 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
2738             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
2738             STAT0   equ 004H          ;147 ASCI0 Status register.
2738             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
2738             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
2738             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
2738             TDRE    equ 1             ;STAT0->Tx data register empty bit.
2738             OVERRUN equ 6             ;STAT0->OVERRUN bit.
2738             RDRF    equ 7             ;STAT0->Rx data register full bit.
2738             ;****************
2738             ;getChar
2738             ;Check if an input character from ASCI0 is available.
2738             ;  IN:  none
2738             ;  OUT: F: ZERO flag set if no character is available.
2738             ;          ZERO flag reset if a character is available.
2738             ;       A : character from ASCI0, if available.
2738             ;  USES:AF
2738             ;****************
2738             getChar:
2738 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
273B CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
273D 20 07               JR    NZ,getChar1 ;-yes: reset error flags
273F CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
2741 C8                  RET   Z           ;-no: return without a character
2742 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
2745 C9                  RET
2746             getChar1:
2746 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
2749 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
274B ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
274E AF                  XOR   A,A
274F C9                  RET               ;return without a character
2750             ;****************
2750             ;putMsg
2750             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
2750             ;  IN:  none.
2750             ;  OUT: none.
2750             ;  USES:none.
2750             ;****************
2750             putMsg:
2750 E3                  EX    (SP),HL     ;save HL and load return address into HL.
2751 CD 5D 27            CALL  writeStr
2754 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
2755 C9                  RET
2756             ;****************
2756             ;writeLineStr
2756             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
2756             ;  IN:  HL:address of zero terminated string to be printed.
2756             ;  OUT: none.
2756             ;  USES:HL (point to byte after zero terminated string)
2756             ;****************
2756             writeLineStr:
2756 CD 5D 27            CALL  writeStr
2759 CD 79 27            CALL  putCRLF
275C C9                  RET
275D             ;****************
275D             ;writeStr
275D             ;Print via ASCI0 a zero terminated string, pointed to by HL.
275D             ;  IN:  HL:address of zero terminated string to be printed.
275D             ;  OUT: none.
275D             ;  USES:HL (point to byte after zero terminated string)
275D             ;****************
275D             writeStr:
275D F5                  PUSH  AF          ;save registers
275E             putStr1:
275E 7E                  LD    A,(HL)      ;get next character
275F 23                  INC   HL
2760 B7                  OR    A,A         ;is it zer0?
2761 28 05               JR    Z,putStr2   ;yes ->return
2763 CD 6C 27            CALL  putChar     ;no->put it to ASCI0
2766 18 F6               JR    putStr1
2768             putStr2:
2768 F1                  POP   AF
2769 C9                  RET
276A             ;****************
276A             ;putSpace
276A             ;Send a space character to ASCI0
276A             ;  IN:  none.
276A             ;  OUT: none.
276A             ;  USES:AF
276A             ;****************
276A             putSpace:
276A 3E 20               LD    A,' '       ;load space and continue with putChar.
276C             ;****************
276C             ;putChar
276C             ;Send one character to ASCI0.
276C             ;  IN:  A = character
276C             ;  OUT: none.
276C             ;  USES:none.
276C             ;****************
276C             putChar:
276C F5                  PUSH  AF          ;send the character via ASCI0
276D             putChar1:
276D ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
2770 CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
2772 28 F9               JR    Z,putChar1
2774 F1                  POP   AF          ;restore AF registers
2775 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
2778 C9                  RET
2779             ;****************
2779             ;putCRLF
2779             ;Send CR and LF to ASCI0
2779             ;  IN:  none.
2779             ;  OUT: none.
2779             ;  USES:none.
2779             ;****************
2779             putCRLF:
2779 F5                  PUSH  AF
277A 3E 0D               LD    A,'\r'       ;print carriage return
277C CD 6C 27            CALL  putChar
277F 3E 0A               LD    A,'\n'       ;print line feed
2781 CD 6C 27            CALL  putChar
2784 F1                  POP   AF
2785 C9                  RET
2786             ;****************
2786             ;putErase
2786             ;Erase the latest character at ASCI0
2786             ;  IN:  none.
2786             ;  OUT: none.
2786             ;  USES:AF
2786             ;****************
2786             putErase:
2786 3E 08               LD    A,'\b'       ;print backspace
2788 CD 6C 27            CALL  putChar
278B CD 6A 27            CALL  putSpace    ;print space (erase character)
278E 3E 08               LD    A,'\b'      ;print backspace
2790 18 DA               JR    putChar
2792             ;****************
2792             ;putBell
2792             ;Send a Bell character to ASCI0
2792             ;  IN:  none.
2792             ;  OUT: none.
2792             ;  USES:AF
2792             ;****************
2792             putBell:
2792 3E 07               LD    A,07        ;ring the bell at ASCI0
2794 18 D6               JR    putChar
2796             ;****************
2796             ;putHexHL
2796             ;Print HL register pair as 4 hex digits
2796             ;  IN:  HL = word to be printed.
2796             ;  OUT: none.
2796             ;  USES:none.
2796             ;****************
2796             putHexHL:
2796 F5                  PUSH  AF          ;save used registers
2797 7C                  LD    A,H         ;print H as 2 hex digits
2798 CD A1 27            CALL  putHexA
279B 7D                  LD    A,L         ;print L as 2 hex digits
279C CD A1 27            CALL  putHexA
279F F1                  POP   AF          ;restore used registers
27A0 C9                  RET
27A1             ;****************
27A1             ;putHexA
27A1             ;Print A register as 2 hex digits
27A1             ;  IN:  A = byte to be printed
27A1             ;  OUT: none.
27A1             ;  USES:none.
27A1             ;****************
27A1             putHexA:
27A1 F5                  PUSH  AF          ;save input
27A2 1F                  RRA               ;shift upper nibble to the right
27A3 1F                  RRA
27A4 1F                  RRA
27A5 1F                  RRA
27A6 CD AA 27            CALL  putHexA1    ;print upper nibble
27A9 F1                  POP   AF          ;restore input & print lower nibble
27AA             putHexA1:
27AA F5                  PUSH  AF          ;save input
27AB E6 0F               AND   A,00FH      ;mask lower nibble
27AD C6 30               ADD   A,'0'       ;convert to hex digit
27AF FE 3A               CP    A,'9'+1
27B1 38 02               JR    C,putHexA2
27B3 C6 07               ADD   A,07
27B5             putHexA2:
27B5 CD 6C 27            CALL  putChar
27B8 F1                  POP   AF          ;restore input
27B9 C9                  RET               ;and return
27BA             ;****************
27BA             ;mul16
27BA             ;16 by 16 bit unsigned multiplication with 16 bit result.
27BA             ;  IN:  HL = operand 1
27BA             ;       DE = operand 2
27BA             ;  OUT: HL = HL * DE low part
27BA             ;  USES:DE
27BA             ;  Size   25 bytes
27BA             ;  Time  160 cycles
27BA             ;****************
27BA             mul16:
27BA                     ;HL = HL * DE
27BA                     ;        H  L
27BA                     ;        D  E
27BA                     ;    --------*
27BA                     ;          EL
27BA                     ;       EH  0
27BA                     ;       DL  0
27BA                     ; -----------+
27BA                     ;        R  S
27BA                     ;S = ELlow
27BA                     ;R = ELhigh+EHlow+DLlow
27BA C5                  PUSH  BC          ;11  11 save BC
27BB 44                  LD    B,H         ; 4  15 copy HL to BC
27BC 4D                  LD    C,L         ; 4  19
27BD 63                  LD    H,E         ; 4  23 HL contains EL
27BE ED 6C               MLT   HL          ;17  40
27C0 E5                  PUSH  HL          ;11  51
27C1 63                  LD    H,E         ; 4  55 HL contains EH aka EB
27C2 68                  LD    L,B         ; 4  59
27C3 ED 6C               MLT   HL          ;17  76
27C5 45                  LD    B,L         ; 4  80 save EHlow in B
27C6 62                  LD    H,D         ; 4  84 HL contains DL aka DC
27C7 69                  LD    L,C         ; 4  88
27C8 ED 6C               MLT   HL          ;17 105
27CA 55                  LD    D,L         ; 4 109 DLlow into DE
27CB 1E 00               LD    E,0         ; 6 115
27CD E1                  POP   HL          ; 9 124 add EL+DElow
27CE 19                  ADD   HL,DE       ; 7 131
27CF 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
27D0 19                  ADD   HL,DE       ; 7 142
27D1 C1                  POP   BC          ; 9 151 restore BC
27D2 C9                  RET               ; 9 160
27D3             ;****************
27D3             ;mul16_10
27D3             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
27D3             ;  IN:  HL = operand
27D3             ;  OUT: HL = HL * 10; low part
27D3             ;  USES:Flags
27D3             ;  Size   9 bytes
27D3             ;  Time   65 cycles
27D3             ;****************
27D3             mul16_10:
27D3 D5                  PUSH  DE          ;11 11
27D4 54                  LD    D,H         ; 4 15
27D5 5D                  LD    E,L         ; 4 19
27D6 29                  ADD   HL,HL       ; 7 26 times 2
27D7 29                  ADD   HL,HL       ; 7 33 times 4
27D8 19                  ADD   HL,DE       ; 7 40 times 5
27D9 29                  ADD   HL,HL       ; 7 47 times 10
27DA D1                  POP   DE          ; 9 56
27DB C9                  RET               ; 9 65
27DC             ;****************
27DC             ;mul16_8
27DC             ;16 by 8 bit unsigned multiplication with 16 bit result.
27DC             ;  IN:  HL = operand 1
27DC             ;        A = operand 2
27DC             ;  OUT: HL = HL * A low part
27DC             ;  USES:AF
27DC             ;  Size   .. bytes
27DC             ;  Time  ... cycles
27DC             ;****************
27DC             mul16_8:
27DC                     ;HL = HL * A
27DC                     ;        H  L
27DC                     ;           A
27DC                     ;    --------*
27DC                     ;          AL
27DC                     ;       AH  0
27DC                     ; -----------+
27DC                     ;        R  S
27DC                     ;S = ALlow
27DC                     ;R = ALhigh+AHlow
27DC C5                  PUSH  BC          ;11  11 save BC
27DD 44                  LD    B,H         ; 4  15
27DE 4F                  LD    C,A         ; 4  19
27DF 67                  LD    H,A         ; 4  23
27E0 ED 6C               MLT   HL          ;17  40 HL = AL
27E2 ED 4C               MLT   BC          ;17  57 BC = AH
27E4 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
27E5 81                  ADD   A,C         ; 4  65
27E6 67                  LD    H,A         ; 4  69
27E7 C1                  POP   BC          ; 9  78 | 289 restore BC
27E8 C9                  RET               ; 9  87 | 307
27E9             ;****************
27E9             ;mul1632
27E9             ;16 by 16 bit unsigned multiplication with 32 bit result.
27E9             ;  IN:  HL = operand 1
27E9             ;       DE = operand 2
27E9             ;  OUT: HL = HL * DE low part
27E9             ;       DE = HL * DE high part
27E9             ;  USES:-
27E9             ;  Size 49 bytes
27E9             ;  Time between 303 en 307 cycles
27E9             ;****************
27E9             mul1632:
27E9                     ;HL = HL * DE
27E9                     ;        H  L
27E9                     ;        D  E
27E9                     ;    --------*
27E9                     ;          EL
27E9                     ;       EH  0
27E9                     ;       DL  0
27E9                     ;    DH  0  0
27E9                     ; -----------+
27E9                     ;  P  Q  R  S
27E9                     ;S = ELlow
27E9                     ;R = ELhigh+EHlow+DLlow
27E9                     ;Q = DHlow+EHhigh+DLhigh
27E9                     ;P = DHhigh
27E9 F5                  PUSH  AF          ;11  11 save AF
27EA C5                  PUSH  BC          ;11  22 save BC
27EB 44                  LD    B,H         ; 4  26
27EC 4D                  LD    C,L         ; 4  30
27ED 62                  LD    H,D         ; 4  34 HL contains DH aka DB
27EE 68                  LD    L,B         ; 4  38
27EF ED 6C               MLT   HL          ;17  55
27F1 E5                  PUSH  HL          ;11  66
27F2 62                  LD    H,D         ; 4  70 HL contains DL aka DC
27F3 69                  LD    L,C         ; 4  74
27F4 ED 6C               MLT   HL          ;17  91
27F6 E5                  PUSH  HL          ;11 102
27F7 63                  LD    H,E         ; 4 106 HL contains EH aka EB
27F8 68                  LD    L,B         ; 4 110
27F9 ED 6C               MLT   HL          ;17 127
27FB E5                  PUSH  HL          ;11 138
27FC 63                  LD    H,E         ; 4 142 HL contains EL aka EC
27FD 69                  LD    L,C         ; 4 146
27FE ED 6C               MLT   HL          ;17 163
2800 D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
2801 06 00               LD    B,0         ; 6 178
2803 4A                  LD    C,D         ; 4 182 ..C=EHhigh
2804 53                  LD    D,E         ; 4 186 ..D=EHlow
2805 1E 00               LD    E,0         ; 6 192
2807 19                  ADD   HL,DE       ; 7 199
2808 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
280A 03                  INC   BC          ;         4 209
280B             mul16321:
280B D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
280C 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
280D 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
280E 19                  ADD   HL,DE       ; 7 231 | 233
280F 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
2811 03                  INC   BC          ;         4 243
2812             mul16322:
2812                                       ;HL=RS=EL+EH0+DL0
2812                                       ;C=EHhigh
2812                                       ;A=DLhigh
2812                                       ;E=0
2812 EB                  EX    DE,HL       ; 3 242 | 246
2813 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
2814 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
2815 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
2816 C1                  POP   BC          ; 9 266 | 270
2817 09                  ADD   HL,BC       ; 7 273 | 277
2818 EB                  EX    DE,HL       ; 3 276 | 280
2819                                       ;D=P=DHhigh
2819                                       ;E=Q=DHlow+EHhigh+DLhigh
2819                                       ;H=R=ELhigh+EHlow+DLlow
2819                                       ;L=S=ELlow
2819 C1                  POP   BC          ; 9 285 | 289 restore BC
281A F1                  POP   AF          ; 9 294 | 298 restore AF
281B C9                  RET               ; 9 303 | 307
281C             ;****************
281C             ;mul16S
281C             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
281C             ;  IN:  HL = operand 1
281C             ;       DE = operand 2
281C             ;  OUT: DE = HL * DE high part
281C             ;       HL = HL * DE low part
281C             ;  USES:none.
281C             ;  Size 26 bytes
281C             ;  Time between 726 en 998 cycles
281C             ;****************
281C             mul16S:
281C F5                  PUSH  AF          ;11  11 save AF
281D C5                  PUSH  BC          ;11  22 save BC
281E 44                  LD    B,H         ; 4  26
281F 4D                  LD    C,L         ; 4  30
2820 21 00 00            LD    HL,0        ; 9  39
2823 3E 10               LD    A,16        ; 6  45
2825             mul16S1:
2825 29                  ADD   HL,HL       ;16*7=112 157
2826 CB 13               RL    E           ;16*7=112 269
2828 CB 12               RL    D           ;16*7=112 381
282A 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
282C 09                  ADD   HL,BC       ;             16*7=112 589
282D 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
282F 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
2830             mul16S2:
2830 3D                  DEC   A           ;16*4=64    573 | 845 | 813
2831 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
2833 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
2834 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
2835 C9                  RET               ; 9         726 | 998 | 966
2836             ;****************
2836             ;div16
2836             ;16 by 16 bit unsigned division.
2836             ;  IN:  HL = dividend
2836             ;       DE = divisor
2836             ;  OUT: HL = quotient
2836             ;       DE = remainder
2836             ;  USES:-
2836             ;  Size   32 bytes
2836             ;  Time   between 1073 en 1121 cycles
2836             ;pseudo code:
2836             ;T = AC = dividend
2836             ;D = DE = divisor
2836             ;Q = AC = quotient = 0
2836             ;R = HL = remainder = 0
2836             ;invariante betrekking:
2836             ; D/T\Q     
2836             ;   R       
2836             ; T = QD + R
2836             ; T <= 2^N  
2836             ;
2836             ; D/T'.RT\Q'      
2836             ;   R'             
2836             ; RT <= 2^N        
2836             ; 0<=k<=N          
2836             ; RT = T % 2^k     
2836             ; T' = (T-RT) / 2^k
2836             ; Q' = T' / D      
2836             ; R' = T' % D      
2836             ;
2836             ;for (i=16; i>0; i--) {
2836             ;  T = T * 2 (remember MSB in carry)
2836             ;  R = R * 2 + carry
2836             ;  Q = Q * 2
2836             ;  if (R >= D) {
2836             ;    R = R - D;
2836             ;    Q++;
2836             ;  }
2836             ;}
2836             ;return Q (in HL) and R (in DE)
2836             ;****************
2836             div16:
2836 F5                  PUSH  AF          ;11  11 save registers used
2837 C5                  PUSH  BC          ;11  22
2838 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
2839 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
283A 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
283D 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
283F             div16_1:
283F CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
2841 CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
2843 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
2845 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
2846 ED 52               SBC   HL,DE       ;16*10=160 653
2848 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
284A 0C                  INC   C           ;              16*4= 64 813   Q++
284B 18 01               JR    div16_3     ;              16*8=128 941
284D             div16_2:
284D 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
284E             div16_3:
284E 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
2850 EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
2851 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
2852 69                  LD    L,C         ; 4 1046 | 1094
2853 C1                  POP   BC          ; 9 1055 | 1103
2854 F1                  POP   AF          ; 9 1064 | 1112
2855 C9                  RET               ; 9 1073 | 1121
2856             ;****************
2856             ;div16_8
2856             ;16 by 8 bit unsigned division.
2856             ;  IN:  HL = dividend
2856             ;       A  = divisor
2856             ;  OUT: HL = quotient
2856             ;       A  = remainder
2856             ;  USES:F(lags)
2856             ;  Size 18 bytes
2856             ;  Time between 601 en 697 cycles
2856             ;****************
2856             div16_8:
2856 C5                  PUSH  BC          ;11 11 save registers used
2857 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
2859 4F                  LD    C,A         ; 4 21 move divisor to C
285A AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
285B             div16_82:
285B 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
285C CB 17               RL    A           ;16*7=112 249
285E B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
285F 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
2861 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
2862 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
2863             div16_83:
2863 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
2865 C1                  POP   BC          ;9 592 688
2866 C9                  RET               ;9 601 697
2867             ;****************
2867             ;div8
2867             ;8 by 8 bit unsigned division.
2867             ;  IN:  A = dividend
2867             ;       C = divisor
2867             ;  OUT: A = quotient
2867             ;       C = remainder
2867             ;  USES:F(lags)
2867             ;  Size 26 bytes
2867             ;  Time between 411 and 459 cycles
2867             ;****************
2867             ;pseudo code:
2867             ;T = dividend
2867             ;D = divisor
2867             ;Q = quotient = 0
2867             ;R = remainder = 0
2867             ;invariante betrekking:
2867             ; T = QD + R
2867             ; T <= 2^8  
2867             ;
2867             ; D/T'.RT\Q'      
2867             ;   R'             
2867             ; RT <= 2^8        
2867             ; 0<=k<=8          
2867             ; RT = T % 2^k     
2867             ; T' = (T-RT) / 2^k
2867             ; Q' = T' / D      
2867             ; R' = T' % D      
2867             ;
2867             ;for (i=8; i>0; i--) {
2867             ;  T = T * 2 (remember MSB in carry)
2867             ;  R = R * 2 + carry
2867             ;  Q = Q * 2
2867             ;  if (R >= D) {
2867             ;    R = R - D;
2867             ;    Q++;
2867             ;  }
2867             ;}
2867             ;return Q (in A) and R (in C)
2867             ;****************
2867             ;E = T = dividend
2867             ;C = D = divisor
2867             ;D = Q = quotient
2867             ;A = R = remainder
2867             ;****************
2867             ;  IN:  A = dividend
2867             ;       C  = divisor
2867             div8:
2867 D5                  PUSH  DE          ;11 11 save registers used
2868 C5                  PUSH  BC          ;11 22 save registers used
2869 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
286B 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
286D 5F                  LD    E,A         ; 4 38 E = T = dividend
286E AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
286F             div8_1:
286F CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
2871 CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
2873 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
2875 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
2876 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
2878 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
2879 14                  INC   D           ;           8*4=32 354   Q[D]++;
287A             div8_2:           ;                      }
287A 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
287C C1                  POP   BC          ;9        385 433
287D 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
287E 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
287F D1                  POP   DE          ;9        402 450
2880 C9                  RET               ;9        411 459
2881             ;****************
2881             ;div8_16
2881             ;8 by 16 bit unsigned division.
2881             ;  IN:  A = dividend
2881             ;       HL = divisor
2881             ;  OUT: A = quotient
2881             ;       C = remainder
2881             ;  USES:F(lags)
2881             ;  Size 13 bytes (plus dependency on div8)
2881             ;  Time 31 or between 436 and 484 cycles
2881             ;****************
2881             ;invariante betrekking:
2881             ; T = dividend
2881             ; D = divisor
2881             ; Q = quotient
2881             ; R = remainder
2881             ; T = QD + R
2881             ;pseudo code:
2881             ; if D >= 256 {
2881             ;   R = T
2881             ;   Q = 0
2881             ; } else {
2881             ;   R = T/D (using div8)
2881             ;   Q = T%D (using div8)
2881             ; }
2881             ;****************
2881             
2881             
2881             div8_16:
2881 4F                  LD    C,A         ;  4  4         save dividend(A) in C
2882 7C                  LD    A,H         ;  4  8         if D >= 256 {
2883 B7                  OR    A,A         ;  4 12
2884 28 02               JR    Z,div8_161  ;  6 18  8  20
2886 AF                  XOR   A,A         ;  4 22           R = T;
2887 C9                  RET               ;  9 31           Q = 0;
2888             div8_161:                     ;               } else {
2888 79                  LD    A,C         ;        4  24    restore dividend into A
2889 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
288A CD 67 28            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
288D C9                  RET               ; 9  436/484    }
288E             ;****************
288E             ;read
288E             ;read a 16 bit unsigned number from the input
288E             ;  IN:  none
288E             ;  OUT: HL = 16 bit unsigned number
288E             ;  USES:-
288E             ;****************
288E             read:
288E F5                  PUSH  AF
288F 21 00 00            LD    HL,0        ;result = 0;
2892             read1:
2892 CD 38 27            CALL  getChar     ;check if a character is available.
2895 28 FB               JR    Z,read1     ;-no: wait for it.
2897 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
2899 28 0C               JR    Z,read2
289B CD D3 27            CALL  mul16_10    ;result *= 10;
289E D6 30               SUB   A,'0'       ;digit = char - '0';
28A0 85                  ADD   A,L         ;result += digit;
28A1 6F                  LD    L,A
28A2 30 EE               JR    NC,read1     ;get next character
28A4 24                  INC   H
28A5 18 EB               JR    read1        ;get next character
28A7             read2:
28A7 F1                  POP   AF
28A8 C9                  RET
28A9             ;****************
28A9             ;writeLineHL
28A9             ;write a 16 bit unsigned number to the output, followed by a carriage return
28A9             ;  IN:  HL = 16 bit unsigned number
28A9             ;  OUT: none
28A9             ;  USES:HL
28A9             ;****************
28A9             writeLineHL:
28A9 CD B0 28            CALL  writeHL
28AC CD 79 27            CALL  putCRLF
28AF C9                  RET
28B0             ;****************
28B0             ;writeHL
28B0             ;write a 16 bit unsigned number to the output
28B0             ;  IN:  HL = 16 bit unsigned number
28B0             ;  OUT: none
28B0             ;  USES:HL
28B0             ;****************
28B0             writeHL:
28B0 C5                  PUSH  BC          ;save registers used
28B1 F5                  PUSH  AF
28B2 06 00               LD    B,0         ;number of digits on stack
28B4 7C                  LD    A,H         ;is HL=0?
28B5 B5                  OR    A,L
28B6 20 03               JR    NZ,writeHL1
28B8 04                  INC   B           ;write a single digit 0
28B9 18 0C               JR    writeHL3
28BB             writeHL1:
28BB 3E 0A               LD    A,10        ;divide HL by 10
28BD CD 56 28            CALL  div16_8
28C0 F5                  PUSH  AF          ;put remainder on stack
28C1 04                  INC   B
28C2 7C                  LD    A,H         ;is quotient 0?
28C3 B5                  OR    A,L
28C4 20 F5               JR    NZ,writeHL1
28C6             writeHL2:
28C6 F1                  POP   AF          ;write digit
28C7             writeHL3:
28C7 C6 30               ADD   A,'0'
28C9 CD 6C 27            CALL  putChar
28CC 10 F8               DJNZ  writeHL2
28CE F1                  POP   AF          ;restore registers used
28CF C1                  POP   BC
28D0 C9                  RET
28D1             ;****************
28D1             ;writeLineA
28D1             ;write an 8-bit unsigned number to the output, followed by a carriage return
28D1             ;  IN:  A = 8-bit unsigned number
28D1             ;  OUT: none
28D1             ;  USES:none
28D1             ;****************
28D1             writeLineA:
28D1 CD D8 28            CALL  writeA
28D4 CD 79 27            CALL  putCRLF
28D7 C9                  RET
28D8             ;****************
28D8             ;writeA
28D8             ;write an 8-bit unsigned number to the output
28D8             ;  IN:  A = 8-bit unsigned number
28D8             ;  OUT: none
28D8             ;  USES:none
28D8             ;****************
28D8             writeA:
28D8 E5                  PUSH  HL          ;save registers used
28D9 26 00               LD    H,0
28DB 6F                  LD    L,A
28DC CD B0 28            CALL  writeHL
28DF E1                  POP   HL
28E0 C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20D2 :
    L101 = 20D4 :
    L102 = 20D6 :
    L103 = 20DB :
    L104 = 20DB : 20F3 20F6
    L105 = 20DE :
    L106 = 20E1 :
    L107 = 20E8 :
    L108 = 20EC :
    L109 = 20EF :
     L11 = 2016 :
    L110 = 20F1 :
    L111 = 20F3 :
    L112 = 20F9 :
    L113 = 20F9 :
    L114 = 20F9 :
    L115 = 20F9 :
    L116 = 20F9 :
    L117 = 20FB :
    L118 = 2101 :
    L119 = 2101 : 211D
     L12 = 2016 :
    L120 = 2104 :
    L121 = 2107 :
    L122 = 210E :
    L123 = 2111 :
    L124 = 2115 :
    L125 = 2117 :
    L126 = 211D :
    L127 = 2120 :
    L128 = 2120 : 213C
    L129 = 2123 :
     L13 = 2018 :
    L130 = 2126 :
    L131 = 212D :
    L132 = 2130 :
    L133 = 2134 :
    L134 = 2136 :
    L135 = 213C :
    L136 = 213F :
    L137 = 213F : 215D
    L138 = 2142 :
    L139 = 2145 :
     L14 = 201E :
    L140 = 214C :
    L141 = 214F :
    L142 = 2153 :
    L143 = 2155 :
    L144 = 215B :
    L145 = 2160 :
    L146 = 2160 : 217C 217F
    L147 = 2163 :
    L148 = 2166 :
    L149 = 216D :
     L15 = 2021 :
    L150 = 2170 :
    L151 = 2174 :
    L152 = 2176 :
    L153 = 217C :
    L154 = 2182 :
    L155 = 2182 :
    L156 = 2184 :
    L157 = 218A :
    L158 = 218A : 21AD
    L159 = 218D :
     L16 = 2021 :
    L160 = 2190 :
    L161 = 2197 :
    L162 = 219E :
    L163 = 21A1 :
    L164 = 21A5 :
    L165 = 21A7 :
    L166 = 21AD :
    L167 = 21B0 :
    L168 = 21B0 : 21D3 21D6
    L169 = 21B3 :
     L17 = 2021 : 201E
    L170 = 21B6 :
    L171 = 21BD :
    L172 = 21C4 :
    L173 = 21C7 :
    L174 = 21CB :
    L175 = 21CD :
    L176 = 21D3 :
    L177 = 21D9 :
    L178 = 21D9 :
    L179 = 21D9 :
     L18 = 2021 :
    L180 = 21D9 :
    L181 = 21D9 :
    L182 = 21D9 :
    L183 = 21D9 :
    L184 = 21D9 :
    L185 = 21D9 :
    L186 = 21DC :
    L187 = 21DF :
    L188 = 21DF : 21F9
    L189 = 21E2 :
     L19 = 2023 :
    L190 = 21E5 :
    L191 = 21EC :
    L192 = 21EF :
    L193 = 21F3 :
    L194 = 21F9 :
    L195 = 21FC :
    L196 = 21FC : 2216
    L197 = 21FF :
    L198 = 2202 :
    L199 = 2209 :
      L2 = 2009 :
     L20 = 2029 :
    L200 = 220C :
    L201 = 2210 :
    L202 = 2216 :
    L203 = 2219 :
    L204 = 2219 : 2233
    L205 = 221C :
    L206 = 221F :
    L207 = 2226 :
    L208 = 2229 :
    L209 = 222D :
     L21 = 202D :
    L210 = 2233 :
    L211 = 2236 :
    L212 = 2236 : 2250 2253
    L213 = 2239 :
    L214 = 223C :
    L215 = 2243 :
    L216 = 2246 :
    L217 = 224A :
    L218 = 2250 :
    L219 = 2256 :
     L22 = 202D :
    L220 = 2256 :
    L221 = 2259 :
    L222 = 225C :
    L223 = 225C : 227F
    L224 = 225F :
    L225 = 2262 :
    L226 = 2269 :
    L227 = 2270 :
    L228 = 2273 :
    L229 = 2277 :
     L23 = 202F :
    L230 = 227D :
    L231 = 2282 :
    L232 = 2282 : 22A3 22A6
    L233 = 2285 :
    L234 = 2288 :
    L235 = 228F :
    L236 = 2296 :
    L237 = 2299 :
    L238 = 229D :
    L239 = 22A3 :
     L24 = 2032 :
    L240 = 22A9 :
    L241 = 22A9 :
    L242 = 22A9 :
    L243 = 22A9 :
    L244 = 22A9 :
    L245 = 22A9 :
    L246 = 22AB :
    L247 = 22AE :
    L248 = 22AE : 22BD 22C0
    L249 = 22B1 :
     L25 = 2032 :
    L250 = 22B4 :
    L251 = 22B8 :
    L252 = 22BB :
    L253 = 22BD :
    L254 = 22C3 :
    L255 = 22C3 :
    L256 = 22C3 :
    L257 = 22C5 :
    L258 = 22CB :
    L259 = 22CB : 22E3 22E6
     L26 = 2032 :
    L260 = 22CE :
    L261 = 22D1 :
    L262 = 22D8 :
    L263 = 22DB :
    L264 = 22DD :
    L265 = 22E3 :
    L266 = 22E9 :
    L267 = 22E9 :
    L268 = 22E9 :
    L269 = 22E9 :
     L27 = 2032 :
    L270 = 22E9 :
    L271 = 22EC :
    L272 = 22EF :
    L273 = 22EF :
    L274 = 22F1 :
    L275 = 22F4 :
    L276 = 22F4 : 230E 2311
    L277 = 22F7 :
    L278 = 22FA :
    L279 = 22FE :
     L28 = 2032 :
    L280 = 2305 :
    L281 = 2308 :
    L282 = 230E :
    L283 = 2314 :
    L284 = 2314 :
    L285 = 2314 :
    L286 = 2314 :
    L287 = 2314 :
    L288 = 2314 :
    L289 = 2314 :
     L29 = 2035 :
    L290 = 2316 :
    L291 = 2319 :
    L292 = 2319 :
    L293 = 2319 :
    L294 = 2319 :
    L295 = 2319 :
    L296 = 231B :
    L297 = 231E :
    L298 = 231E :
    L299 = 231E :
      L3 = 2009 :
     L30 = 2038 :
    L300 = 231E :
    L301 = 231E :
    L302 = 2320 :
    L303 = 2323 :
    L304 = 2323 :
    L305 = 2323 :
    L306 = 2323 :
    L307 = 2323 :
    L308 = 2325 :
    L309 = 2328 :
     L31 = 2038 :
    L310 = 2328 :
    L311 = 2328 :
    L312 = 2328 :
    L313 = 2328 :
    L314 = 2328 :
    L315 = 2328 :
    L316 = 232A :
    L317 = 232D :
    L318 = 232D :
    L319 = 232D :
     L32 = 203C :
    L320 = 232D :
    L321 = 232D :
    L322 = 232F :
    L323 = 2332 :
    L324 = 2332 :
    L325 = 2332 :
    L326 = 2332 :
    L327 = 2332 :
    L328 = 2334 :
    L329 = 2337 :
     L33 = 203C : 2060
    L330 = 2337 :
    L331 = 2337 :
    L332 = 2337 :
    L333 = 2337 :
    L334 = 2339 :
    L335 = 233C :
    L336 = 233C :
    L337 = 233C :
    L338 = 233C :
    L339 = 233C :
     L34 = 203C :
    L340 = 233C :
    L341 = 233E :
    L342 = 2341 :
    L343 = 2341 : 2352 2355
    L344 = 2344 :
    L345 = 2347 :
    L346 = 234B :
    L347 = 234E :
    L348 = 2350 :
    L349 = 2352 :
     L35 = 203F :
    L350 = 2358 :
    L351 = 2358 :
    L352 = 2358 :
    L353 = 2358 :
    L354 = 2358 :
    L355 = 235A :
    L356 = 2360 :
    L357 = 2360 : 237D 2380
    L358 = 2363 :
    L359 = 2366 :
     L36 = 2045 :
    L360 = 236D :
    L361 = 2370 :
    L362 = 2374 :
    L363 = 2376 :
    L364 = 237D :
    L365 = 2383 :
    L366 = 2383 :
    L367 = 2383 :
    L368 = 2385 :
    L369 = 2388 :
     L37 = 2045 :
    L370 = 2388 :
    L371 = 238B :
    L372 = 238E :
    L373 = 238E :
    L374 = 238E : 23AC 23AF
    L375 = 2391 :
    L376 = 2394 :
    L377 = 2398 :
    L378 = 239F :
    L379 = 23A2 :
     L38 = 2048 :
    L380 = 23A6 :
    L381 = 23AC :
    L382 = 23B2 :
    L383 = 23B2 :
    L384 = 23B2 :
    L385 = 23B2 :
    L386 = 23B2 :
    L387 = 23B2 :
    L388 = 23B4 :
    L389 = 23B7 :
     L39 = 204B :
    L390 = 23B7 : 23CD 23D0
    L391 = 23BA :
    L392 = 23BD :
    L393 = 23C1 :
    L394 = 23C4 :
    L395 = 23C6 :
    L396 = 23C7 :
    L397 = 23C9 :
    L398 = 23CB :
    L399 = 23CD :
      L4 = 2009 :
     L40 = 204B :
    L400 = 23D3 :
    L401 = 23D3 :
    L402 = 23D3 :
    L403 = 23D5 :
    L404 = 23DB :
    L405 = 23DB : 23FF 2402
    L406 = 23DE :
    L407 = 23E1 :
    L408 = 23E5 :
    L409 = 23EC :
     L41 = 204E :
    L410 = 23EE :
    L411 = 23F0 :
    L412 = 23F1 :
    L413 = 23F4 :
    L414 = 23F8 :
    L415 = 23F9 :
    L416 = 23FF :
    L417 = 2405 :
    L418 = 2405 :
    L419 = 2405 :
     L42 = 2051 :
    L420 = 2407 :
    L421 = 240D :
    L422 = 240D :
    L423 = 240F :
    L424 = 2412 :
    L425 = 2412 : 2434 2437
    L426 = 2415 :
    L427 = 2418 :
    L428 = 241F :
    L429 = 2422 :
     L43 = 2051 :
    L430 = 2426 :
    L431 = 2427 :
    L432 = 242A :
    L433 = 242C :
    L434 = 242D :
    L435 = 2434 :
    L436 = 243A :
    L437 = 243A :
    L438 = 243A :
    L439 = 243C :
     L44 = 2055 :
    L440 = 243F :
    L441 = 243F :
    L442 = 2442 :
    L443 = 2445 :
    L444 = 2445 : 2469 246C
    L445 = 2448 :
    L446 = 244B :
    L447 = 244F :
    L448 = 2456 :
    L449 = 2459 :
     L45 = 2055 :
    L450 = 245D :
    L451 = 245E :
    L452 = 2461 :
    L453 = 2465 :
    L454 = 2469 :
    L455 = 246F :
    L456 = 246F :
    L457 = 246F :
    L458 = 246F :
    L459 = 246F :
     L46 = 2058 :
    L460 = 246F :
    L461 = 2471 :
    L462 = 2474 :
    L463 = 2474 :
    L464 = 2476 :
    L465 = 247C :
    L466 = 247C : 2496 2499
    L467 = 247F :
    L468 = 2482 :
    L469 = 2489 :
     L47 = 205B :
    L470 = 248D :
    L471 = 248F :
    L472 = 2491 :
    L473 = 2496 :
    L474 = 249C :
    L475 = 249C :
    L476 = 249C :
    L477 = 249E :
    L478 = 24A1 :
    L479 = 24A1 :
     L48 = 205B :
    L480 = 24A3 :
    L481 = 24A9 :
    L482 = 24A9 : 24C7 24CA
    L483 = 24AC :
    L484 = 24AF :
    L485 = 24B3 :
    L486 = 24BA :
    L487 = 24BC :
    L488 = 24BE :
    L489 = 24C1 :
     L49 = 205E :
    L490 = 24C7 :
    L491 = 24CD :
    L492 = 24CD :
    L493 = 24CD :
    L494 = 24CF :
    L495 = 24D5 :
    L496 = 24D5 :
    L497 = 24D7 :
    L498 = 24DA :
    L499 = 24DA : 24FC 24FF
      L5 = 2009 :
     L50 = 2060 :
    L500 = 24DD :
    L501 = 24E0 :
    L502 = 24E7 :
    L503 = 24EB :
    L504 = 24EE :
    L505 = 24F2 :
    L506 = 24F5 :
    L507 = 24FC :
    L508 = 2502 :
    L509 = 2502 :
     L51 = 2063 :
    L510 = 2502 :
    L511 = 2505 :
    L512 = 2508 :
    L513 = 2508 :
    L514 = 250A :
    L515 = 250D :
    L516 = 250D : 252C 252F
    L517 = 2510 :
    L518 = 2513 :
    L519 = 2517 :
     L52 = 2063 :
    L520 = 251E :
    L521 = 2521 :
    L522 = 2525 :
    L523 = 252C :
    L524 = 2532 :
    L525 = 2532 :
    L526 = 2532 :
    L527 = 2532 :
    L528 = 2532 :
    L529 = 2532 :
     L53 = 2063 :
    L530 = 2532 :
    L531 = 2534 :
    L532 = 2537 :
    L533 = 2537 :
    L534 = 2539 :
    L535 = 253C :
    L536 = 253C :
    L537 = 253C :
    L538 = 253C :
    L539 = 253E :
     L54 = 2063 :
    L540 = 2541 :
    L541 = 2541 :
    L542 = 2543 :
    L543 = 2546 :
    L544 = 2546 :
    L545 = 2546 :
    L546 = 2546 :
    L547 = 2548 :
    L548 = 254B :
    L549 = 254B :
     L55 = 2063 :
    L550 = 254D :
    L551 = 2550 :
    L552 = 2550 :
    L553 = 2550 :
    L554 = 2550 :
    L555 = 2552 :
    L556 = 2555 :
    L557 = 2555 :
    L558 = 2557 :
    L559 = 255A :
     L56 = 2063 :
    L560 = 255A :
    L561 = 255A :
    L562 = 255A :
    L563 = 255A :
    L564 = 255A :
    L565 = 255A :
    L566 = 255C :
    L567 = 255F :
    L568 = 255F :
    L569 = 2561 :
     L57 = 2063 :
    L570 = 2564 :
    L571 = 2564 :
    L572 = 2564 :
    L573 = 2564 :
    L574 = 2566 :
    L575 = 2569 :
    L576 = 2569 :
    L577 = 256B :
    L578 = 256E :
    L579 = 256E :
     L58 = 2063 :
    L580 = 256E :
    L581 = 256E :
    L582 = 2570 :
    L583 = 2573 :
    L584 = 2573 :
    L585 = 2575 :
    L586 = 2578 :
    L587 = 2578 :
    L588 = 2578 :
    L589 = 2578 :
     L59 = 2063 :
    L590 = 257A :
    L591 = 257D :
    L592 = 257D :
    L593 = 257F :
    L594 = 2582 :
    L595 = 2582 :
    L596 = 2582 :
    L597 = 2582 :
    L598 = 2582 :
    L599 = 2582 :
      L6 = 2009 : 2003
     L60 = 2063 : 2074
    L600 = 2584 :
    L601 = 2587 :
    L602 = 2587 : 2596 2599
    L603 = 258A :
    L604 = 258D :
    L605 = 2591 :
    L606 = 2594 :
    L607 = 2596 :
    L608 = 259C :
    L609 = 259C :
     L61 = 2066 :
    L610 = 259C :
    L611 = 259C :
    L612 = 259E :
    L613 = 25A1 :
    L614 = 25A1 :
    L615 = 25A3 :
    L616 = 25A6 :
    L617 = 25A6 :
    L618 = 25A6 :
    L619 = 25A8 :
     L62 = 2069 :
    L620 = 25AE :
    L621 = 25AE : 25C7 25CA
    L622 = 25B1 :
    L623 = 25B4 :
    L624 = 25BB :
    L625 = 25BE :
    L626 = 25C0 :
    L627 = 25C7 :
    L628 = 25CD :
    L629 = 25CD :
     L63 = 206D :
    L630 = 25CD :
    L631 = 25D0 :
    L632 = 25D3 :
    L633 = 25D3 :
    L634 = 25D5 :
    L635 = 25D8 :
    L636 = 25D8 : 25F2 25F5
    L637 = 25DB :
    L638 = 25DE :
    L639 = 25E2 :
     L64 = 2070 :
    L640 = 25E9 :
    L641 = 25EC :
    L642 = 25F2 :
    L643 = 25F8 :
    L644 = 25F8 :
    L645 = 25F8 :
    L646 = 25F8 :
    L647 = 25F8 :
    L648 = 25F8 : 260B 260E
    L649 = 25FB :
     L65 = 2072 :
    L650 = 25FE :
    L651 = 2602 :
    L652 = 2604 :
    L653 = 2606 :
    L654 = 260B :
    L655 = 2611 :
    L656 = 2611 :
    L657 = 2611 :
    L658 = 2611 :
    L659 = 2613 :
     L66 = 2074 :
    L660 = 2619 :
    L661 = 2619 : 2633 2636
    L662 = 261C :
    L663 = 261F :
    L664 = 2623 :
    L665 = 2626 :
    L666 = 262A :
    L667 = 262D :
    L668 = 2633 :
    L669 = 2639 :
     L67 = 2077 :
    L670 = 2639 :
    L671 = 2639 :
    L672 = 263B :
    L673 = 2641 :
    L674 = 2641 : 265C 265F
    L675 = 2644 :
    L676 = 2647 :
    L677 = 264E :
    L678 = 2650 :
    L679 = 2652 :
     L68 = 2077 : 2088
    L680 = 2655 :
    L681 = 265C :
    L682 = 2662 :
    L683 = 2662 :
    L684 = 2662 :
    L685 = 2665 :
    L686 = 2668 :
    L687 = 2668 :
    L688 = 266A :
    L689 = 266D :
     L69 = 207A :
    L690 = 266D : 268C 268F
    L691 = 2670 :
    L692 = 2673 :
    L693 = 2677 :
    L694 = 267E :
    L695 = 2681 :
    L696 = 2685 :
    L697 = 268C :
    L698 = 2692 :
    L699 = 2692 :
      L7 = 200B :
     L70 = 207D :
    L700 = 2692 :
    L701 = 2692 :
    L702 = 2692 :
    L703 = 2692 :
    L704 = 2694 :
    L705 = 2697 :
    L706 = 2697 : 26A7 26AA
    L707 = 269A :
    L708 = 269D :
    L709 = 26A1 :
     L71 = 2081 :
    L710 = 26A4 :
    L711 = 26A7 :
    L712 = 26AD :
    L713 = 26AD :
    L714 = 26AD :
    L715 = 26AF :
    L716 = 26B5 :
    L717 = 26B5 : 26CB 26CE
    L718 = 26B8 :
    L719 = 26BB :
     L72 = 2084 :
    L720 = 26BF :
    L721 = 26C2 :
    L722 = 26C5 :
    L723 = 26CB :
    L724 = 26D1 :
    L725 = 26D1 :
    L726 = 26D1 :
    L727 = 26D4 :
    L728 = 26DA :
    L729 = 26DA :
     L73 = 2086 :
    L730 = 26DC :
    L731 = 26DF :
    L732 = 26DF : 26F9 26FC
    L733 = 26E2 :
    L734 = 26E5 :
    L735 = 26EC :
    L736 = 26EF :
    L737 = 26F2 :
    L738 = 26F9 :
    L739 = 26FF :
     L74 = 2088 :
    L740 = 26FF :
    L741 = 26FF :
    L742 = 2701 :
    L743 = 2708 :
    L744 = 2708 : 2721 2724
    L745 = 270B :
    L746 = 270E :
    L747 = 2715 :
    L748 = 2718 :
    L749 = 2721 :
     L75 = 208B :
    L750 = 2727 :
    L751 = 2727 :
    L752 = 2727 :
    L753 = 2727 :
    L754 = 2727 :
    L755 = 2727 :
    L756 = 2727 :
    L757 = 2727 :
    L758 = 2727 :
    L759 = 2727 :
     L76 = 208B : 209C
    L760 = 2727 :
    L761 = 2727 :
    L762 = 2727 :
    L763 = 2727 :
    L764 = 2727 :
    L765 = 2727 :
    L766 = 2727 :
    L767 = 2727 :
    L768 = 2727 :
    L769 = 2727 :
     L77 = 208E :
    L770 = 2727 :
    L771 = 2727 :
    L772 = 2727 :
    L773 = 2727 :
    L774 = 2727 :
    L775 = 2727 :
    L776 = 2727 :
    L777 = 2727 :
    L778 = 2727 :
    L779 = 2727 :
     L78 = 2091 :
    L780 = 2727 :
    L781 = 2727 :
    L782 = 2727 :
    L783 = 2727 :
    L784 = 2727 :
    L785 = 272A :
    L786 = 272D :
    L787 = 272D :
    L788 = 272F :
    L789 = 2731 :
     L79 = 2095 :
    L790 = 2732 :
    L791 = 2732 : 2727
      L8 = 200E :
     L80 = 2098 :
     L81 = 209A :
     L82 = 209C :
     L83 = 209F :
     L84 = 209F : 20B0 20B3
     L85 = 20A2 :
     L86 = 20A5 :
     L87 = 20A9 :
     L88 = 20AC :
     L89 = 20AE :
      L9 = 200E :
     L90 = 20B0 :
     L91 = 20B6 :
     L92 = 20B6 :
     L93 = 20B8 :
     L94 = 20BE :
     L95 = 20BE : 20D8
     L96 = 20C1 :
     L97 = 20C4 :
     L98 = 20CB :
     L99 = 20CF :
   div16 = 2836 :
 div16_1 = 283F : 284E
 div16_2 = 284D : 2848
 div16_3 = 284E : 284B
 div16_8 = 2856 : 28BD
div16_82 = 285B : 2863
div16_83 = 2863 : 285F
    div8 = 2867 : 288A
  div8_1 = 286F : 287A
 div8_16 = 2881 :
div8_161 = 2888 : 2884
  div8_2 = 287A : 2876
 getChar = 2738 : 2892
getChar1 = 2746 : 273D
   mul16 = 27BA :
 mul1632 = 27E9 :
mul16321 = 280B : 2808
mul16322 = 2812 : 280F
  mul16S = 281C :
 mul16S1 = 2825 : 2831
 mul16S2 = 2830 : 282A 282D
mul16_10 = 27D3 : 289B
 mul16_8 = 27DC :
 putBell = 2792 :
 putCRLF = 2779 : 2759 28AC 28D4
 putChar = 276C : 2763 277C 2781 2788 2790 2794 27B5 28C9
putChar1 = 276D : 2772
putErase = 2786 :
 putHexA = 27A1 : 2798 279C
putHexA1 = 27AA : 27A6
putHexA2 = 27B5 : 27B1
putHexHL = 2796 :
  putMsg = 2750 :
putSpace = 276A : 278B
 putStr1 = 275E : 2766
 putStr2 = 2768 : 2761
    read = 288E :
   read1 = 2892 : 2895 28A2 28A5
   read2 = 28A7 : 2899
   start = 2000 :
  writeA = 28D8 : 28D1
 writeHL = 28B0 : 28A9 28DC
writeHL1 = 28BB : 28B6 28C4
writeHL2 = 28C6 : 28CC
writeHL3 = 28C7 : 28B9
writeLineA = 28D1 : 202F 2035 2058 2066 207A 208E 20A2 22B1 22F7 2316 231B 2320
                : 2325 232A 232F 2334 2339 2344 2391 23BA 23DE 2448 24AC 2510
                : 2534 2539 253E 2543 2548 254D 2552 2557 255C 2561 2566 256B
                : 2570 2575 257A 257F 258A 259E 25A3 25DB 25FB 261C 2670 269A
                : 26B8
writeLineHL = 28A9 : 20C1 20DE 2104 2123 2142 2163 218D 21B3 21E2 21FF 221C 2239
                : 225F 2285 22CE 2363 2415 247F 24DD 25B1 2644 26E2 270B
writeLineStr = 2756 : 272A
writeStr = 275D : 2751 2756
