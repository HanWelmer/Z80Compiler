2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L6
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testDo.j(0) /* Program to test generated Z80 assembler code */
2009             L3:
2009                     ;;testDo.j(1) class TestDo {
2009             L4:
2009                     ;class TestDo []
2009             L5:
2009                     ;;testDo.j(2)   private static byte b = 1;
2009             L6:
2009 3E 01               LD    A,1
200B             L7:
200B 32 00 50            LD    (05000H),A
200E             L8:
200E                     ;;testDo.j(3)   private static word i = 12;
200E             L9:
200E 3E 0C               LD    A,12
2010             L10:
2010 6F                  LD    L,A
2011 26 00               LD    H,0
2013 22 01 50            LD    (05001H),HL
2016             L11:
2016                     ;;testDo.j(4)   private static word p = 12;
2016             L12:
2016 3E 0C               LD    A,12
2018             L13:
2018 6F                  LD    L,A
2019 26 00               LD    H,0
201B 22 03 50            LD    (05003H),HL
201E             L14:
201E C3 21 20            JP    L17
2021             L15:
2021                     ;;testDo.j(5) 
2021             L16:
2021                     ;;testDo.j(6)   public static void main() {
2021             L17:
2021                     ;method TestDo.main [public, static] void ()
2021             L18:
2021 DD E5               PUSH  IX
2023             L19:
2023 DD 21 00 00         LD    IX,0x0000
2027 DD 39               ADD   IX,SP
2029             L20:
2029 3B                  DEC   SP
202A 3B                  DEC   SP
202B 3B                  DEC   SP
202C 3B                  DEC   SP
202D             L21:
202D                     ;;testDo.j(7)     println(0);
202D             L22:
202D 3E 00               LD    A,0
202F             L23:
202F CD D6 28            CALL  writeLineA
2032             L24:
2032                     ;;testDo.j(8)   
2032             L25:
2032                     ;;testDo.j(9)     /************************/
2032             L26:
2032                     ;;testDo.j(10)     // global variable within do scope
2032             L27:
2032                     ;;testDo.j(11)     println (b);
2032             L28:
2032 3A 00 50            LD    A,(05000H)
2035             L29:
2035 CD D6 28            CALL  writeLineA
2038             L30:
2038                     ;;testDo.j(12)     b++;
2038             L31:
2038 21 00 50            LD    HL,05000H
203B 34                  INC   (HL)
203C             L32:
203C                     ;;testDo.j(13)     do {
203C             L33:
203C                     ;;testDo.j(14)       word j = 1001;
203C             L34:
203C 21 E9 03            LD    HL,1001
203F             L35:
203F DD 75 FE            LD    (IX - 2),L
2042 DD 74 FF            LD    (IX - 1),H
2045             L36:
2045                     ;;testDo.j(15)       byte c = b;
2045             L37:
2045 3A 00 50            LD    A,(05000H)
2048             L38:
2048 DD 77 FD            LD    (IX - 3),A
204B             L39:
204B                     ;;testDo.j(16)       byte d = c;
204B             L40:
204B DD 7E FD            LD    A,(IX - 3)
204E             L41:
204E DD 77 FC            LD    (IX - 4),A
2051             L42:
2051                     ;;testDo.j(17)       b++;
2051             L43:
2051 21 00 50            LD    HL,05000H
2054 34                  INC   (HL)
2055             L44:
2055                     ;;testDo.j(18)       println (c);
2055             L45:
2055 DD 7E FD            LD    A,(IX - 3)
2058             L46:
2058 CD D6 28            CALL  writeLineA
205B             L47:
205B                     ;;testDo.j(19)     } while (b<2);
205B             L48:
205B 3A 00 50            LD    A,(05000H)
205E             L49:
205E D6 02               SUB   A,2
2060             L50:
2060 DA 3C 20            JP    C,L33
2063             L51:
2063                     ;;testDo.j(20)   
2063             L52:
2063                     ;;testDo.j(21)     /************************/
2063             L53:
2063                     ;;testDo.j(22)     // constant - constant
2063             L54:
2063                     ;;testDo.j(23)     // not relevant
2063             L55:
2063                     ;;testDo.j(24)   
2063             L56:
2063                     ;;testDo.j(25)     /************************/
2063             L57:
2063                     ;;testDo.j(26)     // constant - acc
2063             L58:
2063                     ;;testDo.j(27)     // byte - byte
2063             L59:
2063                     ;;testDo.j(28)     do { println (b); b++; } while (103 == b+100);
2063             L60:
2063 3A 00 50            LD    A,(05000H)
2066             L61:
2066 CD D6 28            CALL  writeLineA
2069             L62:
2069 21 00 50            LD    HL,05000H
206C 34                  INC   (HL)
206D             L63:
206D 3A 00 50            LD    A,(05000H)
2070             L64:
2070 C6 64               ADD   A,100
2072             L65:
2072 D6 67               SUB   A,103
2074             L66:
2074 CA 63 20            JP    Z,L60
2077             L67:
2077                     ;;testDo.j(29)     do { println (b); b++; } while (106 != b+100);
2077             L68:
2077 3A 00 50            LD    A,(05000H)
207A             L69:
207A CD D6 28            CALL  writeLineA
207D             L70:
207D 21 00 50            LD    HL,05000H
2080 34                  INC   (HL)
2081             L71:
2081 3A 00 50            LD    A,(05000H)
2084             L72:
2084 C6 64               ADD   A,100
2086             L73:
2086 D6 6A               SUB   A,106
2088             L74:
2088 C2 77 20            JP    NZ,L68
208B             L75:
208B                     ;;testDo.j(30)     do { println (b); b++; } while (108 >  b+100);
208B             L76:
208B 3A 00 50            LD    A,(05000H)
208E             L77:
208E CD D6 28            CALL  writeLineA
2091             L78:
2091 21 00 50            LD    HL,05000H
2094 34                  INC   (HL)
2095             L79:
2095 3A 00 50            LD    A,(05000H)
2098             L80:
2098 C6 64               ADD   A,100
209A             L81:
209A D6 6C               SUB   A,108
209C             L82:
209C DA 8B 20            JP    C,L76
209F             L83:
209F                     ;;testDo.j(31)     do { println (b); b++; } while (109 >= b+100);
209F             L84:
209F 3A 00 50            LD    A,(05000H)
20A2             L85:
20A2 CD D6 28            CALL  writeLineA
20A5             L86:
20A5 21 00 50            LD    HL,05000H
20A8 34                  INC   (HL)
20A9             L87:
20A9 3A 00 50            LD    A,(05000H)
20AC             L88:
20AC C6 64               ADD   A,100
20AE             L89:
20AE D6 6D               SUB   A,109
20B0             L90:
20B0 DA 9F 20            JP    C,L84
20B3 CA 9F 20            JP    Z,L84
20B6             L91:
20B6                     ;;testDo.j(32)     p=10;
20B6             L92:
20B6 3E 0A               LD    A,10
20B8             L93:
20B8 6F                  LD    L,A
20B9 26 00               LD    H,0
20BB 22 03 50            LD    (05003H),HL
20BE             L94:
20BE                     ;;testDo.j(33)     do { println (p); p++; b--; } while (108 <  b+100);
20BE             L95:
20BE 2A 03 50            LD    HL,(05003H)
20C1             L96:
20C1 CD AE 28            CALL  writeLineHL
20C4             L97:
20C4 2A 03 50            LD    HL,(05003H)
20C7 23                  INC   HL
20C8 22 03 50            LD    (05003H),HL
20CB             L98:
20CB 21 00 50            LD    HL,05000H
20CE 35                  DEC   (HL)
20CF             L99:
20CF 3A 00 50            LD    A,(05000H)
20D2             L100:
20D2 C6 64               ADD   A,100
20D4             L101:
20D4 D6 6C               SUB   A,108
20D6             L102:
20D6 28 03               JR    Z,$+3
20D8 D2 BE 20            JP    NC,L95
20DB             L103:
20DB                     ;;testDo.j(34)     do { println (p); p++; b--; } while (107 <= b+100);
20DB             L104:
20DB 2A 03 50            LD    HL,(05003H)
20DE             L105:
20DE CD AE 28            CALL  writeLineHL
20E1             L106:
20E1 2A 03 50            LD    HL,(05003H)
20E4 23                  INC   HL
20E5 22 03 50            LD    (05003H),HL
20E8             L107:
20E8 21 00 50            LD    HL,05000H
20EB 35                  DEC   (HL)
20EC             L108:
20EC 3A 00 50            LD    A,(05000H)
20EF             L109:
20EF C6 64               ADD   A,100
20F1             L110:
20F1 D6 6B               SUB   A,107
20F3             L111:
20F3 D2 DB 20            JP    NC,L104
20F6 CA DB 20            JP    Z,L104
20F9             L112:
20F9                     ;;testDo.j(35)   
20F9             L113:
20F9                     ;;testDo.j(36)     // constant - acc
20F9             L114:
20F9                     ;;testDo.j(37)     // byte - integer
20F9             L115:
20F9                     ;;testDo.j(38)     i=14;
20F9             L116:
20F9 3E 0E               LD    A,14
20FB             L117:
20FB 6F                  LD    L,A
20FC 26 00               LD    H,0
20FE 22 01 50            LD    (05001H),HL
2101             L118:
2101                     ;;testDo.j(39)     do { println (i); i++; } while (15 == i+0);
2101             L119:
2101 2A 01 50            LD    HL,(05001H)
2104             L120:
2104 CD AE 28            CALL  writeLineHL
2107             L121:
2107 2A 01 50            LD    HL,(05001H)
210A 23                  INC   HL
210B 22 01 50            LD    (05001H),HL
210E             L122:
210E 2A 01 50            LD    HL,(05001H)
2111             L123:
2111 11 00 00            LD    DE,0
2114 19                  ADD   HL,DE
2115             L124:
2115 3E 0F               LD    A,15
2117             L125:
2117 5F                  LD    E,A
2118 16 00               LD    D,0
211A EB                  EX    DE,HL
211B B7                  OR    A
211C ED 52               SBC   HL,DE
211E             L126:
211E CA 01 21            JP    Z,L119
2121             L127:
2121                     ;;testDo.j(40)     do { println (i); i++; } while (18 != i+0);
2121             L128:
2121 2A 01 50            LD    HL,(05001H)
2124             L129:
2124 CD AE 28            CALL  writeLineHL
2127             L130:
2127 2A 01 50            LD    HL,(05001H)
212A 23                  INC   HL
212B 22 01 50            LD    (05001H),HL
212E             L131:
212E 2A 01 50            LD    HL,(05001H)
2131             L132:
2131 11 00 00            LD    DE,0
2134 19                  ADD   HL,DE
2135             L133:
2135 3E 12               LD    A,18
2137             L134:
2137 5F                  LD    E,A
2138 16 00               LD    D,0
213A EB                  EX    DE,HL
213B B7                  OR    A
213C ED 52               SBC   HL,DE
213E             L135:
213E C2 21 21            JP    NZ,L128
2141             L136:
2141                     ;;testDo.j(41)     do { println (i); i++; } while (20 >  i+0);
2141             L137:
2141 2A 01 50            LD    HL,(05001H)
2144             L138:
2144 CD AE 28            CALL  writeLineHL
2147             L139:
2147 2A 01 50            LD    HL,(05001H)
214A 23                  INC   HL
214B 22 01 50            LD    (05001H),HL
214E             L140:
214E 2A 01 50            LD    HL,(05001H)
2151             L141:
2151 11 00 00            LD    DE,0
2154 19                  ADD   HL,DE
2155             L142:
2155 3E 14               LD    A,20
2157             L143:
2157 5F                  LD    E,A
2158 16 00               LD    D,0
215A EB                  EX    DE,HL
215B B7                  OR    A
215C ED 52               SBC   HL,DE
215E             L144:
215E 28 03               JR    Z,$+3
2160 D2 41 21            JP    NC,L137
2163             L145:
2163                     ;;testDo.j(42)     do { println (i); i++; } while (21 >= i+0);
2163             L146:
2163 2A 01 50            LD    HL,(05001H)
2166             L147:
2166 CD AE 28            CALL  writeLineHL
2169             L148:
2169 2A 01 50            LD    HL,(05001H)
216C 23                  INC   HL
216D 22 01 50            LD    (05001H),HL
2170             L149:
2170 2A 01 50            LD    HL,(05001H)
2173             L150:
2173 11 00 00            LD    DE,0
2176 19                  ADD   HL,DE
2177             L151:
2177 3E 15               LD    A,21
2179             L152:
2179 5F                  LD    E,A
217A 16 00               LD    D,0
217C EB                  EX    DE,HL
217D B7                  OR    A
217E ED 52               SBC   HL,DE
2180             L153:
2180 D2 63 21            JP    NC,L146
2183 CA 63 21            JP    Z,L146
2186             L154:
2186                     ;;testDo.j(43)     p=22;
2186             L155:
2186 3E 16               LD    A,22
2188             L156:
2188 6F                  LD    L,A
2189 26 00               LD    H,0
218B 22 03 50            LD    (05003H),HL
218E             L157:
218E                     ;;testDo.j(44)     do { println (p); p++; i--; } while (20 <  i+0);
218E             L158:
218E 2A 03 50            LD    HL,(05003H)
2191             L159:
2191 CD AE 28            CALL  writeLineHL
2194             L160:
2194 2A 03 50            LD    HL,(05003H)
2197 23                  INC   HL
2198 22 03 50            LD    (05003H),HL
219B             L161:
219B 2A 01 50            LD    HL,(05001H)
219E 2B                  DEC   HL
219F 22 01 50            LD    (05001H),HL
21A2             L162:
21A2 2A 01 50            LD    HL,(05001H)
21A5             L163:
21A5 11 00 00            LD    DE,0
21A8 19                  ADD   HL,DE
21A9             L164:
21A9 3E 14               LD    A,20
21AB             L165:
21AB 5F                  LD    E,A
21AC 16 00               LD    D,0
21AE EB                  EX    DE,HL
21AF B7                  OR    A
21B0 ED 52               SBC   HL,DE
21B2             L166:
21B2 DA 8E 21            JP    C,L158
21B5             L167:
21B5                     ;;testDo.j(45)     do { println (p); p++; i--; } while (19 <= i+0);
21B5             L168:
21B5 2A 03 50            LD    HL,(05003H)
21B8             L169:
21B8 CD AE 28            CALL  writeLineHL
21BB             L170:
21BB 2A 03 50            LD    HL,(05003H)
21BE 23                  INC   HL
21BF 22 03 50            LD    (05003H),HL
21C2             L171:
21C2 2A 01 50            LD    HL,(05001H)
21C5 2B                  DEC   HL
21C6 22 01 50            LD    (05001H),HL
21C9             L172:
21C9 2A 01 50            LD    HL,(05001H)
21CC             L173:
21CC 11 00 00            LD    DE,0
21CF 19                  ADD   HL,DE
21D0             L174:
21D0 3E 13               LD    A,19
21D2             L175:
21D2 5F                  LD    E,A
21D3 16 00               LD    D,0
21D5 EB                  EX    DE,HL
21D6 B7                  OR    A
21D7 ED 52               SBC   HL,DE
21D9             L176:
21D9 DA B5 21            JP    C,L168
21DC CA B5 21            JP    Z,L168
21DF             L177:
21DF                     ;;testDo.j(46)   
21DF             L178:
21DF                     ;;testDo.j(47)     // constant - acc
21DF             L179:
21DF                     ;;testDo.j(48)     // integer - byte
21DF             L180:
21DF                     ;;testDo.j(49)     // not relevant
21DF             L181:
21DF                     ;;testDo.j(50)   
21DF             L182:
21DF                     ;;testDo.j(51)     // constant - acc
21DF             L183:
21DF                     ;;testDo.j(52)     // integer - integer
21DF             L184:
21DF                     ;;testDo.j(53)     i=p;
21DF             L185:
21DF 2A 03 50            LD    HL,(05003H)
21E2             L186:
21E2 22 01 50            LD    (05001H),HL
21E5             L187:
21E5                     ;;testDo.j(54)     do { println (i); i++; } while (1027 == i+1000);
21E5             L188:
21E5 2A 01 50            LD    HL,(05001H)
21E8             L189:
21E8 CD AE 28            CALL  writeLineHL
21EB             L190:
21EB 2A 01 50            LD    HL,(05001H)
21EE 23                  INC   HL
21EF 22 01 50            LD    (05001H),HL
21F2             L191:
21F2 2A 01 50            LD    HL,(05001H)
21F5             L192:
21F5 11 E8 03            LD    DE,1000
21F8 19                  ADD   HL,DE
21F9             L193:
21F9 11 03 04            LD    DE,1027
21FC B7                  OR    A
21FD ED 52               SBC   HL,DE
21FF             L194:
21FF CA E5 21            JP    Z,L188
2202             L195:
2202                     ;;testDo.j(55)     do { println (i); i++; } while (1029 != i+1000);
2202             L196:
2202 2A 01 50            LD    HL,(05001H)
2205             L197:
2205 CD AE 28            CALL  writeLineHL
2208             L198:
2208 2A 01 50            LD    HL,(05001H)
220B 23                  INC   HL
220C 22 01 50            LD    (05001H),HL
220F             L199:
220F 2A 01 50            LD    HL,(05001H)
2212             L200:
2212 11 E8 03            LD    DE,1000
2215 19                  ADD   HL,DE
2216             L201:
2216 11 05 04            LD    DE,1029
2219 B7                  OR    A
221A ED 52               SBC   HL,DE
221C             L202:
221C C2 02 22            JP    NZ,L196
221F             L203:
221F                     ;;testDo.j(56)     do { println (i); i++; } while (1031 >  i+1000);
221F             L204:
221F 2A 01 50            LD    HL,(05001H)
2222             L205:
2222 CD AE 28            CALL  writeLineHL
2225             L206:
2225 2A 01 50            LD    HL,(05001H)
2228 23                  INC   HL
2229 22 01 50            LD    (05001H),HL
222C             L207:
222C 2A 01 50            LD    HL,(05001H)
222F             L208:
222F 11 E8 03            LD    DE,1000
2232 19                  ADD   HL,DE
2233             L209:
2233 11 07 04            LD    DE,1031
2236 B7                  OR    A
2237 ED 52               SBC   HL,DE
2239             L210:
2239 DA 1F 22            JP    C,L204
223C             L211:
223C                     ;;testDo.j(57)     do { println (i); i++; } while (1032 >= i+1000);
223C             L212:
223C 2A 01 50            LD    HL,(05001H)
223F             L213:
223F CD AE 28            CALL  writeLineHL
2242             L214:
2242 2A 01 50            LD    HL,(05001H)
2245 23                  INC   HL
2246 22 01 50            LD    (05001H),HL
2249             L215:
2249 2A 01 50            LD    HL,(05001H)
224C             L216:
224C 11 E8 03            LD    DE,1000
224F 19                  ADD   HL,DE
2250             L217:
2250 11 08 04            LD    DE,1032
2253 B7                  OR    A
2254 ED 52               SBC   HL,DE
2256             L218:
2256 DA 3C 22            JP    C,L212
2259 CA 3C 22            JP    Z,L212
225C             L219:
225C                     ;;testDo.j(58)     p=i;
225C             L220:
225C 2A 01 50            LD    HL,(05001H)
225F             L221:
225F 22 03 50            LD    (05003H),HL
2262             L222:
2262                     ;;testDo.j(59)     do { println (p); p++; i--; } while (1031 <  i+1000);
2262             L223:
2262 2A 03 50            LD    HL,(05003H)
2265             L224:
2265 CD AE 28            CALL  writeLineHL
2268             L225:
2268 2A 03 50            LD    HL,(05003H)
226B 23                  INC   HL
226C 22 03 50            LD    (05003H),HL
226F             L226:
226F 2A 01 50            LD    HL,(05001H)
2272 2B                  DEC   HL
2273 22 01 50            LD    (05001H),HL
2276             L227:
2276 2A 01 50            LD    HL,(05001H)
2279             L228:
2279 11 E8 03            LD    DE,1000
227C 19                  ADD   HL,DE
227D             L229:
227D 11 07 04            LD    DE,1031
2280 B7                  OR    A
2281 ED 52               SBC   HL,DE
2283             L230:
2283 28 03               JR    Z,$+3
2285 D2 62 22            JP    NC,L223
2288             L231:
2288                     ;;testDo.j(60)     do { println (p); p++; i--; } while (1030 <= i+1000);
2288             L232:
2288 2A 03 50            LD    HL,(05003H)
228B             L233:
228B CD AE 28            CALL  writeLineHL
228E             L234:
228E 2A 03 50            LD    HL,(05003H)
2291 23                  INC   HL
2292 22 03 50            LD    (05003H),HL
2295             L235:
2295 2A 01 50            LD    HL,(05001H)
2298 2B                  DEC   HL
2299 22 01 50            LD    (05001H),HL
229C             L236:
229C 2A 01 50            LD    HL,(05001H)
229F             L237:
229F 11 E8 03            LD    DE,1000
22A2 19                  ADD   HL,DE
22A3             L238:
22A3 11 06 04            LD    DE,1030
22A6 B7                  OR    A
22A7 ED 52               SBC   HL,DE
22A9             L239:
22A9 D2 88 22            JP    NC,L232
22AC CA 88 22            JP    Z,L232
22AF             L240:
22AF                     ;;testDo.j(61)   
22AF             L241:
22AF                     ;;testDo.j(62)     /************************/
22AF             L242:
22AF                     ;;testDo.j(63)     // constant - var
22AF             L243:
22AF                     ;;testDo.j(64)     // byte - byte
22AF             L244:
22AF                     ;;testDo.j(65)     b=37;
22AF             L245:
22AF 3E 25               LD    A,37
22B1             L246:
22B1 32 00 50            LD    (05000H),A
22B4             L247:
22B4                     ;;testDo.j(66)     do { println (b); b++; } while (38 >= b);
22B4             L248:
22B4 3A 00 50            LD    A,(05000H)
22B7             L249:
22B7 CD D6 28            CALL  writeLineA
22BA             L250:
22BA 21 00 50            LD    HL,05000H
22BD 34                  INC   (HL)
22BE             L251:
22BE 3A 00 50            LD    A,(05000H)
22C1             L252:
22C1 D6 26               SUB   A,38
22C3             L253:
22C3 DA B4 22            JP    C,L248
22C6 CA B4 22            JP    Z,L248
22C9             L254:
22C9                     ;;testDo.j(67)     // byte - integer
22C9             L255:
22C9                     ;;testDo.j(68)     i=39;
22C9             L256:
22C9 3E 27               LD    A,39
22CB             L257:
22CB 6F                  LD    L,A
22CC 26 00               LD    H,0
22CE 22 01 50            LD    (05001H),HL
22D1             L258:
22D1                     ;;testDo.j(69)     do { println (i); i++; } while (40 >= i);
22D1             L259:
22D1 2A 01 50            LD    HL,(05001H)
22D4             L260:
22D4 CD AE 28            CALL  writeLineHL
22D7             L261:
22D7 2A 01 50            LD    HL,(05001H)
22DA 23                  INC   HL
22DB 22 01 50            LD    (05001H),HL
22DE             L262:
22DE 2A 01 50            LD    HL,(05001H)
22E1             L263:
22E1 3E 28               LD    A,40
22E3             L264:
22E3 5F                  LD    E,A
22E4 16 00               LD    D,0
22E6 EB                  EX    DE,HL
22E7 B7                  OR    A
22E8 ED 52               SBC   HL,DE
22EA             L265:
22EA D2 D1 22            JP    NC,L259
22ED CA D1 22            JP    Z,L259
22F0             L266:
22F0                     ;;testDo.j(70)     // integer - byte
22F0             L267:
22F0                     ;;testDo.j(71)     // not relevant
22F0             L268:
22F0                     ;;testDo.j(72)     // integer - integer
22F0             L269:
22F0                     ;;testDo.j(73)     i=1038;
22F0             L270:
22F0 21 0E 04            LD    HL,1038
22F3             L271:
22F3 22 01 50            LD    (05001H),HL
22F6             L272:
22F6                     ;;testDo.j(74)     b=41;
22F6             L273:
22F6 3E 29               LD    A,41
22F8             L274:
22F8 32 00 50            LD    (05000H),A
22FB             L275:
22FB                     ;;testDo.j(75)     do { println (b); b++; i--; } while (1037 <= i);
22FB             L276:
22FB 3A 00 50            LD    A,(05000H)
22FE             L277:
22FE CD D6 28            CALL  writeLineA
2301             L278:
2301 21 00 50            LD    HL,05000H
2304 34                  INC   (HL)
2305             L279:
2305 2A 01 50            LD    HL,(05001H)
2308 2B                  DEC   HL
2309 22 01 50            LD    (05001H),HL
230C             L280:
230C 2A 01 50            LD    HL,(05001H)
230F             L281:
230F 11 0D 04            LD    DE,1037
2312 B7                  OR    A
2313 ED 52               SBC   HL,DE
2315             L282:
2315 D2 FB 22            JP    NC,L276
2318 CA FB 22            JP    Z,L276
231B             L283:
231B                     ;;testDo.j(76)   
231B             L284:
231B                     ;;testDo.j(77)     /************************/
231B             L285:
231B                     ;;testDo.j(78)     // constant - stack8
231B             L286:
231B                     ;;testDo.j(79)     // byte - byte
231B             L287:
231B                     ;;testDo.j(80)     //TODO
231B             L288:
231B                     ;;testDo.j(81)     println(43);
231B             L289:
231B 3E 2B               LD    A,43
231D             L290:
231D CD D6 28            CALL  writeLineA
2320             L291:
2320                     ;;testDo.j(82)     // constant - stack8
2320             L292:
2320                     ;;testDo.j(83)     // byte - integer
2320             L293:
2320                     ;;testDo.j(84)     //TODO
2320             L294:
2320                     ;;testDo.j(85)     println(44);
2320             L295:
2320 3E 2C               LD    A,44
2322             L296:
2322 CD D6 28            CALL  writeLineA
2325             L297:
2325                     ;;testDo.j(86)     // constant - stack8
2325             L298:
2325                     ;;testDo.j(87)     // integer - byte
2325             L299:
2325                     ;;testDo.j(88)     //TODO
2325             L300:
2325                     ;;testDo.j(89)     println(45);
2325             L301:
2325 3E 2D               LD    A,45
2327             L302:
2327 CD D6 28            CALL  writeLineA
232A             L303:
232A                     ;;testDo.j(90)     // constant - stack88
232A             L304:
232A                     ;;testDo.j(91)     // integer - integer
232A             L305:
232A                     ;;testDo.j(92)     //TODO
232A             L306:
232A                     ;;testDo.j(93)     println(46);
232A             L307:
232A 3E 2E               LD    A,46
232C             L308:
232C CD D6 28            CALL  writeLineA
232F             L309:
232F                     ;;testDo.j(94)   
232F             L310:
232F                     ;;testDo.j(95)     /************************/
232F             L311:
232F                     ;;testDo.j(96)     // constant - stack16
232F             L312:
232F                     ;;testDo.j(97)     // byte - byte
232F             L313:
232F                     ;;testDo.j(98)     //TODO
232F             L314:
232F                     ;;testDo.j(99)     println(47);
232F             L315:
232F 3E 2F               LD    A,47
2331             L316:
2331 CD D6 28            CALL  writeLineA
2334             L317:
2334                     ;;testDo.j(100)     // constant - stack16
2334             L318:
2334                     ;;testDo.j(101)     // byte - integer
2334             L319:
2334                     ;;testDo.j(102)     //TODO
2334             L320:
2334                     ;;testDo.j(103)     println(48);
2334             L321:
2334 3E 30               LD    A,48
2336             L322:
2336 CD D6 28            CALL  writeLineA
2339             L323:
2339                     ;;testDo.j(104)     // constant - stack16
2339             L324:
2339                     ;;testDo.j(105)     // integer - byte
2339             L325:
2339                     ;;testDo.j(106)     //TODO
2339             L326:
2339                     ;;testDo.j(107)     println(49);
2339             L327:
2339 3E 31               LD    A,49
233B             L328:
233B CD D6 28            CALL  writeLineA
233E             L329:
233E                     ;;testDo.j(108)     // constant - stack16
233E             L330:
233E                     ;;testDo.j(109)     // integer - integer
233E             L331:
233E                     ;;testDo.j(110)     //TODO
233E             L332:
233E                     ;;testDo.j(111)     println(50);
233E             L333:
233E 3E 32               LD    A,50
2340             L334:
2340 CD D6 28            CALL  writeLineA
2343             L335:
2343                     ;;testDo.j(112)   
2343             L336:
2343                     ;;testDo.j(113)     /************************/
2343             L337:
2343                     ;;testDo.j(114)     // acc - constant
2343             L338:
2343                     ;;testDo.j(115)     // byte - byte
2343             L339:
2343                     ;;testDo.j(116)     b=51;
2343             L340:
2343 3E 33               LD    A,51
2345             L341:
2345 32 00 50            LD    (05000H),A
2348             L342:
2348                     ;;testDo.j(117)     do { println (b); b++; } while (b+0 <= 52);
2348             L343:
2348 3A 00 50            LD    A,(05000H)
234B             L344:
234B CD D6 28            CALL  writeLineA
234E             L345:
234E 21 00 50            LD    HL,05000H
2351 34                  INC   (HL)
2352             L346:
2352 3A 00 50            LD    A,(05000H)
2355             L347:
2355 C6 00               ADD   A,0
2357             L348:
2357 D6 34               SUB   A,52
2359             L349:
2359 DA 48 23            JP    C,L343
235C CA 48 23            JP    Z,L343
235F             L350:
235F                     ;;testDo.j(118)     // byte - integer
235F             L351:
235F                     ;;testDo.j(119)     //not relevant
235F             L352:
235F                     ;;testDo.j(120)     // integer - byte
235F             L353:
235F                     ;;testDo.j(121)     i=53;
235F             L354:
235F 3E 35               LD    A,53
2361             L355:
2361 6F                  LD    L,A
2362 26 00               LD    H,0
2364 22 01 50            LD    (05001H),HL
2367             L356:
2367                     ;;testDo.j(122)     do { println (i); i++; } while (i+0 <= 54);
2367             L357:
2367 2A 01 50            LD    HL,(05001H)
236A             L358:
236A CD AE 28            CALL  writeLineHL
236D             L359:
236D 2A 01 50            LD    HL,(05001H)
2370 23                  INC   HL
2371 22 01 50            LD    (05001H),HL
2374             L360:
2374 2A 01 50            LD    HL,(05001H)
2377             L361:
2377 11 00 00            LD    DE,0
237A 19                  ADD   HL,DE
237B             L362:
237B 3E 36               LD    A,54
237D             L363:
237D 5F                  LD    E,A
237E 16 00               LD    D,0
2380 B7                  OR    A
2381 ED 52               SBC   HL,DE
2383             L364:
2383 DA 67 23            JP    C,L357
2386 CA 67 23            JP    Z,L357
2389             L365:
2389                     ;;testDo.j(123)   
2389             L366:
2389                     ;;testDo.j(124)     b=55;
2389             L367:
2389 3E 37               LD    A,55
238B             L368:
238B 32 00 50            LD    (05000H),A
238E             L369:
238E                     ;;testDo.j(125)     i=1055;
238E             L370:
238E 21 1F 04            LD    HL,1055
2391             L371:
2391 22 01 50            LD    (05001H),HL
2394             L372:
2394                     ;;testDo.j(126)     // integer - integer
2394             L373:
2394                     ;;testDo.j(127)     do { println (b); b++; i++; } while (i+0 <= 1056);
2394             L374:
2394 3A 00 50            LD    A,(05000H)
2397             L375:
2397 CD D6 28            CALL  writeLineA
239A             L376:
239A 21 00 50            LD    HL,05000H
239D 34                  INC   (HL)
239E             L377:
239E 2A 01 50            LD    HL,(05001H)
23A1 23                  INC   HL
23A2 22 01 50            LD    (05001H),HL
23A5             L378:
23A5 2A 01 50            LD    HL,(05001H)
23A8             L379:
23A8 11 00 00            LD    DE,0
23AB 19                  ADD   HL,DE
23AC             L380:
23AC 11 20 04            LD    DE,1056
23AF B7                  OR    A
23B0 ED 52               SBC   HL,DE
23B2             L381:
23B2 DA 94 23            JP    C,L374
23B5 CA 94 23            JP    Z,L374
23B8             L382:
23B8                     ;;testDo.j(128)   
23B8             L383:
23B8                     ;;testDo.j(129)     /************************/
23B8             L384:
23B8                     ;;testDo.j(130)     // acc - acc
23B8             L385:
23B8                     ;;testDo.j(131)     // byte - byte
23B8             L386:
23B8                     ;;testDo.j(132)     b=57;
23B8             L387:
23B8 3E 39               LD    A,57
23BA             L388:
23BA 32 00 50            LD    (05000H),A
23BD             L389:
23BD                     ;;testDo.j(133)     do { println (b); b++; } while (b+0 <= 58+0);
23BD             L390:
23BD 3A 00 50            LD    A,(05000H)
23C0             L391:
23C0 CD D6 28            CALL  writeLineA
23C3             L392:
23C3 21 00 50            LD    HL,05000H
23C6 34                  INC   (HL)
23C7             L393:
23C7 3A 00 50            LD    A,(05000H)
23CA             L394:
23CA C6 00               ADD   A,0
23CC             L395:
23CC F5                  PUSH AF
23CD             L396:
23CD 3E 3A               LD    A,58
23CF             L397:
23CF C6 00               ADD   A,0
23D1             L398:
23D1 C1                  POP   BC
23D2 90                  SUB   A,B
23D3             L399:
23D3 D2 BD 23            JP    NC,L390
23D6 CA BD 23            JP    Z,L390
23D9             L400:
23D9                     ;;testDo.j(134)     // byte - integer
23D9             L401:
23D9                     ;;testDo.j(135)     i=61;
23D9             L402:
23D9 3E 3D               LD    A,61
23DB             L403:
23DB 6F                  LD    L,A
23DC 26 00               LD    H,0
23DE 22 01 50            LD    (05001H),HL
23E1             L404:
23E1                     ;;testDo.j(136)     do { println (b); b++; i--; } while (60+0 <= i+0);
23E1             L405:
23E1 3A 00 50            LD    A,(05000H)
23E4             L406:
23E4 CD D6 28            CALL  writeLineA
23E7             L407:
23E7 21 00 50            LD    HL,05000H
23EA 34                  INC   (HL)
23EB             L408:
23EB 2A 01 50            LD    HL,(05001H)
23EE 2B                  DEC   HL
23EF 22 01 50            LD    (05001H),HL
23F2             L409:
23F2 3E 3C               LD    A,60
23F4             L410:
23F4 C6 00               ADD   A,0
23F6             L411:
23F6 F5                  PUSH AF
23F7             L412:
23F7 2A 01 50            LD    HL,(05001H)
23FA             L413:
23FA 11 00 00            LD    DE,0
23FD 19                  ADD   HL,DE
23FE             L414:
23FE F1                  POP  AF
23FF             L415:
23FF 5F                  LD    E,A
2400 16 00               LD    D,0
2402 EB                  EX    DE,HL
2403 B7                  OR    A
2404 ED 52               SBC   HL,DE
2406             L416:
2406 DA E1 23            JP    C,L405
2409 CA E1 23            JP    Z,L405
240C             L417:
240C                     ;;testDo.j(137)     // integer - byte
240C             L418:
240C                     ;;testDo.j(138)     i=61;
240C             L419:
240C 3E 3D               LD    A,61
240E             L420:
240E 6F                  LD    L,A
240F 26 00               LD    H,0
2411 22 01 50            LD    (05001H),HL
2414             L421:
2414                     ;;testDo.j(139)     b=62;
2414             L422:
2414 3E 3E               LD    A,62
2416             L423:
2416 32 00 50            LD    (05000H),A
2419             L424:
2419                     ;;testDo.j(140)     do { println (i); i++; } while (i+0 <= b+0);
2419             L425:
2419 2A 01 50            LD    HL,(05001H)
241C             L426:
241C CD AE 28            CALL  writeLineHL
241F             L427:
241F 2A 01 50            LD    HL,(05001H)
2422 23                  INC   HL
2423 22 01 50            LD    (05001H),HL
2426             L428:
2426 2A 01 50            LD    HL,(05001H)
2429             L429:
2429 11 00 00            LD    DE,0
242C 19                  ADD   HL,DE
242D             L430:
242D E5                  PUSH HL
242E             L431:
242E 3A 00 50            LD    A,(05000H)
2431             L432:
2431 C6 00               ADD   A,0
2433             L433:
2433 E1                  POP  HL
2434             L434:
2434 5F                  LD    E,A
2435 16 00               LD    D,0
2437 B7                  OR    A
2438 ED 52               SBC   HL,DE
243A             L435:
243A DA 19 24            JP    C,L425
243D CA 19 24            JP    Z,L425
2440             L436:
2440                     ;;testDo.j(141)     // integer - integer
2440             L437:
2440                     ;;testDo.j(142)     b=63;
2440             L438:
2440 3E 3F               LD    A,63
2442             L439:
2442 32 00 50            LD    (05000H),A
2445             L440:
2445                     ;;testDo.j(143)     i=1063;
2445             L441:
2445 21 27 04            LD    HL,1063
2448             L442:
2448 22 01 50            LD    (05001H),HL
244B             L443:
244B                     ;;testDo.j(144)     do { println (b); b++; i--; } while (1000+62 <= i+0);
244B             L444:
244B 3A 00 50            LD    A,(05000H)
244E             L445:
244E CD D6 28            CALL  writeLineA
2451             L446:
2451 21 00 50            LD    HL,05000H
2454 34                  INC   (HL)
2455             L447:
2455 2A 01 50            LD    HL,(05001H)
2458 2B                  DEC   HL
2459 22 01 50            LD    (05001H),HL
245C             L448:
245C 21 E8 03            LD    HL,1000
245F             L449:
245F 11 3E 00            LD    DE,62
2462 19                  ADD   HL,DE
2463             L450:
2463 E5                  PUSH HL
2464             L451:
2464 2A 01 50            LD    HL,(05001H)
2467             L452:
2467 11 00 00            LD    DE,0
246A 19                  ADD   HL,DE
246B             L453:
246B D1                  POP   DE
246C B7                  OR    A
246D ED 52               SBC   HL,DE
246F             L454:
246F D2 4B 24            JP    NC,L444
2472 CA 4B 24            JP    Z,L444
2475             L455:
2475                     ;;testDo.j(145)   
2475             L456:
2475                     ;;testDo.j(146)     /************************/
2475             L457:
2475                     ;;testDo.j(147)     // acc - var
2475             L458:
2475                     ;;testDo.j(148)     // byte - byte
2475             L459:
2475                     ;;testDo.j(149)     b=65;
2475             L460:
2475 3E 41               LD    A,65
2477             L461:
2477 32 00 50            LD    (05000H),A
247A             L462:
247A                     ;;testDo.j(150)     i=65;
247A             L463:
247A 3E 41               LD    A,65
247C             L464:
247C 6F                  LD    L,A
247D 26 00               LD    H,0
247F 22 01 50            LD    (05001H),HL
2482             L465:
2482                     ;;testDo.j(151)     do { println (i); i++; b--; } while (64+0 <= b);
2482             L466:
2482 2A 01 50            LD    HL,(05001H)
2485             L467:
2485 CD AE 28            CALL  writeLineHL
2488             L468:
2488 2A 01 50            LD    HL,(05001H)
248B 23                  INC   HL
248C 22 01 50            LD    (05001H),HL
248F             L469:
248F 21 00 50            LD    HL,05000H
2492 35                  DEC   (HL)
2493             L470:
2493 3E 40               LD    A,64
2495             L471:
2495 C6 00               ADD   A,0
2497             L472:
2497 47                  LD    B,A
2498 3A 00 50            LD    A,(05000H)
249B 90                  SUB   A,B
249C             L473:
249C DA 82 24            JP    C,L466
249F CA 82 24            JP    Z,L466
24A2             L474:
24A2                     ;;testDo.j(152)     // byte - integer
24A2             L475:
24A2                     ;;testDo.j(153)     b=67;
24A2             L476:
24A2 3E 43               LD    A,67
24A4             L477:
24A4 32 00 50            LD    (05000H),A
24A7             L478:
24A7                     ;;testDo.j(154)     i=67;
24A7             L479:
24A7 3E 43               LD    A,67
24A9             L480:
24A9 6F                  LD    L,A
24AA 26 00               LD    H,0
24AC 22 01 50            LD    (05001H),HL
24AF             L481:
24AF                     ;;testDo.j(155)     do { println (b); b++; i--; } while (66+0 <= i);
24AF             L482:
24AF 3A 00 50            LD    A,(05000H)
24B2             L483:
24B2 CD D6 28            CALL  writeLineA
24B5             L484:
24B5 21 00 50            LD    HL,05000H
24B8 34                  INC   (HL)
24B9             L485:
24B9 2A 01 50            LD    HL,(05001H)
24BC 2B                  DEC   HL
24BD 22 01 50            LD    (05001H),HL
24C0             L486:
24C0 3E 42               LD    A,66
24C2             L487:
24C2 C6 00               ADD   A,0
24C4             L488:
24C4 2A 01 50            LD    HL,(05001H)
24C7             L489:
24C7 5F                  LD    E,A
24C8 16 00               LD    D,0
24CA EB                  EX    DE,HL
24CB B7                  OR    A
24CC ED 52               SBC   HL,DE
24CE             L490:
24CE DA AF 24            JP    C,L482
24D1 CA AF 24            JP    Z,L482
24D4             L491:
24D4                     ;;testDo.j(156)     // integer - byte
24D4             L492:
24D4                     ;;testDo.j(157)     i=69;
24D4             L493:
24D4 3E 45               LD    A,69
24D6             L494:
24D6 6F                  LD    L,A
24D7 26 00               LD    H,0
24D9 22 01 50            LD    (05001H),HL
24DC             L495:
24DC                     ;;testDo.j(158)     b=69;
24DC             L496:
24DC 3E 45               LD    A,69
24DE             L497:
24DE 32 00 50            LD    (05000H),A
24E1             L498:
24E1                     ;;testDo.j(159)     do { println (i); i++; b--; } while (1000+68 <= b);
24E1             L499:
24E1 2A 01 50            LD    HL,(05001H)
24E4             L500:
24E4 CD AE 28            CALL  writeLineHL
24E7             L501:
24E7 2A 01 50            LD    HL,(05001H)
24EA 23                  INC   HL
24EB 22 01 50            LD    (05001H),HL
24EE             L502:
24EE 21 00 50            LD    HL,05000H
24F1 35                  DEC   (HL)
24F2             L503:
24F2 21 E8 03            LD    HL,1000
24F5             L504:
24F5 11 44 00            LD    DE,68
24F8 19                  ADD   HL,DE
24F9             L505:
24F9 3A 00 50            LD    A,(05000H)
24FC             L506:
24FC 5F                  LD    E,A
24FD 16 00               LD    D,0
24FF B7                  OR    A
2500 ED 52               SBC   HL,DE
2502             L507:
2502 DA E1 24            JP    C,L499
2505 CA E1 24            JP    Z,L499
2508             L508:
2508                     ;;testDo.j(160)     // integer - integer
2508             L509:
2508                     ;;testDo.j(161)     i=1071;
2508             L510:
2508 21 2F 04            LD    HL,1071
250B             L511:
250B 22 01 50            LD    (05001H),HL
250E             L512:
250E                     ;;testDo.j(162)     b=70;
250E             L513:
250E 3E 46               LD    A,70
2510             L514:
2510 32 00 50            LD    (05000H),A
2513             L515:
2513                     ;;testDo.j(163)     do { println (b); b++; i--; } while (1000+70 <= i);
2513             L516:
2513 3A 00 50            LD    A,(05000H)
2516             L517:
2516 CD D6 28            CALL  writeLineA
2519             L518:
2519 21 00 50            LD    HL,05000H
251C 34                  INC   (HL)
251D             L519:
251D 2A 01 50            LD    HL,(05001H)
2520 2B                  DEC   HL
2521 22 01 50            LD    (05001H),HL
2524             L520:
2524 21 E8 03            LD    HL,1000
2527             L521:
2527 11 46 00            LD    DE,70
252A 19                  ADD   HL,DE
252B             L522:
252B ED 5B 01 50         LD    DE,(05001H)
252F B7                  OR    A
2530 ED 52               SBC   HL,DE
2532             L523:
2532 DA 13 25            JP    C,L516
2535 CA 13 25            JP    Z,L516
2538             L524:
2538                     ;;testDo.j(164)   
2538             L525:
2538                     ;;testDo.j(165)     /************************/
2538             L526:
2538                     ;;testDo.j(166)     // acc - stack16
2538             L527:
2538                     ;;testDo.j(167)     // byte - byte
2538             L528:
2538                     ;;testDo.j(168)     //TODO
2538             L529:
2538                     ;;testDo.j(169)     println(72);
2538             L530:
2538 3E 48               LD    A,72
253A             L531:
253A CD D6 28            CALL  writeLineA
253D             L532:
253D                     ;;testDo.j(170)     println(73);
253D             L533:
253D 3E 49               LD    A,73
253F             L534:
253F CD D6 28            CALL  writeLineA
2542             L535:
2542                     ;;testDo.j(171)     // byte - integer
2542             L536:
2542                     ;;testDo.j(172)     //TODO
2542             L537:
2542                     ;;testDo.j(173)     println(74);
2542             L538:
2542 3E 4A               LD    A,74
2544             L539:
2544 CD D6 28            CALL  writeLineA
2547             L540:
2547                     ;;testDo.j(174)     println(75);
2547             L541:
2547 3E 4B               LD    A,75
2549             L542:
2549 CD D6 28            CALL  writeLineA
254C             L543:
254C                     ;;testDo.j(175)     // integer - byte
254C             L544:
254C                     ;;testDo.j(176)     //TODO
254C             L545:
254C                     ;;testDo.j(177)     println(76);
254C             L546:
254C 3E 4C               LD    A,76
254E             L547:
254E CD D6 28            CALL  writeLineA
2551             L548:
2551                     ;;testDo.j(178)     println(77);
2551             L549:
2551 3E 4D               LD    A,77
2553             L550:
2553 CD D6 28            CALL  writeLineA
2556             L551:
2556                     ;;testDo.j(179)     // integer - integer
2556             L552:
2556                     ;;testDo.j(180)     //TODO
2556             L553:
2556                     ;;testDo.j(181)     println(78);
2556             L554:
2556 3E 4E               LD    A,78
2558             L555:
2558 CD D6 28            CALL  writeLineA
255B             L556:
255B                     ;;testDo.j(182)     println(79);
255B             L557:
255B 3E 4F               LD    A,79
255D             L558:
255D CD D6 28            CALL  writeLineA
2560             L559:
2560                     ;;testDo.j(183)   
2560             L560:
2560                     ;;testDo.j(184)     /************************/
2560             L561:
2560                     ;;testDo.j(185)     // acc - stack8
2560             L562:
2560                     ;;testDo.j(186)     // byte - byte
2560             L563:
2560                     ;;testDo.j(187)     //TODO
2560             L564:
2560                     ;;testDo.j(188)     println(80);
2560             L565:
2560 3E 50               LD    A,80
2562             L566:
2562 CD D6 28            CALL  writeLineA
2565             L567:
2565                     ;;testDo.j(189)     println(81);
2565             L568:
2565 3E 51               LD    A,81
2567             L569:
2567 CD D6 28            CALL  writeLineA
256A             L570:
256A                     ;;testDo.j(190)     // byte - integer
256A             L571:
256A                     ;;testDo.j(191)     //TODO
256A             L572:
256A                     ;;testDo.j(192)     println(82);
256A             L573:
256A 3E 52               LD    A,82
256C             L574:
256C CD D6 28            CALL  writeLineA
256F             L575:
256F                     ;;testDo.j(193)     println(83);
256F             L576:
256F 3E 53               LD    A,83
2571             L577:
2571 CD D6 28            CALL  writeLineA
2574             L578:
2574                     ;;testDo.j(194)     // integer - byte
2574             L579:
2574                     ;;testDo.j(195)     //TODO
2574             L580:
2574                     ;;testDo.j(196)     println(84);
2574             L581:
2574 3E 54               LD    A,84
2576             L582:
2576 CD D6 28            CALL  writeLineA
2579             L583:
2579                     ;;testDo.j(197)     println(85);
2579             L584:
2579 3E 55               LD    A,85
257B             L585:
257B CD D6 28            CALL  writeLineA
257E             L586:
257E                     ;;testDo.j(198)     // integer - integer
257E             L587:
257E                     ;;testDo.j(199)     //TODO
257E             L588:
257E                     ;;testDo.j(200)     println(86);
257E             L589:
257E 3E 56               LD    A,86
2580             L590:
2580 CD D6 28            CALL  writeLineA
2583             L591:
2583                     ;;testDo.j(201)     println(87);
2583             L592:
2583 3E 57               LD    A,87
2585             L593:
2585 CD D6 28            CALL  writeLineA
2588             L594:
2588                     ;;testDo.j(202)   
2588             L595:
2588                     ;;testDo.j(203)     /************************/
2588             L596:
2588                     ;;testDo.j(204)     // var - constant
2588             L597:
2588                     ;;testDo.j(205)     // byte - byte
2588             L598:
2588                     ;;testDo.j(206)     b=88;
2588             L599:
2588 3E 58               LD    A,88
258A             L600:
258A 32 00 50            LD    (05000H),A
258D             L601:
258D                     ;;testDo.j(207)     do { println (b); b++; } while (b <= 89);
258D             L602:
258D 3A 00 50            LD    A,(05000H)
2590             L603:
2590 CD D6 28            CALL  writeLineA
2593             L604:
2593 21 00 50            LD    HL,05000H
2596 34                  INC   (HL)
2597             L605:
2597 3A 00 50            LD    A,(05000H)
259A             L606:
259A D6 59               SUB   A,89
259C             L607:
259C DA 8D 25            JP    C,L602
259F CA 8D 25            JP    Z,L602
25A2             L608:
25A2                     ;;testDo.j(208)     // byte - integer
25A2             L609:
25A2                     ;;testDo.j(209)     //not relevant
25A2             L610:
25A2                     ;;testDo.j(210)     println(90);
25A2             L611:
25A2 3E 5A               LD    A,90
25A4             L612:
25A4 CD D6 28            CALL  writeLineA
25A7             L613:
25A7                     ;;testDo.j(211)     println(91);
25A7             L614:
25A7 3E 5B               LD    A,91
25A9             L615:
25A9 CD D6 28            CALL  writeLineA
25AC             L616:
25AC                     ;;testDo.j(212)     // integer - byte
25AC             L617:
25AC                     ;;testDo.j(213)     i=92;
25AC             L618:
25AC 3E 5C               LD    A,92
25AE             L619:
25AE 6F                  LD    L,A
25AF 26 00               LD    H,0
25B1 22 01 50            LD    (05001H),HL
25B4             L620:
25B4                     ;;testDo.j(214)     do { println (i); i++; } while (i <= 93);
25B4             L621:
25B4 2A 01 50            LD    HL,(05001H)
25B7             L622:
25B7 CD AE 28            CALL  writeLineHL
25BA             L623:
25BA 2A 01 50            LD    HL,(05001H)
25BD 23                  INC   HL
25BE 22 01 50            LD    (05001H),HL
25C1             L624:
25C1 2A 01 50            LD    HL,(05001H)
25C4             L625:
25C4 3E 5D               LD    A,93
25C6             L626:
25C6 5F                  LD    E,A
25C7 16 00               LD    D,0
25C9 B7                  OR    A
25CA ED 52               SBC   HL,DE
25CC             L627:
25CC DA B4 25            JP    C,L621
25CF CA B4 25            JP    Z,L621
25D2             L628:
25D2                     ;;testDo.j(215)     // integer - integer
25D2             L629:
25D2                     ;;testDo.j(216)     i=1094;
25D2             L630:
25D2 21 46 04            LD    HL,1094
25D5             L631:
25D5 22 01 50            LD    (05001H),HL
25D8             L632:
25D8                     ;;testDo.j(217)     b=94;
25D8             L633:
25D8 3E 5E               LD    A,94
25DA             L634:
25DA 32 00 50            LD    (05000H),A
25DD             L635:
25DD                     ;;testDo.j(218)     do { println (b); b++; i++; } while (i <= 1095  );
25DD             L636:
25DD 3A 00 50            LD    A,(05000H)
25E0             L637:
25E0 CD D6 28            CALL  writeLineA
25E3             L638:
25E3 21 00 50            LD    HL,05000H
25E6 34                  INC   (HL)
25E7             L639:
25E7 2A 01 50            LD    HL,(05001H)
25EA 23                  INC   HL
25EB 22 01 50            LD    (05001H),HL
25EE             L640:
25EE 2A 01 50            LD    HL,(05001H)
25F1             L641:
25F1 11 47 04            LD    DE,1095
25F4 B7                  OR    A
25F5 ED 52               SBC   HL,DE
25F7             L642:
25F7 DA DD 25            JP    C,L636
25FA CA DD 25            JP    Z,L636
25FD             L643:
25FD                     ;;testDo.j(219)   
25FD             L644:
25FD                     ;;testDo.j(220)     /************************/
25FD             L645:
25FD                     ;;testDo.j(221)     // var - acc
25FD             L646:
25FD                     ;;testDo.j(222)     // byte - byte
25FD             L647:
25FD                     ;;testDo.j(223)     do { println (b); b++; } while (b <= 97+0);
25FD             L648:
25FD 3A 00 50            LD    A,(05000H)
2600             L649:
2600 CD D6 28            CALL  writeLineA
2603             L650:
2603 21 00 50            LD    HL,05000H
2606 34                  INC   (HL)
2607             L651:
2607 3E 61               LD    A,97
2609             L652:
2609 C6 00               ADD   A,0
260B             L653:
260B 47                  LD    B,A
260C 3A 00 50            LD    A,(05000H)
260F 90                  SUB   A,B
2610             L654:
2610 D2 FD 25            JP    NC,L648
2613 CA FD 25            JP    Z,L648
2616             L655:
2616                     ;;testDo.j(224)     // byte - integer
2616             L656:
2616                     ;;testDo.j(225)     //not relevant
2616             L657:
2616                     ;;testDo.j(226)     i=99;
2616             L658:
2616 3E 63               LD    A,99
2618             L659:
2618 6F                  LD    L,A
2619 26 00               LD    H,0
261B 22 01 50            LD    (05001H),HL
261E             L660:
261E                     ;;testDo.j(227)     do { println (b); b++; } while (b <= i+0);
261E             L661:
261E 3A 00 50            LD    A,(05000H)
2621             L662:
2621 CD D6 28            CALL  writeLineA
2624             L663:
2624 21 00 50            LD    HL,05000H
2627 34                  INC   (HL)
2628             L664:
2628 2A 01 50            LD    HL,(05001H)
262B             L665:
262B 11 00 00            LD    DE,0
262E 19                  ADD   HL,DE
262F             L666:
262F 3A 00 50            LD    A,(05000H)
2632             L667:
2632 5F                  LD    E,A
2633 16 00               LD    D,0
2635 EB                  EX    DE,HL
2636 B7                  OR    A
2637 ED 52               SBC   HL,DE
2639             L668:
2639 DA 1E 26            JP    C,L661
263C CA 1E 26            JP    Z,L661
263F             L669:
263F                     ;;testDo.j(228)     // integer - byte
263F             L670:
263F                     ;;testDo.j(229)     i=100;
263F             L671:
263F 3E 64               LD    A,100
2641             L672:
2641 6F                  LD    L,A
2642 26 00               LD    H,0
2644 22 01 50            LD    (05001H),HL
2647             L673:
2647                     ;;testDo.j(230)     do { println (i); i++; } while (i <= 101+0);
2647             L674:
2647 2A 01 50            LD    HL,(05001H)
264A             L675:
264A CD AE 28            CALL  writeLineHL
264D             L676:
264D 2A 01 50            LD    HL,(05001H)
2650 23                  INC   HL
2651 22 01 50            LD    (05001H),HL
2654             L677:
2654 3E 65               LD    A,101
2656             L678:
2656 C6 00               ADD   A,0
2658             L679:
2658 2A 01 50            LD    HL,(05001H)
265B             L680:
265B 5F                  LD    E,A
265C 16 00               LD    D,0
265E B7                  OR    A
265F ED 52               SBC   HL,DE
2661             L681:
2661 DA 47 26            JP    C,L674
2664 CA 47 26            JP    Z,L674
2667             L682:
2667                     ;;testDo.j(231)     // integer - integer
2667             L683:
2667                     ;;testDo.j(232)     i=1102;
2667             L684:
2667 21 4E 04            LD    HL,1102
266A             L685:
266A 22 01 50            LD    (05001H),HL
266D             L686:
266D                     ;;testDo.j(233)     b=102;
266D             L687:
266D 3E 66               LD    A,102
266F             L688:
266F 32 00 50            LD    (05000H),A
2672             L689:
2672                     ;;testDo.j(234)     do { println (b); b++; i++; } while (i <= 1103+0);
2672             L690:
2672 3A 00 50            LD    A,(05000H)
2675             L691:
2675 CD D6 28            CALL  writeLineA
2678             L692:
2678 21 00 50            LD    HL,05000H
267B 34                  INC   (HL)
267C             L693:
267C 2A 01 50            LD    HL,(05001H)
267F 23                  INC   HL
2680 22 01 50            LD    (05001H),HL
2683             L694:
2683 21 4F 04            LD    HL,1103
2686             L695:
2686 11 00 00            LD    DE,0
2689 19                  ADD   HL,DE
268A             L696:
268A ED 5B 01 50         LD    DE,(05001H)
268E B7                  OR    A
268F ED 52               SBC   HL,DE
2691             L697:
2691 D2 72 26            JP    NC,L690
2694 CA 72 26            JP    Z,L690
2697             L698:
2697                     ;;testDo.j(235)   
2697             L699:
2697                     ;;testDo.j(236)     /************************/
2697             L700:
2697                     ;;testDo.j(237)     // var - var
2697             L701:
2697                     ;;testDo.j(238)     // byte - byte
2697             L702:
2697                     ;;testDo.j(239)     byte b2 = 105;
2697             L703:
2697 3E 69               LD    A,105
2699             L704:
2699 DD 77 FF            LD    (IX - 1),A
269C             L705:
269C                     ;;testDo.j(240)     do { println (b); b++; } while (b <= b2);
269C             L706:
269C 3A 00 50            LD    A,(05000H)
269F             L707:
269F CD D6 28            CALL  writeLineA
26A2             L708:
26A2 21 00 50            LD    HL,05000H
26A5 34                  INC   (HL)
26A6             L709:
26A6 3A 00 50            LD    A,(05000H)
26A9             L710:
26A9 DD 96 FF            SUB   A,(IX - 1)
26AC             L711:
26AC DA 9C 26            JP    C,L706
26AF CA 9C 26            JP    Z,L706
26B2             L712:
26B2                     ;;testDo.j(241)     // byte - integer
26B2             L713:
26B2                     ;;testDo.j(242)     i=107;
26B2             L714:
26B2 3E 6B               LD    A,107
26B4             L715:
26B4 6F                  LD    L,A
26B5 26 00               LD    H,0
26B7 22 01 50            LD    (05001H),HL
26BA             L716:
26BA                     ;;testDo.j(243)     do { println (b); b++; } while (b <= i);
26BA             L717:
26BA 3A 00 50            LD    A,(05000H)
26BD             L718:
26BD CD D6 28            CALL  writeLineA
26C0             L719:
26C0 21 00 50            LD    HL,05000H
26C3 34                  INC   (HL)
26C4             L720:
26C4 3A 00 50            LD    A,(05000H)
26C7             L721:
26C7 2A 01 50            LD    HL,(05001H)
26CA             L722:
26CA 5F                  LD    E,A
26CB 16 00               LD    D,0
26CD EB                  EX    DE,HL
26CE B7                  OR    A
26CF ED 52               SBC   HL,DE
26D1             L723:
26D1 DA BA 26            JP    C,L717
26D4 CA BA 26            JP    Z,L717
26D7             L724:
26D7                     ;;testDo.j(244)     // integer - byte
26D7             L725:
26D7                     ;;testDo.j(245)     i=b;
26D7             L726:
26D7 3A 00 50            LD    A,(05000H)
26DA             L727:
26DA 6F                  LD    L,A
26DB 26 00               LD    H,0
26DD 22 01 50            LD    (05001H),HL
26E0             L728:
26E0                     ;;testDo.j(246)     b=109;
26E0             L729:
26E0 3E 6D               LD    A,109
26E2             L730:
26E2 32 00 50            LD    (05000H),A
26E5             L731:
26E5                     ;;testDo.j(247)     do { println (i); i++; } while (i <= b);
26E5             L732:
26E5 2A 01 50            LD    HL,(05001H)
26E8             L733:
26E8 CD AE 28            CALL  writeLineHL
26EB             L734:
26EB 2A 01 50            LD    HL,(05001H)
26EE 23                  INC   HL
26EF 22 01 50            LD    (05001H),HL
26F2             L735:
26F2 2A 01 50            LD    HL,(05001H)
26F5             L736:
26F5 3A 00 50            LD    A,(05000H)
26F8             L737:
26F8 5F                  LD    E,A
26F9 16 00               LD    D,0
26FB B7                  OR    A
26FC ED 52               SBC   HL,DE
26FE             L738:
26FE DA E5 26            JP    C,L732
2701 CA E5 26            JP    Z,L732
2704             L739:
2704                     ;;testDo.j(248)     // integer - integer
2704             L740:
2704                     ;;testDo.j(249)     word i2 = 111;
2704             L741:
2704 3E 6F               LD    A,111
2706             L742:
2706 DD 77 FD            LD    (IX - 3),A
2709 AF                  XOR   A
270A DD 77 FE            LD    (IX - 2),A
270D             L743:
270D                     ;;testDo.j(250)     do { println (i); i++; } while (i <= i2);
270D             L744:
270D 2A 01 50            LD    HL,(05001H)
2710             L745:
2710 CD AE 28            CALL  writeLineHL
2713             L746:
2713 2A 01 50            LD    HL,(05001H)
2716 23                  INC   HL
2717 22 01 50            LD    (05001H),HL
271A             L747:
271A 2A 01 50            LD    HL,(05001H)
271D             L748:
271D DD 5E FD            LD    E,(IX - 3)
2720 DD 56 FE            LD    D,(IX - 2)
2723 B7                  OR    A
2724 ED 52               SBC   HL,DE
2726             L749:
2726 DA 0D 27            JP    C,L744
2729 CA 0D 27            JP    Z,L744
272C             L750:
272C                     ;;testDo.j(251)   
272C             L751:
272C                     ;;testDo.j(252)     /************************/
272C             L752:
272C                     ;;testDo.j(253)     // var - stack8
272C             L753:
272C                     ;;testDo.j(254)     // byte - byte
272C             L754:
272C                     ;;testDo.j(255)     // byte - integer
272C             L755:
272C                     ;;testDo.j(256)     // integer - byte
272C             L756:
272C                     ;;testDo.j(257)     // integer - integer
272C             L757:
272C                     ;;testDo.j(258)     //TODO
272C             L758:
272C                     ;;testDo.j(259)   
272C             L759:
272C                     ;;testDo.j(260)     /************************/
272C             L760:
272C                     ;;testDo.j(261)     // var - stack16
272C             L761:
272C                     ;;testDo.j(262)     // byte - byte
272C             L762:
272C                     ;;testDo.j(263)     // byte - integer
272C             L763:
272C                     ;;testDo.j(264)     // integer - byte
272C             L764:
272C                     ;;testDo.j(265)     // integer - integer
272C             L765:
272C                     ;;testDo.j(266)     //TODO
272C             L766:
272C                     ;;testDo.j(267)   
272C             L767:
272C                     ;;testDo.j(268)     /************************/
272C             L768:
272C                     ;;testDo.j(269)     // stack8 - constant
272C             L769:
272C                     ;;testDo.j(270)     // stack8 - acc
272C             L770:
272C                     ;;testDo.j(271)     // stack8 - var
272C             L771:
272C                     ;;testDo.j(272)     // stack8 - stack8
272C             L772:
272C                     ;;testDo.j(273)     // stack8 - stack16
272C             L773:
272C                     ;;testDo.j(274)     //TODO
272C             L774:
272C                     ;;testDo.j(275)   
272C             L775:
272C                     ;;testDo.j(276)     /************************/
272C             L776:
272C                     ;;testDo.j(277)     // stack16 - constant
272C             L777:
272C                     ;;testDo.j(278)     // stack16 - acc
272C             L778:
272C                     ;;testDo.j(279)     // stack16 - var
272C             L779:
272C                     ;;testDo.j(280)     // stack16 - stack8
272C             L780:
272C                     ;;testDo.j(281)     // stack16 - stack16
272C             L781:
272C                     ;;testDo.j(282)     //TODO
272C             L782:
272C                     ;;testDo.j(283)   
272C             L783:
272C                     ;;testDo.j(284)     println("Klaar");
272C             L784:
272C 21 37 27            LD    HL,L791
272F             L785:
272F CD 5B 27            CALL  writeLineStr
2732             L786:
2732                     ;;testDo.j(285)   }
2732             L787:
2732 DD F9               LD    SP,IX
2734             L788:
2734 DD E1               POP   IX
2736             L789:
2736 C9                  return
2737             L790:
2737                     ;;testDo.j(286) }
2737             L791:
2737 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
273D             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
273D             STAT0   equ 004H          ;147 ASCI0 Status register.
273D             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
273D             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
273D             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
273D             TDRE    equ 1             ;STAT0->Tx data register empty bit.
273D             OVERRUN equ 6             ;STAT0->OVERRUN bit.
273D             RDRF    equ 7             ;STAT0->Rx data register full bit.
273D             ;****************
273D             ;getChar
273D             ;Check if an input character from ASCI0 is available.
273D             ;  IN:  none
273D             ;  OUT: F: ZERO flag set if no character is available.
273D             ;          ZERO flag reset if a character is available.
273D             ;       A : character from ASCI0, if available.
273D             ;  USES:AF
273D             ;****************
273D             getChar:
273D ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
2740 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
2742 20 07               JR    NZ,getChar1 ;-yes: reset error flags
2744 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
2746 C8                  RET   Z           ;-no: return without a character
2747 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
274A C9                  RET
274B             getChar1:
274B ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
274E CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
2750 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
2753 AF                  XOR   A,A
2754 C9                  RET               ;return without a character
2755             ;****************
2755             ;putMsg
2755             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
2755             ;  IN:  none.
2755             ;  OUT: none.
2755             ;  USES:none.
2755             ;****************
2755             putMsg:
2755 E3                  EX    (SP),HL     ;save HL and load return address into HL.
2756 CD 62 27            CALL  writeStr
2759 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
275A C9                  RET
275B             ;****************
275B             ;writeLineStr
275B             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
275B             ;  IN:  HL:address of zero terminated string to be printed.
275B             ;  OUT: none.
275B             ;  USES:HL (point to byte after zero terminated string)
275B             ;****************
275B             writeLineStr:
275B CD 62 27            CALL  writeStr
275E CD 7E 27            CALL  putCRLF
2761 C9                  RET
2762             ;****************
2762             ;writeStr
2762             ;Print via ASCI0 a zero terminated string, pointed to by HL.
2762             ;  IN:  HL:address of zero terminated string to be printed.
2762             ;  OUT: none.
2762             ;  USES:HL (point to byte after zero terminated string)
2762             ;****************
2762             writeStr:
2762 F5                  PUSH  AF          ;save registers
2763             putStr1:
2763 7E                  LD    A,(HL)      ;get next character
2764 23                  INC   HL
2765 B7                  OR    A,A         ;is it zer0?
2766 28 05               JR    Z,putStr2   ;yes ->return
2768 CD 71 27            CALL  putChar     ;no->put it to ASCI0
276B 18 F6               JR    putStr1
276D             putStr2:
276D F1                  POP   AF
276E C9                  RET
276F             ;****************
276F             ;putSpace
276F             ;Send a space character to ASCI0
276F             ;  IN:  none.
276F             ;  OUT: none.
276F             ;  USES:AF
276F             ;****************
276F             putSpace:
276F 3E 20               LD    A,' '       ;load space and continue with putChar.
2771             ;****************
2771             ;putChar
2771             ;Send one character to ASCI0.
2771             ;  IN:  A = character
2771             ;  OUT: none.
2771             ;  USES:none.
2771             ;****************
2771             putChar:
2771 F5                  PUSH  AF          ;send the character via ASCI0
2772             putChar1:
2772 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
2775 CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
2777 28 F9               JR    Z,putChar1
2779 F1                  POP   AF          ;restore AF registers
277A ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
277D C9                  RET
277E             ;****************
277E             ;putCRLF
277E             ;Send CR and LF to ASCI0
277E             ;  IN:  none.
277E             ;  OUT: none.
277E             ;  USES:none.
277E             ;****************
277E             putCRLF:
277E F5                  PUSH  AF
277F 3E 0D               LD    A,'\r'       ;print carriage return
2781 CD 71 27            CALL  putChar
2784 3E 0A               LD    A,'\n'       ;print line feed
2786 CD 71 27            CALL  putChar
2789 F1                  POP   AF
278A C9                  RET
278B             ;****************
278B             ;putErase
278B             ;Erase the latest character at ASCI0
278B             ;  IN:  none.
278B             ;  OUT: none.
278B             ;  USES:AF
278B             ;****************
278B             putErase:
278B 3E 08               LD    A,'\b'       ;print backspace
278D CD 71 27            CALL  putChar
2790 CD 6F 27            CALL  putSpace    ;print space (erase character)
2793 3E 08               LD    A,'\b'      ;print backspace
2795 18 DA               JR    putChar
2797             ;****************
2797             ;putBell
2797             ;Send a Bell character to ASCI0
2797             ;  IN:  none.
2797             ;  OUT: none.
2797             ;  USES:AF
2797             ;****************
2797             putBell:
2797 3E 07               LD    A,07        ;ring the bell at ASCI0
2799 18 D6               JR    putChar
279B             ;****************
279B             ;putHexHL
279B             ;Print HL register pair as 4 hex digits
279B             ;  IN:  HL = word to be printed.
279B             ;  OUT: none.
279B             ;  USES:none.
279B             ;****************
279B             putHexHL:
279B F5                  PUSH  AF          ;save used registers
279C 7C                  LD    A,H         ;print H as 2 hex digits
279D CD A6 27            CALL  putHexA
27A0 7D                  LD    A,L         ;print L as 2 hex digits
27A1 CD A6 27            CALL  putHexA
27A4 F1                  POP   AF          ;restore used registers
27A5 C9                  RET
27A6             ;****************
27A6             ;putHexA
27A6             ;Print A register as 2 hex digits
27A6             ;  IN:  A = byte to be printed
27A6             ;  OUT: none.
27A6             ;  USES:none.
27A6             ;****************
27A6             putHexA:
27A6 F5                  PUSH  AF          ;save input
27A7 1F                  RRA               ;shift upper nibble to the right
27A8 1F                  RRA
27A9 1F                  RRA
27AA 1F                  RRA
27AB CD AF 27            CALL  putHexA1    ;print upper nibble
27AE F1                  POP   AF          ;restore input & print lower nibble
27AF             putHexA1:
27AF F5                  PUSH  AF          ;save input
27B0 E6 0F               AND   A,00FH      ;mask lower nibble
27B2 C6 30               ADD   A,'0'       ;convert to hex digit
27B4 FE 3A               CP    A,'9'+1
27B6 38 02               JR    C,putHexA2
27B8 C6 07               ADD   A,07
27BA             putHexA2:
27BA CD 71 27            CALL  putChar
27BD F1                  POP   AF          ;restore input
27BE C9                  RET               ;and return
27BF             ;****************
27BF             ;mul16
27BF             ;16 by 16 bit unsigned multiplication with 16 bit result.
27BF             ;  IN:  HL = operand 1
27BF             ;       DE = operand 2
27BF             ;  OUT: HL = HL * DE low part
27BF             ;  USES:DE
27BF             ;  Size   25 bytes
27BF             ;  Time  160 cycles
27BF             ;****************
27BF             mul16:
27BF                     ;HL = HL * DE
27BF                     ;        H  L
27BF                     ;        D  E
27BF                     ;    --------*
27BF                     ;          EL
27BF                     ;       EH  0
27BF                     ;       DL  0
27BF                     ; -----------+
27BF                     ;        R  S
27BF                     ;S = ELlow
27BF                     ;R = ELhigh+EHlow+DLlow
27BF C5                  PUSH  BC          ;11  11 save BC
27C0 44                  LD    B,H         ; 4  15 copy HL to BC
27C1 4D                  LD    C,L         ; 4  19
27C2 63                  LD    H,E         ; 4  23 HL contains EL
27C3 ED 6C               MLT   HL          ;17  40
27C5 E5                  PUSH  HL          ;11  51
27C6 63                  LD    H,E         ; 4  55 HL contains EH aka EB
27C7 68                  LD    L,B         ; 4  59
27C8 ED 6C               MLT   HL          ;17  76
27CA 45                  LD    B,L         ; 4  80 save EHlow in B
27CB 62                  LD    H,D         ; 4  84 HL contains DL aka DC
27CC 69                  LD    L,C         ; 4  88
27CD ED 6C               MLT   HL          ;17 105
27CF 55                  LD    D,L         ; 4 109 DLlow into DE
27D0 1E 00               LD    E,0         ; 6 115
27D2 E1                  POP   HL          ; 9 124 add EL+DElow
27D3 19                  ADD   HL,DE       ; 7 131
27D4 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
27D5 19                  ADD   HL,DE       ; 7 142
27D6 C1                  POP   BC          ; 9 151 restore BC
27D7 C9                  RET               ; 9 160
27D8             ;****************
27D8             ;mul16_10
27D8             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
27D8             ;  IN:  HL = operand
27D8             ;  OUT: HL = HL * 10; low part
27D8             ;  USES:Flags
27D8             ;  Size   9 bytes
27D8             ;  Time   65 cycles
27D8             ;****************
27D8             mul16_10:
27D8 D5                  PUSH  DE          ;11 11
27D9 54                  LD    D,H         ; 4 15
27DA 5D                  LD    E,L         ; 4 19
27DB 29                  ADD   HL,HL       ; 7 26 times 2
27DC 29                  ADD   HL,HL       ; 7 33 times 4
27DD 19                  ADD   HL,DE       ; 7 40 times 5
27DE 29                  ADD   HL,HL       ; 7 47 times 10
27DF D1                  POP   DE          ; 9 56
27E0 C9                  RET               ; 9 65
27E1             ;****************
27E1             ;mul16_8
27E1             ;16 by 8 bit unsigned multiplication with 16 bit result.
27E1             ;  IN:  HL = operand 1
27E1             ;        A = operand 2
27E1             ;  OUT: HL = HL * A low part
27E1             ;  USES:AF
27E1             ;  Size   .. bytes
27E1             ;  Time  ... cycles
27E1             ;****************
27E1             mul16_8:
27E1                     ;HL = HL * A
27E1                     ;        H  L
27E1                     ;           A
27E1                     ;    --------*
27E1                     ;          AL
27E1                     ;       AH  0
27E1                     ; -----------+
27E1                     ;        R  S
27E1                     ;S = ALlow
27E1                     ;R = ALhigh+AHlow
27E1 C5                  PUSH  BC          ;11  11 save BC
27E2 44                  LD    B,H         ; 4  15
27E3 4F                  LD    C,A         ; 4  19
27E4 67                  LD    H,A         ; 4  23
27E5 ED 6C               MLT   HL          ;17  40 HL = AL
27E7 ED 4C               MLT   BC          ;17  57 BC = AH
27E9 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
27EA 81                  ADD   A,C         ; 4  65
27EB 67                  LD    H,A         ; 4  69
27EC C1                  POP   BC          ; 9  78 | 289 restore BC
27ED C9                  RET               ; 9  87 | 307
27EE             ;****************
27EE             ;mul1632
27EE             ;16 by 16 bit unsigned multiplication with 32 bit result.
27EE             ;  IN:  HL = operand 1
27EE             ;       DE = operand 2
27EE             ;  OUT: HL = HL * DE low part
27EE             ;       DE = HL * DE high part
27EE             ;  USES:-
27EE             ;  Size 49 bytes
27EE             ;  Time between 303 en 307 cycles
27EE             ;****************
27EE             mul1632:
27EE                     ;HL = HL * DE
27EE                     ;        H  L
27EE                     ;        D  E
27EE                     ;    --------*
27EE                     ;          EL
27EE                     ;       EH  0
27EE                     ;       DL  0
27EE                     ;    DH  0  0
27EE                     ; -----------+
27EE                     ;  P  Q  R  S
27EE                     ;S = ELlow
27EE                     ;R = ELhigh+EHlow+DLlow
27EE                     ;Q = DHlow+EHhigh+DLhigh
27EE                     ;P = DHhigh
27EE F5                  PUSH  AF          ;11  11 save AF
27EF C5                  PUSH  BC          ;11  22 save BC
27F0 44                  LD    B,H         ; 4  26
27F1 4D                  LD    C,L         ; 4  30
27F2 62                  LD    H,D         ; 4  34 HL contains DH aka DB
27F3 68                  LD    L,B         ; 4  38
27F4 ED 6C               MLT   HL          ;17  55
27F6 E5                  PUSH  HL          ;11  66
27F7 62                  LD    H,D         ; 4  70 HL contains DL aka DC
27F8 69                  LD    L,C         ; 4  74
27F9 ED 6C               MLT   HL          ;17  91
27FB E5                  PUSH  HL          ;11 102
27FC 63                  LD    H,E         ; 4 106 HL contains EH aka EB
27FD 68                  LD    L,B         ; 4 110
27FE ED 6C               MLT   HL          ;17 127
2800 E5                  PUSH  HL          ;11 138
2801 63                  LD    H,E         ; 4 142 HL contains EL aka EC
2802 69                  LD    L,C         ; 4 146
2803 ED 6C               MLT   HL          ;17 163
2805 D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
2806 06 00               LD    B,0         ; 6 178
2808 4A                  LD    C,D         ; 4 182 ..C=EHhigh
2809 53                  LD    D,E         ; 4 186 ..D=EHlow
280A 1E 00               LD    E,0         ; 6 192
280C 19                  ADD   HL,DE       ; 7 199
280D 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
280F 03                  INC   BC          ;         4 209
2810             mul16321:
2810 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
2811 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
2812 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
2813 19                  ADD   HL,DE       ; 7 231 | 233
2814 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
2816 03                  INC   BC          ;         4 243
2817             mul16322:
2817                                       ;HL=RS=EL+EH0+DL0
2817                                       ;C=EHhigh
2817                                       ;A=DLhigh
2817                                       ;E=0
2817 EB                  EX    DE,HL       ; 3 242 | 246
2818 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
2819 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
281A 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
281B C1                  POP   BC          ; 9 266 | 270
281C 09                  ADD   HL,BC       ; 7 273 | 277
281D EB                  EX    DE,HL       ; 3 276 | 280
281E                                       ;D=P=DHhigh
281E                                       ;E=Q=DHlow+EHhigh+DLhigh
281E                                       ;H=R=ELhigh+EHlow+DLlow
281E                                       ;L=S=ELlow
281E C1                  POP   BC          ; 9 285 | 289 restore BC
281F F1                  POP   AF          ; 9 294 | 298 restore AF
2820 C9                  RET               ; 9 303 | 307
2821             ;****************
2821             ;mul16S
2821             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
2821             ;  IN:  HL = operand 1
2821             ;       DE = operand 2
2821             ;  OUT: DE = HL * DE high part
2821             ;       HL = HL * DE low part
2821             ;  USES:none.
2821             ;  Size 26 bytes
2821             ;  Time between 726 en 998 cycles
2821             ;****************
2821             mul16S:
2821 F5                  PUSH  AF          ;11  11 save AF
2822 C5                  PUSH  BC          ;11  22 save BC
2823 44                  LD    B,H         ; 4  26
2824 4D                  LD    C,L         ; 4  30
2825 21 00 00            LD    HL,0        ; 9  39
2828 3E 10               LD    A,16        ; 6  45
282A             mul16S1:
282A 29                  ADD   HL,HL       ;16*7=112 157
282B CB 13               RL    E           ;16*7=112 269
282D CB 12               RL    D           ;16*7=112 381
282F 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
2831 09                  ADD   HL,BC       ;             16*7=112 589
2832 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
2834 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
2835             mul16S2:
2835 3D                  DEC   A           ;16*4=64    573 | 845 | 813
2836 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
2838 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
2839 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
283A C9                  RET               ; 9         726 | 998 | 966
283B             ;****************
283B             ;div16
283B             ;16 by 16 bit unsigned division.
283B             ;  IN:  HL = dividend
283B             ;       DE = divisor
283B             ;  OUT: HL = quotient
283B             ;       DE = remainder
283B             ;  USES:-
283B             ;  Size   32 bytes
283B             ;  Time   between 1073 en 1121 cycles
283B             ;pseudo code:
283B             ;T = AC = dividend
283B             ;D = DE = divisor
283B             ;Q = AC = quotient = 0
283B             ;R = HL = remainder = 0
283B             ;invariante betrekking:
283B             ; D/T\Q     
283B             ;   R       
283B             ; T = QD + R
283B             ; T <= 2^N  
283B             ;
283B             ; D/T'.RT\Q'      
283B             ;   R'             
283B             ; RT <= 2^N        
283B             ; 0<=k<=N          
283B             ; RT = T % 2^k     
283B             ; T' = (T-RT) / 2^k
283B             ; Q' = T' / D      
283B             ; R' = T' % D      
283B             ;
283B             ;for (i=16; i>0; i--) {
283B             ;  T = T * 2 (remember MSB in carry)
283B             ;  R = R * 2 + carry
283B             ;  Q = Q * 2
283B             ;  if (R >= D) {
283B             ;    R = R - D;
283B             ;    Q++;
283B             ;  }
283B             ;}
283B             ;return Q (in HL) and R (in DE)
283B             ;****************
283B             div16:
283B F5                  PUSH  AF          ;11  11 save registers used
283C C5                  PUSH  BC          ;11  22
283D 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
283E 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
283F 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
2842 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
2844             div16_1:
2844 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
2846 CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
2848 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
284A B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
284B ED 52               SBC   HL,DE       ;16*10=160 653
284D 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
284F 0C                  INC   C           ;              16*4= 64 813   Q++
2850 18 01               JR    div16_3     ;              16*8=128 941
2852             div16_2:
2852 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
2853             div16_3:
2853 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
2855 EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
2856 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
2857 69                  LD    L,C         ; 4 1046 | 1094
2858 C1                  POP   BC          ; 9 1055 | 1103
2859 F1                  POP   AF          ; 9 1064 | 1112
285A C9                  RET               ; 9 1073 | 1121
285B             ;****************
285B             ;div16_8
285B             ;16 by 8 bit unsigned division.
285B             ;  IN:  HL = dividend
285B             ;       A  = divisor
285B             ;  OUT: HL = quotient
285B             ;       A  = remainder
285B             ;  USES:F(lags)
285B             ;  Size 18 bytes
285B             ;  Time between 601 en 697 cycles
285B             ;****************
285B             div16_8:
285B C5                  PUSH  BC          ;11 11 save registers used
285C 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
285E 4F                  LD    C,A         ; 4 21 move divisor to C
285F AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
2860             div16_82:
2860 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
2861 CB 17               RL    A           ;16*7=112 249
2863 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
2864 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
2866 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
2867 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
2868             div16_83:
2868 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
286A C1                  POP   BC          ;9 592 688
286B C9                  RET               ;9 601 697
286C             ;****************
286C             ;div8
286C             ;8 by 8 bit unsigned division.
286C             ;  IN:  A = dividend
286C             ;       C = divisor
286C             ;  OUT: A = quotient
286C             ;       C = remainder
286C             ;  USES:F(lags)
286C             ;  Size 26 bytes
286C             ;  Time between 411 and 459 cycles
286C             ;****************
286C             ;pseudo code:
286C             ;T = dividend
286C             ;D = divisor
286C             ;Q = quotient = 0
286C             ;R = remainder = 0
286C             ;invariante betrekking:
286C             ; T = QD + R
286C             ; T <= 2^8  
286C             ;
286C             ; D/T'.RT\Q'      
286C             ;   R'             
286C             ; RT <= 2^8        
286C             ; 0<=k<=8          
286C             ; RT = T % 2^k     
286C             ; T' = (T-RT) / 2^k
286C             ; Q' = T' / D      
286C             ; R' = T' % D      
286C             ;
286C             ;for (i=8; i>0; i--) {
286C             ;  T = T * 2 (remember MSB in carry)
286C             ;  R = R * 2 + carry
286C             ;  Q = Q * 2
286C             ;  if (R >= D) {
286C             ;    R = R - D;
286C             ;    Q++;
286C             ;  }
286C             ;}
286C             ;return Q (in A) and R (in C)
286C             ;****************
286C             ;E = T = dividend
286C             ;C = D = divisor
286C             ;D = Q = quotient
286C             ;A = R = remainder
286C             ;****************
286C             ;  IN:  A = dividend
286C             ;       C  = divisor
286C             div8:
286C D5                  PUSH  DE          ;11 11 save registers used
286D C5                  PUSH  BC          ;11 22 save registers used
286E 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
2870 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
2872 5F                  LD    E,A         ; 4 38 E = T = dividend
2873 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
2874             div8_1:
2874 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
2876 CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
2878 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
287A B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
287B 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
287D 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
287E 14                  INC   D           ;           8*4=32 354   Q[D]++;
287F             div8_2:           ;                      }
287F 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
2881 C1                  POP   BC          ;9        385 433
2882 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
2883 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
2884 D1                  POP   DE          ;9        402 450
2885 C9                  RET               ;9        411 459
2886             ;****************
2886             ;div8_16
2886             ;8 by 16 bit unsigned division.
2886             ;  IN:  A = dividend
2886             ;       HL = divisor
2886             ;  OUT: A = quotient
2886             ;       C = remainder
2886             ;  USES:F(lags)
2886             ;  Size 13 bytes (plus dependency on div8)
2886             ;  Time 31 or between 436 and 484 cycles
2886             ;****************
2886             ;invariante betrekking:
2886             ; T = dividend
2886             ; D = divisor
2886             ; Q = quotient
2886             ; R = remainder
2886             ; T = QD + R
2886             ;pseudo code:
2886             ; if D >= 256 {
2886             ;   R = T
2886             ;   Q = 0
2886             ; } else {
2886             ;   R = T/D (using div8)
2886             ;   Q = T%D (using div8)
2886             ; }
2886             ;****************
2886             
2886             
2886             div8_16:
2886 4F                  LD    C,A         ;  4  4         save dividend(A) in C
2887 7C                  LD    A,H         ;  4  8         if D >= 256 {
2888 B7                  OR    A,A         ;  4 12
2889 28 02               JR    Z,div8_161  ;  6 18  8  20
288B AF                  XOR   A,A         ;  4 22           R = T;
288C C9                  RET               ;  9 31           Q = 0;
288D             div8_161:                     ;               } else {
288D 79                  LD    A,C         ;        4  24    restore dividend into A
288E 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
288F CD 6C 28            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
2892 C9                  RET               ; 9  436/484    }
2893             ;****************
2893             ;read
2893             ;read a 16 bit unsigned number from the input
2893             ;  IN:  none
2893             ;  OUT: HL = 16 bit unsigned number
2893             ;  USES:-
2893             ;****************
2893             read:
2893 F5                  PUSH  AF
2894 21 00 00            LD    HL,0        ;result = 0;
2897             read1:
2897 CD 3D 27            CALL  getChar     ;check if a character is available.
289A 28 FB               JR    Z,read1     ;-no: wait for it.
289C FE 0D               CP    A,'\r'      ;return if char == Carriage Return
289E 28 0C               JR    Z,read2
28A0 CD D8 27            CALL  mul16_10    ;result *= 10;
28A3 D6 30               SUB   A,'0'       ;digit = char - '0';
28A5 85                  ADD   A,L         ;result += digit;
28A6 6F                  LD    L,A
28A7 30 EE               JR    NC,read1     ;get next character
28A9 24                  INC   H
28AA 18 EB               JR    read1        ;get next character
28AC             read2:
28AC F1                  POP   AF
28AD C9                  RET
28AE             ;****************
28AE             ;writeLineHL
28AE             ;write a 16 bit unsigned number to the output, followed by a carriage return
28AE             ;  IN:  HL = 16 bit unsigned number
28AE             ;  OUT: none
28AE             ;  USES:HL
28AE             ;****************
28AE             writeLineHL:
28AE CD B5 28            CALL  writeHL
28B1 CD 7E 27            CALL  putCRLF
28B4 C9                  RET
28B5             ;****************
28B5             ;writeHL
28B5             ;write a 16 bit unsigned number to the output
28B5             ;  IN:  HL = 16 bit unsigned number
28B5             ;  OUT: none
28B5             ;  USES:HL
28B5             ;****************
28B5             writeHL:
28B5 C5                  PUSH  BC          ;save registers used
28B6 F5                  PUSH  AF
28B7 06 00               LD    B,0         ;number of digits on stack
28B9 7C                  LD    A,H         ;is HL=0?
28BA B5                  OR    A,L
28BB 20 03               JR    NZ,writeHL1
28BD 04                  INC   B           ;write a single digit 0
28BE 18 0C               JR    writeHL3
28C0             writeHL1:
28C0 3E 0A               LD    A,10        ;divide HL by 10
28C2 CD 5B 28            CALL  div16_8
28C5 F5                  PUSH  AF          ;put remainder on stack
28C6 04                  INC   B
28C7 7C                  LD    A,H         ;is quotient 0?
28C8 B5                  OR    A,L
28C9 20 F5               JR    NZ,writeHL1
28CB             writeHL2:
28CB F1                  POP   AF          ;write digit
28CC             writeHL3:
28CC C6 30               ADD   A,'0'
28CE CD 71 27            CALL  putChar
28D1 10 F8               DJNZ  writeHL2
28D3 F1                  POP   AF          ;restore registers used
28D4 C1                  POP   BC
28D5 C9                  RET
28D6             ;****************
28D6             ;writeLineA
28D6             ;write an 8-bit unsigned number to the output, followed by a carriage return
28D6             ;  IN:  A = 8-bit unsigned number
28D6             ;  OUT: none
28D6             ;  USES:none
28D6             ;****************
28D6             writeLineA:
28D6 CD DD 28            CALL  writeA
28D9 CD 7E 27            CALL  putCRLF
28DC C9                  RET
28DD             ;****************
28DD             ;writeA
28DD             ;write an 8-bit unsigned number to the output
28DD             ;  IN:  A = 8-bit unsigned number
28DD             ;  OUT: none
28DD             ;  USES:none
28DD             ;****************
28DD             writeA:
28DD E5                  PUSH  HL          ;save registers used
28DE 26 00               LD    H,0
28E0 6F                  LD    L,A
28E1 CD B5 28            CALL  writeHL
28E4 E1                  POP   HL
28E5 C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2010 :
    L100 = 20D2 :
    L101 = 20D4 :
    L102 = 20D6 :
    L103 = 20DB :
    L104 = 20DB : 20F3 20F6
    L105 = 20DE :
    L106 = 20E1 :
    L107 = 20E8 :
    L108 = 20EC :
    L109 = 20EF :
     L11 = 2016 :
    L110 = 20F1 :
    L111 = 20F3 :
    L112 = 20F9 :
    L113 = 20F9 :
    L114 = 20F9 :
    L115 = 20F9 :
    L116 = 20F9 :
    L117 = 20FB :
    L118 = 2101 :
    L119 = 2101 : 211E
     L12 = 2016 :
    L120 = 2104 :
    L121 = 2107 :
    L122 = 210E :
    L123 = 2111 :
    L124 = 2115 :
    L125 = 2117 :
    L126 = 211E :
    L127 = 2121 :
    L128 = 2121 : 213E
    L129 = 2124 :
     L13 = 2018 :
    L130 = 2127 :
    L131 = 212E :
    L132 = 2131 :
    L133 = 2135 :
    L134 = 2137 :
    L135 = 213E :
    L136 = 2141 :
    L137 = 2141 : 2160
    L138 = 2144 :
    L139 = 2147 :
     L14 = 201E :
    L140 = 214E :
    L141 = 2151 :
    L142 = 2155 :
    L143 = 2157 :
    L144 = 215E :
    L145 = 2163 :
    L146 = 2163 : 2180 2183
    L147 = 2166 :
    L148 = 2169 :
    L149 = 2170 :
     L15 = 2021 :
    L150 = 2173 :
    L151 = 2177 :
    L152 = 2179 :
    L153 = 2180 :
    L154 = 2186 :
    L155 = 2186 :
    L156 = 2188 :
    L157 = 218E :
    L158 = 218E : 21B2
    L159 = 2191 :
     L16 = 2021 :
    L160 = 2194 :
    L161 = 219B :
    L162 = 21A2 :
    L163 = 21A5 :
    L164 = 21A9 :
    L165 = 21AB :
    L166 = 21B2 :
    L167 = 21B5 :
    L168 = 21B5 : 21D9 21DC
    L169 = 21B8 :
     L17 = 2021 : 201E
    L170 = 21BB :
    L171 = 21C2 :
    L172 = 21C9 :
    L173 = 21CC :
    L174 = 21D0 :
    L175 = 21D2 :
    L176 = 21D9 :
    L177 = 21DF :
    L178 = 21DF :
    L179 = 21DF :
     L18 = 2021 :
    L180 = 21DF :
    L181 = 21DF :
    L182 = 21DF :
    L183 = 21DF :
    L184 = 21DF :
    L185 = 21DF :
    L186 = 21E2 :
    L187 = 21E5 :
    L188 = 21E5 : 21FF
    L189 = 21E8 :
     L19 = 2023 :
    L190 = 21EB :
    L191 = 21F2 :
    L192 = 21F5 :
    L193 = 21F9 :
    L194 = 21FF :
    L195 = 2202 :
    L196 = 2202 : 221C
    L197 = 2205 :
    L198 = 2208 :
    L199 = 220F :
      L2 = 2009 :
     L20 = 2029 :
    L200 = 2212 :
    L201 = 2216 :
    L202 = 221C :
    L203 = 221F :
    L204 = 221F : 2239
    L205 = 2222 :
    L206 = 2225 :
    L207 = 222C :
    L208 = 222F :
    L209 = 2233 :
     L21 = 202D :
    L210 = 2239 :
    L211 = 223C :
    L212 = 223C : 2256 2259
    L213 = 223F :
    L214 = 2242 :
    L215 = 2249 :
    L216 = 224C :
    L217 = 2250 :
    L218 = 2256 :
    L219 = 225C :
     L22 = 202D :
    L220 = 225C :
    L221 = 225F :
    L222 = 2262 :
    L223 = 2262 : 2285
    L224 = 2265 :
    L225 = 2268 :
    L226 = 226F :
    L227 = 2276 :
    L228 = 2279 :
    L229 = 227D :
     L23 = 202F :
    L230 = 2283 :
    L231 = 2288 :
    L232 = 2288 : 22A9 22AC
    L233 = 228B :
    L234 = 228E :
    L235 = 2295 :
    L236 = 229C :
    L237 = 229F :
    L238 = 22A3 :
    L239 = 22A9 :
     L24 = 2032 :
    L240 = 22AF :
    L241 = 22AF :
    L242 = 22AF :
    L243 = 22AF :
    L244 = 22AF :
    L245 = 22AF :
    L246 = 22B1 :
    L247 = 22B4 :
    L248 = 22B4 : 22C3 22C6
    L249 = 22B7 :
     L25 = 2032 :
    L250 = 22BA :
    L251 = 22BE :
    L252 = 22C1 :
    L253 = 22C3 :
    L254 = 22C9 :
    L255 = 22C9 :
    L256 = 22C9 :
    L257 = 22CB :
    L258 = 22D1 :
    L259 = 22D1 : 22EA 22ED
     L26 = 2032 :
    L260 = 22D4 :
    L261 = 22D7 :
    L262 = 22DE :
    L263 = 22E1 :
    L264 = 22E3 :
    L265 = 22EA :
    L266 = 22F0 :
    L267 = 22F0 :
    L268 = 22F0 :
    L269 = 22F0 :
     L27 = 2032 :
    L270 = 22F0 :
    L271 = 22F3 :
    L272 = 22F6 :
    L273 = 22F6 :
    L274 = 22F8 :
    L275 = 22FB :
    L276 = 22FB : 2315 2318
    L277 = 22FE :
    L278 = 2301 :
    L279 = 2305 :
     L28 = 2032 :
    L280 = 230C :
    L281 = 230F :
    L282 = 2315 :
    L283 = 231B :
    L284 = 231B :
    L285 = 231B :
    L286 = 231B :
    L287 = 231B :
    L288 = 231B :
    L289 = 231B :
     L29 = 2035 :
    L290 = 231D :
    L291 = 2320 :
    L292 = 2320 :
    L293 = 2320 :
    L294 = 2320 :
    L295 = 2320 :
    L296 = 2322 :
    L297 = 2325 :
    L298 = 2325 :
    L299 = 2325 :
      L3 = 2009 :
     L30 = 2038 :
    L300 = 2325 :
    L301 = 2325 :
    L302 = 2327 :
    L303 = 232A :
    L304 = 232A :
    L305 = 232A :
    L306 = 232A :
    L307 = 232A :
    L308 = 232C :
    L309 = 232F :
     L31 = 2038 :
    L310 = 232F :
    L311 = 232F :
    L312 = 232F :
    L313 = 232F :
    L314 = 232F :
    L315 = 232F :
    L316 = 2331 :
    L317 = 2334 :
    L318 = 2334 :
    L319 = 2334 :
     L32 = 203C :
    L320 = 2334 :
    L321 = 2334 :
    L322 = 2336 :
    L323 = 2339 :
    L324 = 2339 :
    L325 = 2339 :
    L326 = 2339 :
    L327 = 2339 :
    L328 = 233B :
    L329 = 233E :
     L33 = 203C : 2060
    L330 = 233E :
    L331 = 233E :
    L332 = 233E :
    L333 = 233E :
    L334 = 2340 :
    L335 = 2343 :
    L336 = 2343 :
    L337 = 2343 :
    L338 = 2343 :
    L339 = 2343 :
     L34 = 203C :
    L340 = 2343 :
    L341 = 2345 :
    L342 = 2348 :
    L343 = 2348 : 2359 235C
    L344 = 234B :
    L345 = 234E :
    L346 = 2352 :
    L347 = 2355 :
    L348 = 2357 :
    L349 = 2359 :
     L35 = 203F :
    L350 = 235F :
    L351 = 235F :
    L352 = 235F :
    L353 = 235F :
    L354 = 235F :
    L355 = 2361 :
    L356 = 2367 :
    L357 = 2367 : 2383 2386
    L358 = 236A :
    L359 = 236D :
     L36 = 2045 :
    L360 = 2374 :
    L361 = 2377 :
    L362 = 237B :
    L363 = 237D :
    L364 = 2383 :
    L365 = 2389 :
    L366 = 2389 :
    L367 = 2389 :
    L368 = 238B :
    L369 = 238E :
     L37 = 2045 :
    L370 = 238E :
    L371 = 2391 :
    L372 = 2394 :
    L373 = 2394 :
    L374 = 2394 : 23B2 23B5
    L375 = 2397 :
    L376 = 239A :
    L377 = 239E :
    L378 = 23A5 :
    L379 = 23A8 :
     L38 = 2048 :
    L380 = 23AC :
    L381 = 23B2 :
    L382 = 23B8 :
    L383 = 23B8 :
    L384 = 23B8 :
    L385 = 23B8 :
    L386 = 23B8 :
    L387 = 23B8 :
    L388 = 23BA :
    L389 = 23BD :
     L39 = 204B :
    L390 = 23BD : 23D3 23D6
    L391 = 23C0 :
    L392 = 23C3 :
    L393 = 23C7 :
    L394 = 23CA :
    L395 = 23CC :
    L396 = 23CD :
    L397 = 23CF :
    L398 = 23D1 :
    L399 = 23D3 :
      L4 = 2009 :
     L40 = 204B :
    L400 = 23D9 :
    L401 = 23D9 :
    L402 = 23D9 :
    L403 = 23DB :
    L404 = 23E1 :
    L405 = 23E1 : 2406 2409
    L406 = 23E4 :
    L407 = 23E7 :
    L408 = 23EB :
    L409 = 23F2 :
     L41 = 204E :
    L410 = 23F4 :
    L411 = 23F6 :
    L412 = 23F7 :
    L413 = 23FA :
    L414 = 23FE :
    L415 = 23FF :
    L416 = 2406 :
    L417 = 240C :
    L418 = 240C :
    L419 = 240C :
     L42 = 2051 :
    L420 = 240E :
    L421 = 2414 :
    L422 = 2414 :
    L423 = 2416 :
    L424 = 2419 :
    L425 = 2419 : 243A 243D
    L426 = 241C :
    L427 = 241F :
    L428 = 2426 :
    L429 = 2429 :
     L43 = 2051 :
    L430 = 242D :
    L431 = 242E :
    L432 = 2431 :
    L433 = 2433 :
    L434 = 2434 :
    L435 = 243A :
    L436 = 2440 :
    L437 = 2440 :
    L438 = 2440 :
    L439 = 2442 :
     L44 = 2055 :
    L440 = 2445 :
    L441 = 2445 :
    L442 = 2448 :
    L443 = 244B :
    L444 = 244B : 246F 2472
    L445 = 244E :
    L446 = 2451 :
    L447 = 2455 :
    L448 = 245C :
    L449 = 245F :
     L45 = 2055 :
    L450 = 2463 :
    L451 = 2464 :
    L452 = 2467 :
    L453 = 246B :
    L454 = 246F :
    L455 = 2475 :
    L456 = 2475 :
    L457 = 2475 :
    L458 = 2475 :
    L459 = 2475 :
     L46 = 2058 :
    L460 = 2475 :
    L461 = 2477 :
    L462 = 247A :
    L463 = 247A :
    L464 = 247C :
    L465 = 2482 :
    L466 = 2482 : 249C 249F
    L467 = 2485 :
    L468 = 2488 :
    L469 = 248F :
     L47 = 205B :
    L470 = 2493 :
    L471 = 2495 :
    L472 = 2497 :
    L473 = 249C :
    L474 = 24A2 :
    L475 = 24A2 :
    L476 = 24A2 :
    L477 = 24A4 :
    L478 = 24A7 :
    L479 = 24A7 :
     L48 = 205B :
    L480 = 24A9 :
    L481 = 24AF :
    L482 = 24AF : 24CE 24D1
    L483 = 24B2 :
    L484 = 24B5 :
    L485 = 24B9 :
    L486 = 24C0 :
    L487 = 24C2 :
    L488 = 24C4 :
    L489 = 24C7 :
     L49 = 205E :
    L490 = 24CE :
    L491 = 24D4 :
    L492 = 24D4 :
    L493 = 24D4 :
    L494 = 24D6 :
    L495 = 24DC :
    L496 = 24DC :
    L497 = 24DE :
    L498 = 24E1 :
    L499 = 24E1 : 2502 2505
      L5 = 2009 :
     L50 = 2060 :
    L500 = 24E4 :
    L501 = 24E7 :
    L502 = 24EE :
    L503 = 24F2 :
    L504 = 24F5 :
    L505 = 24F9 :
    L506 = 24FC :
    L507 = 2502 :
    L508 = 2508 :
    L509 = 2508 :
     L51 = 2063 :
    L510 = 2508 :
    L511 = 250B :
    L512 = 250E :
    L513 = 250E :
    L514 = 2510 :
    L515 = 2513 :
    L516 = 2513 : 2532 2535
    L517 = 2516 :
    L518 = 2519 :
    L519 = 251D :
     L52 = 2063 :
    L520 = 2524 :
    L521 = 2527 :
    L522 = 252B :
    L523 = 2532 :
    L524 = 2538 :
    L525 = 2538 :
    L526 = 2538 :
    L527 = 2538 :
    L528 = 2538 :
    L529 = 2538 :
     L53 = 2063 :
    L530 = 2538 :
    L531 = 253A :
    L532 = 253D :
    L533 = 253D :
    L534 = 253F :
    L535 = 2542 :
    L536 = 2542 :
    L537 = 2542 :
    L538 = 2542 :
    L539 = 2544 :
     L54 = 2063 :
    L540 = 2547 :
    L541 = 2547 :
    L542 = 2549 :
    L543 = 254C :
    L544 = 254C :
    L545 = 254C :
    L546 = 254C :
    L547 = 254E :
    L548 = 2551 :
    L549 = 2551 :
     L55 = 2063 :
    L550 = 2553 :
    L551 = 2556 :
    L552 = 2556 :
    L553 = 2556 :
    L554 = 2556 :
    L555 = 2558 :
    L556 = 255B :
    L557 = 255B :
    L558 = 255D :
    L559 = 2560 :
     L56 = 2063 :
    L560 = 2560 :
    L561 = 2560 :
    L562 = 2560 :
    L563 = 2560 :
    L564 = 2560 :
    L565 = 2560 :
    L566 = 2562 :
    L567 = 2565 :
    L568 = 2565 :
    L569 = 2567 :
     L57 = 2063 :
    L570 = 256A :
    L571 = 256A :
    L572 = 256A :
    L573 = 256A :
    L574 = 256C :
    L575 = 256F :
    L576 = 256F :
    L577 = 2571 :
    L578 = 2574 :
    L579 = 2574 :
     L58 = 2063 :
    L580 = 2574 :
    L581 = 2574 :
    L582 = 2576 :
    L583 = 2579 :
    L584 = 2579 :
    L585 = 257B :
    L586 = 257E :
    L587 = 257E :
    L588 = 257E :
    L589 = 257E :
     L59 = 2063 :
    L590 = 2580 :
    L591 = 2583 :
    L592 = 2583 :
    L593 = 2585 :
    L594 = 2588 :
    L595 = 2588 :
    L596 = 2588 :
    L597 = 2588 :
    L598 = 2588 :
    L599 = 2588 :
      L6 = 2009 : 2003
     L60 = 2063 : 2074
    L600 = 258A :
    L601 = 258D :
    L602 = 258D : 259C 259F
    L603 = 2590 :
    L604 = 2593 :
    L605 = 2597 :
    L606 = 259A :
    L607 = 259C :
    L608 = 25A2 :
    L609 = 25A2 :
     L61 = 2066 :
    L610 = 25A2 :
    L611 = 25A2 :
    L612 = 25A4 :
    L613 = 25A7 :
    L614 = 25A7 :
    L615 = 25A9 :
    L616 = 25AC :
    L617 = 25AC :
    L618 = 25AC :
    L619 = 25AE :
     L62 = 2069 :
    L620 = 25B4 :
    L621 = 25B4 : 25CC 25CF
    L622 = 25B7 :
    L623 = 25BA :
    L624 = 25C1 :
    L625 = 25C4 :
    L626 = 25C6 :
    L627 = 25CC :
    L628 = 25D2 :
    L629 = 25D2 :
     L63 = 206D :
    L630 = 25D2 :
    L631 = 25D5 :
    L632 = 25D8 :
    L633 = 25D8 :
    L634 = 25DA :
    L635 = 25DD :
    L636 = 25DD : 25F7 25FA
    L637 = 25E0 :
    L638 = 25E3 :
    L639 = 25E7 :
     L64 = 2070 :
    L640 = 25EE :
    L641 = 25F1 :
    L642 = 25F7 :
    L643 = 25FD :
    L644 = 25FD :
    L645 = 25FD :
    L646 = 25FD :
    L647 = 25FD :
    L648 = 25FD : 2610 2613
    L649 = 2600 :
     L65 = 2072 :
    L650 = 2603 :
    L651 = 2607 :
    L652 = 2609 :
    L653 = 260B :
    L654 = 2610 :
    L655 = 2616 :
    L656 = 2616 :
    L657 = 2616 :
    L658 = 2616 :
    L659 = 2618 :
     L66 = 2074 :
    L660 = 261E :
    L661 = 261E : 2639 263C
    L662 = 2621 :
    L663 = 2624 :
    L664 = 2628 :
    L665 = 262B :
    L666 = 262F :
    L667 = 2632 :
    L668 = 2639 :
    L669 = 263F :
     L67 = 2077 :
    L670 = 263F :
    L671 = 263F :
    L672 = 2641 :
    L673 = 2647 :
    L674 = 2647 : 2661 2664
    L675 = 264A :
    L676 = 264D :
    L677 = 2654 :
    L678 = 2656 :
    L679 = 2658 :
     L68 = 2077 : 2088
    L680 = 265B :
    L681 = 2661 :
    L682 = 2667 :
    L683 = 2667 :
    L684 = 2667 :
    L685 = 266A :
    L686 = 266D :
    L687 = 266D :
    L688 = 266F :
    L689 = 2672 :
     L69 = 207A :
    L690 = 2672 : 2691 2694
    L691 = 2675 :
    L692 = 2678 :
    L693 = 267C :
    L694 = 2683 :
    L695 = 2686 :
    L696 = 268A :
    L697 = 2691 :
    L698 = 2697 :
    L699 = 2697 :
      L7 = 200B :
     L70 = 207D :
    L700 = 2697 :
    L701 = 2697 :
    L702 = 2697 :
    L703 = 2697 :
    L704 = 2699 :
    L705 = 269C :
    L706 = 269C : 26AC 26AF
    L707 = 269F :
    L708 = 26A2 :
    L709 = 26A6 :
     L71 = 2081 :
    L710 = 26A9 :
    L711 = 26AC :
    L712 = 26B2 :
    L713 = 26B2 :
    L714 = 26B2 :
    L715 = 26B4 :
    L716 = 26BA :
    L717 = 26BA : 26D1 26D4
    L718 = 26BD :
    L719 = 26C0 :
     L72 = 2084 :
    L720 = 26C4 :
    L721 = 26C7 :
    L722 = 26CA :
    L723 = 26D1 :
    L724 = 26D7 :
    L725 = 26D7 :
    L726 = 26D7 :
    L727 = 26DA :
    L728 = 26E0 :
    L729 = 26E0 :
     L73 = 2086 :
    L730 = 26E2 :
    L731 = 26E5 :
    L732 = 26E5 : 26FE 2701
    L733 = 26E8 :
    L734 = 26EB :
    L735 = 26F2 :
    L736 = 26F5 :
    L737 = 26F8 :
    L738 = 26FE :
    L739 = 2704 :
     L74 = 2088 :
    L740 = 2704 :
    L741 = 2704 :
    L742 = 2706 :
    L743 = 270D :
    L744 = 270D : 2726 2729
    L745 = 2710 :
    L746 = 2713 :
    L747 = 271A :
    L748 = 271D :
    L749 = 2726 :
     L75 = 208B :
    L750 = 272C :
    L751 = 272C :
    L752 = 272C :
    L753 = 272C :
    L754 = 272C :
    L755 = 272C :
    L756 = 272C :
    L757 = 272C :
    L758 = 272C :
    L759 = 272C :
     L76 = 208B : 209C
    L760 = 272C :
    L761 = 272C :
    L762 = 272C :
    L763 = 272C :
    L764 = 272C :
    L765 = 272C :
    L766 = 272C :
    L767 = 272C :
    L768 = 272C :
    L769 = 272C :
     L77 = 208E :
    L770 = 272C :
    L771 = 272C :
    L772 = 272C :
    L773 = 272C :
    L774 = 272C :
    L775 = 272C :
    L776 = 272C :
    L777 = 272C :
    L778 = 272C :
    L779 = 272C :
     L78 = 2091 :
    L780 = 272C :
    L781 = 272C :
    L782 = 272C :
    L783 = 272C :
    L784 = 272C :
    L785 = 272F :
    L786 = 2732 :
    L787 = 2732 :
    L788 = 2734 :
    L789 = 2736 :
     L79 = 2095 :
    L790 = 2737 :
    L791 = 2737 : 272C
      L8 = 200E :
     L80 = 2098 :
     L81 = 209A :
     L82 = 209C :
     L83 = 209F :
     L84 = 209F : 20B0 20B3
     L85 = 20A2 :
     L86 = 20A5 :
     L87 = 20A9 :
     L88 = 20AC :
     L89 = 20AE :
      L9 = 200E :
     L90 = 20B0 :
     L91 = 20B6 :
     L92 = 20B6 :
     L93 = 20B8 :
     L94 = 20BE :
     L95 = 20BE : 20D8
     L96 = 20C1 :
     L97 = 20C4 :
     L98 = 20CB :
     L99 = 20CF :
   div16 = 283B :
 div16_1 = 2844 : 2853
 div16_2 = 2852 : 284D
 div16_3 = 2853 : 2850
 div16_8 = 285B : 28C2
div16_82 = 2860 : 2868
div16_83 = 2868 : 2864
    div8 = 286C : 288F
  div8_1 = 2874 : 287F
 div8_16 = 2886 :
div8_161 = 288D : 2889
  div8_2 = 287F : 287B
 getChar = 273D : 2897
getChar1 = 274B : 2742
   mul16 = 27BF :
 mul1632 = 27EE :
mul16321 = 2810 : 280D
mul16322 = 2817 : 2814
  mul16S = 2821 :
 mul16S1 = 282A : 2836
 mul16S2 = 2835 : 282F 2832
mul16_10 = 27D8 : 28A0
 mul16_8 = 27E1 :
 putBell = 2797 :
 putCRLF = 277E : 275E 28B1 28D9
 putChar = 2771 : 2768 2781 2786 278D 2795 2799 27BA 28CE
putChar1 = 2772 : 2777
putErase = 278B :
 putHexA = 27A6 : 279D 27A1
putHexA1 = 27AF : 27AB
putHexA2 = 27BA : 27B6
putHexHL = 279B :
  putMsg = 2755 :
putSpace = 276F : 2790
 putStr1 = 2763 : 276B
 putStr2 = 276D : 2766
    read = 2893 :
   read1 = 2897 : 289A 28A7 28AA
   read2 = 28AC : 289E
   start = 2000 :
  writeA = 28DD : 28D6
 writeHL = 28B5 : 28AE 28E1
writeHL1 = 28C0 : 28BB 28C9
writeHL2 = 28CB : 28D1
writeHL3 = 28CC : 28BE
writeLineA = 28D6 : 202F 2035 2058 2066 207A 208E 20A2 22B7 22FE 231D 2322 2327
                : 232C 2331 2336 233B 2340 234B 2397 23C0 23E4 244E 24B2 2516
                : 253A 253F 2544 2549 254E 2553 2558 255D 2562 2567 256C 2571
                : 2576 257B 2580 2585 2590 25A4 25A9 25E0 2600 2621 2675 269F
                : 26BD
writeLineHL = 28AE : 20C1 20DE 2104 2124 2144 2166 2191 21B8 21E8 2205 2222 223F
                : 2265 228B 22D4 236A 241C 2485 24E4 25B7 264A 26E8 2710
writeLineStr = 275B : 272F
writeStr = 2762 : 2756 275B
