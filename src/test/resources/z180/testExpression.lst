2000             SOC     equ 02000H        ;start of code, i.e.lowest external RAM address.
2000             TOS     equ 0FD00H        ;top of stack, i.e. bottom of MONITOR user global data.
2000                     .ORG  SOC
2000             start:
2000 31 00 FD            LD    SP,TOS
2003             L0:
2003 CD 09 20            CALL  L16
2006             L1:
2006 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
2009             L2:
2009                     ;;testExpression.j(0) /*
2009             L3:
2009                     ;;testExpression.j(1)  * A small program in the miniJava language.
2009             L4:
2009                     ;;testExpression.j(2)  * Test 8-bit and 16-bit expressions.
2009             L5:
2009                     ;;testExpression.j(3)  */
2009             L6:
2009                     ;;testExpression.j(4) class TestExpression {
2009             L7:
2009                     ;class TestExpression []
2009             L8:
2009                     ;;testExpression.j(5)   private static byte b;
2009             L9:
2009                     ;;testExpression.j(6)   private static byte c;
2009             L10:
2009                     ;;testExpression.j(7)   private static word i;
2009             L11:
2009                     ;;testExpression.j(8)   private static word j;
2009             L12:
2009                     ;;testExpression.j(9)   private static byte byteHex;
2009             L13:
2009                     ;;testExpression.j(10)   private static word wordHex;
2009             L14:
2009                     ;;testExpression.j(11) 
2009             L15:
2009                     ;;testExpression.j(12)   public static void main() {
2009             L16:
2009                     ;method TestExpression.main [public, static] void ()
2009             L17:
2009 DD E5               PUSH  IX
200B             L18:
200B DD 21 00 00         LD    IX,0x0000
200F DD 39               ADD   IX,SP
2011             L19:
2011             L20:
2011                     ;;testExpression.j(13)     println(0);         // 0
2011             L21:
2011 3E 00               LD    A,0
2013             L22:
2013 CD C3 29            CALL  writeLineA
2016             L23:
2016                     ;;testExpression.j(14)     //LD    A,0
2016             L24:
2016                     ;;testExpression.j(15)     //CALL  writeA
2016             L25:
2016                     ;;testExpression.j(16)     //OK
2016             L26:
2016                     ;;testExpression.j(17)   
2016             L27:
2016                     ;;testExpression.j(18)     /*********************/
2016             L28:
2016                     ;;testExpression.j(19)     /* Single term 8-bit */
2016             L29:
2016                     ;;testExpression.j(20)     /*********************/
2016             L30:
2016                     ;;testExpression.j(21)     b = 1;
2016             L31:
2016 3E 01               LD    A,1
2018             L32:
2018 32 00 50            LD    (05000H),A
201B             L33:
201B                     ;;testExpression.j(22)     c = 4;
201B             L34:
201B 3E 04               LD    A,4
201D             L35:
201D 32 01 50            LD    (05001H),A
2020             L36:
2020                     ;;testExpression.j(23)     println(b);         // 1
2020             L37:
2020 3A 00 50            LD    A,(05000H)
2023             L38:
2023 CD C3 29            CALL  writeLineA
2026             L39:
2026                     ;;testExpression.j(24)     //LD    A,1
2026             L40:
2026                     ;;testExpression.j(25)     //LD    (04000H),A
2026             L41:
2026                     ;;testExpression.j(26)     //LD    A,(04000H)
2026             L42:
2026                     ;;testExpression.j(27)     //CALL  writeA
2026             L43:
2026                     ;;testExpression.j(28)     //OK
2026             L44:
2026                     ;;testExpression.j(29)   
2026             L45:
2026                     ;;testExpression.j(30)     /************************/
2026             L46:
2026                     ;;testExpression.j(31)     /* Dual term addition   */
2026             L47:
2026                     ;;testExpression.j(32)     /************************/
2026             L48:
2026                     ;;testExpression.j(33)     println(0 + 2);     // 2
2026             L49:
2026 3E 00               LD    A,0
2028             L50:
2028 C6 02               ADD   A,2
202A             L51:
202A CD C3 29            CALL  writeLineA
202D             L52:
202D                     ;;testExpression.j(34)     println(b + 2);     // 3
202D             L53:
202D 3A 00 50            LD    A,(05000H)
2030             L54:
2030 C6 02               ADD   A,2
2032             L55:
2032 CD C3 29            CALL  writeLineA
2035             L56:
2035                     ;;testExpression.j(35)     println(3 + b);     // 4
2035             L57:
2035 3E 03               LD    A,3
2037             L58:
2037 47                  LD    B,A
2038 3A 00 50            LD    A,(05000H)
203B 80                  ADD   A,B
203C             L59:
203C CD C3 29            CALL  writeLineA
203F             L60:
203F                     ;;testExpression.j(36)     println(b + c);     // 5
203F             L61:
203F 3A 00 50            LD    A,(05000H)
2042             L62:
2042 47                  LD    B,A
2043 3A 01 50            LD    A,(05001H)
2046 80                  ADD   A,B
2047             L63:
2047 CD C3 29            CALL  writeLineA
204A             L64:
204A                     ;;testExpression.j(37)   
204A             L65:
204A                     ;;testExpression.j(38)     c = 4 + 2;
204A             L66:
204A 3E 04               LD    A,4
204C             L67:
204C C6 02               ADD   A,2
204E             L68:
204E 32 01 50            LD    (05001H),A
2051             L69:
2051                     ;;testExpression.j(39)     println(c);         // 6
2051             L70:
2051 3A 01 50            LD    A,(05001H)
2054             L71:
2054 CD C3 29            CALL  writeLineA
2057             L72:
2057                     ;;testExpression.j(40)     c = b + 6;
2057             L73:
2057 3A 00 50            LD    A,(05000H)
205A             L74:
205A C6 06               ADD   A,6
205C             L75:
205C 32 01 50            LD    (05001H),A
205F             L76:
205F                     ;;testExpression.j(41)     println(c);         // 7
205F             L77:
205F 3A 01 50            LD    A,(05001H)
2062             L78:
2062 CD C3 29            CALL  writeLineA
2065             L79:
2065                     ;;testExpression.j(42)     c = 7 + b;
2065             L80:
2065 3E 07               LD    A,7
2067             L81:
2067 47                  LD    B,A
2068 3A 00 50            LD    A,(05000H)
206B 80                  ADD   A,B
206C             L82:
206C 32 01 50            LD    (05001H),A
206F             L83:
206F                     ;;testExpression.j(43)     println(c);         // 8
206F             L84:
206F 3A 01 50            LD    A,(05001H)
2072             L85:
2072 CD C3 29            CALL  writeLineA
2075             L86:
2075                     ;;testExpression.j(44)     c = b + c;
2075             L87:
2075 3A 00 50            LD    A,(05000H)
2078             L88:
2078 47                  LD    B,A
2079 3A 01 50            LD    A,(05001H)
207C 80                  ADD   A,B
207D             L89:
207D 32 01 50            LD    (05001H),A
2080             L90:
2080                     ;;testExpression.j(45)     println(c);         // 9
2080             L91:
2080 3A 01 50            LD    A,(05001H)
2083             L92:
2083 CD C3 29            CALL  writeLineA
2086             L93:
2086                     ;;testExpression.j(46)   
2086             L94:
2086                     ;;testExpression.j(47)   
2086             L95:
2086                     ;;testExpression.j(48)     i = 10;
2086             L96:
2086 3E 0A               LD    A,10
2088             L97:
2088 6F                  LD    L,A
2089 26 00               LD    H,0
208B 22 02 50            LD    (05002H),HL
208E             L98:
208E                     ;;testExpression.j(49)     println(i);         // 10
208E             L99:
208E 2A 02 50            LD    HL,(05002H)
2091             L100:
2091 CD 9B 29            CALL  writeLineHL
2094             L101:
2094                     ;;testExpression.j(50)     //LD    A,10
2094             L102:
2094                     ;;testExpression.j(51)     //LD    L,A
2094             L103:
2094                     ;;testExpression.j(52)     //LD    H,0
2094             L104:
2094                     ;;testExpression.j(53)     //LD    (04004H),HL
2094             L105:
2094                     ;;testExpression.j(54)     //OK
2094             L106:
2094                     ;;testExpression.j(55)     
2094             L107:
2094                     ;;testExpression.j(56)     println(i + 1);     // 11
2094             L108:
2094 2A 02 50            LD    HL,(05002H)
2097             L109:
2097 11 01 00            LD    DE,1
209A 19                  ADD   HL,DE
209B             L110:
209B CD 9B 29            CALL  writeLineHL
209E             L111:
209E                     ;;testExpression.j(57)     println(2 + i);     // 12
209E             L112:
209E 3E 02               LD    A,2
20A0             L113:
20A0 6F                  LD    L,A
20A1 26 00               LD    H,0
20A3             L114:
20A3 ED 5B 02 50         LD    DE,(05002H)
20A7 19                  ADD   HL,DE
20A8             L115:
20A8 CD 9B 29            CALL  writeLineHL
20AB             L116:
20AB                     ;;testExpression.j(58)     b = 3;
20AB             L117:
20AB 3E 03               LD    A,3
20AD             L118:
20AD 32 00 50            LD    (05000H),A
20B0             L119:
20B0                     ;;testExpression.j(59)     println(i + b);     // 13
20B0             L120:
20B0 2A 02 50            LD    HL,(05002H)
20B3             L121:
20B3 47                  LD    B,A
20B4 3A 00 50            LD    A,(05000H)
20B7 5F                  LD    E,A
20B8 78                  LD    A,B
20B9 16 00               LD    D,0
20BB 19                  ADD   HL,DE
20BC             L122:
20BC CD 9B 29            CALL  writeLineHL
20BF             L123:
20BF                     ;;testExpression.j(60)     b++; //4
20BF             L124:
20BF 21 00 50            LD    HL,05000H
20C2 34                  INC   (HL)
20C3             L125:
20C3                     ;;testExpression.j(61)     println(b + i);     // 14
20C3             L126:
20C3 3A 00 50            LD    A,(05000H)
20C6             L127:
20C6 6F                  LD    L,A
20C7 26 00               LD    H,0
20C9             L128:
20C9 ED 5B 02 50         LD    DE,(05002H)
20CD 19                  ADD   HL,DE
20CE             L129:
20CE CD 9B 29            CALL  writeLineHL
20D1             L130:
20D1                     ;;testExpression.j(62)   
20D1             L131:
20D1                     ;;testExpression.j(63)     j = i + 5;    // 15
20D1             L132:
20D1 2A 02 50            LD    HL,(05002H)
20D4             L133:
20D4 11 05 00            LD    DE,5
20D7 19                  ADD   HL,DE
20D8             L134:
20D8 22 04 50            LD    (05004H),HL
20DB             L135:
20DB                     ;;testExpression.j(64)     println(j);
20DB             L136:
20DB 2A 04 50            LD    HL,(05004H)
20DE             L137:
20DE CD 9B 29            CALL  writeLineHL
20E1             L138:
20E1                     ;;testExpression.j(65)     j = 6 + i;        // 16
20E1             L139:
20E1 3E 06               LD    A,6
20E3             L140:
20E3 6F                  LD    L,A
20E4 26 00               LD    H,0
20E6             L141:
20E6 ED 5B 02 50         LD    DE,(05002H)
20EA 19                  ADD   HL,DE
20EB             L142:
20EB 22 04 50            LD    (05004H),HL
20EE             L143:
20EE                     ;;testExpression.j(66)     println(j);
20EE             L144:
20EE 2A 04 50            LD    HL,(05004H)
20F1             L145:
20F1 CD 9B 29            CALL  writeLineHL
20F4             L146:
20F4                     ;;testExpression.j(67)     j = 7;
20F4             L147:
20F4 3E 07               LD    A,7
20F6             L148:
20F6 6F                  LD    L,A
20F7 26 00               LD    H,0
20F9 22 04 50            LD    (05004H),HL
20FC             L149:
20FC                     ;;testExpression.j(68)     j = i + j;        // 17
20FC             L150:
20FC 2A 02 50            LD    HL,(05002H)
20FF             L151:
20FF ED 5B 04 50         LD    DE,(05004H)
2103 19                  ADD   HL,DE
2104             L152:
2104 22 04 50            LD    (05004H),HL
2107             L153:
2107                     ;;testExpression.j(69)     println(j);
2107             L154:
2107 2A 04 50            LD    HL,(05004H)
210A             L155:
210A CD 9B 29            CALL  writeLineHL
210D             L156:
210D                     ;;testExpression.j(70)   
210D             L157:
210D                     ;;testExpression.j(71)     /*************************/
210D             L158:
210D                     ;;testExpression.j(72)     /* Dual term subtraction */
210D             L159:
210D                     ;;testExpression.j(73)     /*************************/
210D             L160:
210D                     ;;testExpression.j(74)     b = 33;
210D             L161:
210D 3E 21               LD    A,33
210F             L162:
210F 32 00 50            LD    (05000H),A
2112             L163:
2112                     ;;testExpression.j(75)     c = 12;
2112             L164:
2112 3E 0C               LD    A,12
2114             L165:
2114 32 01 50            LD    (05001H),A
2117             L166:
2117                     ;;testExpression.j(76)     println(19 - 1);    // 18
2117             L167:
2117 3E 13               LD    A,19
2119             L168:
2119 D6 01               SUB   A,1
211B             L169:
211B CD C3 29            CALL  writeLineA
211E             L170:
211E                     ;;testExpression.j(77)     println(b - 14);    // 19
211E             L171:
211E 3A 00 50            LD    A,(05000H)
2121             L172:
2121 D6 0E               SUB   A,14
2123             L173:
2123 CD C3 29            CALL  writeLineA
2126             L174:
2126                     ;;testExpression.j(78)     println(53 - b);    // 20
2126             L175:
2126 3E 35               LD    A,53
2128             L176:
2128 47                  LD    B,A
2129 3A 00 50            LD    A,(05000H)
212C 90                  SUB   A,B
212D             L177:
212D CD C3 29            CALL  writeLineA
2130             L178:
2130                     ;;testExpression.j(79)     println(b - c);     // 21
2130             L179:
2130 3A 00 50            LD    A,(05000H)
2133             L180:
2133 47                  LD    B,A
2134 3A 01 50            LD    A,(05001H)
2137 90                  SUB   A,B
2138             L181:
2138 CD C3 29            CALL  writeLineA
213B             L182:
213B                     ;;testExpression.j(80)   
213B             L183:
213B                     ;;testExpression.j(81)     c = 24 - 2;
213B             L184:
213B 3E 18               LD    A,24
213D             L185:
213D D6 02               SUB   A,2
213F             L186:
213F 32 01 50            LD    (05001H),A
2142             L187:
2142                     ;;testExpression.j(82)     println(c);         // 22
2142             L188:
2142 3A 01 50            LD    A,(05001H)
2145             L189:
2145 CD C3 29            CALL  writeLineA
2148             L190:
2148                     ;;testExpression.j(83)     c = b - 10;
2148             L191:
2148 3A 00 50            LD    A,(05000H)
214B             L192:
214B D6 0A               SUB   A,10
214D             L193:
214D 32 01 50            LD    (05001H),A
2150             L194:
2150                     ;;testExpression.j(84)     println(c);         // 23
2150             L195:
2150 3A 01 50            LD    A,(05001H)
2153             L196:
2153 CD C3 29            CALL  writeLineA
2156             L197:
2156                     ;;testExpression.j(85)     c = 57 - b;
2156             L198:
2156 3E 39               LD    A,57
2158             L199:
2158 47                  LD    B,A
2159 3A 00 50            LD    A,(05000H)
215C 90                  SUB   A,B
215D             L200:
215D 32 01 50            LD    (05001H),A
2160             L201:
2160                     ;;testExpression.j(86)     println(c);         // 24
2160             L202:
2160 3A 01 50            LD    A,(05001H)
2163             L203:
2163 CD C3 29            CALL  writeLineA
2166             L204:
2166                     ;;testExpression.j(87)     c = 8;
2166             L205:
2166 3E 08               LD    A,8
2168             L206:
2168 32 01 50            LD    (05001H),A
216B             L207:
216B                     ;;testExpression.j(88)     c = b - c;
216B             L208:
216B 3A 00 50            LD    A,(05000H)
216E             L209:
216E 47                  LD    B,A
216F 3A 01 50            LD    A,(05001H)
2172 90                  SUB   A,B
2173             L210:
2173 32 01 50            LD    (05001H),A
2176             L211:
2176                     ;;testExpression.j(89)     println(c);         // 25
2176             L212:
2176 3A 01 50            LD    A,(05001H)
2179             L213:
2179 CD C3 29            CALL  writeLineA
217C             L214:
217C                     ;;testExpression.j(90)   
217C             L215:
217C                     ;;testExpression.j(91)     i = 40;
217C             L216:
217C 3E 28               LD    A,40
217E             L217:
217E 6F                  LD    L,A
217F 26 00               LD    H,0
2181 22 02 50            LD    (05002H),HL
2184             L218:
2184                     ;;testExpression.j(92)     println(i - 14);    // 26
2184             L219:
2184 2A 02 50            LD    HL,(05002H)
2187             L220:
2187 11 0E 00            LD    DE,14
218A B7                  OR    A
218B ED 52               SBC   HL,DE
218D             L221:
218D CD 9B 29            CALL  writeLineHL
2190             L222:
2190                     ;;testExpression.j(93)     println(67 - i);    // 27
2190             L223:
2190 3E 43               LD    A,67
2192             L224:
2192 6F                  LD    L,A
2193 26 00               LD    H,0
2195             L225:
2195 ED 5B 02 50         LD    DE,(05002H)
2199 B7                  OR    A
219A ED 52               SBC   HL,DE
219C             L226:
219C CD 9B 29            CALL  writeLineHL
219F             L227:
219F                     ;;testExpression.j(94)     b = 12;
219F             L228:
219F 3E 0C               LD    A,12
21A1             L229:
21A1 32 00 50            LD    (05000H),A
21A4             L230:
21A4                     ;;testExpression.j(95)     println(i - b);     // 28
21A4             L231:
21A4 2A 02 50            LD    HL,(05002H)
21A7             L232:
21A7 47                  LD    B,A
21A8 3A 00 50            LD    A,(05000H)
21AB 5F                  LD    E,A
21AC 78                  LD    A,B
21AD 16 00               LD    D,0
21AF B7                  OR    A
21B0 ED 52               SBC   HL,DE
21B2             L233:
21B2 CD 9B 29            CALL  writeLineHL
21B5             L234:
21B5                     ;;testExpression.j(96)     b = 69;
21B5             L235:
21B5 3E 45               LD    A,69
21B7             L236:
21B7 32 00 50            LD    (05000H),A
21BA             L237:
21BA                     ;;testExpression.j(97)     println(b - i);     // 29
21BA             L238:
21BA 3A 00 50            LD    A,(05000H)
21BD             L239:
21BD 6F                  LD    L,A
21BE 26 00               LD    H,0
21C0             L240:
21C0 ED 5B 02 50         LD    DE,(05002H)
21C4 B7                  OR    A
21C5 ED 52               SBC   HL,DE
21C7             L241:
21C7 CD 9B 29            CALL  writeLineHL
21CA             L242:
21CA                     ;;testExpression.j(98)   
21CA             L243:
21CA                     ;;testExpression.j(99)     j = i - 10;
21CA             L244:
21CA 2A 02 50            LD    HL,(05002H)
21CD             L245:
21CD 11 0A 00            LD    DE,10
21D0 B7                  OR    A
21D1 ED 52               SBC   HL,DE
21D3             L246:
21D3 22 04 50            LD    (05004H),HL
21D6             L247:
21D6                     ;;testExpression.j(100)     println(j);         // 30
21D6             L248:
21D6 2A 04 50            LD    HL,(05004H)
21D9             L249:
21D9 CD 9B 29            CALL  writeLineHL
21DC             L250:
21DC                     ;;testExpression.j(101)     j = 71 - i;
21DC             L251:
21DC 3E 47               LD    A,71
21DE             L252:
21DE 6F                  LD    L,A
21DF 26 00               LD    H,0
21E1             L253:
21E1 ED 5B 02 50         LD    DE,(05002H)
21E5 B7                  OR    A
21E6 ED 52               SBC   HL,DE
21E8             L254:
21E8 22 04 50            LD    (05004H),HL
21EB             L255:
21EB                     ;;testExpression.j(102)     println(j);         // 31
21EB             L256:
21EB 2A 04 50            LD    HL,(05004H)
21EE             L257:
21EE CD 9B 29            CALL  writeLineHL
21F1             L258:
21F1                     ;;testExpression.j(103)     j = 8;
21F1             L259:
21F1 3E 08               LD    A,8
21F3             L260:
21F3 6F                  LD    L,A
21F4 26 00               LD    H,0
21F6 22 04 50            LD    (05004H),HL
21F9             L261:
21F9                     ;;testExpression.j(104)     j = i - j;
21F9             L262:
21F9 2A 02 50            LD    HL,(05002H)
21FC             L263:
21FC ED 5B 04 50         LD    DE,(05004H)
2200 B7                  OR    A
2201 ED 52               SBC   HL,DE
2203             L264:
2203 22 04 50            LD    (05004H),HL
2206             L265:
2206                     ;;testExpression.j(105)     println(j);         // 32
2206             L266:
2206 2A 04 50            LD    HL,(05004H)
2209             L267:
2209 CD 9B 29            CALL  writeLineHL
220C             L268:
220C                     ;;testExpression.j(106)     
220C             L269:
220C                     ;;testExpression.j(107)     /****************************/
220C             L270:
220C                     ;;testExpression.j(108)     /* Dual term multiplication */
220C             L271:
220C                     ;;testExpression.j(109)     /****************************/
220C             L272:
220C                     ;;testExpression.j(110)     println(3 * 11);    // 33
220C             L273:
220C 3E 03               LD    A,3
220E             L274:
220E 47                  LD    B,A
220F 0E 0B               LD    C,11
2211 ED 4C               MLT   BC
2213 79                  LD    A,C
2214             L275:
2214 CD C3 29            CALL  writeLineA
2217             L276:
2217                     ;;testExpression.j(111)     b = 17;
2217             L277:
2217 3E 11               LD    A,17
2219             L278:
2219 32 00 50            LD    (05000H),A
221C             L279:
221C                     ;;testExpression.j(112)     println(b * 2);     // 34
221C             L280:
221C 3A 00 50            LD    A,(05000H)
221F             L281:
221F 47                  LD    B,A
2220 0E 02               LD    C,2
2222 ED 4C               MLT   BC
2224 79                  LD    A,C
2225             L282:
2225 CD C3 29            CALL  writeLineA
2228             L283:
2228                     ;;testExpression.j(113)     b = 7;
2228             L284:
2228 3E 07               LD    A,7
222A             L285:
222A 32 00 50            LD    (05000H),A
222D             L286:
222D                     ;;testExpression.j(114)     println(5 * b);     // 35
222D             L287:
222D 3E 05               LD    A,5
222F             L288:
222F 47                  LD    B,A
2230 3A 00 50            LD    A,(05000H)
2233 4F                  LD    C,A
2234 ED 4C               MLT   BC
2236 79                  LD    A,C
2237             L289:
2237 CD C3 29            CALL  writeLineA
223A             L290:
223A                     ;;testExpression.j(115)     b = 2;
223A             L291:
223A 3E 02               LD    A,2
223C             L292:
223C 32 00 50            LD    (05000H),A
223F             L293:
223F                     ;;testExpression.j(116)     c = 18;
223F             L294:
223F 3E 12               LD    A,18
2241             L295:
2241 32 01 50            LD    (05001H),A
2244             L296:
2244                     ;;testExpression.j(117)     println(b * c);     // 36
2244             L297:
2244 3A 00 50            LD    A,(05000H)
2247             L298:
2247 47                  LD    B,A
2248 3A 01 50            LD    A,(05001H)
224B 4F                  LD    C,A
224C ED 4C               MLT   BC
224E 79                  LD    A,C
224F             L299:
224F CD C3 29            CALL  writeLineA
2252             L300:
2252                     ;;testExpression.j(118)     
2252             L301:
2252                     ;;testExpression.j(119)     c = 37 * 1;
2252             L302:
2252 3E 25               LD    A,37
2254             L303:
2254 47                  LD    B,A
2255 0E 01               LD    C,1
2257 ED 4C               MLT   BC
2259 79                  LD    A,C
225A             L304:
225A 32 01 50            LD    (05001H),A
225D             L305:
225D                     ;;testExpression.j(120)     println(c);         // 37
225D             L306:
225D 3A 01 50            LD    A,(05001H)
2260             L307:
2260 CD C3 29            CALL  writeLineA
2263             L308:
2263                     ;;testExpression.j(121)     b = 2;
2263             L309:
2263 3E 02               LD    A,2
2265             L310:
2265 32 00 50            LD    (05000H),A
2268             L311:
2268                     ;;testExpression.j(122)     c = b * 19;
2268             L312:
2268 3A 00 50            LD    A,(05000H)
226B             L313:
226B 47                  LD    B,A
226C 0E 13               LD    C,19
226E ED 4C               MLT   BC
2270 79                  LD    A,C
2271             L314:
2271 32 01 50            LD    (05001H),A
2274             L315:
2274                     ;;testExpression.j(123)     println(c);         // 38
2274             L316:
2274 3A 01 50            LD    A,(05001H)
2277             L317:
2277 CD C3 29            CALL  writeLineA
227A             L318:
227A                     ;;testExpression.j(124)     b = 3;
227A             L319:
227A 3E 03               LD    A,3
227C             L320:
227C 32 00 50            LD    (05000H),A
227F             L321:
227F                     ;;testExpression.j(125)     c = 13 * b;
227F             L322:
227F 3E 0D               LD    A,13
2281             L323:
2281 47                  LD    B,A
2282 3A 00 50            LD    A,(05000H)
2285 4F                  LD    C,A
2286 ED 4C               MLT   BC
2288 79                  LD    A,C
2289             L324:
2289 32 01 50            LD    (05001H),A
228C             L325:
228C                     ;;testExpression.j(126)     println(c);         // 39
228C             L326:
228C 3A 01 50            LD    A,(05001H)
228F             L327:
228F CD C3 29            CALL  writeLineA
2292             L328:
2292                     ;;testExpression.j(127)     b = 5;
2292             L329:
2292 3E 05               LD    A,5
2294             L330:
2294 32 00 50            LD    (05000H),A
2297             L331:
2297                     ;;testExpression.j(128)     c = 8;
2297             L332:
2297 3E 08               LD    A,8
2299             L333:
2299 32 01 50            LD    (05001H),A
229C             L334:
229C                     ;;testExpression.j(129)     c = b * c;
229C             L335:
229C 3A 00 50            LD    A,(05000H)
229F             L336:
229F 47                  LD    B,A
22A0 3A 01 50            LD    A,(05001H)
22A3 4F                  LD    C,A
22A4 ED 4C               MLT   BC
22A6 79                  LD    A,C
22A7             L337:
22A7 32 01 50            LD    (05001H),A
22AA             L338:
22AA                     ;;testExpression.j(130)     println(c);         // 40
22AA             L339:
22AA 3A 01 50            LD    A,(05001H)
22AD             L340:
22AD CD C3 29            CALL  writeLineA
22B0             L341:
22B0                     ;;testExpression.j(131)   
22B0             L342:
22B0                     ;;testExpression.j(132)     /**********************/
22B0             L343:
22B0                     ;;testExpression.j(133)     /* Dual term division */
22B0             L344:
22B0                     ;;testExpression.j(134)     /**********************/
22B0             L345:
22B0                     ;;testExpression.j(135)     println(123 / 3);   // 41
22B0             L346:
22B0 3E 7B               LD    A,123
22B2             L347:
22B2 0E 03               LD    C,3
22B4 CD 59 29            CALL  div8
22B7             L348:
22B7 CD C3 29            CALL  writeLineA
22BA             L349:
22BA                     ;;testExpression.j(136)     b = 126;
22BA             L350:
22BA 3E 7E               LD    A,126
22BC             L351:
22BC 32 00 50            LD    (05000H),A
22BF             L352:
22BF                     ;;testExpression.j(137)     println(b / 3);     // 42
22BF             L353:
22BF 3A 00 50            LD    A,(05000H)
22C2             L354:
22C2 0E 03               LD    C,3
22C4 CD 59 29            CALL  div8
22C7             L355:
22C7 CD C3 29            CALL  writeLineA
22CA             L356:
22CA                     ;;testExpression.j(138)     b = 3;
22CA             L357:
22CA 3E 03               LD    A,3
22CC             L358:
22CC 32 00 50            LD    (05000H),A
22CF             L359:
22CF                     ;;testExpression.j(139)     println(129 / b);   // 43
22CF             L360:
22CF 3E 81               LD    A,129
22D1             L361:
22D1 47                  LD    B,A
22D2 3A 00 50            LD    A,(05000H)
22D5 4F                  LD    C,A
22D6 78                  LD    A,B
22D7 CD 59 29            CALL  div8
22DA             L362:
22DA CD C3 29            CALL  writeLineA
22DD             L363:
22DD                     ;;testExpression.j(140)     b = 132;
22DD             L364:
22DD 3E 84               LD    A,132
22DF             L365:
22DF 32 00 50            LD    (05000H),A
22E2             L366:
22E2                     ;;testExpression.j(141)     c = 3;
22E2             L367:
22E2 3E 03               LD    A,3
22E4             L368:
22E4 32 01 50            LD    (05001H),A
22E7             L369:
22E7                     ;;testExpression.j(142)     println(b / c);     // 44
22E7             L370:
22E7 3A 00 50            LD    A,(05000H)
22EA             L371:
22EA 47                  LD    B,A
22EB 3A 01 50            LD    A,(05001H)
22EE 4F                  LD    C,A
22EF 78                  LD    A,B
22F0 CD 59 29            CALL  div8
22F3             L372:
22F3 CD C3 29            CALL  writeLineA
22F6             L373:
22F6                     ;;testExpression.j(143)     
22F6             L374:
22F6                     ;;testExpression.j(144)     c = 135 / 3;
22F6             L375:
22F6 3E 87               LD    A,135
22F8             L376:
22F8 0E 03               LD    C,3
22FA CD 59 29            CALL  div8
22FD             L377:
22FD 32 01 50            LD    (05001H),A
2300             L378:
2300                     ;;testExpression.j(145)     println(c);         // 45
2300             L379:
2300 3A 01 50            LD    A,(05001H)
2303             L380:
2303 CD C3 29            CALL  writeLineA
2306             L381:
2306                     ;;testExpression.j(146)     b = 138;
2306             L382:
2306 3E 8A               LD    A,138
2308             L383:
2308 32 00 50            LD    (05000H),A
230B             L384:
230B                     ;;testExpression.j(147)     c = b / 3;
230B             L385:
230B 3A 00 50            LD    A,(05000H)
230E             L386:
230E 0E 03               LD    C,3
2310 CD 59 29            CALL  div8
2313             L387:
2313 32 01 50            LD    (05001H),A
2316             L388:
2316                     ;;testExpression.j(148)     println(c);         // 46
2316             L389:
2316 3A 01 50            LD    A,(05001H)
2319             L390:
2319 CD C3 29            CALL  writeLineA
231C             L391:
231C                     ;;testExpression.j(149)     b = 3;
231C             L392:
231C 3E 03               LD    A,3
231E             L393:
231E 32 00 50            LD    (05000H),A
2321             L394:
2321                     ;;testExpression.j(150)     c = 141 / b;
2321             L395:
2321 3E 8D               LD    A,141
2323             L396:
2323 47                  LD    B,A
2324 3A 00 50            LD    A,(05000H)
2327 4F                  LD    C,A
2328 78                  LD    A,B
2329 CD 59 29            CALL  div8
232C             L397:
232C 32 01 50            LD    (05001H),A
232F             L398:
232F                     ;;testExpression.j(151)     println(c);         // 47
232F             L399:
232F 3A 01 50            LD    A,(05001H)
2332             L400:
2332 CD C3 29            CALL  writeLineA
2335             L401:
2335                     ;;testExpression.j(152)     b = 144;
2335             L402:
2335 3E 90               LD    A,144
2337             L403:
2337 32 00 50            LD    (05000H),A
233A             L404:
233A                     ;;testExpression.j(153)     c = 3;
233A             L405:
233A 3E 03               LD    A,3
233C             L406:
233C 32 01 50            LD    (05001H),A
233F             L407:
233F                     ;;testExpression.j(154)     c = b / c;
233F             L408:
233F 3A 00 50            LD    A,(05000H)
2342             L409:
2342 47                  LD    B,A
2343 3A 01 50            LD    A,(05001H)
2346 4F                  LD    C,A
2347 78                  LD    A,B
2348 CD 59 29            CALL  div8
234B             L410:
234B 32 01 50            LD    (05001H),A
234E             L411:
234E                     ;;testExpression.j(155)     println(c);         // 48
234E             L412:
234E 3A 01 50            LD    A,(05001H)
2351             L413:
2351 CD C3 29            CALL  writeLineA
2354             L414:
2354                     ;;testExpression.j(156)   
2354             L415:
2354                     ;;testExpression.j(157)     /*************************/
2354             L416:
2354                     ;;testExpression.j(158)     /* possible loss of data */
2354             L417:
2354                     ;;testExpression.j(159)     /*************************/
2354             L418:
2354                     ;;testExpression.j(160)     println("Nu komen 251 en 252");
2354             L419:
2354 21 A1 27            LD    HL,L909
2357             L420:
2357 CD 48 28            CALL  writeLineStr
235A             L421:
235A                     ;;testExpression.j(161)     b = 507;
235A             L422:
235A 21 FB 01            LD    HL,507
235D             L423:
235D 7D                  LD    A,L
235E 32 00 50            LD    (05000H),A
2361             L424:
2361                     ;;testExpression.j(162)     println(b);         // 251
2361             L425:
2361 3A 00 50            LD    A,(05000H)
2364             L426:
2364 CD C3 29            CALL  writeLineA
2367             L427:
2367                     ;;testExpression.j(163)     i = 508;
2367             L428:
2367 21 FC 01            LD    HL,508
236A             L429:
236A 22 02 50            LD    (05002H),HL
236D             L430:
236D                     ;;testExpression.j(164)     b = i;
236D             L431:
236D 2A 02 50            LD    HL,(05002H)
2370             L432:
2370 7D                  LD    A,L
2371 32 00 50            LD    (05000H),A
2374             L433:
2374                     ;;testExpression.j(165)     println(b);         // 252
2374             L434:
2374 3A 00 50            LD    A,(05000H)
2377             L435:
2377 CD C3 29            CALL  writeLineA
237A             L436:
237A                     ;;testExpression.j(166)   
237A             L437:
237A                     ;;testExpression.j(167)     println("Nu komen -253 en -254");
237A             L438:
237A 21 B5 27            LD    HL,L910
237D             L439:
237D CD 48 28            CALL  writeLineStr
2380             L440:
2380                     ;;testExpression.j(168)     b = b - 505;
2380             L441:
2380 3A 00 50            LD    A,(05000H)
2383             L442:
2383 6F                  LD    L,A
2384 26 00               LD    H,0
2386             L443:
2386 11 F9 01            LD    DE,505
2389 B7                  OR    A
238A ED 52               SBC   HL,DE
238C             L444:
238C 7D                  LD    A,L
238D 32 00 50            LD    (05000H),A
2390             L445:
2390                     ;;testExpression.j(169)     println(b);         // 252 - 505 = -253
2390             L446:
2390 3A 00 50            LD    A,(05000H)
2393             L447:
2393 CD C3 29            CALL  writeLineA
2396             L448:
2396                     ;;testExpression.j(170)     i = i + 5;
2396             L449:
2396 2A 02 50            LD    HL,(05002H)
2399             L450:
2399 11 05 00            LD    DE,5
239C 19                  ADD   HL,DE
239D             L451:
239D 22 02 50            LD    (05002H),HL
23A0             L452:
23A0                     ;;testExpression.j(171)     b = b - i;
23A0             L453:
23A0 3A 00 50            LD    A,(05000H)
23A3             L454:
23A3 6F                  LD    L,A
23A4 26 00               LD    H,0
23A6             L455:
23A6 ED 5B 02 50         LD    DE,(05002H)
23AA B7                  OR    A
23AB ED 52               SBC   HL,DE
23AD             L456:
23AD 7D                  LD    A,L
23AE 32 00 50            LD    (05000H),A
23B1             L457:
23B1                     ;;testExpression.j(172)     println(b);         // -233 - 11 = -254
23B1             L458:
23B1 3A 00 50            LD    A,(05000H)
23B4             L459:
23B4 CD C3 29            CALL  writeLineA
23B7             L460:
23B7                     ;;testExpression.j(173)     
23B7             L461:
23B7                     ;;testExpression.j(174)     println("Nu komen 255 en 256");
23B7             L462:
23B7 21 CB 27            LD    HL,L911
23BA             L463:
23BA CD 48 28            CALL  writeLineStr
23BD             L464:
23BD                     ;;testExpression.j(175)     b = 255;
23BD             L465:
23BD 3E FF               LD    A,255
23BF             L466:
23BF 32 00 50            LD    (05000H),A
23C2             L467:
23C2                     ;;testExpression.j(176)     println(b);         // 255
23C2             L468:
23C2 3A 00 50            LD    A,(05000H)
23C5             L469:
23C5 CD C3 29            CALL  writeLineA
23C8             L470:
23C8                     ;;testExpression.j(177)     //LD    A,255
23C8             L471:
23C8                     ;;testExpression.j(178)     //LD    (04001H),A
23C8             L472:
23C8                     ;;testExpression.j(179)     //LD    A,(04001H)
23C8             L473:
23C8                     ;;testExpression.j(180)     //CALL  writeA
23C8             L474:
23C8                     ;;testExpression.j(181)     //OK
23C8             L475:
23C8                     ;;testExpression.j(182)   
23C8             L476:
23C8                     ;;testExpression.j(183)     /**********************/
23C8             L477:
23C8                     ;;testExpression.j(184)     /* Single term 16-bit */
23C8             L478:
23C8                     ;;testExpression.j(185)     /**********************/
23C8             L479:
23C8                     ;;testExpression.j(186)     i = 256;
23C8             L480:
23C8 21 00 01            LD    HL,256
23CB             L481:
23CB 22 02 50            LD    (05002H),HL
23CE             L482:
23CE                     ;;testExpression.j(187)     println(i);         // 256
23CE             L483:
23CE 2A 02 50            LD    HL,(05002H)
23D1             L484:
23D1 CD 9B 29            CALL  writeLineHL
23D4             L485:
23D4                     ;;testExpression.j(188)     //LD    HL,256
23D4             L486:
23D4                     ;;testExpression.j(189)     //LD    (04006H),HL
23D4             L487:
23D4                     ;;testExpression.j(190)     //LD    HL,(04006H)
23D4             L488:
23D4                     ;;testExpression.j(191)     //CALL  writeHL
23D4             L489:
23D4                     ;;testExpression.j(192)     //OK
23D4             L490:
23D4                     ;;testExpression.j(193)   
23D4             L491:
23D4                     ;;testExpression.j(194)     println("Nu komen 1000..1047");
23D4             L492:
23D4 21 DF 27            LD    HL,L912
23D7             L493:
23D7 CD 48 28            CALL  writeLineStr
23DA             L494:
23DA                     ;;testExpression.j(195)     println(1000);      // 1000
23DA             L495:
23DA 21 E8 03            LD    HL,1000
23DD             L496:
23DD CD 9B 29            CALL  writeLineHL
23E0             L497:
23E0                     ;;testExpression.j(196)     j = 1001;
23E0             L498:
23E0 21 E9 03            LD    HL,1001
23E3             L499:
23E3 22 04 50            LD    (05004H),HL
23E6             L500:
23E6                     ;;testExpression.j(197)     println(j);         // 1001
23E6             L501:
23E6 2A 04 50            LD    HL,(05004H)
23E9             L502:
23E9 CD 9B 29            CALL  writeLineHL
23EC             L503:
23EC                     ;;testExpression.j(198)   
23EC             L504:
23EC                     ;;testExpression.j(199)     /************************/
23EC             L505:
23EC                     ;;testExpression.j(200)     /* Dual term addition   */
23EC             L506:
23EC                     ;;testExpression.j(201)     /************************/
23EC             L507:
23EC                     ;;testExpression.j(202)     println(1000 + 2);  // 1002
23EC             L508:
23EC 21 E8 03            LD    HL,1000
23EF             L509:
23EF 11 02 00            LD    DE,2
23F2 19                  ADD   HL,DE
23F3             L510:
23F3 CD 9B 29            CALL  writeLineHL
23F6             L511:
23F6                     ;;testExpression.j(203)     println(3 + 1000);  // 1003
23F6             L512:
23F6 3E 03               LD    A,3
23F8             L513:
23F8 6F                  LD    L,A
23F9 26 00               LD    H,0
23FB             L514:
23FB 11 E8 03            LD    DE,1000
23FE 19                  ADD   HL,DE
23FF             L515:
23FF CD 9B 29            CALL  writeLineHL
2402             L516:
2402                     ;;testExpression.j(204)     println(500 + 504); // 1004
2402             L517:
2402 21 F4 01            LD    HL,500
2405             L518:
2405 11 F8 01            LD    DE,504
2408 19                  ADD   HL,DE
2409             L519:
2409 CD 9B 29            CALL  writeLineHL
240C             L520:
240C                     ;;testExpression.j(205)     i = 1000 + 5;
240C             L521:
240C 21 E8 03            LD    HL,1000
240F             L522:
240F 11 05 00            LD    DE,5
2412 19                  ADD   HL,DE
2413             L523:
2413 22 02 50            LD    (05002H),HL
2416             L524:
2416                     ;;testExpression.j(206)     println(i);         // 1005
2416             L525:
2416 2A 02 50            LD    HL,(05002H)
2419             L526:
2419 CD 9B 29            CALL  writeLineHL
241C             L527:
241C                     ;;testExpression.j(207)     i = 6 + 1000;
241C             L528:
241C 3E 06               LD    A,6
241E             L529:
241E 6F                  LD    L,A
241F 26 00               LD    H,0
2421             L530:
2421 11 E8 03            LD    DE,1000
2424 19                  ADD   HL,DE
2425             L531:
2425 22 02 50            LD    (05002H),HL
2428             L532:
2428                     ;;testExpression.j(208)     println(i);         // 1006
2428             L533:
2428 2A 02 50            LD    HL,(05002H)
242B             L534:
242B CD 9B 29            CALL  writeLineHL
242E             L535:
242E                     ;;testExpression.j(209)     i = 500 + 507;
242E             L536:
242E 21 F4 01            LD    HL,500
2431             L537:
2431 11 FB 01            LD    DE,507
2434 19                  ADD   HL,DE
2435             L538:
2435 22 02 50            LD    (05002H),HL
2438             L539:
2438                     ;;testExpression.j(210)     println(i);         // 1007
2438             L540:
2438 2A 02 50            LD    HL,(05002H)
243B             L541:
243B CD 9B 29            CALL  writeLineHL
243E             L542:
243E                     ;;testExpression.j(211)     
243E             L543:
243E                     ;;testExpression.j(212)     j = 1000;
243E             L544:
243E 21 E8 03            LD    HL,1000
2441             L545:
2441 22 04 50            LD    (05004H),HL
2444             L546:
2444                     ;;testExpression.j(213)     b = 10;
2444             L547:
2444 3E 0A               LD    A,10
2446             L548:
2446 32 00 50            LD    (05000H),A
2449             L549:
2449                     ;;testExpression.j(214)     i = 514;
2449             L550:
2449 21 02 02            LD    HL,514
244C             L551:
244C 22 02 50            LD    (05002H),HL
244F             L552:
244F                     ;;testExpression.j(215)     println(j + 8);     // 1008
244F             L553:
244F 2A 04 50            LD    HL,(05004H)
2452             L554:
2452 11 08 00            LD    DE,8
2455 19                  ADD   HL,DE
2456             L555:
2456 CD 9B 29            CALL  writeLineHL
2459             L556:
2459                     ;;testExpression.j(216)     println(9 + j);     // 1009
2459             L557:
2459 3E 09               LD    A,9
245B             L558:
245B 6F                  LD    L,A
245C 26 00               LD    H,0
245E             L559:
245E ED 5B 04 50         LD    DE,(05004H)
2462 19                  ADD   HL,DE
2463             L560:
2463 CD 9B 29            CALL  writeLineHL
2466             L561:
2466                     ;;testExpression.j(217)     println(j + b);     // 1010
2466             L562:
2466 2A 04 50            LD    HL,(05004H)
2469             L563:
2469 47                  LD    B,A
246A 3A 00 50            LD    A,(05000H)
246D 5F                  LD    E,A
246E 78                  LD    A,B
246F 16 00               LD    D,0
2471 19                  ADD   HL,DE
2472             L564:
2472 CD 9B 29            CALL  writeLineHL
2475             L565:
2475                     ;;testExpression.j(218)     b++;
2475             L566:
2475 21 00 50            LD    HL,05000H
2478 34                  INC   (HL)
2479             L567:
2479                     ;;testExpression.j(219)     println(b + j);     // 1011
2479             L568:
2479 3A 00 50            LD    A,(05000H)
247C             L569:
247C 6F                  LD    L,A
247D 26 00               LD    H,0
247F             L570:
247F ED 5B 04 50         LD    DE,(05004H)
2483 19                  ADD   HL,DE
2484             L571:
2484 CD 9B 29            CALL  writeLineHL
2487             L572:
2487                     ;;testExpression.j(220)     j = 500;
2487             L573:
2487 21 F4 01            LD    HL,500
248A             L574:
248A 22 04 50            LD    (05004H),HL
248D             L575:
248D                     ;;testExpression.j(221)     println(j + 512);   // 1012
248D             L576:
248D 2A 04 50            LD    HL,(05004H)
2490             L577:
2490 11 00 02            LD    DE,512
2493 19                  ADD   HL,DE
2494             L578:
2494 CD 9B 29            CALL  writeLineHL
2497             L579:
2497                     ;;testExpression.j(222)     println(513 + j);   // 1013
2497             L580:
2497 21 01 02            LD    HL,513
249A             L581:
249A ED 5B 04 50         LD    DE,(05004H)
249E 19                  ADD   HL,DE
249F             L582:
249F CD 9B 29            CALL  writeLineHL
24A2             L583:
24A2                     ;;testExpression.j(223)     println(i + j);     // 1014
24A2             L584:
24A2 2A 02 50            LD    HL,(05002H)
24A5             L585:
24A5 ED 5B 04 50         LD    DE,(05004H)
24A9 19                  ADD   HL,DE
24AA             L586:
24AA CD 9B 29            CALL  writeLineHL
24AD             L587:
24AD                     ;;testExpression.j(224)     
24AD             L588:
24AD                     ;;testExpression.j(225)     j = 1000;
24AD             L589:
24AD 21 E8 03            LD    HL,1000
24B0             L590:
24B0 22 04 50            LD    (05004H),HL
24B3             L591:
24B3                     ;;testExpression.j(226)     b = 17;
24B3             L592:
24B3 3E 11               LD    A,17
24B5             L593:
24B5 32 00 50            LD    (05000H),A
24B8             L594:
24B8                     ;;testExpression.j(227)     i = j + 15;
24B8             L595:
24B8 2A 04 50            LD    HL,(05004H)
24BB             L596:
24BB 11 0F 00            LD    DE,15
24BE 19                  ADD   HL,DE
24BF             L597:
24BF 22 02 50            LD    (05002H),HL
24C2             L598:
24C2                     ;;testExpression.j(228)     println(i);         // 1015
24C2             L599:
24C2 2A 02 50            LD    HL,(05002H)
24C5             L600:
24C5 CD 9B 29            CALL  writeLineHL
24C8             L601:
24C8                     ;;testExpression.j(229)     i = 16 + j;
24C8             L602:
24C8 3E 10               LD    A,16
24CA             L603:
24CA 6F                  LD    L,A
24CB 26 00               LD    H,0
24CD             L604:
24CD ED 5B 04 50         LD    DE,(05004H)
24D1 19                  ADD   HL,DE
24D2             L605:
24D2 22 02 50            LD    (05002H),HL
24D5             L606:
24D5                     ;;testExpression.j(230)     println(i);         // 1016
24D5             L607:
24D5 2A 02 50            LD    HL,(05002H)
24D8             L608:
24D8 CD 9B 29            CALL  writeLineHL
24DB             L609:
24DB                     ;;testExpression.j(231)     i = j + b;
24DB             L610:
24DB 2A 04 50            LD    HL,(05004H)
24DE             L611:
24DE 47                  LD    B,A
24DF 3A 00 50            LD    A,(05000H)
24E2 5F                  LD    E,A
24E3 78                  LD    A,B
24E4 16 00               LD    D,0
24E6 19                  ADD   HL,DE
24E7             L612:
24E7 22 02 50            LD    (05002H),HL
24EA             L613:
24EA                     ;;testExpression.j(232)     println(i);         // 1017
24EA             L614:
24EA 2A 02 50            LD    HL,(05002H)
24ED             L615:
24ED CD 9B 29            CALL  writeLineHL
24F0             L616:
24F0                     ;;testExpression.j(233)     b++;
24F0             L617:
24F0 21 00 50            LD    HL,05000H
24F3 34                  INC   (HL)
24F4             L618:
24F4                     ;;testExpression.j(234)     i = b + j;
24F4             L619:
24F4 3A 00 50            LD    A,(05000H)
24F7             L620:
24F7 6F                  LD    L,A
24F8 26 00               LD    H,0
24FA             L621:
24FA ED 5B 04 50         LD    DE,(05004H)
24FE 19                  ADD   HL,DE
24FF             L622:
24FF 22 02 50            LD    (05002H),HL
2502             L623:
2502                     ;;testExpression.j(235)     println(i);         // 1018
2502             L624:
2502 2A 02 50            LD    HL,(05002H)
2505             L625:
2505 CD 9B 29            CALL  writeLineHL
2508             L626:
2508                     ;;testExpression.j(236)     j = 500;
2508             L627:
2508 21 F4 01            LD    HL,500
250B             L628:
250B 22 04 50            LD    (05004H),HL
250E             L629:
250E                     ;;testExpression.j(237)     i = j + 519;
250E             L630:
250E 2A 04 50            LD    HL,(05004H)
2511             L631:
2511 11 07 02            LD    DE,519
2514 19                  ADD   HL,DE
2515             L632:
2515 22 02 50            LD    (05002H),HL
2518             L633:
2518                     ;;testExpression.j(238)     println(i);         // 1019
2518             L634:
2518 2A 02 50            LD    HL,(05002H)
251B             L635:
251B CD 9B 29            CALL  writeLineHL
251E             L636:
251E                     ;;testExpression.j(239)     i = 520 + j;
251E             L637:
251E 21 08 02            LD    HL,520
2521             L638:
2521 ED 5B 04 50         LD    DE,(05004H)
2525 19                  ADD   HL,DE
2526             L639:
2526 22 02 50            LD    (05002H),HL
2529             L640:
2529                     ;;testExpression.j(240)     println(i);         // 1020
2529             L641:
2529 2A 02 50            LD    HL,(05002H)
252C             L642:
252C CD 9B 29            CALL  writeLineHL
252F             L643:
252F                     ;;testExpression.j(241)     i = 521;
252F             L644:
252F 21 09 02            LD    HL,521
2532             L645:
2532 22 02 50            LD    (05002H),HL
2535             L646:
2535                     ;;testExpression.j(242)     i = i + j;
2535             L647:
2535 2A 02 50            LD    HL,(05002H)
2538             L648:
2538 ED 5B 04 50         LD    DE,(05004H)
253C 19                  ADD   HL,DE
253D             L649:
253D 22 02 50            LD    (05002H),HL
2540             L650:
2540                     ;;testExpression.j(243)     println(i);         // 1021
2540             L651:
2540 2A 02 50            LD    HL,(05002H)
2543             L652:
2543 CD 9B 29            CALL  writeLineHL
2546             L653:
2546                     ;;testExpression.j(244)     
2546             L654:
2546                     ;;testExpression.j(245)     /*************************/
2546             L655:
2546                     ;;testExpression.j(246)     /* Dual term subtraction */
2546             L656:
2546                     ;;testExpression.j(247)     /*************************/
2546             L657:
2546                     ;;testExpression.j(248)     println(1024 - 2);  // 1022
2546             L658:
2546 21 00 04            LD    HL,1024
2549             L659:
2549 11 02 00            LD    DE,2
254C B7                  OR    A
254D ED 52               SBC   HL,DE
254F             L660:
254F CD 9B 29            CALL  writeLineHL
2552             L661:
2552                     ;;testExpression.j(249)     println(1523 - 500);// 1023
2552             L662:
2552 21 F3 05            LD    HL,1523
2555             L663:
2555 11 F4 01            LD    DE,500
2558 B7                  OR    A
2559 ED 52               SBC   HL,DE
255B             L664:
255B CD 9B 29            CALL  writeLineHL
255E             L665:
255E                     ;;testExpression.j(250)     i = 1030 - 6;
255E             L666:
255E 21 06 04            LD    HL,1030
2561             L667:
2561 11 06 00            LD    DE,6
2564 B7                  OR    A
2565 ED 52               SBC   HL,DE
2567             L668:
2567 22 02 50            LD    (05002H),HL
256A             L669:
256A                     ;;testExpression.j(251)     println(i);         // 1024
256A             L670:
256A 2A 02 50            LD    HL,(05002H)
256D             L671:
256D CD 9B 29            CALL  writeLineHL
2570             L672:
2570                     ;;testExpression.j(252)     i = 1525 - 500;
2570             L673:
2570 21 F5 05            LD    HL,1525
2573             L674:
2573 11 F4 01            LD    DE,500
2576 B7                  OR    A
2577 ED 52               SBC   HL,DE
2579             L675:
2579 22 02 50            LD    (05002H),HL
257C             L676:
257C                     ;;testExpression.j(253)     println(i);         // 1025
257C             L677:
257C 2A 02 50            LD    HL,(05002H)
257F             L678:
257F CD 9B 29            CALL  writeLineHL
2582             L679:
2582                     ;;testExpression.j(254)     
2582             L680:
2582                     ;;testExpression.j(255)     j = 1040;
2582             L681:
2582 21 10 04            LD    HL,1040
2585             L682:
2585 22 04 50            LD    (05004H),HL
2588             L683:
2588                     ;;testExpression.j(256)     b = 13;
2588             L684:
2588 3E 0D               LD    A,13
258A             L685:
258A 32 00 50            LD    (05000H),A
258D             L686:
258D                     ;;testExpression.j(257)     i = 3030;
258D             L687:
258D 21 D6 0B            LD    HL,3030
2590             L688:
2590 22 02 50            LD    (05002H),HL
2593             L689:
2593                     ;;testExpression.j(258)     println(j - 14);    // 1026
2593             L690:
2593 2A 04 50            LD    HL,(05004H)
2596             L691:
2596 11 0E 00            LD    DE,14
2599 B7                  OR    A
259A ED 52               SBC   HL,DE
259C             L692:
259C CD 9B 29            CALL  writeLineHL
259F             L693:
259F                     ;;testExpression.j(259)     println(j - b);     // 1027
259F             L694:
259F 2A 04 50            LD    HL,(05004H)
25A2             L695:
25A2 47                  LD    B,A
25A3 3A 00 50            LD    A,(05000H)
25A6 5F                  LD    E,A
25A7 78                  LD    A,B
25A8 16 00               LD    D,0
25AA B7                  OR    A
25AB ED 52               SBC   HL,DE
25AD             L696:
25AD CD 9B 29            CALL  writeLineHL
25B0             L697:
25B0                     ;;testExpression.j(260)     j = 2000;
25B0             L698:
25B0 21 D0 07            LD    HL,2000
25B3             L699:
25B3 22 04 50            LD    (05004H),HL
25B6             L700:
25B6                     ;;testExpression.j(261)     println(j - 972);   // 1028
25B6             L701:
25B6 2A 04 50            LD    HL,(05004H)
25B9             L702:
25B9 11 CC 03            LD    DE,972
25BC B7                  OR    A
25BD ED 52               SBC   HL,DE
25BF             L703:
25BF CD 9B 29            CALL  writeLineHL
25C2             L704:
25C2                     ;;testExpression.j(262)     println(3029 - j);  // 1029
25C2             L705:
25C2 21 D5 0B            LD    HL,3029
25C5             L706:
25C5 ED 5B 04 50         LD    DE,(05004H)
25C9 B7                  OR    A
25CA ED 52               SBC   HL,DE
25CC             L707:
25CC CD 9B 29            CALL  writeLineHL
25CF             L708:
25CF                     ;;testExpression.j(263)     println(i - j);     // 1030
25CF             L709:
25CF 2A 02 50            LD    HL,(05002H)
25D2             L710:
25D2 ED 5B 04 50         LD    DE,(05004H)
25D6 B7                  OR    A
25D7 ED 52               SBC   HL,DE
25D9             L711:
25D9 CD 9B 29            CALL  writeLineHL
25DC             L712:
25DC                     ;;testExpression.j(264)     
25DC             L713:
25DC                     ;;testExpression.j(265)     j = 1050;
25DC             L714:
25DC 21 1A 04            LD    HL,1050
25DF             L715:
25DF 22 04 50            LD    (05004H),HL
25E2             L716:
25E2                     ;;testExpression.j(266)     b = 18;
25E2             L717:
25E2 3E 12               LD    A,18
25E4             L718:
25E4 32 00 50            LD    (05000H),A
25E7             L719:
25E7                     ;;testExpression.j(267)     i = j - 19;
25E7             L720:
25E7 2A 04 50            LD    HL,(05004H)
25EA             L721:
25EA 11 13 00            LD    DE,19
25ED B7                  OR    A
25EE ED 52               SBC   HL,DE
25F0             L722:
25F0 22 02 50            LD    (05002H),HL
25F3             L723:
25F3                     ;;testExpression.j(268)     println(i);         // 1031
25F3             L724:
25F3 2A 02 50            LD    HL,(05002H)
25F6             L725:
25F6 CD 9B 29            CALL  writeLineHL
25F9             L726:
25F9                     ;;testExpression.j(269)     i = j - b;
25F9             L727:
25F9 2A 04 50            LD    HL,(05004H)
25FC             L728:
25FC 47                  LD    B,A
25FD 3A 00 50            LD    A,(05000H)
2600 5F                  LD    E,A
2601 78                  LD    A,B
2602 16 00               LD    D,0
2604 B7                  OR    A
2605 ED 52               SBC   HL,DE
2607             L729:
2607 22 02 50            LD    (05002H),HL
260A             L730:
260A                     ;;testExpression.j(270)     println(i);         // 1032
260A             L731:
260A 2A 02 50            LD    HL,(05002H)
260D             L732:
260D CD 9B 29            CALL  writeLineHL
2610             L733:
2610                     ;;testExpression.j(271)     j = 2000;
2610             L734:
2610 21 D0 07            LD    HL,2000
2613             L735:
2613 22 04 50            LD    (05004H),HL
2616             L736:
2616                     ;;testExpression.j(272)     i = j - 967;
2616             L737:
2616 2A 04 50            LD    HL,(05004H)
2619             L738:
2619 11 C7 03            LD    DE,967
261C B7                  OR    A
261D ED 52               SBC   HL,DE
261F             L739:
261F 22 02 50            LD    (05002H),HL
2622             L740:
2622                     ;;testExpression.j(273)     println(i);         // 1033
2622             L741:
2622 2A 02 50            LD    HL,(05002H)
2625             L742:
2625 CD 9B 29            CALL  writeLineHL
2628             L743:
2628                     ;;testExpression.j(274)     i = 3034 - j;
2628             L744:
2628 21 DA 0B            LD    HL,3034
262B             L745:
262B ED 5B 04 50         LD    DE,(05004H)
262F B7                  OR    A
2630 ED 52               SBC   HL,DE
2632             L746:
2632 22 02 50            LD    (05002H),HL
2635             L747:
2635                     ;;testExpression.j(275)     println(i);         // 1034
2635             L748:
2635 2A 02 50            LD    HL,(05002H)
2638             L749:
2638 CD 9B 29            CALL  writeLineHL
263B             L750:
263B                     ;;testExpression.j(276)     i = 3035;
263B             L751:
263B 21 DB 0B            LD    HL,3035
263E             L752:
263E 22 02 50            LD    (05002H),HL
2641             L753:
2641                     ;;testExpression.j(277)     i = i - j;
2641             L754:
2641 2A 02 50            LD    HL,(05002H)
2644             L755:
2644 ED 5B 04 50         LD    DE,(05004H)
2648 B7                  OR    A
2649 ED 52               SBC   HL,DE
264B             L756:
264B 22 02 50            LD    (05002H),HL
264E             L757:
264E                     ;;testExpression.j(278)     println(i);         // 1035
264E             L758:
264E 2A 02 50            LD    HL,(05002H)
2651             L759:
2651 CD 9B 29            CALL  writeLineHL
2654             L760:
2654                     ;;testExpression.j(279)     
2654             L761:
2654                     ;;testExpression.j(280)     /****************************/
2654             L762:
2654                     ;;testExpression.j(281)     /* Dual term multiplication */
2654             L763:
2654                     ;;testExpression.j(282)     /****************************/
2654             L764:
2654                     ;;testExpression.j(283)     println(518 * 2);   // 1036
2654             L765:
2654 21 06 02            LD    HL,518
2657             L766:
2657 11 02 00            LD    DE,2
265A CD AC 28            CALL  mul16
265D             L767:
265D CD 9B 29            CALL  writeLineHL
2660             L768:
2660                     ;;testExpression.j(284)     println(1 * 1037);  // 1037
2660             L769:
2660 3E 01               LD    A,1
2662             L770:
2662 6F                  LD    L,A
2663 26 00               LD    H,0
2665             L771:
2665 11 0D 04            LD    DE,1037
2668 CD AC 28            CALL  mul16
266B             L772:
266B CD 9B 29            CALL  writeLineHL
266E             L773:
266E                     ;;testExpression.j(285)     println(500 * 504 - 54354); // 1038 = 55392 - 54354
266E             L774:
266E 21 F4 01            LD    HL,500
2671             L775:
2671 11 F8 01            LD    DE,504
2674 CD AC 28            CALL  mul16
2677             L776:
2677 11 52 D4            LD    DE,54354
267A B7                  OR    A
267B ED 52               SBC   HL,DE
267D             L777:
267D CD 9B 29            CALL  writeLineHL
2680             L778:
2680                     ;;testExpression.j(286)   
2680             L779:
2680                     ;;testExpression.j(287)     i = 1039 * 1;
2680             L780:
2680 21 0F 04            LD    HL,1039
2683             L781:
2683 11 01 00            LD    DE,1
2686 CD AC 28            CALL  mul16
2689             L782:
2689 22 02 50            LD    (05002H),HL
268C             L783:
268C                     ;;testExpression.j(288)     println(i);         // 1039
268C             L784:
268C 2A 02 50            LD    HL,(05002H)
268F             L785:
268F CD 9B 29            CALL  writeLineHL
2692             L786:
2692                     ;;testExpression.j(289)     i = 2 * 520;
2692             L787:
2692 3E 02               LD    A,2
2694             L788:
2694 6F                  LD    L,A
2695 26 00               LD    H,0
2697             L789:
2697 11 08 02            LD    DE,520
269A CD AC 28            CALL  mul16
269D             L790:
269D 22 02 50            LD    (05002H),HL
26A0             L791:
26A0                     ;;testExpression.j(290)     println(i);         // 1040
26A0             L792:
26A0 2A 02 50            LD    HL,(05002H)
26A3             L793:
26A3 CD 9B 29            CALL  writeLineHL
26A6             L794:
26A6                     ;;testExpression.j(291)   
26A6             L795:
26A6                     ;;testExpression.j(292)     i = 1041;
26A6             L796:
26A6 21 11 04            LD    HL,1041
26A9             L797:
26A9 22 02 50            LD    (05002H),HL
26AC             L798:
26AC                     ;;testExpression.j(293)     println(i * 1);     // 1041
26AC             L799:
26AC 2A 02 50            LD    HL,(05002H)
26AF             L800:
26AF 11 01 00            LD    DE,1
26B2 CD AC 28            CALL  mul16
26B5             L801:
26B5 CD 9B 29            CALL  writeLineHL
26B8             L802:
26B8                     ;;testExpression.j(294)     i = 521;
26B8             L803:
26B8 21 09 02            LD    HL,521
26BB             L804:
26BB 22 02 50            LD    (05002H),HL
26BE             L805:
26BE                     ;;testExpression.j(295)     println(2 * i);     // 1042
26BE             L806:
26BE 3E 02               LD    A,2
26C0             L807:
26C0 6F                  LD    L,A
26C1 26 00               LD    H,0
26C3             L808:
26C3 ED 5B 02 50         LD    DE,(05002H)
26C7 CD AC 28            CALL  mul16
26CA             L809:
26CA CD 9B 29            CALL  writeLineHL
26CD             L810:
26CD                     ;;testExpression.j(296)   
26CD             L811:
26CD                     ;;testExpression.j(297)     i = 1043;
26CD             L812:
26CD 21 13 04            LD    HL,1043
26D0             L813:
26D0 22 02 50            LD    (05002H),HL
26D3             L814:
26D3                     ;;testExpression.j(298)     i = i * 1;
26D3             L815:
26D3 2A 02 50            LD    HL,(05002H)
26D6             L816:
26D6 11 01 00            LD    DE,1
26D9 CD AC 28            CALL  mul16
26DC             L817:
26DC 22 02 50            LD    (05002H),HL
26DF             L818:
26DF                     ;;testExpression.j(299)     println(i);         // 1043
26DF             L819:
26DF 2A 02 50            LD    HL,(05002H)
26E2             L820:
26E2 CD 9B 29            CALL  writeLineHL
26E5             L821:
26E5                     ;;testExpression.j(300)     i = 522;
26E5             L822:
26E5 21 0A 02            LD    HL,522
26E8             L823:
26E8 22 02 50            LD    (05002H),HL
26EB             L824:
26EB                     ;;testExpression.j(301)     i = 2 * i;
26EB             L825:
26EB 3E 02               LD    A,2
26ED             L826:
26ED 6F                  LD    L,A
26EE 26 00               LD    H,0
26F0             L827:
26F0 ED 5B 02 50         LD    DE,(05002H)
26F4 CD AC 28            CALL  mul16
26F7             L828:
26F7 22 02 50            LD    (05002H),HL
26FA             L829:
26FA                     ;;testExpression.j(302)     println(i);         // 1044
26FA             L830:
26FA 2A 02 50            LD    HL,(05002H)
26FD             L831:
26FD CD 9B 29            CALL  writeLineHL
2700             L832:
2700                     ;;testExpression.j(303)   
2700             L833:
2700                     ;;testExpression.j(304)     i = 500 * 504 - 54347; // 1045 = 55392 - 54347
2700             L834:
2700 21 F4 01            LD    HL,500
2703             L835:
2703 11 F8 01            LD    DE,504
2706 CD AC 28            CALL  mul16
2709             L836:
2709 11 4B D4            LD    DE,54347
270C B7                  OR    A
270D ED 52               SBC   HL,DE
270F             L837:
270F 22 02 50            LD    (05002H),HL
2712             L838:
2712                     ;;testExpression.j(305)     println(i);         // 1045
2712             L839:
2712 2A 02 50            LD    HL,(05002H)
2715             L840:
2715 CD 9B 29            CALL  writeLineHL
2718             L841:
2718                     ;;testExpression.j(306)     i = 500;
2718             L842:
2718 21 F4 01            LD    HL,500
271B             L843:
271B 22 02 50            LD    (05002H),HL
271E             L844:
271E                     ;;testExpression.j(307)     i = i * 504 - 54346;
271E             L845:
271E 2A 02 50            LD    HL,(05002H)
2721             L846:
2721 11 F8 01            LD    DE,504
2724 CD AC 28            CALL  mul16
2727             L847:
2727 11 4A D4            LD    DE,54346
272A B7                  OR    A
272B ED 52               SBC   HL,DE
272D             L848:
272D 22 02 50            LD    (05002H),HL
2730             L849:
2730                     ;;testExpression.j(308)     println(i);         // 1046
2730             L850:
2730 2A 02 50            LD    HL,(05002H)
2733             L851:
2733 CD 9B 29            CALL  writeLineHL
2736             L852:
2736                     ;;testExpression.j(309)     i = 504;
2736             L853:
2736 21 F8 01            LD    HL,504
2739             L854:
2739 22 02 50            LD    (05002H),HL
273C             L855:
273C                     ;;testExpression.j(310)     i = 500 * i - 54345;
273C             L856:
273C 21 F4 01            LD    HL,500
273F             L857:
273F ED 5B 02 50         LD    DE,(05002H)
2743 CD AC 28            CALL  mul16
2746             L858:
2746 11 49 D4            LD    DE,54345
2749 B7                  OR    A
274A ED 52               SBC   HL,DE
274C             L859:
274C 22 02 50            LD    (05002H),HL
274F             L860:
274F                     ;;testExpression.j(311)     println(i);         // 1047
274F             L861:
274F 2A 02 50            LD    HL,(05002H)
2752             L862:
2752 CD 9B 29            CALL  writeLineHL
2755             L863:
2755                     ;;testExpression.j(312)     
2755             L864:
2755                     ;;testExpression.j(313)     /************/
2755             L865:
2755                     ;;testExpression.j(314)     /* Overflow */
2755             L866:
2755                     ;;testExpression.j(315)     /************/
2755             L867:
2755                     ;;testExpression.j(316)     println("Nu komen 24.764 en 25.064");
2755             L868:
2755 21 F3 27            LD    HL,L913
2758             L869:
2758 CD 48 28            CALL  writeLineStr
275B             L870:
275B                     ;;testExpression.j(317)     println(300 * 301); // 90.300 % 65536 = 24.764
275B             L871:
275B 21 2C 01            LD    HL,300
275E             L872:
275E 11 2D 01            LD    DE,301
2761 CD AC 28            CALL  mul16
2764             L873:
2764 CD 9B 29            CALL  writeLineHL
2767             L874:
2767                     ;;testExpression.j(318)     i = 300 * 302;
2767             L875:
2767 21 2C 01            LD    HL,300
276A             L876:
276A 11 2E 01            LD    DE,302
276D CD AC 28            CALL  mul16
2770             L877:
2770 22 02 50            LD    (05002H),HL
2773             L878:
2773                     ;;testExpression.j(319)     println(i);         // 90.600 % 65536 = 25.064
2773             L879:
2773 2A 02 50            LD    HL,(05002H)
2776             L880:
2776 CD 9B 29            CALL  writeLineHL
2779             L881:
2779                     ;;testExpression.j(320)   
2779             L882:
2779                     ;;testExpression.j(321)     /***************************/
2779             L883:
2779                     ;;testExpression.j(322)     /* hex noatation constants */
2779             L884:
2779                     ;;testExpression.j(323)     /***************************/
2779             L885:
2779                     ;;testExpression.j(324)     println("hex notation constants");
2779             L886:
2779 21 0D 28            LD    HL,L914
277C             L887:
277C CD 48 28            CALL  writeLineStr
277F             L888:
277F                     ;;testExpression.j(325)     byteHex = 0x41;
277F             L889:
277F 3E 41               LD    A,65
2781             L890:
2781 32 06 50            LD    (05006H),A
2784             L891:
2784                     ;;testExpression.j(326)     println(byteHex);
2784             L892:
2784 3A 06 50            LD    A,(05006H)
2787             L893:
2787 CD C3 29            CALL  writeLineA
278A             L894:
278A                     ;;testExpression.j(327)     wordHex = 0x042A;
278A             L895:
278A 21 2A 04            LD    HL,1066
278D             L896:
278D 22 07 50            LD    (05007H),HL
2790             L897:
2790                     ;;testExpression.j(328)     println(wordHex);
2790             L898:
2790 2A 07 50            LD    HL,(05007H)
2793             L899:
2793 CD 9B 29            CALL  writeLineHL
2796             L900:
2796                     ;;testExpression.j(329)   
2796             L901:
2796                     ;;testExpression.j(330)     println("Klaar");
2796             L902:
2796 21 24 28            LD    HL,L915
2799             L903:
2799 CD 48 28            CALL  writeLineStr
279C             L904:
279C                     ;;testExpression.j(331)   }
279C             L905:
279C DD F9               LD    SP,IX
279E             L906:
279E DD E1               POP   IX
27A0             L907:
27A0 C9                  return
27A1             L908:
27A1                     ;;testExpression.j(332) }
27A1             L909:
27A1 4E 75 20 6B
     6F 6D 65 6E
     20 32 35 31
     20 65 6E 20
     32 35 32 00         .ASCIZ  "Nu komen 251 en 252"
27B5             L910:
27B5 4E 75 20 6B
     6F 6D 65 6E
     20 2D 32 35
     33 20 65 6E
     20 2D 32 35
     34 00               .ASCIZ  "Nu komen -253 en -254"
27CB             L911:
27CB 4E 75 20 6B
     6F 6D 65 6E
     20 32 35 35
     20 65 6E 20
     32 35 36 00         .ASCIZ  "Nu komen 255 en 256"
27DF             L912:
27DF 4E 75 20 6B
     6F 6D 65 6E
     20 31 30 30
     30 2E 2E 31
     30 34 37 00         .ASCIZ  "Nu komen 1000..1047"
27F3             L913:
27F3 4E 75 20 6B
     6F 6D 65 6E
     20 32 34 2E
     37 36 34 20
     65 6E 20 32
     35 2E 30 36
     34 00               .ASCIZ  "Nu komen 24.764 en 25.064"
280D             L914:
280D 68 65 78 20
     6E 6F 74 61
     74 69 6F 6E
     20 63 6F 6E
     73 74 61 6E
     74 73 00            .ASCIZ  "hex notation constants"
2824             L915:
2824 4B 6C 61 61
     72 00               .ASCIZ  "Klaar"
282A             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
282A             STAT0   equ 004H          ;147 ASCI0 Status register.
282A             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
282A             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
282A             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
282A             TDRE    equ 1             ;STAT0->Tx data register empty bit.
282A             OVERRUN equ 6             ;STAT0->OVERRUN bit.
282A             RDRF    equ 7             ;STAT0->Rx data register full bit.
282A             ;****************
282A             ;getChar
282A             ;Check if an input character from ASCI0 is available.
282A             ;  IN:  none
282A             ;  OUT: F: ZERO flag set if no character is available.
282A             ;          ZERO flag reset if a character is available.
282A             ;       A : character from ASCI0, if available.
282A             ;  USES:AF
282A             ;****************
282A             getChar:
282A ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
282D CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
282F 20 07               JR    NZ,getChar1 ;-yes: reset error flags
2831 CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
2833 C8                  RET   Z           ;-no: return without a character
2834 ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
2837 C9                  RET
2838             getChar1:
2838 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
283B CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
283D ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
2840 AF                  XOR   A,A
2841 C9                  RET               ;return without a character
2842             ;****************
2842             ;putMsg
2842             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
2842             ;  IN:  none.
2842             ;  OUT: none.
2842             ;  USES:none.
2842             ;****************
2842             putMsg:
2842 E3                  EX    (SP),HL     ;save HL and load return address into HL.
2843 CD 4F 28            CALL  writeStr
2846 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
2847 C9                  RET
2848             ;****************
2848             ;writeLineStr
2848             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
2848             ;  IN:  HL:address of zero terminated string to be printed.
2848             ;  OUT: none.
2848             ;  USES:HL (point to byte after zero terminated string)
2848             ;****************
2848             writeLineStr:
2848 CD 4F 28            CALL  writeStr
284B CD 6B 28            CALL  putCRLF
284E C9                  RET
284F             ;****************
284F             ;writeStr
284F             ;Print via ASCI0 a zero terminated string, pointed to by HL.
284F             ;  IN:  HL:address of zero terminated string to be printed.
284F             ;  OUT: none.
284F             ;  USES:HL (point to byte after zero terminated string)
284F             ;****************
284F             writeStr:
284F F5                  PUSH  AF          ;save registers
2850             putStr1:
2850 7E                  LD    A,(HL)      ;get next character
2851 23                  INC   HL
2852 B7                  OR    A,A         ;is it zer0?
2853 28 05               JR    Z,putStr2   ;yes ->return
2855 CD 5E 28            CALL  putChar     ;no->put it to ASCI0
2858 18 F6               JR    putStr1
285A             putStr2:
285A F1                  POP   AF
285B C9                  RET
285C             ;****************
285C             ;putSpace
285C             ;Send a space character to ASCI0
285C             ;  IN:  none.
285C             ;  OUT: none.
285C             ;  USES:AF
285C             ;****************
285C             putSpace:
285C 3E 20               LD    A,' '       ;load space and continue with putChar.
285E             ;****************
285E             ;putChar
285E             ;Send one character to ASCI0.
285E             ;  IN:  A = character
285E             ;  OUT: none.
285E             ;  USES:none.
285E             ;****************
285E             putChar:
285E F5                  PUSH  AF          ;send the character via ASCI0
285F             putChar1:
285F ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
2862 CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
2864 28 F9               JR    Z,putChar1
2866 F1                  POP   AF          ;restore AF registers
2867 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
286A C9                  RET
286B             ;****************
286B             ;putCRLF
286B             ;Send CR and LF to ASCI0
286B             ;  IN:  none.
286B             ;  OUT: none.
286B             ;  USES:none.
286B             ;****************
286B             putCRLF:
286B F5                  PUSH  AF
286C 3E 0D               LD    A,'\r'       ;print carriage return
286E CD 5E 28            CALL  putChar
2871 3E 0A               LD    A,'\n'       ;print line feed
2873 CD 5E 28            CALL  putChar
2876 F1                  POP   AF
2877 C9                  RET
2878             ;****************
2878             ;putErase
2878             ;Erase the latest character at ASCI0
2878             ;  IN:  none.
2878             ;  OUT: none.
2878             ;  USES:AF
2878             ;****************
2878             putErase:
2878 3E 08               LD    A,'\b'       ;print backspace
287A CD 5E 28            CALL  putChar
287D CD 5C 28            CALL  putSpace    ;print space (erase character)
2880 3E 08               LD    A,'\b'      ;print backspace
2882 18 DA               JR    putChar
2884             ;****************
2884             ;putBell
2884             ;Send a Bell character to ASCI0
2884             ;  IN:  none.
2884             ;  OUT: none.
2884             ;  USES:AF
2884             ;****************
2884             putBell:
2884 3E 07               LD    A,07        ;ring the bell at ASCI0
2886 18 D6               JR    putChar
2888             ;****************
2888             ;putHexHL
2888             ;Print HL register pair as 4 hex digits
2888             ;  IN:  HL = word to be printed.
2888             ;  OUT: none.
2888             ;  USES:none.
2888             ;****************
2888             putHexHL:
2888 F5                  PUSH  AF          ;save used registers
2889 7C                  LD    A,H         ;print H as 2 hex digits
288A CD 93 28            CALL  putHexA
288D 7D                  LD    A,L         ;print L as 2 hex digits
288E CD 93 28            CALL  putHexA
2891 F1                  POP   AF          ;restore used registers
2892 C9                  RET
2893             ;****************
2893             ;putHexA
2893             ;Print A register as 2 hex digits
2893             ;  IN:  A = byte to be printed
2893             ;  OUT: none.
2893             ;  USES:none.
2893             ;****************
2893             putHexA:
2893 F5                  PUSH  AF          ;save input
2894 1F                  RRA               ;shift upper nibble to the right
2895 1F                  RRA
2896 1F                  RRA
2897 1F                  RRA
2898 CD 9C 28            CALL  putHexA1    ;print upper nibble
289B F1                  POP   AF          ;restore input & print lower nibble
289C             putHexA1:
289C F5                  PUSH  AF          ;save input
289D E6 0F               AND   A,00FH      ;mask lower nibble
289F C6 30               ADD   A,'0'       ;convert to hex digit
28A1 FE 3A               CP    A,'9'+1
28A3 38 02               JR    C,putHexA2
28A5 C6 07               ADD   A,07
28A7             putHexA2:
28A7 CD 5E 28            CALL  putChar
28AA F1                  POP   AF          ;restore input
28AB C9                  RET               ;and return
28AC             ;****************
28AC             ;mul16
28AC             ;16 by 16 bit unsigned multiplication with 16 bit result.
28AC             ;  IN:  HL = operand 1
28AC             ;       DE = operand 2
28AC             ;  OUT: HL = HL * DE low part
28AC             ;  USES:DE
28AC             ;  Size   25 bytes
28AC             ;  Time  160 cycles
28AC             ;****************
28AC             mul16:
28AC                     ;HL = HL * DE
28AC                     ;        H  L
28AC                     ;        D  E
28AC                     ;    --------*
28AC                     ;          EL
28AC                     ;       EH  0
28AC                     ;       DL  0
28AC                     ; -----------+
28AC                     ;        R  S
28AC                     ;S = ELlow
28AC                     ;R = ELhigh+EHlow+DLlow
28AC C5                  PUSH  BC          ;11  11 save BC
28AD 44                  LD    B,H         ; 4  15 copy HL to BC
28AE 4D                  LD    C,L         ; 4  19
28AF 63                  LD    H,E         ; 4  23 HL contains EL
28B0 ED 6C               MLT   HL          ;17  40
28B2 E5                  PUSH  HL          ;11  51
28B3 63                  LD    H,E         ; 4  55 HL contains EH aka EB
28B4 68                  LD    L,B         ; 4  59
28B5 ED 6C               MLT   HL          ;17  76
28B7 45                  LD    B,L         ; 4  80 save EHlow in B
28B8 62                  LD    H,D         ; 4  84 HL contains DL aka DC
28B9 69                  LD    L,C         ; 4  88
28BA ED 6C               MLT   HL          ;17 105
28BC 55                  LD    D,L         ; 4 109 DLlow into DE
28BD 1E 00               LD    E,0         ; 6 115
28BF E1                  POP   HL          ; 9 124 add EL+DElow
28C0 19                  ADD   HL,DE       ; 7 131
28C1 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
28C2 19                  ADD   HL,DE       ; 7 142
28C3 C1                  POP   BC          ; 9 151 restore BC
28C4 C9                  RET               ; 9 160
28C5             ;****************
28C5             ;mul16_10
28C5             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
28C5             ;  IN:  HL = operand
28C5             ;  OUT: HL = HL * 10; low part
28C5             ;  USES:Flags
28C5             ;  Size   9 bytes
28C5             ;  Time   65 cycles
28C5             ;****************
28C5             mul16_10:
28C5 D5                  PUSH  DE          ;11 11
28C6 54                  LD    D,H         ; 4 15
28C7 5D                  LD    E,L         ; 4 19
28C8 29                  ADD   HL,HL       ; 7 26 times 2
28C9 29                  ADD   HL,HL       ; 7 33 times 4
28CA 19                  ADD   HL,DE       ; 7 40 times 5
28CB 29                  ADD   HL,HL       ; 7 47 times 10
28CC D1                  POP   DE          ; 9 56
28CD C9                  RET               ; 9 65
28CE             ;****************
28CE             ;mul16_8
28CE             ;16 by 8 bit unsigned multiplication with 16 bit result.
28CE             ;  IN:  HL = operand 1
28CE             ;        A = operand 2
28CE             ;  OUT: HL = HL * A low part
28CE             ;  USES:AF
28CE             ;  Size   .. bytes
28CE             ;  Time  ... cycles
28CE             ;****************
28CE             mul16_8:
28CE                     ;HL = HL * A
28CE                     ;        H  L
28CE                     ;           A
28CE                     ;    --------*
28CE                     ;          AL
28CE                     ;       AH  0
28CE                     ; -----------+
28CE                     ;        R  S
28CE                     ;S = ALlow
28CE                     ;R = ALhigh+AHlow
28CE C5                  PUSH  BC          ;11  11 save BC
28CF 44                  LD    B,H         ; 4  15
28D0 4F                  LD    C,A         ; 4  19
28D1 67                  LD    H,A         ; 4  23
28D2 ED 6C               MLT   HL          ;17  40 HL = AL
28D4 ED 4C               MLT   BC          ;17  57 BC = AH
28D6 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
28D7 81                  ADD   A,C         ; 4  65
28D8 67                  LD    H,A         ; 4  69
28D9 C1                  POP   BC          ; 9  78 | 289 restore BC
28DA C9                  RET               ; 9  87 | 307
28DB             ;****************
28DB             ;mul1632
28DB             ;16 by 16 bit unsigned multiplication with 32 bit result.
28DB             ;  IN:  HL = operand 1
28DB             ;       DE = operand 2
28DB             ;  OUT: HL = HL * DE low part
28DB             ;       DE = HL * DE high part
28DB             ;  USES:-
28DB             ;  Size 49 bytes
28DB             ;  Time between 303 en 307 cycles
28DB             ;****************
28DB             mul1632:
28DB                     ;HL = HL * DE
28DB                     ;        H  L
28DB                     ;        D  E
28DB                     ;    --------*
28DB                     ;          EL
28DB                     ;       EH  0
28DB                     ;       DL  0
28DB                     ;    DH  0  0
28DB                     ; -----------+
28DB                     ;  P  Q  R  S
28DB                     ;S = ELlow
28DB                     ;R = ELhigh+EHlow+DLlow
28DB                     ;Q = DHlow+EHhigh+DLhigh
28DB                     ;P = DHhigh
28DB F5                  PUSH  AF          ;11  11 save AF
28DC C5                  PUSH  BC          ;11  22 save BC
28DD 44                  LD    B,H         ; 4  26
28DE 4D                  LD    C,L         ; 4  30
28DF 62                  LD    H,D         ; 4  34 HL contains DH aka DB
28E0 68                  LD    L,B         ; 4  38
28E1 ED 6C               MLT   HL          ;17  55
28E3 E5                  PUSH  HL          ;11  66
28E4 62                  LD    H,D         ; 4  70 HL contains DL aka DC
28E5 69                  LD    L,C         ; 4  74
28E6 ED 6C               MLT   HL          ;17  91
28E8 E5                  PUSH  HL          ;11 102
28E9 63                  LD    H,E         ; 4 106 HL contains EH aka EB
28EA 68                  LD    L,B         ; 4 110
28EB ED 6C               MLT   HL          ;17 127
28ED E5                  PUSH  HL          ;11 138
28EE 63                  LD    H,E         ; 4 142 HL contains EL aka EC
28EF 69                  LD    L,C         ; 4 146
28F0 ED 6C               MLT   HL          ;17 163
28F2 D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
28F3 06 00               LD    B,0         ; 6 178
28F5 4A                  LD    C,D         ; 4 182 ..C=EHhigh
28F6 53                  LD    D,E         ; 4 186 ..D=EHlow
28F7 1E 00               LD    E,0         ; 6 192
28F9 19                  ADD   HL,DE       ; 7 199
28FA 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
28FC 03                  INC   BC          ;         4 209
28FD             mul16321:
28FD D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
28FE 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
28FF 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
2900 19                  ADD   HL,DE       ; 7 231 | 233
2901 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
2903 03                  INC   BC          ;         4 243
2904             mul16322:
2904                                       ;HL=RS=EL+EH0+DL0
2904                                       ;C=EHhigh
2904                                       ;A=DLhigh
2904                                       ;E=0
2904 EB                  EX    DE,HL       ; 3 242 | 246
2905 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
2906 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
2907 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
2908 C1                  POP   BC          ; 9 266 | 270
2909 09                  ADD   HL,BC       ; 7 273 | 277
290A EB                  EX    DE,HL       ; 3 276 | 280
290B                                       ;D=P=DHhigh
290B                                       ;E=Q=DHlow+EHhigh+DLhigh
290B                                       ;H=R=ELhigh+EHlow+DLlow
290B                                       ;L=S=ELlow
290B C1                  POP   BC          ; 9 285 | 289 restore BC
290C F1                  POP   AF          ; 9 294 | 298 restore AF
290D C9                  RET               ; 9 303 | 307
290E             ;****************
290E             ;mul16S
290E             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
290E             ;  IN:  HL = operand 1
290E             ;       DE = operand 2
290E             ;  OUT: DE = HL * DE high part
290E             ;       HL = HL * DE low part
290E             ;  USES:none.
290E             ;  Size 26 bytes
290E             ;  Time between 726 en 998 cycles
290E             ;****************
290E             mul16S:
290E F5                  PUSH  AF          ;11  11 save AF
290F C5                  PUSH  BC          ;11  22 save BC
2910 44                  LD    B,H         ; 4  26
2911 4D                  LD    C,L         ; 4  30
2912 21 00 00            LD    HL,0        ; 9  39
2915 3E 10               LD    A,16        ; 6  45
2917             mul16S1:
2917 29                  ADD   HL,HL       ;16*7=112 157
2918 CB 13               RL    E           ;16*7=112 269
291A CB 12               RL    D           ;16*7=112 381
291C 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
291E 09                  ADD   HL,BC       ;             16*7=112 589
291F 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
2921 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
2922             mul16S2:
2922 3D                  DEC   A           ;16*4=64    573 | 845 | 813
2923 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
2925 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
2926 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
2927 C9                  RET               ; 9         726 | 998 | 966
2928             ;****************
2928             ;div16
2928             ;16 by 16 bit unsigned division.
2928             ;  IN:  HL = dividend
2928             ;       DE = divisor
2928             ;  OUT: HL = quotient
2928             ;       DE = remainder
2928             ;  USES:-
2928             ;  Size   32 bytes
2928             ;  Time   between 1073 en 1121 cycles
2928             ;pseudo code:
2928             ;T = AC = dividend
2928             ;D = DE = divisor
2928             ;Q = AC = quotient = 0
2928             ;R = HL = remainder = 0
2928             ;invariante betrekking:
2928             ; D/T\Q     
2928             ;   R       
2928             ; T = QD + R
2928             ; T <= 2^N  
2928             ;
2928             ; D/T'.RT\Q'      
2928             ;   R'             
2928             ; RT <= 2^N        
2928             ; 0<=k<=N          
2928             ; RT = T % 2^k     
2928             ; T' = (T-RT) / 2^k
2928             ; Q' = T' / D      
2928             ; R' = T' % D      
2928             ;
2928             ;for (i=16; i>0; i--) {
2928             ;  T = T * 2 (remember MSB in carry)
2928             ;  R = R * 2 + carry
2928             ;  Q = Q * 2
2928             ;  if (R >= D) {
2928             ;    R = R - D;
2928             ;    Q++;
2928             ;  }
2928             ;}
2928             ;return Q (in HL) and R (in DE)
2928             ;****************
2928             div16:
2928 F5                  PUSH  AF          ;11  11 save registers used
2929 C5                  PUSH  BC          ;11  22
292A 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
292B 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
292C 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
292F 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
2931             div16_1:
2931 CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
2933 CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
2935 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
2937 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
2938 ED 52               SBC   HL,DE       ;16*10=160 653
293A 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
293C 0C                  INC   C           ;              16*4= 64 813   Q++
293D 18 01               JR    div16_3     ;              16*8=128 941
293F             div16_2:
293F 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
2940             div16_3:
2940 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
2942 EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
2943 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
2944 69                  LD    L,C         ; 4 1046 | 1094
2945 C1                  POP   BC          ; 9 1055 | 1103
2946 F1                  POP   AF          ; 9 1064 | 1112
2947 C9                  RET               ; 9 1073 | 1121
2948             ;****************
2948             ;div16_8
2948             ;16 by 8 bit unsigned division.
2948             ;  IN:  HL = dividend
2948             ;       A  = divisor
2948             ;  OUT: HL = quotient
2948             ;       A  = remainder
2948             ;  USES:F(lags)
2948             ;  Size 18 bytes
2948             ;  Time between 601 en 697 cycles
2948             ;****************
2948             div16_8:
2948 C5                  PUSH  BC          ;11 11 save registers used
2949 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
294B 4F                  LD    C,A         ; 4 21 move divisor to C
294C AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
294D             div16_82:
294D 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
294E CB 17               RL    A           ;16*7=112 249
2950 B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
2951 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
2953 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
2954 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
2955             div16_83:
2955 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
2957 C1                  POP   BC          ;9 592 688
2958 C9                  RET               ;9 601 697
2959             ;****************
2959             ;div8
2959             ;8 by 8 bit unsigned division.
2959             ;  IN:  A = dividend
2959             ;       C = divisor
2959             ;  OUT: A = quotient
2959             ;       C = remainder
2959             ;  USES:F(lags)
2959             ;  Size 26 bytes
2959             ;  Time between 411 and 459 cycles
2959             ;****************
2959             ;pseudo code:
2959             ;T = dividend
2959             ;D = divisor
2959             ;Q = quotient = 0
2959             ;R = remainder = 0
2959             ;invariante betrekking:
2959             ; T = QD + R
2959             ; T <= 2^8  
2959             ;
2959             ; D/T'.RT\Q'      
2959             ;   R'             
2959             ; RT <= 2^8        
2959             ; 0<=k<=8          
2959             ; RT = T % 2^k     
2959             ; T' = (T-RT) / 2^k
2959             ; Q' = T' / D      
2959             ; R' = T' % D      
2959             ;
2959             ;for (i=8; i>0; i--) {
2959             ;  T = T * 2 (remember MSB in carry)
2959             ;  R = R * 2 + carry
2959             ;  Q = Q * 2
2959             ;  if (R >= D) {
2959             ;    R = R - D;
2959             ;    Q++;
2959             ;  }
2959             ;}
2959             ;return Q (in A) and R (in C)
2959             ;****************
2959             ;E = T = dividend
2959             ;C = D = divisor
2959             ;D = Q = quotient
2959             ;A = R = remainder
2959             ;****************
2959             ;  IN:  A = dividend
2959             ;       C  = divisor
2959             div8:
2959 D5                  PUSH  DE          ;11 11 save registers used
295A C5                  PUSH  BC          ;11 22 save registers used
295B 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
295D 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
295F 5F                  LD    E,A         ; 4 38 E = T = dividend
2960 AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
2961             div8_1:
2961 CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
2963 CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
2965 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
2967 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
2968 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
296A 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
296B 14                  INC   D           ;           8*4=32 354   Q[D]++;
296C             div8_2:           ;                      }
296C 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
296E C1                  POP   BC          ;9        385 433
296F 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
2970 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
2971 D1                  POP   DE          ;9        402 450
2972 C9                  RET               ;9        411 459
2973             ;****************
2973             ;div8_16
2973             ;8 by 16 bit unsigned division.
2973             ;  IN:  A = dividend
2973             ;       HL = divisor
2973             ;  OUT: A = quotient
2973             ;       C = remainder
2973             ;  USES:F(lags)
2973             ;  Size 13 bytes (plus dependency on div8)
2973             ;  Time 31 or between 436 and 484 cycles
2973             ;****************
2973             ;invariante betrekking:
2973             ; T = dividend
2973             ; D = divisor
2973             ; Q = quotient
2973             ; R = remainder
2973             ; T = QD + R
2973             ;pseudo code:
2973             ; if D >= 256 {
2973             ;   R = T
2973             ;   Q = 0
2973             ; } else {
2973             ;   R = T/D (using div8)
2973             ;   Q = T%D (using div8)
2973             ; }
2973             ;****************
2973             
2973             
2973             div8_16:
2973 4F                  LD    C,A         ;  4  4         save dividend(A) in C
2974 7C                  LD    A,H         ;  4  8         if D >= 256 {
2975 B7                  OR    A,A         ;  4 12
2976 28 02               JR    Z,div8_161  ;  6 18  8  20
2978 AF                  XOR   A,A         ;  4 22           R = T;
2979 C9                  RET               ;  9 31           Q = 0;
297A             div8_161:                     ;               } else {
297A 79                  LD    A,C         ;        4  24    restore dividend into A
297B 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
297C CD 59 29            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
297F C9                  RET               ; 9  436/484    }
2980             ;****************
2980             ;read
2980             ;read a 16 bit unsigned number from the input
2980             ;  IN:  none
2980             ;  OUT: HL = 16 bit unsigned number
2980             ;  USES:-
2980             ;****************
2980             read:
2980 F5                  PUSH  AF
2981 21 00 00            LD    HL,0        ;result = 0;
2984             read1:
2984 CD 2A 28            CALL  getChar     ;check if a character is available.
2987 28 FB               JR    Z,read1     ;-no: wait for it.
2989 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
298B 28 0C               JR    Z,read2
298D CD C5 28            CALL  mul16_10    ;result *= 10;
2990 D6 30               SUB   A,'0'       ;digit = char - '0';
2992 85                  ADD   A,L         ;result += digit;
2993 6F                  LD    L,A
2994 30 EE               JR    NC,read1     ;get next character
2996 24                  INC   H
2997 18 EB               JR    read1        ;get next character
2999             read2:
2999 F1                  POP   AF
299A C9                  RET
299B             ;****************
299B             ;writeLineHL
299B             ;write a 16 bit unsigned number to the output, followed by a carriage return
299B             ;  IN:  HL = 16 bit unsigned number
299B             ;  OUT: none
299B             ;  USES:HL
299B             ;****************
299B             writeLineHL:
299B CD A2 29            CALL  writeHL
299E CD 6B 28            CALL  putCRLF
29A1 C9                  RET
29A2             ;****************
29A2             ;writeHL
29A2             ;write a 16 bit unsigned number to the output
29A2             ;  IN:  HL = 16 bit unsigned number
29A2             ;  OUT: none
29A2             ;  USES:HL
29A2             ;****************
29A2             writeHL:
29A2 C5                  PUSH  BC          ;save registers used
29A3 F5                  PUSH  AF
29A4 06 00               LD    B,0         ;number of digits on stack
29A6 7C                  LD    A,H         ;is HL=0?
29A7 B5                  OR    A,L
29A8 20 03               JR    NZ,writeHL1
29AA 04                  INC   B           ;write a single digit 0
29AB 18 0C               JR    writeHL3
29AD             writeHL1:
29AD 3E 0A               LD    A,10        ;divide HL by 10
29AF CD 48 29            CALL  div16_8
29B2 F5                  PUSH  AF          ;put remainder on stack
29B3 04                  INC   B
29B4 7C                  LD    A,H         ;is quotient 0?
29B5 B5                  OR    A,L
29B6 20 F5               JR    NZ,writeHL1
29B8             writeHL2:
29B8 F1                  POP   AF          ;write digit
29B9             writeHL3:
29B9 C6 30               ADD   A,'0'
29BB CD 5E 28            CALL  putChar
29BE 10 F8               DJNZ  writeHL2
29C0 F1                  POP   AF          ;restore registers used
29C1 C1                  POP   BC
29C2 C9                  RET
29C3             ;****************
29C3             ;writeLineA
29C3             ;write an 8-bit unsigned number to the output, followed by a carriage return
29C3             ;  IN:  A = 8-bit unsigned number
29C3             ;  OUT: none
29C3             ;  USES:none
29C3             ;****************
29C3             writeLineA:
29C3 CD CA 29            CALL  writeA
29C6 CD 6B 28            CALL  putCRLF
29C9 C9                  RET
29CA             ;****************
29CA             ;writeA
29CA             ;write an 8-bit unsigned number to the output
29CA             ;  IN:  A = 8-bit unsigned number
29CA             ;  OUT: none
29CA             ;  USES:none
29CA             ;****************
29CA             writeA:
29CA E5                  PUSH  HL          ;save registers used
29CB 26 00               LD    H,0
29CD 6F                  LD    L,A
29CE CD A2 29            CALL  writeHL
29D1 E1                  POP   HL
29D2 C9                  RET

Labels and cross references:
      L0 = 2003 :
      L1 = 2006 :
     L10 = 2009 :
    L100 = 2091 :
    L101 = 2094 :
    L102 = 2094 :
    L103 = 2094 :
    L104 = 2094 :
    L105 = 2094 :
    L106 = 2094 :
    L107 = 2094 :
    L108 = 2094 :
    L109 = 2097 :
     L11 = 2009 :
    L110 = 209B :
    L111 = 209E :
    L112 = 209E :
    L113 = 20A0 :
    L114 = 20A3 :
    L115 = 20A8 :
    L116 = 20AB :
    L117 = 20AB :
    L118 = 20AD :
    L119 = 20B0 :
     L12 = 2009 :
    L120 = 20B0 :
    L121 = 20B3 :
    L122 = 20BC :
    L123 = 20BF :
    L124 = 20BF :
    L125 = 20C3 :
    L126 = 20C3 :
    L127 = 20C6 :
    L128 = 20C9 :
    L129 = 20CE :
     L13 = 2009 :
    L130 = 20D1 :
    L131 = 20D1 :
    L132 = 20D1 :
    L133 = 20D4 :
    L134 = 20D8 :
    L135 = 20DB :
    L136 = 20DB :
    L137 = 20DE :
    L138 = 20E1 :
    L139 = 20E1 :
     L14 = 2009 :
    L140 = 20E3 :
    L141 = 20E6 :
    L142 = 20EB :
    L143 = 20EE :
    L144 = 20EE :
    L145 = 20F1 :
    L146 = 20F4 :
    L147 = 20F4 :
    L148 = 20F6 :
    L149 = 20FC :
     L15 = 2009 :
    L150 = 20FC :
    L151 = 20FF :
    L152 = 2104 :
    L153 = 2107 :
    L154 = 2107 :
    L155 = 210A :
    L156 = 210D :
    L157 = 210D :
    L158 = 210D :
    L159 = 210D :
     L16 = 2009 : 2003
    L160 = 210D :
    L161 = 210D :
    L162 = 210F :
    L163 = 2112 :
    L164 = 2112 :
    L165 = 2114 :
    L166 = 2117 :
    L167 = 2117 :
    L168 = 2119 :
    L169 = 211B :
     L17 = 2009 :
    L170 = 211E :
    L171 = 211E :
    L172 = 2121 :
    L173 = 2123 :
    L174 = 2126 :
    L175 = 2126 :
    L176 = 2128 :
    L177 = 212D :
    L178 = 2130 :
    L179 = 2130 :
     L18 = 200B :
    L180 = 2133 :
    L181 = 2138 :
    L182 = 213B :
    L183 = 213B :
    L184 = 213B :
    L185 = 213D :
    L186 = 213F :
    L187 = 2142 :
    L188 = 2142 :
    L189 = 2145 :
     L19 = 2011 :
    L190 = 2148 :
    L191 = 2148 :
    L192 = 214B :
    L193 = 214D :
    L194 = 2150 :
    L195 = 2150 :
    L196 = 2153 :
    L197 = 2156 :
    L198 = 2156 :
    L199 = 2158 :
      L2 = 2009 :
     L20 = 2011 :
    L200 = 215D :
    L201 = 2160 :
    L202 = 2160 :
    L203 = 2163 :
    L204 = 2166 :
    L205 = 2166 :
    L206 = 2168 :
    L207 = 216B :
    L208 = 216B :
    L209 = 216E :
     L21 = 2011 :
    L210 = 2173 :
    L211 = 2176 :
    L212 = 2176 :
    L213 = 2179 :
    L214 = 217C :
    L215 = 217C :
    L216 = 217C :
    L217 = 217E :
    L218 = 2184 :
    L219 = 2184 :
     L22 = 2013 :
    L220 = 2187 :
    L221 = 218D :
    L222 = 2190 :
    L223 = 2190 :
    L224 = 2192 :
    L225 = 2195 :
    L226 = 219C :
    L227 = 219F :
    L228 = 219F :
    L229 = 21A1 :
     L23 = 2016 :
    L230 = 21A4 :
    L231 = 21A4 :
    L232 = 21A7 :
    L233 = 21B2 :
    L234 = 21B5 :
    L235 = 21B5 :
    L236 = 21B7 :
    L237 = 21BA :
    L238 = 21BA :
    L239 = 21BD :
     L24 = 2016 :
    L240 = 21C0 :
    L241 = 21C7 :
    L242 = 21CA :
    L243 = 21CA :
    L244 = 21CA :
    L245 = 21CD :
    L246 = 21D3 :
    L247 = 21D6 :
    L248 = 21D6 :
    L249 = 21D9 :
     L25 = 2016 :
    L250 = 21DC :
    L251 = 21DC :
    L252 = 21DE :
    L253 = 21E1 :
    L254 = 21E8 :
    L255 = 21EB :
    L256 = 21EB :
    L257 = 21EE :
    L258 = 21F1 :
    L259 = 21F1 :
     L26 = 2016 :
    L260 = 21F3 :
    L261 = 21F9 :
    L262 = 21F9 :
    L263 = 21FC :
    L264 = 2203 :
    L265 = 2206 :
    L266 = 2206 :
    L267 = 2209 :
    L268 = 220C :
    L269 = 220C :
     L27 = 2016 :
    L270 = 220C :
    L271 = 220C :
    L272 = 220C :
    L273 = 220C :
    L274 = 220E :
    L275 = 2214 :
    L276 = 2217 :
    L277 = 2217 :
    L278 = 2219 :
    L279 = 221C :
     L28 = 2016 :
    L280 = 221C :
    L281 = 221F :
    L282 = 2225 :
    L283 = 2228 :
    L284 = 2228 :
    L285 = 222A :
    L286 = 222D :
    L287 = 222D :
    L288 = 222F :
    L289 = 2237 :
     L29 = 2016 :
    L290 = 223A :
    L291 = 223A :
    L292 = 223C :
    L293 = 223F :
    L294 = 223F :
    L295 = 2241 :
    L296 = 2244 :
    L297 = 2244 :
    L298 = 2247 :
    L299 = 224F :
      L3 = 2009 :
     L30 = 2016 :
    L300 = 2252 :
    L301 = 2252 :
    L302 = 2252 :
    L303 = 2254 :
    L304 = 225A :
    L305 = 225D :
    L306 = 225D :
    L307 = 2260 :
    L308 = 2263 :
    L309 = 2263 :
     L31 = 2016 :
    L310 = 2265 :
    L311 = 2268 :
    L312 = 2268 :
    L313 = 226B :
    L314 = 2271 :
    L315 = 2274 :
    L316 = 2274 :
    L317 = 2277 :
    L318 = 227A :
    L319 = 227A :
     L32 = 2018 :
    L320 = 227C :
    L321 = 227F :
    L322 = 227F :
    L323 = 2281 :
    L324 = 2289 :
    L325 = 228C :
    L326 = 228C :
    L327 = 228F :
    L328 = 2292 :
    L329 = 2292 :
     L33 = 201B :
    L330 = 2294 :
    L331 = 2297 :
    L332 = 2297 :
    L333 = 2299 :
    L334 = 229C :
    L335 = 229C :
    L336 = 229F :
    L337 = 22A7 :
    L338 = 22AA :
    L339 = 22AA :
     L34 = 201B :
    L340 = 22AD :
    L341 = 22B0 :
    L342 = 22B0 :
    L343 = 22B0 :
    L344 = 22B0 :
    L345 = 22B0 :
    L346 = 22B0 :
    L347 = 22B2 :
    L348 = 22B7 :
    L349 = 22BA :
     L35 = 201D :
    L350 = 22BA :
    L351 = 22BC :
    L352 = 22BF :
    L353 = 22BF :
    L354 = 22C2 :
    L355 = 22C7 :
    L356 = 22CA :
    L357 = 22CA :
    L358 = 22CC :
    L359 = 22CF :
     L36 = 2020 :
    L360 = 22CF :
    L361 = 22D1 :
    L362 = 22DA :
    L363 = 22DD :
    L364 = 22DD :
    L365 = 22DF :
    L366 = 22E2 :
    L367 = 22E2 :
    L368 = 22E4 :
    L369 = 22E7 :
     L37 = 2020 :
    L370 = 22E7 :
    L371 = 22EA :
    L372 = 22F3 :
    L373 = 22F6 :
    L374 = 22F6 :
    L375 = 22F6 :
    L376 = 22F8 :
    L377 = 22FD :
    L378 = 2300 :
    L379 = 2300 :
     L38 = 2023 :
    L380 = 2303 :
    L381 = 2306 :
    L382 = 2306 :
    L383 = 2308 :
    L384 = 230B :
    L385 = 230B :
    L386 = 230E :
    L387 = 2313 :
    L388 = 2316 :
    L389 = 2316 :
     L39 = 2026 :
    L390 = 2319 :
    L391 = 231C :
    L392 = 231C :
    L393 = 231E :
    L394 = 2321 :
    L395 = 2321 :
    L396 = 2323 :
    L397 = 232C :
    L398 = 232F :
    L399 = 232F :
      L4 = 2009 :
     L40 = 2026 :
    L400 = 2332 :
    L401 = 2335 :
    L402 = 2335 :
    L403 = 2337 :
    L404 = 233A :
    L405 = 233A :
    L406 = 233C :
    L407 = 233F :
    L408 = 233F :
    L409 = 2342 :
     L41 = 2026 :
    L410 = 234B :
    L411 = 234E :
    L412 = 234E :
    L413 = 2351 :
    L414 = 2354 :
    L415 = 2354 :
    L416 = 2354 :
    L417 = 2354 :
    L418 = 2354 :
    L419 = 2354 :
     L42 = 2026 :
    L420 = 2357 :
    L421 = 235A :
    L422 = 235A :
    L423 = 235D :
    L424 = 2361 :
    L425 = 2361 :
    L426 = 2364 :
    L427 = 2367 :
    L428 = 2367 :
    L429 = 236A :
     L43 = 2026 :
    L430 = 236D :
    L431 = 236D :
    L432 = 2370 :
    L433 = 2374 :
    L434 = 2374 :
    L435 = 2377 :
    L436 = 237A :
    L437 = 237A :
    L438 = 237A :
    L439 = 237D :
     L44 = 2026 :
    L440 = 2380 :
    L441 = 2380 :
    L442 = 2383 :
    L443 = 2386 :
    L444 = 238C :
    L445 = 2390 :
    L446 = 2390 :
    L447 = 2393 :
    L448 = 2396 :
    L449 = 2396 :
     L45 = 2026 :
    L450 = 2399 :
    L451 = 239D :
    L452 = 23A0 :
    L453 = 23A0 :
    L454 = 23A3 :
    L455 = 23A6 :
    L456 = 23AD :
    L457 = 23B1 :
    L458 = 23B1 :
    L459 = 23B4 :
     L46 = 2026 :
    L460 = 23B7 :
    L461 = 23B7 :
    L462 = 23B7 :
    L463 = 23BA :
    L464 = 23BD :
    L465 = 23BD :
    L466 = 23BF :
    L467 = 23C2 :
    L468 = 23C2 :
    L469 = 23C5 :
     L47 = 2026 :
    L470 = 23C8 :
    L471 = 23C8 :
    L472 = 23C8 :
    L473 = 23C8 :
    L474 = 23C8 :
    L475 = 23C8 :
    L476 = 23C8 :
    L477 = 23C8 :
    L478 = 23C8 :
    L479 = 23C8 :
     L48 = 2026 :
    L480 = 23C8 :
    L481 = 23CB :
    L482 = 23CE :
    L483 = 23CE :
    L484 = 23D1 :
    L485 = 23D4 :
    L486 = 23D4 :
    L487 = 23D4 :
    L488 = 23D4 :
    L489 = 23D4 :
     L49 = 2026 :
    L490 = 23D4 :
    L491 = 23D4 :
    L492 = 23D4 :
    L493 = 23D7 :
    L494 = 23DA :
    L495 = 23DA :
    L496 = 23DD :
    L497 = 23E0 :
    L498 = 23E0 :
    L499 = 23E3 :
      L5 = 2009 :
     L50 = 2028 :
    L500 = 23E6 :
    L501 = 23E6 :
    L502 = 23E9 :
    L503 = 23EC :
    L504 = 23EC :
    L505 = 23EC :
    L506 = 23EC :
    L507 = 23EC :
    L508 = 23EC :
    L509 = 23EF :
     L51 = 202A :
    L510 = 23F3 :
    L511 = 23F6 :
    L512 = 23F6 :
    L513 = 23F8 :
    L514 = 23FB :
    L515 = 23FF :
    L516 = 2402 :
    L517 = 2402 :
    L518 = 2405 :
    L519 = 2409 :
     L52 = 202D :
    L520 = 240C :
    L521 = 240C :
    L522 = 240F :
    L523 = 2413 :
    L524 = 2416 :
    L525 = 2416 :
    L526 = 2419 :
    L527 = 241C :
    L528 = 241C :
    L529 = 241E :
     L53 = 202D :
    L530 = 2421 :
    L531 = 2425 :
    L532 = 2428 :
    L533 = 2428 :
    L534 = 242B :
    L535 = 242E :
    L536 = 242E :
    L537 = 2431 :
    L538 = 2435 :
    L539 = 2438 :
     L54 = 2030 :
    L540 = 2438 :
    L541 = 243B :
    L542 = 243E :
    L543 = 243E :
    L544 = 243E :
    L545 = 2441 :
    L546 = 2444 :
    L547 = 2444 :
    L548 = 2446 :
    L549 = 2449 :
     L55 = 2032 :
    L550 = 2449 :
    L551 = 244C :
    L552 = 244F :
    L553 = 244F :
    L554 = 2452 :
    L555 = 2456 :
    L556 = 2459 :
    L557 = 2459 :
    L558 = 245B :
    L559 = 245E :
     L56 = 2035 :
    L560 = 2463 :
    L561 = 2466 :
    L562 = 2466 :
    L563 = 2469 :
    L564 = 2472 :
    L565 = 2475 :
    L566 = 2475 :
    L567 = 2479 :
    L568 = 2479 :
    L569 = 247C :
     L57 = 2035 :
    L570 = 247F :
    L571 = 2484 :
    L572 = 2487 :
    L573 = 2487 :
    L574 = 248A :
    L575 = 248D :
    L576 = 248D :
    L577 = 2490 :
    L578 = 2494 :
    L579 = 2497 :
     L58 = 2037 :
    L580 = 2497 :
    L581 = 249A :
    L582 = 249F :
    L583 = 24A2 :
    L584 = 24A2 :
    L585 = 24A5 :
    L586 = 24AA :
    L587 = 24AD :
    L588 = 24AD :
    L589 = 24AD :
     L59 = 203C :
    L590 = 24B0 :
    L591 = 24B3 :
    L592 = 24B3 :
    L593 = 24B5 :
    L594 = 24B8 :
    L595 = 24B8 :
    L596 = 24BB :
    L597 = 24BF :
    L598 = 24C2 :
    L599 = 24C2 :
      L6 = 2009 :
     L60 = 203F :
    L600 = 24C5 :
    L601 = 24C8 :
    L602 = 24C8 :
    L603 = 24CA :
    L604 = 24CD :
    L605 = 24D2 :
    L606 = 24D5 :
    L607 = 24D5 :
    L608 = 24D8 :
    L609 = 24DB :
     L61 = 203F :
    L610 = 24DB :
    L611 = 24DE :
    L612 = 24E7 :
    L613 = 24EA :
    L614 = 24EA :
    L615 = 24ED :
    L616 = 24F0 :
    L617 = 24F0 :
    L618 = 24F4 :
    L619 = 24F4 :
     L62 = 2042 :
    L620 = 24F7 :
    L621 = 24FA :
    L622 = 24FF :
    L623 = 2502 :
    L624 = 2502 :
    L625 = 2505 :
    L626 = 2508 :
    L627 = 2508 :
    L628 = 250B :
    L629 = 250E :
     L63 = 2047 :
    L630 = 250E :
    L631 = 2511 :
    L632 = 2515 :
    L633 = 2518 :
    L634 = 2518 :
    L635 = 251B :
    L636 = 251E :
    L637 = 251E :
    L638 = 2521 :
    L639 = 2526 :
     L64 = 204A :
    L640 = 2529 :
    L641 = 2529 :
    L642 = 252C :
    L643 = 252F :
    L644 = 252F :
    L645 = 2532 :
    L646 = 2535 :
    L647 = 2535 :
    L648 = 2538 :
    L649 = 253D :
     L65 = 204A :
    L650 = 2540 :
    L651 = 2540 :
    L652 = 2543 :
    L653 = 2546 :
    L654 = 2546 :
    L655 = 2546 :
    L656 = 2546 :
    L657 = 2546 :
    L658 = 2546 :
    L659 = 2549 :
     L66 = 204A :
    L660 = 254F :
    L661 = 2552 :
    L662 = 2552 :
    L663 = 2555 :
    L664 = 255B :
    L665 = 255E :
    L666 = 255E :
    L667 = 2561 :
    L668 = 2567 :
    L669 = 256A :
     L67 = 204C :
    L670 = 256A :
    L671 = 256D :
    L672 = 2570 :
    L673 = 2570 :
    L674 = 2573 :
    L675 = 2579 :
    L676 = 257C :
    L677 = 257C :
    L678 = 257F :
    L679 = 2582 :
     L68 = 204E :
    L680 = 2582 :
    L681 = 2582 :
    L682 = 2585 :
    L683 = 2588 :
    L684 = 2588 :
    L685 = 258A :
    L686 = 258D :
    L687 = 258D :
    L688 = 2590 :
    L689 = 2593 :
     L69 = 2051 :
    L690 = 2593 :
    L691 = 2596 :
    L692 = 259C :
    L693 = 259F :
    L694 = 259F :
    L695 = 25A2 :
    L696 = 25AD :
    L697 = 25B0 :
    L698 = 25B0 :
    L699 = 25B3 :
      L7 = 2009 :
     L70 = 2051 :
    L700 = 25B6 :
    L701 = 25B6 :
    L702 = 25B9 :
    L703 = 25BF :
    L704 = 25C2 :
    L705 = 25C2 :
    L706 = 25C5 :
    L707 = 25CC :
    L708 = 25CF :
    L709 = 25CF :
     L71 = 2054 :
    L710 = 25D2 :
    L711 = 25D9 :
    L712 = 25DC :
    L713 = 25DC :
    L714 = 25DC :
    L715 = 25DF :
    L716 = 25E2 :
    L717 = 25E2 :
    L718 = 25E4 :
    L719 = 25E7 :
     L72 = 2057 :
    L720 = 25E7 :
    L721 = 25EA :
    L722 = 25F0 :
    L723 = 25F3 :
    L724 = 25F3 :
    L725 = 25F6 :
    L726 = 25F9 :
    L727 = 25F9 :
    L728 = 25FC :
    L729 = 2607 :
     L73 = 2057 :
    L730 = 260A :
    L731 = 260A :
    L732 = 260D :
    L733 = 2610 :
    L734 = 2610 :
    L735 = 2613 :
    L736 = 2616 :
    L737 = 2616 :
    L738 = 2619 :
    L739 = 261F :
     L74 = 205A :
    L740 = 2622 :
    L741 = 2622 :
    L742 = 2625 :
    L743 = 2628 :
    L744 = 2628 :
    L745 = 262B :
    L746 = 2632 :
    L747 = 2635 :
    L748 = 2635 :
    L749 = 2638 :
     L75 = 205C :
    L750 = 263B :
    L751 = 263B :
    L752 = 263E :
    L753 = 2641 :
    L754 = 2641 :
    L755 = 2644 :
    L756 = 264B :
    L757 = 264E :
    L758 = 264E :
    L759 = 2651 :
     L76 = 205F :
    L760 = 2654 :
    L761 = 2654 :
    L762 = 2654 :
    L763 = 2654 :
    L764 = 2654 :
    L765 = 2654 :
    L766 = 2657 :
    L767 = 265D :
    L768 = 2660 :
    L769 = 2660 :
     L77 = 205F :
    L770 = 2662 :
    L771 = 2665 :
    L772 = 266B :
    L773 = 266E :
    L774 = 266E :
    L775 = 2671 :
    L776 = 2677 :
    L777 = 267D :
    L778 = 2680 :
    L779 = 2680 :
     L78 = 2062 :
    L780 = 2680 :
    L781 = 2683 :
    L782 = 2689 :
    L783 = 268C :
    L784 = 268C :
    L785 = 268F :
    L786 = 2692 :
    L787 = 2692 :
    L788 = 2694 :
    L789 = 2697 :
     L79 = 2065 :
    L790 = 269D :
    L791 = 26A0 :
    L792 = 26A0 :
    L793 = 26A3 :
    L794 = 26A6 :
    L795 = 26A6 :
    L796 = 26A6 :
    L797 = 26A9 :
    L798 = 26AC :
    L799 = 26AC :
      L8 = 2009 :
     L80 = 2065 :
    L800 = 26AF :
    L801 = 26B5 :
    L802 = 26B8 :
    L803 = 26B8 :
    L804 = 26BB :
    L805 = 26BE :
    L806 = 26BE :
    L807 = 26C0 :
    L808 = 26C3 :
    L809 = 26CA :
     L81 = 2067 :
    L810 = 26CD :
    L811 = 26CD :
    L812 = 26CD :
    L813 = 26D0 :
    L814 = 26D3 :
    L815 = 26D3 :
    L816 = 26D6 :
    L817 = 26DC :
    L818 = 26DF :
    L819 = 26DF :
     L82 = 206C :
    L820 = 26E2 :
    L821 = 26E5 :
    L822 = 26E5 :
    L823 = 26E8 :
    L824 = 26EB :
    L825 = 26EB :
    L826 = 26ED :
    L827 = 26F0 :
    L828 = 26F7 :
    L829 = 26FA :
     L83 = 206F :
    L830 = 26FA :
    L831 = 26FD :
    L832 = 2700 :
    L833 = 2700 :
    L834 = 2700 :
    L835 = 2703 :
    L836 = 2709 :
    L837 = 270F :
    L838 = 2712 :
    L839 = 2712 :
     L84 = 206F :
    L840 = 2715 :
    L841 = 2718 :
    L842 = 2718 :
    L843 = 271B :
    L844 = 271E :
    L845 = 271E :
    L846 = 2721 :
    L847 = 2727 :
    L848 = 272D :
    L849 = 2730 :
     L85 = 2072 :
    L850 = 2730 :
    L851 = 2733 :
    L852 = 2736 :
    L853 = 2736 :
    L854 = 2739 :
    L855 = 273C :
    L856 = 273C :
    L857 = 273F :
    L858 = 2746 :
    L859 = 274C :
     L86 = 2075 :
    L860 = 274F :
    L861 = 274F :
    L862 = 2752 :
    L863 = 2755 :
    L864 = 2755 :
    L865 = 2755 :
    L866 = 2755 :
    L867 = 2755 :
    L868 = 2755 :
    L869 = 2758 :
     L87 = 2075 :
    L870 = 275B :
    L871 = 275B :
    L872 = 275E :
    L873 = 2764 :
    L874 = 2767 :
    L875 = 2767 :
    L876 = 276A :
    L877 = 2770 :
    L878 = 2773 :
    L879 = 2773 :
     L88 = 2078 :
    L880 = 2776 :
    L881 = 2779 :
    L882 = 2779 :
    L883 = 2779 :
    L884 = 2779 :
    L885 = 2779 :
    L886 = 2779 :
    L887 = 277C :
    L888 = 277F :
    L889 = 277F :
     L89 = 207D :
    L890 = 2781 :
    L891 = 2784 :
    L892 = 2784 :
    L893 = 2787 :
    L894 = 278A :
    L895 = 278A :
    L896 = 278D :
    L897 = 2790 :
    L898 = 2790 :
    L899 = 2793 :
      L9 = 2009 :
     L90 = 2080 :
    L900 = 2796 :
    L901 = 2796 :
    L902 = 2796 :
    L903 = 2799 :
    L904 = 279C :
    L905 = 279C :
    L906 = 279E :
    L907 = 27A0 :
    L908 = 27A1 :
    L909 = 27A1 : 2354
     L91 = 2080 :
    L910 = 27B5 : 237A
    L911 = 27CB : 23B7
    L912 = 27DF : 23D4
    L913 = 27F3 : 2755
    L914 = 280D : 2779
    L915 = 2824 : 2796
     L92 = 2083 :
     L93 = 2086 :
     L94 = 2086 :
     L95 = 2086 :
     L96 = 2086 :
     L97 = 2088 :
     L98 = 208E :
     L99 = 208E :
   div16 = 2928 :
 div16_1 = 2931 : 2940
 div16_2 = 293F : 293A
 div16_3 = 2940 : 293D
 div16_8 = 2948 : 29AF
div16_82 = 294D : 2955
div16_83 = 2955 : 2951
    div8 = 2959 : 22B4 22C4 22D7 22F0 22FA 2310 2329 2348 297C
  div8_1 = 2961 : 296C
 div8_16 = 2973 :
div8_161 = 297A : 2976
  div8_2 = 296C : 2968
 getChar = 282A : 2984
getChar1 = 2838 : 282F
   mul16 = 28AC : 265A 2668 2674 2686 269A 26B2 26C7 26D9 26F4 2706 2724 2743
                : 2761 276D
 mul1632 = 28DB :
mul16321 = 28FD : 28FA
mul16322 = 2904 : 2901
  mul16S = 290E :
 mul16S1 = 2917 : 2923
 mul16S2 = 2922 : 291C 291F
mul16_10 = 28C5 : 298D
 mul16_8 = 28CE :
 putBell = 2884 :
 putCRLF = 286B : 284B 299E 29C6
 putChar = 285E : 2855 286E 2873 287A 2882 2886 28A7 29BB
putChar1 = 285F : 2864
putErase = 2878 :
 putHexA = 2893 : 288A 288E
putHexA1 = 289C : 2898
putHexA2 = 28A7 : 28A3
putHexHL = 2888 :
  putMsg = 2842 :
putSpace = 285C : 287D
 putStr1 = 2850 : 2858
 putStr2 = 285A : 2853
    read = 2980 :
   read1 = 2984 : 2987 2994 2997
   read2 = 2999 : 298B
   start = 2000 :
  writeA = 29CA : 29C3
 writeHL = 29A2 : 299B 29CE
writeHL1 = 29AD : 29A8 29B6
writeHL2 = 29B8 : 29BE
writeHL3 = 29B9 : 29AB
writeLineA = 29C3 : 2013 2023 202A 2032 203C 2047 2054 2062 2072 2083 211B 2123
                : 212D 2138 2145 2153 2163 2179 2214 2225 2237 224F 2260 2277
                : 228F 22AD 22B7 22C7 22DA 22F3 2303 2319 2332 2351 2364 2377
                : 2393 23B4 23C5 2787
writeLineHL = 299B : 2091 209B 20A8 20BC 20CE 20DE 20F1 210A 218D 219C 21B2 21C7
                : 21D9 21EE 2209 23D1 23DD 23E9 23F3 23FF 2409 2419 242B 243B
                : 2456 2463 2472 2484 2494 249F 24AA 24C5 24D8 24ED 2505 251B
                : 252C 2543 254F 255B 256D 257F 259C 25AD 25BF 25CC 25D9 25F6
                : 260D 2625 2638 2651 265D 266B 267D 268F 26A3 26B5 26CA 26E2
                : 26FD 2715 2733 2752 2764 2776 2793
writeLineStr = 2848 : 2357 237D 23BA 23D7 2758 277C 2799
writeStr = 284F : 2843 2848
