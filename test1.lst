2000             TOS     equ 0FD00H        ;User stack grows before user global data.
2000             CNTLA0  equ 000H          ;144 ASCI0 Control Register A.
2000             STAT0   equ 004H          ;147 ASCI0 Status register.
2000             TDR0    equ 006H          ;148 ASCI0 Transmit Data Register.
2000             RDR0    equ 008H          ;149 ASCI0 Receive Data Register.
2000             ERROR   equ 3             ;CNTLA0->OVRN,FE,PE,BRK error flags.
2000             TDRE    equ 1             ;STAT0->Tx data register empty bit.
2000             OVERRUN equ 6             ;STAT0->OVERRUN bit.
2000             RDRF    equ 7             ;STAT0->Rx data register full bit.
2000                     .ORG  02000H      ;lowest external RAM address.
2000             start:
2000 31 00 FD            LD    SP,TOS
2003 C3 CE 21            JP    main
2006             ;****************
2006             ;sleepHL - Wait HL * 1 msec @ 18,432 MHz with no wait states
2006             ;  IN:  HL number of msec to wait
2006             ;  OUT: none
2006             ;  USES: 4 bytes on stack
2006             ;****************
2006             sleepHL:
2006 F5                  PUSH  AF
2007             sleep1:
2007 CD 18 20            CALL  WAIT1M      ;Wait 1 msec
200A 2B                  DEC   HL
200B 7C                  LD    A,H
200C B5                  OR    A,L
200D 20 F8               JR    NZ,sleep1
200F F1                  POP   AF
2010 C9                  RET
2011             ;****************
2011             ;sleepA - Wait A * 1 msec @ 18,432 MHz with no wait states
2011             ;  IN:  A number of msec to wait
2011             ;  OUT: none
2011             ;  USES: no stack
2011             ;****************
2011             sleepA:
2011 CD 18 20            CALL  WAIT1M      ;Wait 1 msec
2014 3D                  DEC   A
2015 20 F0               JR    NZ,sleepA
2017 C9                  RET
2018             ;****************
2018             ;WAIT1M
2018             ;wait 1 msec at 18,432 MHz with no wait states
2018             ;The routine requires 56+n*22 states, so that with n=834
2018             ;28  clock cycles remain left.
2018             ;****************
2018             WAIT1M:
2018 E5                  PUSH  HL          ;5      11 (11)
2019                                       ;       3 opcode
2019                                       ;       3 mem write
2019                                       ;       1 inc SP
2019                                       ;       3 mem write
2019                                       ;       1 inc SP
2019 F5                  PUSH  AF          ;5      11 (22)
201A                                       ;       3 opcode
201A                                       ;       3 mem write
201A                                       ;       1 inc SP
201A                                       ;       3 mem write
201A                                       ;       1 inc SP
201A 21 42 03            LD    HL, 834     ;3      9 (31)
201D                                       ;       3 opcode
201D                                       ;       3 mem read
201D                                       ;       3 mem read
201D             WAIT1M2:
201D 2B                  DEC   HL          ;2      4 (31+n*4)
201E                                       ;       3 opcode
201E                                       ;       1 execute
201E 7C                  LD    A,H         ;2      6 (31+n*10)
201F                                       ;       3 opcode
201F                                       ;       3 execute
201F B5                  OR    A,L         ;2      4 (31+n*14)
2020                                       ;       3 opcode
2020                                       ;       1 execute
2020 20 FB               JR    NZ,WAIT1M2  ;4      8 (31+n*22) if NZ
2022                                       ;       3 opcode
2022                                       ;       3 mem read
2022                                       ;       1 execute
2022                                       ;       1 execute
2022                                       ;2      6 (29+n*22) if not NZ
2022                                       ;       3 opcode
2022                                       ;       3 mem read
2022 F1                  POP   AF          ;3      9 (38+n*22)
2023                                       ;       3 opcode
2023                                       ;       3 mem read
2023                                       ;       3 mem read
2023 E1                  POP   HL          ;3      9 (47+n*22)
2024                                       ;       3 opcode
2024                                       ;       3 mem read
2024                                       ;       3 mem read
2024 C9                  RET               ;3      9 (56+n*22)
2025                                       ;       3 opcode
2025                                       ;       3 mem read
2025                                       ;       3 mem read
2025             ;****************
2025             ;getChar
2025             ;Check if an input character from ASCI0 is available.
2025             ;  IN:  none
2025             ;  OUT: F: ZERO flag set if no character is available.
2025             ;          ZERO flag reset if a character is available.
2025             ;       A : character from ASCI0, if available.
2025             ;  USES:AF
2025             ;****************
2025             getChar:
2025 ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status
2028 CB 77               BIT   OVERRUN,A   ;check if ASCIO OVERRUN bit is set
202A 20 07               JR    NZ,getChar1 ;-yes: reset error flags
202C CB 7F               BIT   RDRF,A      ;check if ASCIO RDRF bit is set
202E C8                  RET   Z           ;-no: return without a character
202F ED 38 08            IN0   A,(RDR0)    ;-yes:read ASCIO Rx data register
2032 C9                  RET
2033             getChar1:
2033 ED 38 00            IN0   A,(CNTLA0)  ;read ASCI0 control register
2036 CB 9F               RES   ERROR,A     ;reset OVRN,FE,PE,BRK flags
2038 ED 39 00            OUT0  (CNTLA0),A  ;write back to ASCI0 CTRL
203B AF                  XOR   A,A
203C C9                  RET               ;return without a character
203D             ;****************
203D             ;putMsg
203D             ;Print via ASCI0 a zero terminated string, starting at the return address on the stack.
203D             ;  IN:  none.
203D             ;  OUT: none.
203D             ;  USES:none.
203D             ;****************
203D             putMsg:
203D E3                  EX    (SP),HL     ;save HL and load return address into HL.
203E CD 4A 20            CALL  writeStr
2041 E3                  EX    (SP),HL     ;put return address onto stack and restore HL.
2042 C9                  RET
2043             ;****************
2043             ;writeLineStr
2043             ;Print via ASCI0 a zero terminated string, pointed to by HL, followed by a carriage return.
2043             ;  IN:  HL:address of zero terminated string to be printed.
2043             ;  OUT: none.
2043             ;  USES:HL (point to byte after zero terminated string)
2043             ;****************
2043             writeLineStr:
2043 CD 4A 20            CALL  writeStr
2046 CD 66 20            CALL  putCRLF
2049 C9                  RET
204A             ;****************
204A             ;writeStr
204A             ;Print via ASCI0 a zero terminated string, pointed to by HL.
204A             ;  IN:  HL:address of zero terminated string to be printed.
204A             ;  OUT: none.
204A             ;  USES:HL (point to byte after zero terminated string)
204A             ;****************
204A             writeStr:
204A F5                  PUSH  AF          ;save registers
204B             putStr1:
204B 7E                  LD    A,(HL)      ;get next character
204C 23                  INC   HL
204D B7                  OR    A,A         ;is it zer0?
204E 28 05               JR    Z,putStr2   ;yes ->return
2050 CD 59 20            CALL  putChar     ;no->put it to ASCI0
2053 18 F6               JR    putStr1
2055             putStr2:
2055 F1                  POP   AF
2056 C9                  RET
2057             ;****************
2057             ;putSpace
2057             ;Send a space character to ASCI0
2057             ;  IN:  none.
2057             ;  OUT: none.
2057             ;  USES:AF
2057             ;****************
2057             putSpace:
2057 3E 20               LD    A,' '       ;load space and continue with putChar.
2059             ;****************
2059             ;putChar
2059             ;Send one character to ASCI0.
2059             ;  IN:  A = character
2059             ;  OUT: none.
2059             ;  USES:none.
2059             ;****************
2059             putChar:
2059 F5                  PUSH  AF          ;send the character via ASCI0
205A             putChar1:
205A ED 38 04            IN0   A,(STAT0)   ;read ASCI0 status register
205D CB 4F               BIT   TDRE,A      ;wait until TDRE <> 0
205F 28 F9               JR    Z,putChar1
2061 F1                  POP   AF          ;restore AF registers
2062 ED 39 06            OUT0  (TDR0),A    ;write character to ASCI0
2065 C9                  RET
2066             ;****************
2066             ;putCRLF
2066             ;Send CR and LF to ASCI0
2066             ;  IN:  none.
2066             ;  OUT: none.
2066             ;  USES:none.
2066             ;****************
2066             putCRLF:
2066 F5                  PUSH  AF
2067 3E 0D               LD    A,'\r'       ;print carriage return
2069 CD 59 20            CALL  putChar
206C 3E 0A               LD    A,'\n'       ;print line feed
206E CD 59 20            CALL  putChar
2071 F1                  POP   AF
2072 C9                  RET
2073             ;****************
2073             ;putErase
2073             ;Erase the latest character at ASCI0
2073             ;  IN:  none.
2073             ;  OUT: none.
2073             ;  USES:AF
2073             ;****************
2073             putErase:
2073 3E 08               LD    A,'\b'       ;print backspace
2075 CD 59 20            CALL  putChar
2078 CD 57 20            CALL  putSpace    ;print space (erase character)
207B 3E 08               LD    A,'\b'      ;print backspace
207D 18 DA               JR    putChar
207F             ;****************
207F             ;putBell
207F             ;Send a Bell character to ASCI0
207F             ;  IN:  none.
207F             ;  OUT: none.
207F             ;  USES:AF
207F             ;****************
207F             putBell:
207F 3E 07               LD    A,07        ;ring the bell at ASCI0
2081 18 D6               JR    putChar
2083             ;****************
2083             ;putHexHL
2083             ;Print HL register pair as 4 hex digits
2083             ;  IN:  HL = word to be printed.
2083             ;  OUT: none.
2083             ;  USES:none.
2083             ;****************
2083             putHexHL:
2083 F5                  PUSH  AF          ;save used registers
2084 7C                  LD    A,H         ;print H as 2 hex digits
2085 CD 8E 20            CALL  putHexA
2088 7D                  LD    A,L         ;print L as 2 hex digits
2089 CD 8E 20            CALL  putHexA
208C F1                  POP   AF          ;restore used registers
208D C9                  RET
208E             ;****************
208E             ;putHexA
208E             ;Print A register as 2 hex digits
208E             ;  IN:  A = byte to be printed
208E             ;  OUT: none.
208E             ;  USES:none.
208E             ;****************
208E             putHexA:
208E F5                  PUSH  AF          ;save input
208F 1F                  RRA               ;shift upper nibble to the right
2090 1F                  RRA
2091 1F                  RRA
2092 1F                  RRA
2093 CD 97 20            CALL  putHexA1    ;print upper nibble
2096 F1                  POP   AF          ;restore input & print lower nibble
2097             putHexA1:
2097 F5                  PUSH  AF          ;save input
2098 E6 0F               AND   A,00FH      ;mask lower nibble
209A C6 30               ADD   A,'0'       ;convert to hex digit
209C FE 3A               CP    A,'9'+1
209E 38 02               JR    C,putHexA2
20A0 C6 07               ADD   A,07
20A2             putHexA2:
20A2 CD 59 20            CALL  putChar
20A5 F1                  POP   AF          ;restore input
20A6 C9                  RET               ;and return
20A7             ;****************
20A7             ;mul16
20A7             ;16 by 16 bit unsigned multiplication with 16 bit result.
20A7             ;  IN:  HL = operand 1
20A7             ;       DE = operand 2
20A7             ;  OUT: HL = HL * DE low part
20A7             ;  USES:DE
20A7             ;  Size   25 bytes
20A7             ;  Time  160 cycles
20A7             ;****************
20A7             mul16:
20A7                     ;HL = HL * DE
20A7                     ;        H  L
20A7                     ;        D  E
20A7                     ;    --------*
20A7                     ;          EL
20A7                     ;       EH  0
20A7                     ;       DL  0
20A7                     ; -----------+
20A7                     ;        R  S
20A7                     ;S = ELlow
20A7                     ;R = ELhigh+EHlow+DLlow
20A7 C5                  PUSH  BC          ;11  11 save BC
20A8 44                  LD    B,H         ; 4  15 copy HL to BC
20A9 4D                  LD    C,L         ; 4  19
20AA 63                  LD    H,E         ; 4  23 HL contains EL
20AB ED 6C               MLT   HL          ;17  40
20AD E5                  PUSH  HL          ;11  51
20AE 63                  LD    H,E         ; 4  55 HL contains EH aka EB
20AF 68                  LD    L,B         ; 4  59
20B0 ED 6C               MLT   HL          ;17  76
20B2 45                  LD    B,L         ; 4  80 save EHlow in B
20B3 62                  LD    H,D         ; 4  84 HL contains DL aka DC
20B4 69                  LD    L,C         ; 4  88
20B5 ED 6C               MLT   HL          ;17 105
20B7 55                  LD    D,L         ; 4 109 DLlow into DE
20B8 1E 00               LD    E,0         ; 6 115
20BA E1                  POP   HL          ; 9 124 add EL+DElow
20BB 19                  ADD   HL,DE       ; 7 131
20BC 50                  LD    D,B         ; 4 135 add EL+DElow+EHlow
20BD 19                  ADD   HL,DE       ; 7 142
20BE C1                  POP   BC          ; 9 151 restore BC
20BF C9                  RET               ; 9 160
20C0             ;****************
20C0             ;mul16_10
20C0             ;multiply a 16 bit unsigned number by 10 with a 16 bit result.
20C0             ;  IN:  HL = operand
20C0             ;  OUT: HL = HL * 10; low part
20C0             ;  USES:Flags
20C0             ;  Size   9 bytes
20C0             ;  Time   65 cycles
20C0             ;****************
20C0             mul16_10:
20C0 D5                  PUSH  DE          ;11 11
20C1 54                  LD    D,H         ; 4 15
20C2 5D                  LD    E,L         ; 4 19
20C3 29                  ADD   HL,HL       ; 7 26 times 2
20C4 29                  ADD   HL,HL       ; 7 33 times 4
20C5 19                  ADD   HL,DE       ; 7 40 times 5
20C6 29                  ADD   HL,HL       ; 7 47 times 10
20C7 D1                  POP   DE          ; 9 56
20C8 C9                  RET               ; 9 65
20C9             ;****************
20C9             ;mul16_8
20C9             ;16 by 8 bit unsigned multiplication with 16 bit result.
20C9             ;  IN:  HL = operand 1
20C9             ;        A = operand 2
20C9             ;  OUT: HL = HL * A low part
20C9             ;  USES:AF
20C9             ;  Size   .. bytes
20C9             ;  Time  ... cycles
20C9             ;****************
20C9             mul16_8:
20C9                     ;HL = HL * A
20C9                     ;        H  L
20C9                     ;           A
20C9                     ;    --------*
20C9                     ;          AL
20C9                     ;       AH  0
20C9                     ; -----------+
20C9                     ;        R  S
20C9                     ;S = ALlow
20C9                     ;R = ALhigh+AHlow
20C9 C5                  PUSH  BC          ;11  11 save BC
20CA 44                  LD    B,H         ; 4  15
20CB 47                  LD    C,A         ; 4  19
20CC 67                  LD    H,A         ; 4  23
20CD ED 6C               MLT   HL          ;17  40 HL = AL
20CF ED 4C               MLT   BC          ;17  57 BC = AH
20D1 7C                  LD    A,H         ; 4  61 A = S = ALhigh+AHlow
20D2 81                  ADD   A,C         ; 4  65
20D3 67                  LD    H,A         ; 4  69
20D4 C1                  POP   BC          ; 9  78 | 289 restore BC
20D5 C9                  RET               ; 9  87 | 307
20D6             ;****************
20D6             ;mul1632
20D6             ;16 by 16 bit unsigned multiplication with 32 bit result.
20D6             ;  IN:  HL = operand 1
20D6             ;       DE = operand 2
20D6             ;  OUT: HL = HL * DE low part
20D6             ;       DE = HL * DE high part
20D6             ;  USES:-
20D6             ;  Size 49 bytes
20D6             ;  Time between 303 en 307 cycles
20D6             ;****************
20D6             mul1632:
20D6                     ;HL = HL * DE
20D6                     ;        H  L
20D6                     ;        D  E
20D6                     ;    --------*
20D6                     ;          EL
20D6                     ;       EH  0
20D6                     ;       DL  0
20D6                     ;    DH  0  0
20D6                     ; -----------+
20D6                     ;  P  Q  R  S
20D6                     ;S = ELlow
20D6                     ;R = ELhigh+EHlow+DLlow
20D6                     ;Q = DHlow+EHhigh+DLhigh
20D6                     ;P = DHhigh
20D6 F5                  PUSH  AF          ;11  11 save AF
20D7 C5                  PUSH  BC          ;11  22 save BC
20D8 44                  LD    B,H         ; 4  26
20D9 4D                  LD    C,L         ; 4  30
20DA 62                  LD    H,D         ; 4  34 HL contains DH aka DB
20DB 68                  LD    L,B         ; 4  38
20DC ED 6C               MLT   HL          ;17  55
20DE E5                  PUSH  HL          ;11  66
20DF 62                  LD    H,D         ; 4  70 HL contains DL aka DC
20E0 69                  LD    L,C         ; 4  74
20E1 ED 6C               MLT   HL          ;17  91
20E3 E5                  PUSH  HL          ;11 102
20E4 63                  LD    H,E         ; 4 106 HL contains EH aka EB
20E5 68                  LD    L,B         ; 4 110
20E6 ED 6C               MLT   HL          ;17 127
20E8 E5                  PUSH  HL          ;11 138
20E9 63                  LD    H,E         ; 4 142 HL contains EL aka EC
20EA 69                  LD    L,C         ; 4 146
20EB ED 6C               MLT   HL          ;17 163
20ED D1                  POP   DE          ; 9 172 calculate RS=EL+EH0
20EE 06 00               LD    B,0         ; 6 178
20F0 4A                  LD    C,D         ; 4 182 ..C=EHhigh
20F1 53                  LD    D,E         ; 4 186 ..D=EHlow
20F2 1E 00               LD    E,0         ; 6 192
20F4 19                  ADD   HL,DE       ; 7 199
20F5 30 01               JR    NC,mul16321 ; 8 207 | 6 205 add carry to PQ
20F7 03                  INC   BC          ;         4 209
20F8             mul16321:
20F8 D1                  POP   DE          ; 9 209 | 211 calculate RS=EL+EH0+DL0
20F9 7A                  LD    A,D         ; 4 220 | 222 ..A=DLhigh
20FA 53                  LD    D,E         ; 4 224 | 226 ..D=DLlow
20FB 19                  ADD   HL,DE       ; 7 231 | 233
20FC 30 01               JR    NC,mul16322 ; 8 239 | 6 239 add carry to PQ
20FE 03                  INC   BC          ;         4 243
20FF             mul16322:
20FF                                       ;HL=RS=EL+EH0+DL0
20FF                                       ;C=EHhigh
20FF                                       ;A=DLhigh
20FF                                       ;E=0
20FF EB                  EX    DE,HL       ; 3 242 | 246
2100 65                  LD    H,L         ; 4 246 | 250 ..E was 0, so H=L=0
2101 6F                  LD    L,A         ; 4 250 | 254 ..HL=DLhigh
2102 09                  ADD   HL,BC       ; 7 257 | 261 PQ=EHhigh+DLhigh+DH
2103 C1                  POP   BC          ; 9 266 | 270
2104 09                  ADD   HL,BC       ; 7 273 | 277
2105 EB                  EX    DE,HL       ; 3 276 | 280
2106                                       ;D=P=DHhigh
2106                                       ;E=Q=DHlow+EHhigh+DLhigh
2106                                       ;H=R=ELhigh+EHlow+DLlow
2106                                       ;L=S=ELlow
2106 C1                  POP   BC          ; 9 285 | 289 restore BC
2107 F1                  POP   AF          ; 9 294 | 298 restore AF
2108 C9                  RET               ; 9 303 | 307
2109             ;****************
2109             ;mul16S
2109             ;16 by 16 bit slow unsigned multiplication with 32 bit result.
2109             ;  IN:  HL = operand 1
2109             ;       DE = operand 2
2109             ;  OUT: DE = HL * DE high part
2109             ;       HL = HL * DE low part
2109             ;  USES:none.
2109             ;  Size 26 bytes
2109             ;  Time between 726 en 998 cycles
2109             ;****************
2109             mul16S:
2109 F5                  PUSH  AF          ;11  11 save AF
210A C5                  PUSH  BC          ;11  22 save BC
210B 44                  LD    B,H         ; 4  26
210C 4D                  LD    C,L         ; 4  30
210D 21 00 00            LD    HL,0        ; 9  39
2110 3E 10               LD    A,16        ; 6  45
2112             mul16S1:
2112 29                  ADD   HL,HL       ;16*7=112 157
2113 CB 13               RL    E           ;16*7=112 269
2115 CB 12               RL    D           ;16*7=112 381
2117 30 04               JR    NC,mul16S2  ;16*8=128 509 16*6= 96 477
2119 09                  ADD   HL,BC       ;             16*7=112 589
211A 30 01               JR    NC,mul16S2  ;             16*8=128 717 16*6=96 685
211C 13                  INC   DE          ;             16*4= 64 781 16*4=64 749 This instruction (with the jump) is like an "ADC DE,0"
211D             mul16S2:
211D 3D                  DEC   A           ;16*4=64    573 | 845 | 813
211E 20 F2               JR    NZ,mul16S1  ;15*8+6=126 699 | 971 | 939
2120 C1                  POP   BC          ; 9         708 | 980 | 948 restore BC
2121 F1                  POP   AF          ; 9         717 | 989 | 957 restore AF
2122 C9                  RET               ; 9         726 | 998 | 966
2123             ;****************
2123             ;div16
2123             ;16 by 16 bit unsigned division.
2123             ;  IN:  HL = dividend
2123             ;       DE = divisor
2123             ;  OUT: HL = quotient
2123             ;       DE = remainder
2123             ;  USES:-
2123             ;  Size   32 bytes
2123             ;  Time   between 1073 en 1121 cycles
2123             ;pseudo code:
2123             ;T = AC = dividend
2123             ;D = DE = divisor
2123             ;Q = AC = quotient = 0
2123             ;R = HL = remainder = 0
2123             ;invariante betrekking:
2123             ; D/T\Q     
2123             ;   R       
2123             ; T = QD + R
2123             ; T <= 2^N  
2123             ;
2123             ; D/T'.RT\Q'      
2123             ;   R'             
2123             ; RT <= 2^N        
2123             ; 0<=k<=N          
2123             ; RT = T % 2^k     
2123             ; T' = (T-RT) / 2^k
2123             ; Q' = T' / D      
2123             ; R' = T' % D      
2123             ;
2123             ;for (i=16; i>0; i--) {
2123             ;  T = T * 2 (remember MSB in carry)
2123             ;  R = R * 2 + carry
2123             ;  Q = Q * 2
2123             ;  if (R >= D) {
2123             ;    R = R - D;
2123             ;    Q++;
2123             ;  }
2123             ;}
2123             ;return Q (in HL) and R (in DE)
2123             ;****************
2123             div16:
2123 F5                  PUSH  AF          ;11  11 save registers used
2124 C5                  PUSH  BC          ;11  22
2125 4D                  LD    C,L         ; 4  26 T(AC) = teller from input (HL)
2126 7C                  LD    A,H         ; 4  30 D(DE) = deler from input  (DE)
2127 21 00 00            LD    HL,0        ; 9  39 R(HL) = restant; Q(AC) = quotient
212A 06 10               LD    B,16        ; 6  45 for (i=16; i>0; i--)
212C             div16_1:
212C CB 21               SLA   C           ;16* 7=112 157   T = T * 2 (remember MSB in carry)
212E CB 17               RL    A           ;16* 7=112 269   Q = Q * 2
2130 ED 6A               ADC   HL,HL       ;16*10=160 429   R = R * 2 + carry
2132 B7                  OR    A,A         ;16* 4= 64 493   if (R >= D) {
2133 ED 52               SBC   HL,DE       ;16*10=160 653
2135 38 03               JR    C,div16_2   ;16* 8=128 781 16*6= 96 749   R = R - D
2137 0C                  INC   C           ;              16*4= 64 813   Q++
2138 18 01               JR    div16_3     ;              16*8=128 941
213A             div16_2:
213A 19                  ADD   HL,DE       ;16* 7=112 893  (compensate comparison)
213B             div16_3:
213B 10 EF               DJNZ  div16_1     ;15*9+7=142 1035 | 1083 }
213D EB                  EX    DE,HL       ; 3 1038 | 1086 swap remainder (HL) into DE
213E 67                  LD    H,A         ; 4 1042 | 1090 move quotient (AC) into HL
213F 69                  LD    L,C         ; 4 1046 | 1094
2140 C1                  POP   BC          ; 9 1055 | 1103
2141 F1                  POP   AF          ; 9 1064 | 1112
2142 C9                  RET               ; 9 1073 | 1121
2143             ;****************
2143             ;div16_8
2143             ;16 by 8 bit unsigned division.
2143             ;  IN:  HL = dividend
2143             ;       A  = divisor
2143             ;  OUT: HL = quotient
2143             ;       A  = remainder
2143             ;  USES:F(lags)
2143             ;  Size 18 bytes
2143             ;  Time between 601 en 697 cycles
2143             ;****************
2143             div16_8:
2143 C5                  PUSH  BC          ;11 11 save registers used
2144 06 10               LD    B,16        ; 6 17 the length of the dividend (16 bits)
2146 4F                  LD    C,A         ; 4 21 move divisor to C
2147 AF                  XOR   A,A         ; 4 25 clear upper 8 bits of AHL
2148             div16_82:
2148 29                  ADD   HL,HL       ;16*7=112 137 advance dividend (HL) into selected bits (A)
2149 CB 17               RL    A           ;16*7=112 249
214B B9                  CP    A,C         ;16*4= 64 313 check if divisor (E) <= selected digits (A)
214C 38 02               JR    C,div16_83  ;16*8=128 441 16*6=96 409 if not, advance without subtraction
214E 91                  SUB   A,C         ;             16*4=64 473 subtract the divisor
214F 2C                  INC   L           ;             16*4=64 537 and set the next digit of the quotient
2150             div16_83:
2150 10 F6               DJNZ  div16_82    ;15*9+7=142 583 679
2152 C1                  POP   BC          ;9 592 688
2153 C9                  RET               ;9 601 697
2154             ;****************
2154             ;div8
2154             ;8 by 8 bit unsigned division.
2154             ;  IN:  A = dividend
2154             ;       C = divisor
2154             ;  OUT: A = quotient
2154             ;       C = remainder
2154             ;  USES:F(lags)
2154             ;  Size 26 bytes
2154             ;  Time between 411 and 459 cycles
2154             ;****************
2154             ;pseudo code:
2154             ;T = dividend
2154             ;D = divisor
2154             ;Q = quotient = 0
2154             ;R = remainder = 0
2154             ;invariante betrekking:
2154             ; T = QD + R
2154             ; T <= 2^8  
2154             ;
2154             ; D/T'.RT\Q'      
2154             ;   R'             
2154             ; RT <= 2^8        
2154             ; 0<=k<=8          
2154             ; RT = T % 2^k     
2154             ; T' = (T-RT) / 2^k
2154             ; Q' = T' / D      
2154             ; R' = T' % D      
2154             ;
2154             ;for (i=8; i>0; i--) {
2154             ;  T = T * 2 (remember MSB in carry)
2154             ;  R = R * 2 + carry
2154             ;  Q = Q * 2
2154             ;  if (R >= D) {
2154             ;    R = R - D;
2154             ;    Q++;
2154             ;  }
2154             ;}
2154             ;return Q (in A) and R (in C)
2154             ;****************
2154             ;E = T = dividend
2154             ;C = D = divisor
2154             ;D = Q = quotient
2154             ;A = R = remainder
2154             ;****************
2154             ;  IN:  A = dividend
2154             ;       C  = divisor
2154             div8:
2154 D5                  PUSH  DE          ;11 11 save registers used
2155 C5                  PUSH  BC          ;11 22 save registers used
2156 06 08               LD    B,8         ; 6 28 the length of the dividend (8 bits)
2158 16 00               LD    D,0         ; 6 34 D = Q = quotient = 0
215A 5F                  LD    E,A         ; 4 38 E = T = dividend
215B AF                  XOR   A,A         ; 4 42 A = R = remainder = 0
215C             div8_1:
215C CB 23               SLA   E           ;8*7=56  98            T[E] = T[E] * 2 (remember MSB in carry)
215E CB 17               RL    A           ;8*7=56 154            R[A] = R[A] * 2 + carry
2160 CB 22               SLA   D           ;8*7=56 210            Q[D] = Q[D] * 2
2162 B9                  CP    A,C         ;8*4=32 242            if (R[A] - D[C] >= 0) {
2163 38 02               JR    C,div8_2    ;8*8=64 306 8*6=48 290
2165 91                  SUB   A,C         ;           8*4=32 322   R[A] = R[A] - D[C];
2166 14                  INC   D           ;           8*4=32 354   Q[D]++;
2167             div8_2:           ;                      }
2167 10 F3               DJNZ  div8_1      ;7*9+7=70 376 424      }
2169 C1                  POP   BC          ;9        385 433
216A 4F                  LD    C,A         ;4        389 437      return Remainder[A] in C
216B 7A                  LD    A,D         ;4        393 441      return Quotient[D] in A
216C D1                  POP   DE          ;9        402 450
216D C9                  RET               ;9        411 459
216E             ;****************
216E             ;div8_16
216E             ;8 by 16 bit unsigned division.
216E             ;  IN:  A = dividend
216E             ;       HL = divisor
216E             ;  OUT: A = quotient
216E             ;       C = remainder
216E             ;  USES:F(lags)
216E             ;  Size 13 bytes (plus dependency on div8)
216E             ;  Time 31 or between 436 and 484 cycles
216E             ;****************
216E             ;invariante betrekking:
216E             ; T = dividend
216E             ; D = divisor
216E             ; Q = quotient
216E             ; R = remainder
216E             ; T = QD + R
216E             ;pseudo code:
216E             ; if D >= 256 {
216E             ;   R = T
216E             ;   Q = 0
216E             ; } else {
216E             ;   R = T/D (using div8)
216E             ;   Q = T%D (using div8)
216E             ; }
216E             ;****************
216E             
216E             
216E             div8_16:
216E 4F                  LD    C,A         ;  4  4         save dividend(A) in C
216F 7C                  LD    A,H         ;  4  8         if D >= 256 {
2170 B7                  OR    A,A         ;  4 12
2171 28 02               JR    Z,div8_161  ;  6 18  8  20
2173 AF                  XOR   A,A         ;  4 22           R = T;
2174 C9                  RET               ;  9 31           Q = 0;
2175             div8_161:                     ;               } else {
2175 79                  LD    A,C         ;        4  24    restore dividend into A
2176 4D                  LD    C,L         ;        4  28    load divisor (HL) into C
2177 CD 54 21            CALL  div8        ; 16+411/16+459               R = T/D; Q = T%D;
217A C9                  RET               ; 9  436/484    }
217B             ;****************
217B             ;read
217B             ;read a 16 bit unsigned number from the input
217B             ;  IN:  none
217B             ;  OUT: HL = 16 bit unsigned number
217B             ;  USES:-
217B             ;****************
217B             read:
217B F5                  PUSH  AF
217C 21 00 00            LD    HL,0        ;result = 0;
217F             read1:
217F CD 25 20            CALL  getChar     ;check if a character is available.
2182 28 FB               JR    Z,read1     ;-no: wait for it.
2184 FE 0D               CP    A,'\r'      ;return if char == Carriage Return
2186 28 0C               JR    Z,read2
2188 CD C0 20            CALL  mul16_10    ;result *= 10;
218B D6 30               SUB   A,'0'       ;digit = char - '0';
218D 85                  ADD   A,L         ;result += digit;
218E 6F                  LD    L,A
218F 30 EE               JR    NC,read1     ;get next character
2191 24                  INC   H
2192 18 EB               JR    read1        ;get next character
2194             read2:
2194 F1                  POP   AF
2195 C9                  RET
2196             ;****************
2196             ;writeLineHL
2196             ;write a 16 bit unsigned number to the output, followed by a carriage return
2196             ;  IN:  HL = 16 bit unsigned number
2196             ;  OUT: none
2196             ;  USES:HL
2196             ;****************
2196             writeLineHL:
2196 CD 9D 21            CALL  writeHL
2199 CD 66 20            CALL  putCRLF
219C C9                  RET
219D             ;****************
219D             ;writeHL
219D             ;write a 16 bit unsigned number to the output
219D             ;  IN:  HL = 16 bit unsigned number
219D             ;  OUT: none
219D             ;  USES:HL
219D             ;****************
219D             writeHL:
219D C5                  PUSH  BC          ;save registers used
219E F5                  PUSH  AF
219F 06 00               LD    B,0         ;number of digits on stack
21A1 7C                  LD    A,H         ;is HL=0?
21A2 B5                  OR    A,L
21A3 20 03               JR    NZ,writeHL1
21A5 04                  INC   B           ;write a single digit 0
21A6 18 0C               JR    writeHL3
21A8             writeHL1:
21A8 3E 0A               LD    A,10        ;divide HL by 10
21AA CD 43 21            CALL  div16_8
21AD F5                  PUSH  AF          ;put remainder on stack
21AE 04                  INC   B
21AF 7C                  LD    A,H         ;is quotient 0?
21B0 B5                  OR    A,L
21B1 20 F5               JR    NZ,writeHL1
21B3             writeHL2:
21B3 F1                  POP   AF          ;write digit
21B4             writeHL3:
21B4 C6 30               ADD   A,'0'
21B6 CD 59 20            CALL  putChar
21B9 10 F8               DJNZ  writeHL2
21BB F1                  POP   AF          ;restore registers used
21BC C1                  POP   BC
21BD C9                  RET
21BE             ;****************
21BE             ;writeLineA
21BE             ;write an 8-bit unsigned number to the output, followed by a carriage return
21BE             ;  IN:  A = 8-bit unsigned number
21BE             ;  OUT: none
21BE             ;  USES:none
21BE             ;****************
21BE             writeLineA:
21BE CD C5 21            CALL  writeA
21C1 CD 66 20            CALL  putCRLF
21C4 C9                  RET
21C5             ;****************
21C5             ;writeA
21C5             ;write an 8-bit unsigned number to the output
21C5             ;  IN:  A = 8-bit unsigned number
21C5             ;  OUT: none
21C5             ;  USES:none
21C5             ;****************
21C5             writeA:
21C5 E5                  PUSH  HL          ;save registers used
21C6 26 00               LD    H,0
21C8 6F                  LD    L,A
21C9 CD 9D 21            CALL  writeHL
21CC E1                  POP   HL
21CD C9                  RET
21CE             main:
21CE             L0:
21CE                     ;;test1.j(0) /* Program to test generated Z80 assembler code */
21CE             L1:
21CE                     ;;test1.j(1) class TestWhile {
21CE             L2:
21CE                     ;;test1.j(2)   byte b = 0;
21CE             L3:
21CE 3E 00               LD    A,0
21D0             L4:
21D0 32 00 50            LD    (05000H),A
21D3             L5:
21D3                     ;;test1.j(3)   byte b2 = 32;
21D3             L6:
21D3 3E 20               LD    A,32
21D5             L7:
21D5 32 01 50            LD    (05001H),A
21D8             L8:
21D8                     ;;test1.j(4)   word i = 110;
21D8             L9:
21D8 3E 6E               LD    A,110
21DA             L10:
21DA 6F                  LD    L,A
21DB 26 00               LD    H,0
21DD 22 02 50            LD    (05002H),HL
21E0             L11:
21E0                     ;;test1.j(5)   word i2 = 105;
21E0             L12:
21E0 3E 69               LD    A,105
21E2             L13:
21E2 6F                  LD    L,A
21E3 26 00               LD    H,0
21E5 22 04 50            LD    (05004H),HL
21E8             L14:
21E8                     ;;test1.j(6)   word p = 12;
21E8             L15:
21E8 3E 0C               LD    A,12
21EA             L16:
21EA 6F                  LD    L,A
21EB 26 00               LD    H,0
21ED 22 06 50            LD    (05006H),HL
21F0             L17:
21F0                     ;;test1.j(7)   
21F0             L18:
21F0                     ;;test1.j(8)   /*Possible operand types: 
21F0             L19:
21F0                     ;;test1.j(9)    * constant, acc, var, stack8, stack16
21F0             L20:
21F0                     ;;test1.j(10)    *Possible datatype combinations:
21F0             L21:
21F0                     ;;test1.j(11)    * byte - byte
21F0             L22:
21F0                     ;;test1.j(12)    * byte - integer
21F0             L23:
21F0                     ;;test1.j(13)    * integer - byte
21F0             L24:
21F0                     ;;test1.j(14)    * integer - integer
21F0             L25:
21F0                     ;;test1.j(15)   */
21F0             L26:
21F0                     ;;test1.j(16) 
21F0             L27:
21F0                     ;;test1.j(17)   println(0);
21F0             L28:
21F0 3E 00               LD    A,0
21F2             L29:
21F2 CD BE 21            CALL  writeLineA
21F5             L30:
21F5                     ;;test1.j(18) 
21F5             L31:
21F5                     ;;test1.j(19)   /************************/
21F5             L32:
21F5                     ;;test1.j(20)   // global variable within while scope
21F5             L33:
21F5                     ;;test1.j(21)   b++;
21F5             L34:
21F5 2A 00 50            LD    HL,(05000H)
21F8 34                  INC   (HL)
21F9             L35:
21F9                     ;;test1.j(22)   println (b);
21F9             L36:
21F9 3A 00 50            LD    A,(05000H)
21FC             L37:
21FC CD BE 21            CALL  writeLineA
21FF             L38:
21FF                     ;;test1.j(23)   while (b < 2) {
21FF             L39:
21FF 3A 00 50            LD    A,(05000H)
2202             L40:
2202 D6 02               SUB   A,2
2204             L41:
2204 D2 26 22            JP    NC,L67
2207             L42:
2207                     ;;test1.j(24)     b++;
2207             L43:
2207 2A 00 50            LD    HL,(05000H)
220A 34                  INC   (HL)
220B             L44:
220B                     ;;test1.j(25)     word j = 1001;
220B             L45:
220B 21 E9 03            LD    HL,1001
220E             L46:
220E 22 08 50            LD    (05008H),HL
2211             L47:
2211                     ;;test1.j(26)     byte c = b;
2211             L48:
2211 3A 00 50            LD    A,(05000H)
2214             L49:
2214 32 0A 50            LD    (0500AH),A
2217             L50:
2217                     ;;test1.j(27)     byte d = c;
2217             L51:
2217 3A 0A 50            LD    A,(0500AH)
221A             L52:
221A 32 0B 50            LD    (0500BH),A
221D             L53:
221D                     ;;test1.j(28)     println (c);
221D             L54:
221D 3A 0A 50            LD    A,(0500AH)
2220             L55:
2220 CD BE 21            CALL  writeLineA
2223             L56:
2223                     ;;test1.j(29)   }
2223             L57:
2223 C3 FF 21            JP    L39
2226             L58:
2226                     ;;test1.j(30) 
2226             L59:
2226                     ;;test1.j(31)   /************************/
2226             L60:
2226                     ;;test1.j(32)   // constant - constant
2226             L61:
2226                     ;;test1.j(33)   // not relevant
2226             L62:
2226                     ;;test1.j(34) 
2226             L63:
2226                     ;;test1.j(35)   /************************/
2226             L64:
2226                     ;;test1.j(36)   // constant - acc
2226             L65:
2226                     ;;test1.j(37)   // byte - byte
2226             L66:
2226                     ;;test1.j(38)   b = 3;
2226             L67:
2226 3E 03               LD    A,3
2228             L68:
2228 32 00 50            LD    (05000H),A
222B             L69:
222B                     ;;test1.j(39)   while (3 == b+0) { println (b); b++; }
222B             L70:
222B 3A 00 50            LD    A,(05000H)
222E             L71:
222E C6 00               ADD   A,0
2230             L72:
2230 D6 03               SUB   A,3
2232             L73:
2232 C2 42 22            JP    NZ,L79
2235             L74:
2235 3A 00 50            LD    A,(05000H)
2238             L75:
2238 CD BE 21            CALL  writeLineA
223B             L76:
223B 2A 00 50            LD    HL,(05000H)
223E 34                  INC   (HL)
223F             L77:
223F C3 2B 22            JP    L70
2242             L78:
2242                     ;;test1.j(40)   while (4 != b+0) { println (b); b++; }
2242             L79:
2242 3A 00 50            LD    A,(05000H)
2245             L80:
2245 C6 00               ADD   A,0
2247             L81:
2247 D6 04               SUB   A,4
2249             L82:
2249 CA 59 22            JP    Z,L88
224C             L83:
224C 3A 00 50            LD    A,(05000H)
224F             L84:
224F CD BE 21            CALL  writeLineA
2252             L85:
2252 2A 00 50            LD    HL,(05000H)
2255 34                  INC   (HL)
2256             L86:
2256 C3 42 22            JP    L79
2259             L87:
2259                     ;;test1.j(41)   while (6 > b+0) { println (b); b++; }
2259             L88:
2259 3A 00 50            LD    A,(05000H)
225C             L89:
225C C6 00               ADD   A,0
225E             L90:
225E D6 06               SUB   A,6
2260             L91:
2260 D2 70 22            JP    NC,L97
2263             L92:
2263 3A 00 50            LD    A,(05000H)
2266             L93:
2266 CD BE 21            CALL  writeLineA
2269             L94:
2269 2A 00 50            LD    HL,(05000H)
226C 34                  INC   (HL)
226D             L95:
226D C3 59 22            JP    L88
2270             L96:
2270                     ;;test1.j(42)   while (7 >= b+0) { println (b); b++; }
2270             L97:
2270 3A 00 50            LD    A,(05000H)
2273             L98:
2273 C6 00               ADD   A,0
2275             L99:
2275 D6 07               SUB   A,7
2277             L100:
2277 28 03               JR    Z,$+5
2279 DA 89 22            JP    C,L106
227C             L101:
227C 3A 00 50            LD    A,(05000H)
227F             L102:
227F CD BE 21            CALL  writeLineA
2282             L103:
2282 2A 00 50            LD    HL,(05000H)
2285 34                  INC   (HL)
2286             L104:
2286 C3 70 22            JP    L97
2289             L105:
2289                     ;;test1.j(43)   p=8;
2289             L106:
2289 3E 08               LD    A,8
228B             L107:
228B 6F                  LD    L,A
228C 26 00               LD    H,0
228E 22 06 50            LD    (05006H),HL
2291             L108:
2291                     ;;test1.j(44)   while (6 <  b+0) { println (p); p++; b--; }
2291             L109:
2291 3A 00 50            LD    A,(05000H)
2294             L110:
2294 C6 00               ADD   A,0
2296             L111:
2296 D6 06               SUB   A,6
2298             L112:
2298 CA AF 22            JP    Z,L119
229B             L113:
229B 2A 06 50            LD    HL,(05006H)
229E             L114:
229E CD 96 21            CALL  writeLineHL
22A1             L115:
22A1 2A 06 50            LD    HL,(05006H)
22A4 23                  INC   HL
22A5 22 06 50            LD    (05006H),HL
22A8             L116:
22A8 2A 00 50            LD    HL,(05000H)
22AB 35                  DEC   (HL)
22AC             L117:
22AC C3 91 22            JP    L109
22AF             L118:
22AF                     ;;test1.j(45)   while (5 <= b+0) { println (p); p++; b--; }
22AF             L119:
22AF 3A 00 50            LD    A,(05000H)
22B2             L120:
22B2 C6 00               ADD   A,0
22B4             L121:
22B4 D6 05               SUB   A,5
22B6             L122:
22B6 DA CD 22            JP    C,L132
22B9             L123:
22B9 2A 06 50            LD    HL,(05006H)
22BC             L124:
22BC CD 96 21            CALL  writeLineHL
22BF             L125:
22BF 2A 06 50            LD    HL,(05006H)
22C2 23                  INC   HL
22C3 22 06 50            LD    (05006H),HL
22C6             L126:
22C6 2A 00 50            LD    HL,(05000H)
22C9 35                  DEC   (HL)
22CA             L127:
22CA C3 AF 22            JP    L119
22CD             L128:
22CD                     ;;test1.j(46)   
22CD             L129:
22CD                     ;;test1.j(47)   // constant - acc
22CD             L130:
22CD                     ;;test1.j(48)   // byte - integer
22CD             L131:
22CD                     ;;test1.j(49)   i=12;
22CD             L132:
22CD 3E 0C               LD    A,12
22CF             L133:
22CF 6F                  LD    L,A
22D0 26 00               LD    H,0
22D2 22 02 50            LD    (05002H),HL
22D5             L134:
22D5                     ;;test1.j(50)   while (12 == i+0) { println (i); i++; }
22D5             L135:
22D5 2A 02 50            LD    HL,(05002H)
22D8             L136:
22D8 11 00 00            LD    DE,0
22DB 19                  ADD   HL,DE
22DC             L137:
22DC 3E 0C               LD    A,12
22DE             L138:
22DE 5F                  LD    E,A
22DF 16 00               LD    D,0
22E1 B7                  OR    A
22E2 ED 52               SBC   HL,DE
22E4             L139:
22E4 C2 F7 22            JP    NZ,L145
22E7             L140:
22E7 2A 02 50            LD    HL,(05002H)
22EA             L141:
22EA CD 96 21            CALL  writeLineHL
22ED             L142:
22ED 2A 02 50            LD    HL,(05002H)
22F0 23                  INC   HL
22F1 22 02 50            LD    (05002H),HL
22F4             L143:
22F4 C3 D5 22            JP    L135
22F7             L144:
22F7                     ;;test1.j(51)   while (15 != i+0) { println (i); i++; }
22F7             L145:
22F7 2A 02 50            LD    HL,(05002H)
22FA             L146:
22FA 11 00 00            LD    DE,0
22FD 19                  ADD   HL,DE
22FE             L147:
22FE 3E 0F               LD    A,15
2300             L148:
2300 5F                  LD    E,A
2301 16 00               LD    D,0
2303 B7                  OR    A
2304 ED 52               SBC   HL,DE
2306             L149:
2306 CA 19 23            JP    Z,L155
2309             L150:
2309 2A 02 50            LD    HL,(05002H)
230C             L151:
230C CD 96 21            CALL  writeLineHL
230F             L152:
230F 2A 02 50            LD    HL,(05002H)
2312 23                  INC   HL
2313 22 02 50            LD    (05002H),HL
2316             L153:
2316 C3 F7 22            JP    L145
2319             L154:
2319                     ;;test1.j(52)   while (17 > i+0) { println (i); i++; }
2319             L155:
2319 2A 02 50            LD    HL,(05002H)
231C             L156:
231C 11 00 00            LD    DE,0
231F 19                  ADD   HL,DE
2320             L157:
2320 3E 11               LD    A,17
2322             L158:
2322 5F                  LD    E,A
2323 16 00               LD    D,0
2325 B7                  OR    A
2326 ED 52               SBC   HL,DE
2328             L159:
2328 CA 3B 23            JP    Z,L165
232B             L160:
232B 2A 02 50            LD    HL,(05002H)
232E             L161:
232E CD 96 21            CALL  writeLineHL
2331             L162:
2331 2A 02 50            LD    HL,(05002H)
2334 23                  INC   HL
2335 22 02 50            LD    (05002H),HL
2338             L163:
2338 C3 19 23            JP    L155
233B             L164:
233B                     ;;test1.j(53)   while (18 >= i+0) { println (i); i++; }
233B             L165:
233B 2A 02 50            LD    HL,(05002H)
233E             L166:
233E 11 00 00            LD    DE,0
2341 19                  ADD   HL,DE
2342             L167:
2342 3E 12               LD    A,18
2344             L168:
2344 5F                  LD    E,A
2345 16 00               LD    D,0
2347 B7                  OR    A
2348 ED 52               SBC   HL,DE
234A             L169:
234A DA 5D 23            JP    C,L175
234D             L170:
234D 2A 02 50            LD    HL,(05002H)
2350             L171:
2350 CD 96 21            CALL  writeLineHL
2353             L172:
2353 2A 02 50            LD    HL,(05002H)
2356 23                  INC   HL
2357 22 02 50            LD    (05002H),HL
235A             L173:
235A C3 3B 23            JP    L165
235D             L174:
235D                     ;;test1.j(54)   p=i;
235D             L175:
235D 2A 02 50            LD    HL,(05002H)
2360             L176:
2360 22 06 50            LD    (05006H),HL
2363             L177:
2363                     ;;test1.j(55)   while (17 <  i+0) { println (p); i--; p++; }
2363             L178:
2363 2A 02 50            LD    HL,(05002H)
2366             L179:
2366 11 00 00            LD    DE,0
2369 19                  ADD   HL,DE
236A             L180:
236A 3E 11               LD    A,17
236C             L181:
236C 5F                  LD    E,A
236D 16 00               LD    D,0
236F B7                  OR    A
2370 ED 52               SBC   HL,DE
2372             L182:
2372 D2 8C 23            JP    NC,L189
2375             L183:
2375 2A 06 50            LD    HL,(05006H)
2378             L184:
2378 CD 96 21            CALL  writeLineHL
237B             L185:
237B 2A 02 50            LD    HL,(05002H)
237E 2B                  DEC   HL
237F 22 02 50            LD    (05002H),HL
2382             L186:
2382 2A 06 50            LD    HL,(05006H)
2385 23                  INC   HL
2386 22 06 50            LD    (05006H),HL
2389             L187:
2389 C3 63 23            JP    L178
238C             L188:
238C                     ;;test1.j(56)   while (16 <= i+0) { println (p); i--; p++; }
238C             L189:
238C 2A 02 50            LD    HL,(05002H)
238F             L190:
238F 11 00 00            LD    DE,0
2392 19                  ADD   HL,DE
2393             L191:
2393 3E 10               LD    A,16
2395             L192:
2395 5F                  LD    E,A
2396 16 00               LD    D,0
2398 B7                  OR    A
2399 ED 52               SBC   HL,DE
239B             L193:
239B 28 03               JR    Z,$+5
239D DA B7 23            JP    C,L207
23A0             L194:
23A0 2A 06 50            LD    HL,(05006H)
23A3             L195:
23A3 CD 96 21            CALL  writeLineHL
23A6             L196:
23A6 2A 02 50            LD    HL,(05002H)
23A9 2B                  DEC   HL
23AA 22 02 50            LD    (05002H),HL
23AD             L197:
23AD 2A 06 50            LD    HL,(05006H)
23B0 23                  INC   HL
23B1 22 06 50            LD    (05006H),HL
23B4             L198:
23B4 C3 8C 23            JP    L189
23B7             L199:
23B7                     ;;test1.j(57) 
23B7             L200:
23B7                     ;;test1.j(58)   // constant - acc
23B7             L201:
23B7                     ;;test1.j(59)   // integer - byte
23B7             L202:
23B7                     ;;test1.j(60)   // not relevant
23B7             L203:
23B7                     ;;test1.j(61) 
23B7             L204:
23B7                     ;;test1.j(62)   // constant - acc
23B7             L205:
23B7                     ;;test1.j(63)   // integer - integer
23B7             L206:
23B7                     ;;test1.j(64)   i=23;
23B7             L207:
23B7 3E 17               LD    A,23
23B9             L208:
23B9 6F                  LD    L,A
23BA 26 00               LD    H,0
23BC 22 02 50            LD    (05002H),HL
23BF             L209:
23BF                     ;;test1.j(65)   while (23 == i+0) { println (i); i++; }
23BF             L210:
23BF 2A 02 50            LD    HL,(05002H)
23C2             L211:
23C2 11 00 00            LD    DE,0
23C5 19                  ADD   HL,DE
23C6             L212:
23C6 3E 17               LD    A,23
23C8             L213:
23C8 5F                  LD    E,A
23C9 16 00               LD    D,0
23CB B7                  OR    A
23CC ED 52               SBC   HL,DE
23CE             L214:
23CE C2 E1 23            JP    NZ,L220
23D1             L215:
23D1 2A 02 50            LD    HL,(05002H)
23D4             L216:
23D4 CD 96 21            CALL  writeLineHL
23D7             L217:
23D7 2A 02 50            LD    HL,(05002H)
23DA 23                  INC   HL
23DB 22 02 50            LD    (05002H),HL
23DE             L218:
23DE C3 BF 23            JP    L210
23E1             L219:
23E1                     ;;test1.j(66)   while (26 != i+0) { println (i); i++; }
23E1             L220:
23E1 2A 02 50            LD    HL,(05002H)
23E4             L221:
23E4 11 00 00            LD    DE,0
23E7 19                  ADD   HL,DE
23E8             L222:
23E8 3E 1A               LD    A,26
23EA             L223:
23EA 5F                  LD    E,A
23EB 16 00               LD    D,0
23ED B7                  OR    A
23EE ED 52               SBC   HL,DE
23F0             L224:
23F0 CA 03 24            JP    Z,L230
23F3             L225:
23F3 2A 02 50            LD    HL,(05002H)
23F6             L226:
23F6 CD 96 21            CALL  writeLineHL
23F9             L227:
23F9 2A 02 50            LD    HL,(05002H)
23FC 23                  INC   HL
23FD 22 02 50            LD    (05002H),HL
2400             L228:
2400 C3 E1 23            JP    L220
2403             L229:
2403                     ;;test1.j(67)   while (28 > i+0) { println (i); i++; }
2403             L230:
2403 2A 02 50            LD    HL,(05002H)
2406             L231:
2406 11 00 00            LD    DE,0
2409 19                  ADD   HL,DE
240A             L232:
240A 3E 1C               LD    A,28
240C             L233:
240C 5F                  LD    E,A
240D 16 00               LD    D,0
240F B7                  OR    A
2410 ED 52               SBC   HL,DE
2412             L234:
2412 CA 25 24            JP    Z,L240
2415             L235:
2415 2A 02 50            LD    HL,(05002H)
2418             L236:
2418 CD 96 21            CALL  writeLineHL
241B             L237:
241B 2A 02 50            LD    HL,(05002H)
241E 23                  INC   HL
241F 22 02 50            LD    (05002H),HL
2422             L238:
2422 C3 03 24            JP    L230
2425             L239:
2425                     ;;test1.j(68)   while (29 >= i+0) { println (i); i++; }
2425             L240:
2425 2A 02 50            LD    HL,(05002H)
2428             L241:
2428 11 00 00            LD    DE,0
242B 19                  ADD   HL,DE
242C             L242:
242C 3E 1D               LD    A,29
242E             L243:
242E 5F                  LD    E,A
242F 16 00               LD    D,0
2431 B7                  OR    A
2432 ED 52               SBC   HL,DE
2434             L244:
2434 DA 47 24            JP    C,L250
2437             L245:
2437 2A 02 50            LD    HL,(05002H)
243A             L246:
243A CD 96 21            CALL  writeLineHL
243D             L247:
243D 2A 02 50            LD    HL,(05002H)
2440 23                  INC   HL
2441 22 02 50            LD    (05002H),HL
2444             L248:
2444 C3 25 24            JP    L240
2447             L249:
2447                     ;;test1.j(69)   p=i;
2447             L250:
2447 2A 02 50            LD    HL,(05002H)
244A             L251:
244A 22 06 50            LD    (05006H),HL
244D             L252:
244D                     ;;test1.j(70)   while (28 <  i+0) { println (p); p++; i--; }
244D             L253:
244D 2A 02 50            LD    HL,(05002H)
2450             L254:
2450 11 00 00            LD    DE,0
2453 19                  ADD   HL,DE
2454             L255:
2454 3E 1C               LD    A,28
2456             L256:
2456 5F                  LD    E,A
2457 16 00               LD    D,0
2459 B7                  OR    A
245A ED 52               SBC   HL,DE
245C             L257:
245C D2 76 24            JP    NC,L264
245F             L258:
245F 2A 06 50            LD    HL,(05006H)
2462             L259:
2462 CD 96 21            CALL  writeLineHL
2465             L260:
2465 2A 06 50            LD    HL,(05006H)
2468 23                  INC   HL
2469 22 06 50            LD    (05006H),HL
246C             L261:
246C 2A 02 50            LD    HL,(05002H)
246F 2B                  DEC   HL
2470 22 02 50            LD    (05002H),HL
2473             L262:
2473 C3 4D 24            JP    L253
2476             L263:
2476                     ;;test1.j(71)   while (27 <= i+0) { println (p); p++; i--; }
2476             L264:
2476 2A 02 50            LD    HL,(05002H)
2479             L265:
2479 11 00 00            LD    DE,0
247C 19                  ADD   HL,DE
247D             L266:
247D 3E 1B               LD    A,27
247F             L267:
247F 5F                  LD    E,A
2480 16 00               LD    D,0
2482 B7                  OR    A
2483 ED 52               SBC   HL,DE
2485             L268:
2485 28 03               JR    Z,$+5
2487 DA A1 24            JP    C,L279
248A             L269:
248A 2A 06 50            LD    HL,(05006H)
248D             L270:
248D CD 96 21            CALL  writeLineHL
2490             L271:
2490 2A 06 50            LD    HL,(05006H)
2493 23                  INC   HL
2494 22 06 50            LD    (05006H),HL
2497             L272:
2497 2A 02 50            LD    HL,(05002H)
249A 2B                  DEC   HL
249B 22 02 50            LD    (05002H),HL
249E             L273:
249E C3 76 24            JP    L264
24A1             L274:
24A1                     ;;test1.j(72) 
24A1             L275:
24A1                     ;;test1.j(73)   /************************/
24A1             L276:
24A1                     ;;test1.j(74)   // constant - var
24A1             L277:
24A1                     ;;test1.j(75)   // byte - byte
24A1             L278:
24A1                     ;;test1.j(76)   b=35;
24A1             L279:
24A1 3E 23               LD    A,35
24A3             L280:
24A3 32 00 50            LD    (05000H),A
24A6             L281:
24A6                     ;;test1.j(77)   while (33 <= b) { println (p); p++; b--; }
24A6             L282:
24A6 3A 00 50            LD    A,(05000H)
24A9             L283:
24A9 D6 21               SUB   A,33
24AB             L284:
24AB DA C2 24            JP    C,L293
24AE             L285:
24AE 2A 06 50            LD    HL,(05006H)
24B1             L286:
24B1 CD 96 21            CALL  writeLineHL
24B4             L287:
24B4 2A 06 50            LD    HL,(05006H)
24B7 23                  INC   HL
24B8 22 06 50            LD    (05006H),HL
24BB             L288:
24BB 2A 00 50            LD    HL,(05000H)
24BE 35                  DEC   (HL)
24BF             L289:
24BF C3 A6 24            JP    L282
24C2             L290:
24C2                     ;;test1.j(78)   // constant - var
24C2             L291:
24C2                     ;;test1.j(79)   // byte - integer
24C2             L292:
24C2                     ;;test1.j(80)   i=37;
24C2             L293:
24C2 3E 25               LD    A,37
24C4             L294:
24C4 6F                  LD    L,A
24C5 26 00               LD    H,0
24C7 22 02 50            LD    (05002H),HL
24CA             L295:
24CA                     ;;test1.j(81)   while (36 <= i) { println (p); p++; i--; }
24CA             L296:
24CA 2A 02 50            LD    HL,(05002H)
24CD             L297:
24CD 3E 24               LD    A,36
24CF             L298:
24CF 5F                  LD    E,A
24D0 16 00               LD    D,0
24D2 B7                  OR    A
24D3 ED 52               SBC   HL,DE
24D5             L299:
24D5 28 03               JR    Z,$+5
24D7 DA F1 24            JP    C,L312
24DA             L300:
24DA 2A 06 50            LD    HL,(05006H)
24DD             L301:
24DD CD 96 21            CALL  writeLineHL
24E0             L302:
24E0 2A 06 50            LD    HL,(05006H)
24E3 23                  INC   HL
24E4 22 06 50            LD    (05006H),HL
24E7             L303:
24E7 2A 02 50            LD    HL,(05002H)
24EA 2B                  DEC   HL
24EB 22 02 50            LD    (05002H),HL
24EE             L304:
24EE C3 CA 24            JP    L296
24F1             L305:
24F1                     ;;test1.j(82)   // constant - var
24F1             L306:
24F1                     ;;test1.j(83)   // integer - byte
24F1             L307:
24F1                     ;;test1.j(84)   // not relevant
24F1             L308:
24F1                     ;;test1.j(85) 
24F1             L309:
24F1                     ;;test1.j(86)   // constant - var
24F1             L310:
24F1                     ;;test1.j(87)   // integer - integer
24F1             L311:
24F1                     ;;test1.j(88)   while (34 <= i) { println (p); p++; i--; }
24F1             L312:
24F1 2A 02 50            LD    HL,(05002H)
24F4             L313:
24F4 3E 22               LD    A,34
24F6             L314:
24F6 5F                  LD    E,A
24F7 16 00               LD    D,0
24F9 B7                  OR    A
24FA ED 52               SBC   HL,DE
24FC             L315:
24FC 28 03               JR    Z,$+5
24FE DA 18 25            JP    C,L358
2501             L316:
2501 2A 06 50            LD    HL,(05006H)
2504             L317:
2504 CD 96 21            CALL  writeLineHL
2507             L318:
2507 2A 06 50            LD    HL,(05006H)
250A 23                  INC   HL
250B 22 06 50            LD    (05006H),HL
250E             L319:
250E 2A 02 50            LD    HL,(05002H)
2511 2B                  DEC   HL
2512 22 02 50            LD    (05002H),HL
2515             L320:
2515 C3 F1 24            JP    L312
2518             L321:
2518                     ;;test1.j(89) 
2518             L322:
2518                     ;;test1.j(90)   /************************/
2518             L323:
2518                     ;;test1.j(91)   // stack8 - constant
2518             L324:
2518                     ;;test1.j(92)   // stack8 - acc
2518             L325:
2518                     ;;test1.j(93)   // stack8 - var
2518             L326:
2518                     ;;test1.j(94)   // stack8 - stack8
2518             L327:
2518                     ;;test1.j(95)   // stack8 - stack16
2518             L328:
2518                     ;;test1.j(96)   //TODO
2518             L329:
2518                     ;;test1.j(97) 
2518             L330:
2518                     ;;test1.j(98)   /************************/
2518             L331:
2518                     ;;test1.j(99)   // stack16 - constant
2518             L332:
2518                     ;;test1.j(100)   // stack16 - acc
2518             L333:
2518                     ;;test1.j(101)   // stack16 - var
2518             L334:
2518                     ;;test1.j(102)   // stack16 - stack8
2518             L335:
2518                     ;;test1.j(103)   // stack16 - stack16
2518             L336:
2518                     ;;test1.j(104)   //TODO
2518             L337:
2518                     ;;test1.j(105) 
2518             L338:
2518                     ;;test1.j(106)   /************************/
2518             L339:
2518                     ;;test1.j(107)   // var - stack16
2518             L340:
2518                     ;;test1.j(108)   // byte - byte
2518             L341:
2518                     ;;test1.j(109)   // byte - integer
2518             L342:
2518                     ;;test1.j(110)   // integer - byte
2518             L343:
2518                     ;;test1.j(111)   // integer - integer
2518             L344:
2518                     ;;test1.j(112)   //TODO
2518             L345:
2518                     ;;test1.j(113) 
2518             L346:
2518                     ;;test1.j(114)   /************************/
2518             L347:
2518                     ;;test1.j(115)   // var - stack8
2518             L348:
2518                     ;;test1.j(116)   // byte - byte
2518             L349:
2518                     ;;test1.j(117)   // byte - integer
2518             L350:
2518                     ;;test1.j(118)   // integer - byte
2518             L351:
2518                     ;;test1.j(119)   // integer - integer
2518             L352:
2518                     ;;test1.j(120)   //TODO
2518             L353:
2518                     ;;test1.j(121) 
2518             L354:
2518                     ;;test1.j(122)   /************************/
2518             L355:
2518                     ;;test1.j(123)   // var - var
2518             L356:
2518                     ;;test1.j(124)   // byte - byte
2518             L357:
2518                     ;;test1.j(125)   b=33;
2518             L358:
2518 3E 21               LD    A,33
251A             L359:
251A 32 00 50            LD    (05000H),A
251D             L360:
251D                     ;;test1.j(126)   while (b2 <= b) { println (p); p++; b--; }
251D             L361:
251D 3A 01 50            LD    A,(05001H)
2520             L362:
2520 47                  LD    B,A
2521 3A 00 50            LD    A,(05000H)
2524 90                  SUB   A,B
2525             L363:
2525 28 03               JR    Z,$+5
2527 DA 3E 25            JP    C,L371
252A             L364:
252A 2A 06 50            LD    HL,(05006H)
252D             L365:
252D CD 96 21            CALL  writeLineHL
2530             L366:
2530 2A 06 50            LD    HL,(05006H)
2533 23                  INC   HL
2534 22 06 50            LD    (05006H),HL
2537             L367:
2537 2A 00 50            LD    HL,(05000H)
253A 35                  DEC   (HL)
253B             L368:
253B C3 1D 25            JP    L361
253E             L369:
253E                     ;;test1.j(127)   // byte - integer
253E             L370:
253E                     ;;test1.j(128)   i = 33;
253E             L371:
253E 3E 21               LD    A,33
2540             L372:
2540 6F                  LD    L,A
2541 26 00               LD    H,0
2543 22 02 50            LD    (05002H),HL
2546             L373:
2546                     ;;test1.j(129)   while (b2 <= i) { println (p); p++; i--; }
2546             L374:
2546 3A 01 50            LD    A,(05001H)
2549             L375:
2549 2A 02 50            LD    HL,(05002H)
254C             L376:
254C 5F                  LD    E,A
254D 16 00               LD    D,0
254F B7                  OR    A
2550 ED 52               SBC   HL,DE
2552             L377:
2552 28 03               JR    Z,$+5
2554 DA 6E 25            JP    C,L385
2557             L378:
2557 2A 06 50            LD    HL,(05006H)
255A             L379:
255A CD 96 21            CALL  writeLineHL
255D             L380:
255D 2A 06 50            LD    HL,(05006H)
2560 23                  INC   HL
2561 22 06 50            LD    (05006H),HL
2564             L381:
2564 2A 02 50            LD    HL,(05002H)
2567 2B                  DEC   HL
2568 22 02 50            LD    (05002H),HL
256B             L382:
256B C3 46 25            JP    L374
256E             L383:
256E                     ;;test1.j(130)   // integer - byte
256E             L384:
256E                     ;;test1.j(131)   b=33;
256E             L385:
256E 3E 21               LD    A,33
2570             L386:
2570 32 00 50            LD    (05000H),A
2573             L387:
2573                     ;;test1.j(132)   i=b2;
2573             L388:
2573 3A 01 50            LD    A,(05001H)
2576             L389:
2576 6F                  LD    L,A
2577 26 00               LD    H,0
2579 22 02 50            LD    (05002H),HL
257C             L390:
257C                     ;;test1.j(133)   while (i <= b) { println (p); p++; b--; }
257C             L391:
257C 2A 02 50            LD    HL,(05002H)
257F             L392:
257F 3A 00 50            LD    A,(05000H)
2582             L393:
2582 5F                  LD    E,A
2583 16 00               LD    D,0
2585 EB                  EX    DE,HL
2586 B7                  OR    A
2587 ED 52               SBC   HL,DE
2589             L394:
2589 28 03               JR    Z,$+5
258B DA A2 25            JP    C,L402
258E             L395:
258E 2A 06 50            LD    HL,(05006H)
2591             L396:
2591 CD 96 21            CALL  writeLineHL
2594             L397:
2594 2A 06 50            LD    HL,(05006H)
2597 23                  INC   HL
2598 22 06 50            LD    (05006H),HL
259B             L398:
259B 2A 00 50            LD    HL,(05000H)
259E 35                  DEC   (HL)
259F             L399:
259F C3 7C 25            JP    L391
25A2             L400:
25A2                     ;;test1.j(134)   // integer - integer
25A2             L401:
25A2                     ;;test1.j(135)   i=33;
25A2             L402:
25A2 3E 21               LD    A,33
25A4             L403:
25A4 6F                  LD    L,A
25A5 26 00               LD    H,0
25A7 22 02 50            LD    (05002H),HL
25AA             L404:
25AA                     ;;test1.j(136)   i2=b2;
25AA             L405:
25AA 3A 01 50            LD    A,(05001H)
25AD             L406:
25AD 6F                  LD    L,A
25AE 26 00               LD    H,0
25B0 22 04 50            LD    (05004H),HL
25B3             L407:
25B3                     ;;test1.j(137)   while (i2 <= i) { println (p); p++; i--; }
25B3             L408:
25B3 2A 04 50            LD    HL,(05004H)
25B6             L409:
25B6 ED 5B 02 50         LD    DE,(05002H)
25BA B7                  OR    A
25BB ED 52               SBC   HL,DE
25BD             L410:
25BD 28 03               JR    Z,$+5
25BF DA D9 25            JP    C,L421
25C2             L411:
25C2 2A 06 50            LD    HL,(05006H)
25C5             L412:
25C5 CD 96 21            CALL  writeLineHL
25C8             L413:
25C8 2A 06 50            LD    HL,(05006H)
25CB 23                  INC   HL
25CC 22 06 50            LD    (05006H),HL
25CF             L414:
25CF 2A 02 50            LD    HL,(05002H)
25D2 2B                  DEC   HL
25D3 22 02 50            LD    (05002H),HL
25D6             L415:
25D6 C3 B3 25            JP    L408
25D9             L416:
25D9                     ;;test1.j(138) 
25D9             L417:
25D9                     ;;test1.j(139)   /************************/
25D9             L418:
25D9                     ;;test1.j(140)   // var - acc
25D9             L419:
25D9                     ;;test1.j(141)   // byte - byte
25D9             L420:
25D9                     ;;test1.j(142)   b=49;
25D9             L421:
25D9 3E 31               LD    A,49
25DB             L422:
25DB 32 00 50            LD    (05000H),A
25DE             L423:
25DE                     ;;test1.j(143)   while (b <= 50+0) { println (b); b++; }
25DE             L424:
25DE 3E 32               LD    A,50
25E0             L425:
25E0 C6 00               ADD   A,0
25E2             L426:
25E2 47                  LD    B,A
25E3 3A 00 50            LD    A,(05000H)
25E6 90                  SUB   A,B
25E7             L427:
25E7 DA F7 25            JP    C,L434
25EA             L428:
25EA 3A 00 50            LD    A,(05000H)
25ED             L429:
25ED CD BE 21            CALL  writeLineA
25F0             L430:
25F0 2A 00 50            LD    HL,(05000H)
25F3 34                  INC   (HL)
25F4             L431:
25F4 C3 DE 25            JP    L424
25F7             L432:
25F7                     ;;test1.j(144)   // byte - integer
25F7             L433:
25F7                     ;;test1.j(145)   i=52;
25F7             L434:
25F7 3E 34               LD    A,52
25F9             L435:
25F9 6F                  LD    L,A
25FA 26 00               LD    H,0
25FC 22 02 50            LD    (05002H),HL
25FF             L436:
25FF                     ;;test1.j(146)   while (b <= i+0) { println (b); b++; }
25FF             L437:
25FF 2A 02 50            LD    HL,(05002H)
2602             L438:
2602 11 00 00            LD    DE,0
2605 19                  ADD   HL,DE
2606             L439:
2606 3A 00 50            LD    A,(05000H)
2609             L440:
2609 5F                  LD    E,A
260A 16 00               LD    D,0
260C B7                  OR    A
260D ED 52               SBC   HL,DE
260F             L441:
260F 28 03               JR    Z,$+5
2611 DA 21 26            JP    C,L448
2614             L442:
2614 3A 00 50            LD    A,(05000H)
2617             L443:
2617 CD BE 21            CALL  writeLineA
261A             L444:
261A 2A 00 50            LD    HL,(05000H)
261D 34                  INC   (HL)
261E             L445:
261E C3 FF 25            JP    L437
2621             L446:
2621                     ;;test1.j(147)   // integer - byte
2621             L447:
2621                     ;;test1.j(148)   i=b;
2621             L448:
2621 3A 00 50            LD    A,(05000H)
2624             L449:
2624 6F                  LD    L,A
2625 26 00               LD    H,0
2627 22 02 50            LD    (05002H),HL
262A             L450:
262A                     ;;test1.j(149)   while (i <= 54+0) { println (i); i++; }
262A             L451:
262A 3E 36               LD    A,54
262C             L452:
262C C6 00               ADD   A,0
262E             L453:
262E 2A 02 50            LD    HL,(05002H)
2631             L454:
2631 5F                  LD    E,A
2632 16 00               LD    D,0
2634 EB                  EX    DE,HL
2635 B7                  OR    A
2636 ED 52               SBC   HL,DE
2638             L455:
2638 28 03               JR    Z,$+5
263A DA 4D 26            JP    C,L462
263D             L456:
263D 2A 02 50            LD    HL,(05002H)
2640             L457:
2640 CD 96 21            CALL  writeLineHL
2643             L458:
2643 2A 02 50            LD    HL,(05002H)
2646 23                  INC   HL
2647 22 02 50            LD    (05002H),HL
264A             L459:
264A C3 2A 26            JP    L451
264D             L460:
264D                     ;;test1.j(150)   // integer - integer
264D             L461:
264D                     ;;test1.j(151)   b=i;
264D             L462:
264D 2A 02 50            LD    HL,(05002H)
2650             L463:
2650 7D                  LD    A,L
2651 32 00 50            LD    (05000H),A
2654             L464:
2654                     ;;test1.j(152)   i=1098;
2654             L465:
2654 21 4A 04            LD    HL,1098
2657             L466:
2657 22 02 50            LD    (05002H),HL
265A             L467:
265A                     ;;test1.j(153)   while (i <= 1099+0) { println (b); b++; i++; }
265A             L468:
265A 21 4B 04            LD    HL,1099
265D             L469:
265D 11 00 00            LD    DE,0
2660 19                  ADD   HL,DE
2661             L470:
2661 ED 5B 02 50         LD    DE,(05002H)
2665 B7                  OR    A
2666 ED 52               SBC   HL,DE
2668             L471:
2668 DA 7F 26            JP    C,L482
266B             L472:
266B 3A 00 50            LD    A,(05000H)
266E             L473:
266E CD BE 21            CALL  writeLineA
2671             L474:
2671 2A 00 50            LD    HL,(05000H)
2674 34                  INC   (HL)
2675             L475:
2675 2A 02 50            LD    HL,(05002H)
2678 23                  INC   HL
2679 22 02 50            LD    (05002H),HL
267C             L476:
267C C3 5A 26            JP    L468
267F             L477:
267F                     ;;test1.j(154) 
267F             L478:
267F                     ;;test1.j(155)   /************************/
267F             L479:
267F                     ;;test1.j(156)   // var - constant
267F             L480:
267F                     ;;test1.j(157)   // byte - byte
267F             L481:
267F                     ;;test1.j(158)   while (b <= 58) { println (b); b++; }
267F             L482:
267F 3A 00 50            LD    A,(05000H)
2682             L483:
2682 D6 3A               SUB   A,58
2684             L484:
2684 28 03               JR    Z,$+5
2686 DA 96 26            JP    C,L494
2689             L485:
2689 3A 00 50            LD    A,(05000H)
268C             L486:
268C CD BE 21            CALL  writeLineA
268F             L487:
268F 2A 00 50            LD    HL,(05000H)
2692 34                  INC   (HL)
2693             L488:
2693 C3 7F 26            JP    L482
2696             L489:
2696                     ;;test1.j(159)   // byte - integer
2696             L490:
2696                     ;;test1.j(160)   //not relevant
2696             L491:
2696                     ;;test1.j(161) 
2696             L492:
2696                     ;;test1.j(162)   // integer - byte
2696             L493:
2696                     ;;test1.j(163)   i=b;
2696             L494:
2696 3A 00 50            LD    A,(05000H)
2699             L495:
2699 6F                  LD    L,A
269A 26 00               LD    H,0
269C 22 02 50            LD    (05002H),HL
269F             L496:
269F                     ;;test1.j(164)   while (i <= 60) { println (i); i++; }
269F             L497:
269F 2A 02 50            LD    HL,(05002H)
26A2             L498:
26A2 3E 3C               LD    A,60
26A4             L499:
26A4 5F                  LD    E,A
26A5 16 00               LD    D,0
26A7 EB                  EX    DE,HL
26A8 B7                  OR    A
26A9 ED 52               SBC   HL,DE
26AB             L500:
26AB 28 03               JR    Z,$+5
26AD DA C0 26            JP    C,L507
26B0             L501:
26B0 2A 02 50            LD    HL,(05002H)
26B3             L502:
26B3 CD 96 21            CALL  writeLineHL
26B6             L503:
26B6 2A 02 50            LD    HL,(05002H)
26B9 23                  INC   HL
26BA 22 02 50            LD    (05002H),HL
26BD             L504:
26BD C3 9F 26            JP    L497
26C0             L505:
26C0                     ;;test1.j(165)   // integer - integer
26C0             L506:
26C0                     ;;test1.j(166)   i2=1090;
26C0             L507:
26C0 21 42 04            LD    HL,1090
26C3             L508:
26C3 22 04 50            LD    (05004H),HL
26C6             L509:
26C6                     ;;test1.j(167)   while (i2 <= 1091) { println (i); i++; i2++; }
26C6             L510:
26C6 2A 04 50            LD    HL,(05004H)
26C9             L511:
26C9 11 43 04            LD    DE,1091
26CC B7                  OR    A
26CD ED 52               SBC   HL,DE
26CF             L512:
26CF 28 03               JR    Z,$+5
26D1 DA EB 26            JP    C,L524
26D4             L513:
26D4 2A 02 50            LD    HL,(05002H)
26D7             L514:
26D7 CD 96 21            CALL  writeLineHL
26DA             L515:
26DA 2A 02 50            LD    HL,(05002H)
26DD 23                  INC   HL
26DE 22 02 50            LD    (05002H),HL
26E1             L516:
26E1 2A 04 50            LD    HL,(05004H)
26E4 23                  INC   HL
26E5 22 04 50            LD    (05004H),HL
26E8             L517:
26E8 C3 C6 26            JP    L510
26EB             L518:
26EB                     ;;test1.j(168) 
26EB             L519:
26EB                     ;;test1.j(169)   /************************/
26EB             L520:
26EB                     ;;test1.j(170)   // acc - stack8
26EB             L521:
26EB                     ;;test1.j(171)   // byte - byte
26EB             L522:
26EB                     ;;test1.j(172)   //TODO
26EB             L523:
26EB                     ;;test1.j(173)   println(63);
26EB             L524:
26EB 3E 3F               LD    A,63
26ED             L525:
26ED CD BE 21            CALL  writeLineA
26F0             L526:
26F0                     ;;test1.j(174)   println(64);
26F0             L527:
26F0 3E 40               LD    A,64
26F2             L528:
26F2 CD BE 21            CALL  writeLineA
26F5             L529:
26F5                     ;;test1.j(175)   // byte - integer
26F5             L530:
26F5                     ;;test1.j(176)   //TODO
26F5             L531:
26F5                     ;;test1.j(177)   println(65);
26F5             L532:
26F5 3E 41               LD    A,65
26F7             L533:
26F7 CD BE 21            CALL  writeLineA
26FA             L534:
26FA                     ;;test1.j(178)   println(66);
26FA             L535:
26FA 3E 42               LD    A,66
26FC             L536:
26FC CD BE 21            CALL  writeLineA
26FF             L537:
26FF                     ;;test1.j(179)   // integer - byte
26FF             L538:
26FF                     ;;test1.j(180)   //TODO
26FF             L539:
26FF                     ;;test1.j(181)   println(67);
26FF             L540:
26FF 3E 43               LD    A,67
2701             L541:
2701 CD BE 21            CALL  writeLineA
2704             L542:
2704                     ;;test1.j(182)   println(68);
2704             L543:
2704 3E 44               LD    A,68
2706             L544:
2706 CD BE 21            CALL  writeLineA
2709             L545:
2709                     ;;test1.j(183)   // integer - integer
2709             L546:
2709                     ;;test1.j(184)   //TODO
2709             L547:
2709                     ;;test1.j(185)   println(69);
2709             L548:
2709 3E 45               LD    A,69
270B             L549:
270B CD BE 21            CALL  writeLineA
270E             L550:
270E                     ;;test1.j(186)   println(70);
270E             L551:
270E 3E 46               LD    A,70
2710             L552:
2710 CD BE 21            CALL  writeLineA
2713             L553:
2713                     ;;test1.j(187) 
2713             L554:
2713                     ;;test1.j(188)   /************************/
2713             L555:
2713                     ;;test1.j(189)   // acc - stack16
2713             L556:
2713                     ;;test1.j(190)   // byte - byte
2713             L557:
2713                     ;;test1.j(191)   //TODO
2713             L558:
2713                     ;;test1.j(192)   println(71);
2713             L559:
2713 3E 47               LD    A,71
2715             L560:
2715 CD BE 21            CALL  writeLineA
2718             L561:
2718                     ;;test1.j(193)   println(72);
2718             L562:
2718 3E 48               LD    A,72
271A             L563:
271A CD BE 21            CALL  writeLineA
271D             L564:
271D                     ;;test1.j(194)   // byte - integer
271D             L565:
271D                     ;;test1.j(195)   //TODO
271D             L566:
271D                     ;;test1.j(196)   println(73);
271D             L567:
271D 3E 49               LD    A,73
271F             L568:
271F CD BE 21            CALL  writeLineA
2722             L569:
2722                     ;;test1.j(197)   println(74);
2722             L570:
2722 3E 4A               LD    A,74
2724             L571:
2724 CD BE 21            CALL  writeLineA
2727             L572:
2727                     ;;test1.j(198)   // integer - byte
2727             L573:
2727                     ;;test1.j(199)   //TODO
2727             L574:
2727                     ;;test1.j(200)   println(75);
2727             L575:
2727 3E 4B               LD    A,75
2729             L576:
2729 CD BE 21            CALL  writeLineA
272C             L577:
272C                     ;;test1.j(201)   println(76);
272C             L578:
272C 3E 4C               LD    A,76
272E             L579:
272E CD BE 21            CALL  writeLineA
2731             L580:
2731                     ;;test1.j(202)   // integer - integer
2731             L581:
2731                     ;;test1.j(203)   //TODO
2731             L582:
2731                     ;;test1.j(204)   println(77);
2731             L583:
2731 3E 4D               LD    A,77
2733             L584:
2733 CD BE 21            CALL  writeLineA
2736             L585:
2736                     ;;test1.j(205)   println(78);
2736             L586:
2736 3E 4E               LD    A,78
2738             L587:
2738 CD BE 21            CALL  writeLineA
273B             L588:
273B                     ;;test1.j(206) 
273B             L589:
273B                     ;;test1.j(207)   /************************/
273B             L590:
273B                     ;;test1.j(208)   // acc - var
273B             L591:
273B                     ;;test1.j(209)   // byte - byte
273B             L592:
273B                     ;;test1.j(210)   b=79;
273B             L593:
273B 3E 4F               LD    A,79
273D             L594:
273D 32 00 50            LD    (05000H),A
2740             L595:
2740                     ;;test1.j(211)   b2=79;
2740             L596:
2740 3E 4F               LD    A,79
2742             L597:
2742 32 01 50            LD    (05001H),A
2745             L598:
2745                     ;;test1.j(212)   while (78+0 <= b2) { println (b); b++; b2--; }
2745             L599:
2745 3E 4E               LD    A,78
2747             L600:
2747 C6 00               ADD   A,0
2749             L601:
2749 47                  LD    B,A
274A 3A 01 50            LD    A,(05001H)
274D 90                  SUB   A,B
274E             L602:
274E 28 03               JR    Z,$+5
2750 DA 64 27            JP    C,L610
2753             L603:
2753 3A 00 50            LD    A,(05000H)
2756             L604:
2756 CD BE 21            CALL  writeLineA
2759             L605:
2759 2A 00 50            LD    HL,(05000H)
275C 34                  INC   (HL)
275D             L606:
275D 2A 01 50            LD    HL,(05001H)
2760 35                  DEC   (HL)
2761             L607:
2761 C3 45 27            JP    L599
2764             L608:
2764                     ;;test1.j(213)   // byte - integer
2764             L609:
2764                     ;;test1.j(214)   i=79;
2764             L610:
2764 3E 4F               LD    A,79
2766             L611:
2766 6F                  LD    L,A
2767 26 00               LD    H,0
2769 22 02 50            LD    (05002H),HL
276C             L612:
276C                     ;;test1.j(215)   while (78+0 <= i) { println (b); b++; i--; }
276C             L613:
276C 3E 4E               LD    A,78
276E             L614:
276E C6 00               ADD   A,0
2770             L615:
2770 2A 02 50            LD    HL,(05002H)
2773             L616:
2773 5F                  LD    E,A
2774 16 00               LD    D,0
2776 B7                  OR    A
2777 ED 52               SBC   HL,DE
2779             L617:
2779 28 03               JR    Z,$+5
277B DA 92 27            JP    C,L625
277E             L618:
277E 3A 00 50            LD    A,(05000H)
2781             L619:
2781 CD BE 21            CALL  writeLineA
2784             L620:
2784 2A 00 50            LD    HL,(05000H)
2787 34                  INC   (HL)
2788             L621:
2788 2A 02 50            LD    HL,(05002H)
278B 2B                  DEC   HL
278C 22 02 50            LD    (05002H),HL
278F             L622:
278F C3 6C 27            JP    L613
2792             L623:
2792                     ;;test1.j(216)   // integer - byte
2792             L624:
2792                     ;;test1.j(217)   i=78;
2792             L625:
2792 3E 4E               LD    A,78
2794             L626:
2794 6F                  LD    L,A
2795 26 00               LD    H,0
2797 22 02 50            LD    (05002H),HL
279A             L627:
279A                     ;;test1.j(218)   b2=79;
279A             L628:
279A 3E 4F               LD    A,79
279C             L629:
279C 32 01 50            LD    (05001H),A
279F             L630:
279F                     ;;test1.j(219)   while (i+0 <= b2) { println (b); b++; b2--; } 
279F             L631:
279F 2A 02 50            LD    HL,(05002H)
27A2             L632:
27A2 11 00 00            LD    DE,0
27A5 19                  ADD   HL,DE
27A6             L633:
27A6 3A 01 50            LD    A,(05001H)
27A9             L634:
27A9 5F                  LD    E,A
27AA 16 00               LD    D,0
27AC EB                  EX    DE,HL
27AD B7                  OR    A
27AE ED 52               SBC   HL,DE
27B0             L635:
27B0 28 03               JR    Z,$+5
27B2 DA C6 27            JP    C,L643
27B5             L636:
27B5 3A 00 50            LD    A,(05000H)
27B8             L637:
27B8 CD BE 21            CALL  writeLineA
27BB             L638:
27BB 2A 00 50            LD    HL,(05000H)
27BE 34                  INC   (HL)
27BF             L639:
27BF 2A 01 50            LD    HL,(05001H)
27C2 35                  DEC   (HL)
27C3             L640:
27C3 C3 9F 27            JP    L631
27C6             L641:
27C6                     ;;test1.j(220)   // integer - integer
27C6             L642:
27C6                     ;;test1.j(221)   i=1066;
27C6             L643:
27C6 21 2A 04            LD    HL,1066
27C9             L644:
27C9 22 02 50            LD    (05002H),HL
27CC             L645:
27CC                     ;;test1.j(222)   while (1000+65 <= i) { println (b); b++; i--; }
27CC             L646:
27CC 21 E8 03            LD    HL,1000
27CF             L647:
27CF 11 41 00            LD    DE,65
27D2 19                  ADD   HL,DE
27D3             L648:
27D3 ED 5B 02 50         LD    DE,(05002H)
27D7 B7                  OR    A
27D8 ED 52               SBC   HL,DE
27DA             L649:
27DA 28 03               JR    Z,$+5
27DC DA F3 27            JP    C,L660
27DF             L650:
27DF 3A 00 50            LD    A,(05000H)
27E2             L651:
27E2 CD BE 21            CALL  writeLineA
27E5             L652:
27E5 2A 00 50            LD    HL,(05000H)
27E8 34                  INC   (HL)
27E9             L653:
27E9 2A 02 50            LD    HL,(05002H)
27EC 2B                  DEC   HL
27ED 22 02 50            LD    (05002H),HL
27F0             L654:
27F0 C3 CC 27            JP    L646
27F3             L655:
27F3                     ;;test1.j(223) 
27F3             L656:
27F3                     ;;test1.j(224)   /************************/
27F3             L657:
27F3                     ;;test1.j(225)   // acc - acc
27F3             L658:
27F3                     ;;test1.j(226)   // byte - byte
27F3             L659:
27F3                     ;;test1.j(227)   b=87;
27F3             L660:
27F3 3E 57               LD    A,87
27F5             L661:
27F5 32 00 50            LD    (05000H),A
27F8             L662:
27F8                     ;;test1.j(228)   b2=64;
27F8             L663:
27F8 3E 40               LD    A,64
27FA             L664:
27FA 32 01 50            LD    (05001H),A
27FD             L665:
27FD                     ;;test1.j(229)   while (63+0 <= b2+0) { println (b); b++; b2--; }
27FD             L666:
27FD 3E 3F               LD    A,63
27FF             L667:
27FF C6 00               ADD   A,0
2801             L668:
2801 F6                  PUSH AF
2802             L669:
2802 3A 01 50            LD    A,(05001H)
2805             L670:
2805 C6 00               ADD   A,0
2807             L671:
2807 C1                  POP   BC
2808 90                  SUB   A,B
2809             L672:
2809 DA 1D 28            JP    C,L680
280C             L673:
280C 3A 00 50            LD    A,(05000H)
280F             L674:
280F CD BE 21            CALL  writeLineA
2812             L675:
2812 2A 00 50            LD    HL,(05000H)
2815 34                  INC   (HL)
2816             L676:
2816 2A 01 50            LD    HL,(05001H)
2819 35                  DEC   (HL)
281A             L677:
281A C3 FD 27            JP    L666
281D             L678:
281D                     ;;test1.j(230)   // byte - integer
281D             L679:
281D                     ;;test1.j(231)   i=62;
281D             L680:
281D 3E 3E               LD    A,62
281F             L681:
281F 6F                  LD    L,A
2820 26 00               LD    H,0
2822 22 02 50            LD    (05002H),HL
2825             L682:
2825                     ;;test1.j(232)   while (61+0 <= i+0) { println (b); b++; i--; }
2825             L683:
2825 3E 3D               LD    A,61
2827             L684:
2827 C6 00               ADD   A,0
2829             L685:
2829 F6                  PUSH AF
282A             L686:
282A 2A 02 50            LD    HL,(05002H)
282D             L687:
282D 11 00 00            LD    DE,0
2830 19                  ADD   HL,DE
2831             L688:
2831 F1                  POP  AF
2832             L689:
2832 5F                  LD    E,A
2833 16 00               LD    D,0
2835 B7                  OR    A
2836 ED 52               SBC   HL,DE
2838             L690:
2838 28 03               JR    Z,$+5
283A DA 51 28            JP    C,L698
283D             L691:
283D 3A 00 50            LD    A,(05000H)
2840             L692:
2840 CD BE 21            CALL  writeLineA
2843             L693:
2843 2A 00 50            LD    HL,(05000H)
2846 34                  INC   (HL)
2847             L694:
2847 2A 02 50            LD    HL,(05002H)
284A 2B                  DEC   HL
284B 22 02 50            LD    (05002H),HL
284E             L695:
284E C3 25 28            JP    L683
2851             L696:
2851                     ;;test1.j(233)   // integer - byte
2851             L697:
2851                     ;;test1.j(234)   i=59;
2851             L698:
2851 3E 3B               LD    A,59
2853             L699:
2853 6F                  LD    L,A
2854 26 00               LD    H,0
2856 22 02 50            LD    (05002H),HL
2859             L700:
2859                     ;;test1.j(235)   b2=60;
2859             L701:
2859 3E 3C               LD    A,60
285B             L702:
285B 32 01 50            LD    (05001H),A
285E             L703:
285E                     ;;test1.j(236)   while (i+0 <= b2+0) { println (b); b++; b2--; }
285E             L704:
285E 2A 02 50            LD    HL,(05002H)
2861             L705:
2861 11 00 00            LD    DE,0
2864 19                  ADD   HL,DE
2865             L706:
2865 E6                  PUSH HL
2866             L707:
2866 3A 01 50            LD    A,(05001H)
2869             L708:
2869 C6 00               ADD   A,0
286B             L709:
286B E1                  POP  HL
286C             L710:
286C 5F                  LD    E,A
286D 16 00               LD    D,0
286F EB                  EX    DE,HL
2870 B7                  OR    A
2871 ED 52               SBC   HL,DE
2873             L711:
2873 28 03               JR    Z,$+5
2875 DA 89 28            JP    C,L719
2878             L712:
2878 3A 00 50            LD    A,(05000H)
287B             L713:
287B CD BE 21            CALL  writeLineA
287E             L714:
287E 2A 00 50            LD    HL,(05000H)
2881 34                  INC   (HL)
2882             L715:
2882 2A 01 50            LD    HL,(05001H)
2885 35                  DEC   (HL)
2886             L716:
2886 C3 5E 28            JP    L704
2889             L717:
2889                     ;;test1.j(237)   // integer - integer
2889             L718:
2889                     ;;test1.j(238)   i=1058;
2889             L719:
2889 21 22 04            LD    HL,1058
288C             L720:
288C 22 02 50            LD    (05002H),HL
288F             L721:
288F                     ;;test1.j(239)   while (1000+57 <= i+0) { println (b); b++; i--; }
288F             L722:
288F 21 E8 03            LD    HL,1000
2892             L723:
2892 11 39 00            LD    DE,57
2895 19                  ADD   HL,DE
2896             L724:
2896 E6                  PUSH HL
2897             L725:
2897 2A 02 50            LD    HL,(05002H)
289A             L726:
289A 11 00 00            LD    DE,0
289D 19                  ADD   HL,DE
289E             L727:
289E D1                  POP   DE
289F B7                  OR    A
28A0 ED 52               SBC   HL,DE
28A2             L728:
28A2 DA B9 28            JP    C,L739
28A5             L729:
28A5 3A 00 50            LD    A,(05000H)
28A8             L730:
28A8 CD BE 21            CALL  writeLineA
28AB             L731:
28AB 2A 00 50            LD    HL,(05000H)
28AE 34                  INC   (HL)
28AF             L732:
28AF 2A 02 50            LD    HL,(05002H)
28B2 2B                  DEC   HL
28B3 22 02 50            LD    (05002H),HL
28B6             L733:
28B6 C3 8F 28            JP    L722
28B9             L734:
28B9                     ;;test1.j(240) 
28B9             L735:
28B9                     ;;test1.j(241)   /************************/
28B9             L736:
28B9                     ;;test1.j(242)   // acc - constant
28B9             L737:
28B9                     ;;test1.j(243)   // byte - byte
28B9             L738:
28B9                     ;;test1.j(244)   while (b+0 <= 96) { println (b); b++; }
28B9             L739:
28B9 3A 00 50            LD    A,(05000H)
28BC             L740:
28BC C6 00               ADD   A,0
28BE             L741:
28BE D6 60               SUB   A,96
28C0             L742:
28C0 28 03               JR    Z,$+5
28C2 DA D2 28            JP    C,L751
28C5             L743:
28C5 3A 00 50            LD    A,(05000H)
28C8             L744:
28C8 CD BE 21            CALL  writeLineA
28CB             L745:
28CB 2A 00 50            LD    HL,(05000H)
28CE 34                  INC   (HL)
28CF             L746:
28CF C3 B9 28            JP    L739
28D2             L747:
28D2                     ;;test1.j(245)   // byte - integer
28D2             L748:
28D2                     ;;test1.j(246)   //not relevant
28D2             L749:
28D2                     ;;test1.j(247)   // integer - byte
28D2             L750:
28D2                     ;;test1.j(248)   i=b;
28D2             L751:
28D2 3A 00 50            LD    A,(05000H)
28D5             L752:
28D5 6F                  LD    L,A
28D6 26 00               LD    H,0
28D8 22 02 50            LD    (05002H),HL
28DB             L753:
28DB                     ;;test1.j(249)   while (i+0 <= 98) { println (i); i++; }
28DB             L754:
28DB 2A 02 50            LD    HL,(05002H)
28DE             L755:
28DE 11 00 00            LD    DE,0
28E1 19                  ADD   HL,DE
28E2             L756:
28E2 3E 62               LD    A,98
28E4             L757:
28E4 5F                  LD    E,A
28E5 16 00               LD    D,0
28E7 EB                  EX    DE,HL
28E8 B7                  OR    A
28E9 ED 52               SBC   HL,DE
28EB             L758:
28EB 28 03               JR    Z,$+5
28ED DA 00 29            JP    C,L764
28F0             L759:
28F0 2A 02 50            LD    HL,(05002H)
28F3             L760:
28F3 CD 96 21            CALL  writeLineHL
28F6             L761:
28F6 2A 02 50            LD    HL,(05002H)
28F9 23                  INC   HL
28FA 22 02 50            LD    (05002H),HL
28FD             L762:
28FD C3 DB 28            JP    L754
2900             L763:
2900                     ;;test1.j(250)   b=i;
2900             L764:
2900 2A 02 50            LD    HL,(05002H)
2903             L765:
2903 7D                  LD    A,L
2904 32 00 50            LD    (05000H),A
2907             L766:
2907                     ;;test1.j(251)   i=1052;
2907             L767:
2907 21 1C 04            LD    HL,1052
290A             L768:
290A 22 02 50            LD    (05002H),HL
290D             L769:
290D                     ;;test1.j(252)   // integer - integer
290D             L770:
290D                     ;;test1.j(253)   while (i+0 <= 1053) { println (b); b++; i++; }
290D             L771:
290D 2A 02 50            LD    HL,(05002H)
2910             L772:
2910 11 00 00            LD    DE,0
2913 19                  ADD   HL,DE
2914             L773:
2914 11 1D 04            LD    DE,1053
2917 B7                  OR    A
2918 ED 52               SBC   HL,DE
291A             L774:
291A 28 03               JR    Z,$+5
291C DA 33 29            JP    C,L786
291F             L775:
291F 3A 00 50            LD    A,(05000H)
2922             L776:
2922 CD BE 21            CALL  writeLineA
2925             L777:
2925 2A 00 50            LD    HL,(05000H)
2928 34                  INC   (HL)
2929             L778:
2929 2A 02 50            LD    HL,(05002H)
292C 23                  INC   HL
292D 22 02 50            LD    (05002H),HL
2930             L779:
2930 C3 0D 29            JP    L771
2933             L780:
2933                     ;;test1.j(254) 
2933             L781:
2933                     ;;test1.j(255)   /************************/
2933             L782:
2933                     ;;test1.j(256)   // constant - stack8
2933             L783:
2933                     ;;test1.j(257)   // byte - byte
2933             L784:
2933                     ;;test1.j(258)   //TODO
2933             L785:
2933                     ;;test1.j(259)   println(101);
2933             L786:
2933 3E 65               LD    A,101
2935             L787:
2935 CD BE 21            CALL  writeLineA
2938             L788:
2938                     ;;test1.j(260)   println(102);
2938             L789:
2938 3E 66               LD    A,102
293A             L790:
293A CD BE 21            CALL  writeLineA
293D             L791:
293D                     ;;test1.j(261)   // constant - stack8
293D             L792:
293D                     ;;test1.j(262)   // byte - integer
293D             L793:
293D                     ;;test1.j(263)   //TODO
293D             L794:
293D                     ;;test1.j(264)   println(103);
293D             L795:
293D 3E 67               LD    A,103
293F             L796:
293F CD BE 21            CALL  writeLineA
2942             L797:
2942                     ;;test1.j(265)   println(104);
2942             L798:
2942 3E 68               LD    A,104
2944             L799:
2944 CD BE 21            CALL  writeLineA
2947             L800:
2947                     ;;test1.j(266)   // constant - stack8
2947             L801:
2947                     ;;test1.j(267)   // integer - byte
2947             L802:
2947                     ;;test1.j(268)   //TODO
2947             L803:
2947                     ;;test1.j(269)   println(105);
2947             L804:
2947 3E 69               LD    A,105
2949             L805:
2949 CD BE 21            CALL  writeLineA
294C             L806:
294C                     ;;test1.j(270)   println(106);
294C             L807:
294C 3E 6A               LD    A,106
294E             L808:
294E CD BE 21            CALL  writeLineA
2951             L809:
2951                     ;;test1.j(271)   // constant - stack88
2951             L810:
2951                     ;;test1.j(272)   // integer - integer
2951             L811:
2951                     ;;test1.j(273)   //TODO
2951             L812:
2951                     ;;test1.j(274)   println(107);
2951             L813:
2951 3E 6B               LD    A,107
2953             L814:
2953 CD BE 21            CALL  writeLineA
2956             L815:
2956                     ;;test1.j(275)   println(108);
2956             L816:
2956 3E 6C               LD    A,108
2958             L817:
2958 CD BE 21            CALL  writeLineA
295B             L818:
295B                     ;;test1.j(276) 
295B             L819:
295B                     ;;test1.j(277)   /************************/
295B             L820:
295B                     ;;test1.j(278)   // constant - stack16
295B             L821:
295B                     ;;test1.j(279)   // byte - byte
295B             L822:
295B                     ;;test1.j(280)   //TODO
295B             L823:
295B                     ;;test1.j(281)   println(109);
295B             L824:
295B 3E 6D               LD    A,109
295D             L825:
295D CD BE 21            CALL  writeLineA
2960             L826:
2960                     ;;test1.j(282)   println(110);
2960             L827:
2960 3E 6E               LD    A,110
2962             L828:
2962 CD BE 21            CALL  writeLineA
2965             L829:
2965                     ;;test1.j(283)   // constant - stack16
2965             L830:
2965                     ;;test1.j(284)   // byte - integer
2965             L831:
2965                     ;;test1.j(285)   //TODO
2965             L832:
2965                     ;;test1.j(286)   println(111);
2965             L833:
2965 3E 6F               LD    A,111
2967             L834:
2967 CD BE 21            CALL  writeLineA
296A             L835:
296A                     ;;test1.j(287)   println(112);
296A             L836:
296A 3E 70               LD    A,112
296C             L837:
296C CD BE 21            CALL  writeLineA
296F             L838:
296F                     ;;test1.j(288)   // constant - stack16
296F             L839:
296F                     ;;test1.j(289)   // integer - byte
296F             L840:
296F                     ;;test1.j(290)   //TODO
296F             L841:
296F                     ;;test1.j(291)   println(113);
296F             L842:
296F 3E 71               LD    A,113
2971             L843:
2971 CD BE 21            CALL  writeLineA
2974             L844:
2974                     ;;test1.j(292)   println(114);
2974             L845:
2974 3E 72               LD    A,114
2976             L846:
2976 CD BE 21            CALL  writeLineA
2979             L847:
2979                     ;;test1.j(293)   // constant - stack16
2979             L848:
2979                     ;;test1.j(294)   // integer - integer
2979             L849:
2979                     ;;test1.j(295)   //TODO
2979             L850:
2979                     ;;test1.j(296)   println(115);
2979             L851:
2979 3E 73               LD    A,115
297B             L852:
297B CD BE 21            CALL  writeLineA
297E             L853:
297E                     ;;test1.j(297)   println(116);
297E             L854:
297E 3E 74               LD    A,116
2980             L855:
2980 CD BE 21            CALL  writeLineA
2983             L856:
2983                     ;;test1.j(298) 
2983             L857:
2983                     ;;test1.j(299)   println("Klaar");
2983             L858:
2983 21 5E 03            LD    HL,862
2986             L859:
2986 CD 43 20            CALL  writeLineStr
2989             L860:
2989                     ;;test1.j(300) }
2989             L861:
2989 C3 71 01            JP    00171H      ;Jump to Zilog Z80183 Monitor.
298C             L862:
298C                     .ASCIZ  "Klaar"

Labels and cross references:
      L0 = 21CE :
      L1 = 21CE :
     L10 = 21DA :
    L100 = 2277 :
    L101 = 227C :
    L102 = 227F :
    L103 = 2282 :
    L104 = 2286 :
    L105 = 2289 :
    L106 = 2289 : 2279
    L107 = 228B :
    L108 = 2291 :
    L109 = 2291 : 22AC
     L11 = 21E0 :
    L110 = 2294 :
    L111 = 2296 :
    L112 = 2298 :
    L113 = 229B :
    L114 = 229E :
    L115 = 22A1 :
    L116 = 22A8 :
    L117 = 22AC :
    L118 = 22AF :
    L119 = 22AF : 2298 22CA
     L12 = 21E0 :
    L120 = 22B2 :
    L121 = 22B4 :
    L122 = 22B6 :
    L123 = 22B9 :
    L124 = 22BC :
    L125 = 22BF :
    L126 = 22C6 :
    L127 = 22CA :
    L128 = 22CD :
    L129 = 22CD :
     L13 = 21E2 :
    L130 = 22CD :
    L131 = 22CD :
    L132 = 22CD : 22B6
    L133 = 22CF :
    L134 = 22D5 :
    L135 = 22D5 : 22F4
    L136 = 22D8 :
    L137 = 22DC :
    L138 = 22DE :
    L139 = 22E4 :
     L14 = 21E8 :
    L140 = 22E7 :
    L141 = 22EA :
    L142 = 22ED :
    L143 = 22F4 :
    L144 = 22F7 :
    L145 = 22F7 : 22E4 2316
    L146 = 22FA :
    L147 = 22FE :
    L148 = 2300 :
    L149 = 2306 :
     L15 = 21E8 :
    L150 = 2309 :
    L151 = 230C :
    L152 = 230F :
    L153 = 2316 :
    L154 = 2319 :
    L155 = 2319 : 2306 2338
    L156 = 231C :
    L157 = 2320 :
    L158 = 2322 :
    L159 = 2328 :
     L16 = 21EA :
    L160 = 232B :
    L161 = 232E :
    L162 = 2331 :
    L163 = 2338 :
    L164 = 233B :
    L165 = 233B : 2328 235A
    L166 = 233E :
    L167 = 2342 :
    L168 = 2344 :
    L169 = 234A :
     L17 = 21F0 :
    L170 = 234D :
    L171 = 2350 :
    L172 = 2353 :
    L173 = 235A :
    L174 = 235D :
    L175 = 235D : 234A
    L176 = 2360 :
    L177 = 2363 :
    L178 = 2363 : 2389
    L179 = 2366 :
     L18 = 21F0 :
    L180 = 236A :
    L181 = 236C :
    L182 = 2372 :
    L183 = 2375 :
    L184 = 2378 :
    L185 = 237B :
    L186 = 2382 :
    L187 = 2389 :
    L188 = 238C :
    L189 = 238C : 2372 23B4
     L19 = 21F0 :
    L190 = 238F :
    L191 = 2393 :
    L192 = 2395 :
    L193 = 239B :
    L194 = 23A0 :
    L195 = 23A3 :
    L196 = 23A6 :
    L197 = 23AD :
    L198 = 23B4 :
    L199 = 23B7 :
      L2 = 21CE :
     L20 = 21F0 :
    L200 = 23B7 :
    L201 = 23B7 :
    L202 = 23B7 :
    L203 = 23B7 :
    L204 = 23B7 :
    L205 = 23B7 :
    L206 = 23B7 :
    L207 = 23B7 : 239D
    L208 = 23B9 :
    L209 = 23BF :
     L21 = 21F0 :
    L210 = 23BF : 23DE
    L211 = 23C2 :
    L212 = 23C6 :
    L213 = 23C8 :
    L214 = 23CE :
    L215 = 23D1 :
    L216 = 23D4 :
    L217 = 23D7 :
    L218 = 23DE :
    L219 = 23E1 :
     L22 = 21F0 :
    L220 = 23E1 : 23CE 2400
    L221 = 23E4 :
    L222 = 23E8 :
    L223 = 23EA :
    L224 = 23F0 :
    L225 = 23F3 :
    L226 = 23F6 :
    L227 = 23F9 :
    L228 = 2400 :
    L229 = 2403 :
     L23 = 21F0 :
    L230 = 2403 : 23F0 2422
    L231 = 2406 :
    L232 = 240A :
    L233 = 240C :
    L234 = 2412 :
    L235 = 2415 :
    L236 = 2418 :
    L237 = 241B :
    L238 = 2422 :
    L239 = 2425 :
     L24 = 21F0 :
    L240 = 2425 : 2412 2444
    L241 = 2428 :
    L242 = 242C :
    L243 = 242E :
    L244 = 2434 :
    L245 = 2437 :
    L246 = 243A :
    L247 = 243D :
    L248 = 2444 :
    L249 = 2447 :
     L25 = 21F0 :
    L250 = 2447 : 2434
    L251 = 244A :
    L252 = 244D :
    L253 = 244D : 2473
    L254 = 2450 :
    L255 = 2454 :
    L256 = 2456 :
    L257 = 245C :
    L258 = 245F :
    L259 = 2462 :
     L26 = 21F0 :
    L260 = 2465 :
    L261 = 246C :
    L262 = 2473 :
    L263 = 2476 :
    L264 = 2476 : 245C 249E
    L265 = 2479 :
    L266 = 247D :
    L267 = 247F :
    L268 = 2485 :
    L269 = 248A :
     L27 = 21F0 :
    L270 = 248D :
    L271 = 2490 :
    L272 = 2497 :
    L273 = 249E :
    L274 = 24A1 :
    L275 = 24A1 :
    L276 = 24A1 :
    L277 = 24A1 :
    L278 = 24A1 :
    L279 = 24A1 : 2487
     L28 = 21F0 :
    L280 = 24A3 :
    L281 = 24A6 :
    L282 = 24A6 : 24BF
    L283 = 24A9 :
    L284 = 24AB :
    L285 = 24AE :
    L286 = 24B1 :
    L287 = 24B4 :
    L288 = 24BB :
    L289 = 24BF :
     L29 = 21F2 :
    L290 = 24C2 :
    L291 = 24C2 :
    L292 = 24C2 :
    L293 = 24C2 : 24AB
    L294 = 24C4 :
    L295 = 24CA :
    L296 = 24CA : 24EE
    L297 = 24CD :
    L298 = 24CF :
    L299 = 24D5 :
      L3 = 21CE :
     L30 = 21F5 :
    L300 = 24DA :
    L301 = 24DD :
    L302 = 24E0 :
    L303 = 24E7 :
    L304 = 24EE :
    L305 = 24F1 :
    L306 = 24F1 :
    L307 = 24F1 :
    L308 = 24F1 :
    L309 = 24F1 :
     L31 = 21F5 :
    L310 = 24F1 :
    L311 = 24F1 :
    L312 = 24F1 : 24D7 2515
    L313 = 24F4 :
    L314 = 24F6 :
    L315 = 24FC :
    L316 = 2501 :
    L317 = 2504 :
    L318 = 2507 :
    L319 = 250E :
     L32 = 21F5 :
    L320 = 2515 :
    L321 = 2518 :
    L322 = 2518 :
    L323 = 2518 :
    L324 = 2518 :
    L325 = 2518 :
    L326 = 2518 :
    L327 = 2518 :
    L328 = 2518 :
    L329 = 2518 :
     L33 = 21F5 :
    L330 = 2518 :
    L331 = 2518 :
    L332 = 2518 :
    L333 = 2518 :
    L334 = 2518 :
    L335 = 2518 :
    L336 = 2518 :
    L337 = 2518 :
    L338 = 2518 :
    L339 = 2518 :
     L34 = 21F5 :
    L340 = 2518 :
    L341 = 2518 :
    L342 = 2518 :
    L343 = 2518 :
    L344 = 2518 :
    L345 = 2518 :
    L346 = 2518 :
    L347 = 2518 :
    L348 = 2518 :
    L349 = 2518 :
     L35 = 21F9 :
    L350 = 2518 :
    L351 = 2518 :
    L352 = 2518 :
    L353 = 2518 :
    L354 = 2518 :
    L355 = 2518 :
    L356 = 2518 :
    L357 = 2518 :
    L358 = 2518 : 24FE
    L359 = 251A :
     L36 = 21F9 :
    L360 = 251D :
    L361 = 251D : 253B
    L362 = 2520 :
    L363 = 2525 :
    L364 = 252A :
    L365 = 252D :
    L366 = 2530 :
    L367 = 2537 :
    L368 = 253B :
    L369 = 253E :
     L37 = 21FC :
    L370 = 253E :
    L371 = 253E : 2527
    L372 = 2540 :
    L373 = 2546 :
    L374 = 2546 : 256B
    L375 = 2549 :
    L376 = 254C :
    L377 = 2552 :
    L378 = 2557 :
    L379 = 255A :
     L38 = 21FF :
    L380 = 255D :
    L381 = 2564 :
    L382 = 256B :
    L383 = 256E :
    L384 = 256E :
    L385 = 256E : 2554
    L386 = 2570 :
    L387 = 2573 :
    L388 = 2573 :
    L389 = 2576 :
     L39 = 21FF : 2223
    L390 = 257C :
    L391 = 257C : 259F
    L392 = 257F :
    L393 = 2582 :
    L394 = 2589 :
    L395 = 258E :
    L396 = 2591 :
    L397 = 2594 :
    L398 = 259B :
    L399 = 259F :
      L4 = 21D0 :
     L40 = 2202 :
    L400 = 25A2 :
    L401 = 25A2 :
    L402 = 25A2 : 258B
    L403 = 25A4 :
    L404 = 25AA :
    L405 = 25AA :
    L406 = 25AD :
    L407 = 25B3 :
    L408 = 25B3 : 25D6
    L409 = 25B6 :
     L41 = 2204 :
    L410 = 25BD :
    L411 = 25C2 :
    L412 = 25C5 :
    L413 = 25C8 :
    L414 = 25CF :
    L415 = 25D6 :
    L416 = 25D9 :
    L417 = 25D9 :
    L418 = 25D9 :
    L419 = 25D9 :
     L42 = 2207 :
    L420 = 25D9 :
    L421 = 25D9 : 25BF
    L422 = 25DB :
    L423 = 25DE :
    L424 = 25DE : 25F4
    L425 = 25E0 :
    L426 = 25E2 :
    L427 = 25E7 :
    L428 = 25EA :
    L429 = 25ED :
     L43 = 2207 :
    L430 = 25F0 :
    L431 = 25F4 :
    L432 = 25F7 :
    L433 = 25F7 :
    L434 = 25F7 : 25E7
    L435 = 25F9 :
    L436 = 25FF :
    L437 = 25FF : 261E
    L438 = 2602 :
    L439 = 2606 :
     L44 = 220B :
    L440 = 2609 :
    L441 = 260F :
    L442 = 2614 :
    L443 = 2617 :
    L444 = 261A :
    L445 = 261E :
    L446 = 2621 :
    L447 = 2621 :
    L448 = 2621 : 2611
    L449 = 2624 :
     L45 = 220B :
    L450 = 262A :
    L451 = 262A : 264A
    L452 = 262C :
    L453 = 262E :
    L454 = 2631 :
    L455 = 2638 :
    L456 = 263D :
    L457 = 2640 :
    L458 = 2643 :
    L459 = 264A :
     L46 = 220E :
    L460 = 264D :
    L461 = 264D :
    L462 = 264D : 263A
    L463 = 2650 :
    L464 = 2654 :
    L465 = 2654 :
    L466 = 2657 :
    L467 = 265A :
    L468 = 265A : 267C
    L469 = 265D :
     L47 = 2211 :
    L470 = 2661 :
    L471 = 2668 :
    L472 = 266B :
    L473 = 266E :
    L474 = 2671 :
    L475 = 2675 :
    L476 = 267C :
    L477 = 267F :
    L478 = 267F :
    L479 = 267F :
     L48 = 2211 :
    L480 = 267F :
    L481 = 267F :
    L482 = 267F : 2668 2693
    L483 = 2682 :
    L484 = 2684 :
    L485 = 2689 :
    L486 = 268C :
    L487 = 268F :
    L488 = 2693 :
    L489 = 2696 :
     L49 = 2214 :
    L490 = 2696 :
    L491 = 2696 :
    L492 = 2696 :
    L493 = 2696 :
    L494 = 2696 : 2686
    L495 = 2699 :
    L496 = 269F :
    L497 = 269F : 26BD
    L498 = 26A2 :
    L499 = 26A4 :
      L5 = 21D3 :
     L50 = 2217 :
    L500 = 26AB :
    L501 = 26B0 :
    L502 = 26B3 :
    L503 = 26B6 :
    L504 = 26BD :
    L505 = 26C0 :
    L506 = 26C0 :
    L507 = 26C0 : 26AD
    L508 = 26C3 :
    L509 = 26C6 :
     L51 = 2217 :
    L510 = 26C6 : 26E8
    L511 = 26C9 :
    L512 = 26CF :
    L513 = 26D4 :
    L514 = 26D7 :
    L515 = 26DA :
    L516 = 26E1 :
    L517 = 26E8 :
    L518 = 26EB :
    L519 = 26EB :
     L52 = 221A :
    L520 = 26EB :
    L521 = 26EB :
    L522 = 26EB :
    L523 = 26EB :
    L524 = 26EB : 26D1
    L525 = 26ED :
    L526 = 26F0 :
    L527 = 26F0 :
    L528 = 26F2 :
    L529 = 26F5 :
     L53 = 221D :
    L530 = 26F5 :
    L531 = 26F5 :
    L532 = 26F5 :
    L533 = 26F7 :
    L534 = 26FA :
    L535 = 26FA :
    L536 = 26FC :
    L537 = 26FF :
    L538 = 26FF :
    L539 = 26FF :
     L54 = 221D :
    L540 = 26FF :
    L541 = 2701 :
    L542 = 2704 :
    L543 = 2704 :
    L544 = 2706 :
    L545 = 2709 :
    L546 = 2709 :
    L547 = 2709 :
    L548 = 2709 :
    L549 = 270B :
     L55 = 2220 :
    L550 = 270E :
    L551 = 270E :
    L552 = 2710 :
    L553 = 2713 :
    L554 = 2713 :
    L555 = 2713 :
    L556 = 2713 :
    L557 = 2713 :
    L558 = 2713 :
    L559 = 2713 :
     L56 = 2223 :
    L560 = 2715 :
    L561 = 2718 :
    L562 = 2718 :
    L563 = 271A :
    L564 = 271D :
    L565 = 271D :
    L566 = 271D :
    L567 = 271D :
    L568 = 271F :
    L569 = 2722 :
     L57 = 2223 :
    L570 = 2722 :
    L571 = 2724 :
    L572 = 2727 :
    L573 = 2727 :
    L574 = 2727 :
    L575 = 2727 :
    L576 = 2729 :
    L577 = 272C :
    L578 = 272C :
    L579 = 272E :
     L58 = 2226 :
    L580 = 2731 :
    L581 = 2731 :
    L582 = 2731 :
    L583 = 2731 :
    L584 = 2733 :
    L585 = 2736 :
    L586 = 2736 :
    L587 = 2738 :
    L588 = 273B :
    L589 = 273B :
     L59 = 2226 :
    L590 = 273B :
    L591 = 273B :
    L592 = 273B :
    L593 = 273B :
    L594 = 273D :
    L595 = 2740 :
    L596 = 2740 :
    L597 = 2742 :
    L598 = 2745 :
    L599 = 2745 : 2761
      L6 = 21D3 :
     L60 = 2226 :
    L600 = 2747 :
    L601 = 2749 :
    L602 = 274E :
    L603 = 2753 :
    L604 = 2756 :
    L605 = 2759 :
    L606 = 275D :
    L607 = 2761 :
    L608 = 2764 :
    L609 = 2764 :
     L61 = 2226 :
    L610 = 2764 : 2750
    L611 = 2766 :
    L612 = 276C :
    L613 = 276C : 278F
    L614 = 276E :
    L615 = 2770 :
    L616 = 2773 :
    L617 = 2779 :
    L618 = 277E :
    L619 = 2781 :
     L62 = 2226 :
    L620 = 2784 :
    L621 = 2788 :
    L622 = 278F :
    L623 = 2792 :
    L624 = 2792 :
    L625 = 2792 : 277B
    L626 = 2794 :
    L627 = 279A :
    L628 = 279A :
    L629 = 279C :
     L63 = 2226 :
    L630 = 279F :
    L631 = 279F : 27C3
    L632 = 27A2 :
    L633 = 27A6 :
    L634 = 27A9 :
    L635 = 27B0 :
    L636 = 27B5 :
    L637 = 27B8 :
    L638 = 27BB :
    L639 = 27BF :
     L64 = 2226 :
    L640 = 27C3 :
    L641 = 27C6 :
    L642 = 27C6 :
    L643 = 27C6 : 27B2
    L644 = 27C9 :
    L645 = 27CC :
    L646 = 27CC : 27F0
    L647 = 27CF :
    L648 = 27D3 :
    L649 = 27DA :
     L65 = 2226 :
    L650 = 27DF :
    L651 = 27E2 :
    L652 = 27E5 :
    L653 = 27E9 :
    L654 = 27F0 :
    L655 = 27F3 :
    L656 = 27F3 :
    L657 = 27F3 :
    L658 = 27F3 :
    L659 = 27F3 :
     L66 = 2226 :
    L660 = 27F3 : 27DC
    L661 = 27F5 :
    L662 = 27F8 :
    L663 = 27F8 :
    L664 = 27FA :
    L665 = 27FD :
    L666 = 27FD : 281A
    L667 = 27FF :
    L668 = 2801 :
    L669 = 2802 :
     L67 = 2226 : 2204
    L670 = 2805 :
    L671 = 2807 :
    L672 = 2809 :
    L673 = 280C :
    L674 = 280F :
    L675 = 2812 :
    L676 = 2816 :
    L677 = 281A :
    L678 = 281D :
    L679 = 281D :
     L68 = 2228 :
    L680 = 281D : 2809
    L681 = 281F :
    L682 = 2825 :
    L683 = 2825 : 284E
    L684 = 2827 :
    L685 = 2829 :
    L686 = 282A :
    L687 = 282D :
    L688 = 2831 :
    L689 = 2832 :
     L69 = 222B :
    L690 = 2838 :
    L691 = 283D :
    L692 = 2840 :
    L693 = 2843 :
    L694 = 2847 :
    L695 = 284E :
    L696 = 2851 :
    L697 = 2851 :
    L698 = 2851 : 283A
    L699 = 2853 :
      L7 = 21D5 :
     L70 = 222B : 223F
    L700 = 2859 :
    L701 = 2859 :
    L702 = 285B :
    L703 = 285E :
    L704 = 285E : 2886
    L705 = 2861 :
    L706 = 2865 :
    L707 = 2866 :
    L708 = 2869 :
    L709 = 286B :
     L71 = 222E :
    L710 = 286C :
    L711 = 2873 :
    L712 = 2878 :
    L713 = 287B :
    L714 = 287E :
    L715 = 2882 :
    L716 = 2886 :
    L717 = 2889 :
    L718 = 2889 :
    L719 = 2889 : 2875
     L72 = 2230 :
    L720 = 288C :
    L721 = 288F :
    L722 = 288F : 28B6
    L723 = 2892 :
    L724 = 2896 :
    L725 = 2897 :
    L726 = 289A :
    L727 = 289E :
    L728 = 28A2 :
    L729 = 28A5 :
     L73 = 2232 :
    L730 = 28A8 :
    L731 = 28AB :
    L732 = 28AF :
    L733 = 28B6 :
    L734 = 28B9 :
    L735 = 28B9 :
    L736 = 28B9 :
    L737 = 28B9 :
    L738 = 28B9 :
    L739 = 28B9 : 28A2 28CF
     L74 = 2235 :
    L740 = 28BC :
    L741 = 28BE :
    L742 = 28C0 :
    L743 = 28C5 :
    L744 = 28C8 :
    L745 = 28CB :
    L746 = 28CF :
    L747 = 28D2 :
    L748 = 28D2 :
    L749 = 28D2 :
     L75 = 2238 :
    L750 = 28D2 :
    L751 = 28D2 : 28C2
    L752 = 28D5 :
    L753 = 28DB :
    L754 = 28DB : 28FD
    L755 = 28DE :
    L756 = 28E2 :
    L757 = 28E4 :
    L758 = 28EB :
    L759 = 28F0 :
     L76 = 223B :
    L760 = 28F3 :
    L761 = 28F6 :
    L762 = 28FD :
    L763 = 2900 :
    L764 = 2900 : 28ED
    L765 = 2903 :
    L766 = 2907 :
    L767 = 2907 :
    L768 = 290A :
    L769 = 290D :
     L77 = 223F :
    L770 = 290D :
    L771 = 290D : 2930
    L772 = 2910 :
    L773 = 2914 :
    L774 = 291A :
    L775 = 291F :
    L776 = 2922 :
    L777 = 2925 :
    L778 = 2929 :
    L779 = 2930 :
     L78 = 2242 :
    L780 = 2933 :
    L781 = 2933 :
    L782 = 2933 :
    L783 = 2933 :
    L784 = 2933 :
    L785 = 2933 :
    L786 = 2933 : 291C
    L787 = 2935 :
    L788 = 2938 :
    L789 = 2938 :
     L79 = 2242 : 2232 2256
    L790 = 293A :
    L791 = 293D :
    L792 = 293D :
    L793 = 293D :
    L794 = 293D :
    L795 = 293D :
    L796 = 293F :
    L797 = 2942 :
    L798 = 2942 :
    L799 = 2944 :
      L8 = 21D8 :
     L80 = 2245 :
    L800 = 2947 :
    L801 = 2947 :
    L802 = 2947 :
    L803 = 2947 :
    L804 = 2947 :
    L805 = 2949 :
    L806 = 294C :
    L807 = 294C :
    L808 = 294E :
    L809 = 2951 :
     L81 = 2247 :
    L810 = 2951 :
    L811 = 2951 :
    L812 = 2951 :
    L813 = 2951 :
    L814 = 2953 :
    L815 = 2956 :
    L816 = 2956 :
    L817 = 2958 :
    L818 = 295B :
    L819 = 295B :
     L82 = 2249 :
    L820 = 295B :
    L821 = 295B :
    L822 = 295B :
    L823 = 295B :
    L824 = 295B :
    L825 = 295D :
    L826 = 2960 :
    L827 = 2960 :
    L828 = 2962 :
    L829 = 2965 :
     L83 = 224C :
    L830 = 2965 :
    L831 = 2965 :
    L832 = 2965 :
    L833 = 2965 :
    L834 = 2967 :
    L835 = 296A :
    L836 = 296A :
    L837 = 296C :
    L838 = 296F :
    L839 = 296F :
     L84 = 224F :
    L840 = 296F :
    L841 = 296F :
    L842 = 296F :
    L843 = 2971 :
    L844 = 2974 :
    L845 = 2974 :
    L846 = 2976 :
    L847 = 2979 :
    L848 = 2979 :
    L849 = 2979 :
     L85 = 2252 :
    L850 = 2979 :
    L851 = 2979 :
    L852 = 297B :
    L853 = 297E :
    L854 = 297E :
    L855 = 2980 :
    L856 = 2983 :
    L857 = 2983 :
    L858 = 2983 :
    L859 = 2986 :
     L86 = 2256 :
    L860 = 2989 :
    L861 = 2989 :
    L862 = 298C :
     L87 = 2259 :
     L88 = 2259 : 2249 226D
     L89 = 225C :
      L9 = 21D8 :
     L90 = 225E :
     L91 = 2260 :
     L92 = 2263 :
     L93 = 2266 :
     L94 = 2269 :
     L95 = 226D :
     L96 = 2270 :
     L97 = 2270 : 2260 2286
     L98 = 2273 :
     L99 = 2275 :
  WAIT1M = 2018 : 2007 2011
 WAIT1M2 = 201D : 2020
   div16 = 2123 :
 div16_1 = 212C : 213B
 div16_2 = 213A : 2135
 div16_3 = 213B : 2138
 div16_8 = 2143 : 21AA
div16_82 = 2148 : 2150
div16_83 = 2150 : 214C
    div8 = 2154 : 2177
  div8_1 = 215C : 2167
 div8_16 = 216E :
div8_161 = 2175 : 2171
  div8_2 = 2167 : 2163
 getChar = 2025 : 217F
getChar1 = 2033 : 202A
    main = 21CE : 2003
   mul16 = 20A7 :
 mul1632 = 20D6 :
mul16321 = 20F8 : 20F5
mul16322 = 20FF : 20FC
  mul16S = 2109 :
 mul16S1 = 2112 : 211E
 mul16S2 = 211D : 2117 211A
mul16_10 = 20C0 : 2188
 mul16_8 = 20C9 :
 putBell = 207F :
 putCRLF = 2066 : 2046 2199 21C1
 putChar = 2059 : 2050 2069 206E 2075 207D 2081 20A2 21B6
putChar1 = 205A : 205F
putErase = 2073 :
 putHexA = 208E : 2085 2089
putHexA1 = 2097 : 2093
putHexA2 = 20A2 : 209E
putHexHL = 2083 :
  putMsg = 203D :
putSpace = 2057 : 2078
 putStr1 = 204B : 2053
 putStr2 = 2055 : 204E
    read = 217B :
   read1 = 217F : 2182 218F 2192
   read2 = 2194 : 2186
  sleep1 = 2007 : 200D 2015
  sleepA = 2011 :
 sleepHL = 2006 :
   start = 2000 :
  writeA = 21C5 : 21BE
 writeHL = 219D : 2196 21C9
writeHL1 = 21A8 : 21A3 21B1
writeHL2 = 21B3 : 21B9
writeHL3 = 21B4 : 21A6
writeLineA = 21BE : 21F2 21FC 2220 2238 224F 2266 227F 25ED 2617 266E 268C 26ED
                : 26F2 26F7 26FC 2701 2706 270B 2710 2715 271A 271F 2724 2729
                : 272E 2733 2738 2756 2781 27B8 27E2 280F 2840 287B 28A8 28C8
                : 2922 2935 293A 293F 2944 2949 294E 2953 2958 295D 2962 2967
                : 296C 2971 2976 297B 2980
writeLineHL = 2196 : 229E 22BC 22EA 230C 232E 2350 2378 23A3 23D4 23F6 2418 243A
                : 2462 248D 24B1 24DD 2504 252D 255A 2591 25C5 2640 26B3 26D7
                : 28F3
writeLineStr = 2043 : 2986
writeStr = 204A : 203E 2043
