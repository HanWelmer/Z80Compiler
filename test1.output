    prog: start
    /* Program to test generated Z80 assembler code */
    class TestWhile {
      write(14);
0     int b = 13;                     //assignment: var declared: identifier b@0
      write(b);
      //start a new scope
2     byte p = 12;                    //assignment: var declared: identifier p@2
      while (p > 11) {
3       int test = 1;                 //assignment: var declared: identifier test@3
        write(p);
        p = p - 1;
      }
      //start a new scope
      while (p > 9) {
3       int test = 2;                 //assignment: var declared: identifier test@3
        write(p);
        p = p - 1;
      }
3     byte a = 9;                     //assignment: var declared: identifier a@3
      while (a >= 7) {
        write(a);
        a = a - 1;
      }
      do {
4       int test = 1;                 //assignment: var declared: identifier test@4
        write(a);
        a = a - 1;
      } while (a > 5);
4     for(byte i = 3; i<=4; i++) {    //assignment: var declared: identifier i@4  
5       int test = 1;                 //assignment: var declared: identifier test@5
        write(a);
        a--;
      }
4     for(int i = 2; i!=0; i--) {     //assignment: var declared: identifier i@4
6       int test = 1;                 //assignment: var declared: identifier test@6
        write(i);
        a--;
      }
      write(a);
    }
